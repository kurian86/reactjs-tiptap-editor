import Fo, { useSyncExternalStore as i_, useState as xa, Fragment as o_, useEffect as i0, useMemo as o0, createContext as a_, useLayoutEffect as s_, useContext as c_, useRef as xr, useCallback as Uc, useDebugValue as l_ } from "react";
import { jsx as le, jsxs as je, Fragment as u_ } from "react/jsx-runtime";
function st(t) {
  this.content = t;
}
st.prototype = {
  constructor: st,
  find: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      if (this.content[e] === t) return e;
    return -1;
  },
  // :: (string) → ?any
  // Retrieve the value stored under `key`, or return undefined when
  // no such key exists.
  get: function(t) {
    var e = this.find(t);
    return e == -1 ? void 0 : this.content[e + 1];
  },
  // :: (string, any, ?string) → OrderedMap
  // Create a new map by replacing the value of `key` with a new
  // value, or adding a binding to the end of the map. If `newKey` is
  // given, the key of the binding will be replaced with that key.
  update: function(t, e, n) {
    var r = n && n != t ? this.remove(n) : this, i = r.find(t), o = r.content.slice();
    return i == -1 ? o.push(n || t, e) : (o[i + 1] = e, n && (o[i] = n)), new st(o);
  },
  // :: (string) → OrderedMap
  // Return a map with the given key removed, if it existed.
  remove: function(t) {
    var e = this.find(t);
    if (e == -1) return this;
    var n = this.content.slice();
    return n.splice(e, 2), new st(n);
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the start of the map.
  addToStart: function(t, e) {
    return new st([t, e].concat(this.remove(t).content));
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the end of the map.
  addToEnd: function(t, e) {
    var n = this.remove(t).content.slice();
    return n.push(t, e), new st(n);
  },
  // :: (string, string, any) → OrderedMap
  // Add a key after the given key. If `place` is not found, the new
  // key is added to the end.
  addBefore: function(t, e, n) {
    var r = this.remove(e), i = r.content.slice(), o = r.find(t);
    return i.splice(o == -1 ? i.length : o, 0, e, n), new st(i);
  },
  // :: ((key: string, value: any))
  // Call the given function for each key/value pair in the map, in
  // order.
  forEach: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      t(this.content[e], this.content[e + 1]);
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by prepending the keys in this map that don't
  // appear in `map` before the keys in `map`.
  prepend: function(t) {
    return t = st.from(t), t.size ? new st(t.content.concat(this.subtract(t).content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by appending the keys in this map that don't
  // appear in `map` after the keys in `map`.
  append: function(t) {
    return t = st.from(t), t.size ? new st(this.subtract(t).content.concat(t.content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a map containing all the keys in this map that don't
  // appear in `map`.
  subtract: function(t) {
    var e = this;
    t = st.from(t);
    for (var n = 0; n < t.content.length; n += 2)
      e = e.remove(t.content[n]);
    return e;
  },
  // :: () → Object
  // Turn ordered map into a plain object.
  toObject: function() {
    var t = {};
    return this.forEach(function(e, n) {
      t[e] = n;
    }), t;
  },
  // :: number
  // The amount of keys in this map.
  get size() {
    return this.content.length >> 1;
  }
};
st.from = function(t) {
  if (t instanceof st) return t;
  var e = [];
  if (t) for (var n in t) e.push(n, t[n]);
  return new st(e);
};
function a0(t, e, n) {
  for (let r = 0; ; r++) {
    if (r == t.childCount || r == e.childCount)
      return t.childCount == e.childCount ? null : n;
    let i = t.child(r), o = e.child(r);
    if (i == o) {
      n += i.nodeSize;
      continue;
    }
    if (!i.sameMarkup(o))
      return n;
    if (i.isText && i.text != o.text) {
      for (let a = 0; i.text[a] == o.text[a]; a++)
        n++;
      return n;
    }
    if (i.content.size || o.content.size) {
      let a = a0(i.content, o.content, n + 1);
      if (a != null)
        return a;
    }
    n += i.nodeSize;
  }
}
function s0(t, e, n, r) {
  for (let i = t.childCount, o = e.childCount; ; ) {
    if (i == 0 || o == 0)
      return i == o ? null : { a: n, b: r };
    let a = t.child(--i), s = e.child(--o), c = a.nodeSize;
    if (a == s) {
      n -= c, r -= c;
      continue;
    }
    if (!a.sameMarkup(s))
      return { a: n, b: r };
    if (a.isText && a.text != s.text) {
      let l = 0, u = Math.min(a.text.length, s.text.length);
      for (; l < u && a.text[a.text.length - l - 1] == s.text[s.text.length - l - 1]; )
        l++, n--, r--;
      return { a: n, b: r };
    }
    if (a.content.size || s.content.size) {
      let l = s0(a.content, s.content, n - 1, r - 1);
      if (l)
        return l;
    }
    n -= c, r -= c;
  }
}
class ge {
  /**
  @internal
  */
  constructor(e, n) {
    if (this.content = e, this.size = n || 0, n == null)
      for (let r = 0; r < e.length; r++)
        this.size += e[r].nodeSize;
  }
  /**
  Invoke a callback for all descendant nodes between the given two
  positions (relative to start of this fragment). Doesn't descend
  into a node when the callback returns `false`.
  */
  nodesBetween(e, n, r, i = 0, o) {
    for (let a = 0, s = 0; s < n; a++) {
      let c = this.content[a], l = s + c.nodeSize;
      if (l > e && r(c, i + s, o || null, a) !== !1 && c.content.size) {
        let u = s + 1;
        c.nodesBetween(Math.max(0, e - u), Math.min(c.content.size, n - u), r, i + u);
      }
      s = l;
    }
  }
  /**
  Call the given callback for every descendant node. `pos` will be
  relative to the start of the fragment. The callback may return
  `false` to prevent traversal of a given node's children.
  */
  descendants(e) {
    this.nodesBetween(0, this.size, e);
  }
  /**
  Extract the text between `from` and `to`. See the same method on
  [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).
  */
  textBetween(e, n, r, i) {
    let o = "", a = !0;
    return this.nodesBetween(e, n, (s, c) => {
      let l = s.isText ? s.text.slice(Math.max(e, c) - c, n - c) : s.isLeaf ? i ? typeof i == "function" ? i(s) : i : s.type.spec.leafText ? s.type.spec.leafText(s) : "" : "";
      s.isBlock && (s.isLeaf && l || s.isTextblock) && r && (a ? a = !1 : o += r), o += l;
    }, 0), o;
  }
  /**
  Create a new fragment containing the combined content of this
  fragment and the other.
  */
  append(e) {
    if (!e.size)
      return this;
    if (!this.size)
      return e;
    let n = this.lastChild, r = e.firstChild, i = this.content.slice(), o = 0;
    for (n.isText && n.sameMarkup(r) && (i[i.length - 1] = n.withText(n.text + r.text), o = 1); o < e.content.length; o++)
      i.push(e.content[o]);
    return new ge(i, this.size + e.size);
  }
  /**
  Cut out the sub-fragment between the two given positions.
  */
  cut(e, n = this.size) {
    if (e == 0 && n == this.size)
      return this;
    let r = [], i = 0;
    if (n > e)
      for (let o = 0, a = 0; a < n; o++) {
        let s = this.content[o], c = a + s.nodeSize;
        c > e && ((a < e || c > n) && (s.isText ? s = s.cut(Math.max(0, e - a), Math.min(s.text.length, n - a)) : s = s.cut(Math.max(0, e - a - 1), Math.min(s.content.size, n - a - 1))), r.push(s), i += s.nodeSize), a = c;
      }
    return new ge(r, i);
  }
  /**
  @internal
  */
  cutByIndex(e, n) {
    return e == n ? ge.empty : e == 0 && n == this.content.length ? this : new ge(this.content.slice(e, n));
  }
  /**
  Create a new fragment in which the node at the given index is
  replaced by the given node.
  */
  replaceChild(e, n) {
    let r = this.content[e];
    if (r == n)
      return this;
    let i = this.content.slice(), o = this.size + n.nodeSize - r.nodeSize;
    return i[e] = n, new ge(i, o);
  }
  /**
  Create a new fragment by prepending the given node to this
  fragment.
  */
  addToStart(e) {
    return new ge([e].concat(this.content), this.size + e.nodeSize);
  }
  /**
  Create a new fragment by appending the given node to this
  fragment.
  */
  addToEnd(e) {
    return new ge(this.content.concat(e), this.size + e.nodeSize);
  }
  /**
  Compare this fragment to another one.
  */
  eq(e) {
    if (this.content.length != e.content.length)
      return !1;
    for (let n = 0; n < this.content.length; n++)
      if (!this.content[n].eq(e.content[n]))
        return !1;
    return !0;
  }
  /**
  The first child of the fragment, or `null` if it is empty.
  */
  get firstChild() {
    return this.content.length ? this.content[0] : null;
  }
  /**
  The last child of the fragment, or `null` if it is empty.
  */
  get lastChild() {
    return this.content.length ? this.content[this.content.length - 1] : null;
  }
  /**
  The number of child nodes in this fragment.
  */
  get childCount() {
    return this.content.length;
  }
  /**
  Get the child node at the given index. Raise an error when the
  index is out of range.
  */
  child(e) {
    let n = this.content[e];
    if (!n)
      throw new RangeError("Index " + e + " out of range for " + this);
    return n;
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content[e] || null;
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    for (let n = 0, r = 0; n < this.content.length; n++) {
      let i = this.content[n];
      e(i, r, n), r += i.nodeSize;
    }
  }
  /**
  Find the first position at which this fragment and another
  fragment differ, or `null` if they are the same.
  */
  findDiffStart(e, n = 0) {
    return a0(this, e, n);
  }
  /**
  Find the first position, searching from the end, at which this
  fragment and the given fragment differ, or `null` if they are
  the same. Since this position will not be the same in both
  nodes, an object with two separate positions is returned.
  */
  findDiffEnd(e, n = this.size, r = e.size) {
    return s0(this, e, n, r);
  }
  /**
  Find the index and inner offset corresponding to a given relative
  position in this fragment. The result object will be reused
  (overwritten) the next time the function is called. @internal
  */
  findIndex(e, n = -1) {
    if (e == 0)
      return $o(0, e);
    if (e == this.size)
      return $o(this.content.length, e);
    if (e > this.size || e < 0)
      throw new RangeError(`Position ${e} outside of fragment (${this})`);
    for (let r = 0, i = 0; ; r++) {
      let o = this.child(r), a = i + o.nodeSize;
      if (a >= e)
        return a == e || n > 0 ? $o(r + 1, a) : $o(r, i);
      i = a;
    }
  }
  /**
  Return a debugging string that describes this fragment.
  */
  toString() {
    return "<" + this.toStringInner() + ">";
  }
  /**
  @internal
  */
  toStringInner() {
    return this.content.join(", ");
  }
  /**
  Create a JSON-serializeable representation of this fragment.
  */
  toJSON() {
    return this.content.length ? this.content.map((e) => e.toJSON()) : null;
  }
  /**
  Deserialize a fragment from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return ge.empty;
    if (!Array.isArray(n))
      throw new RangeError("Invalid input for Fragment.fromJSON");
    return new ge(n.map(e.nodeFromJSON));
  }
  /**
  Build a fragment from an array of nodes. Ensures that adjacent
  text nodes with the same marks are joined together.
  */
  static fromArray(e) {
    if (!e.length)
      return ge.empty;
    let n, r = 0;
    for (let i = 0; i < e.length; i++) {
      let o = e[i];
      r += o.nodeSize, i && o.isText && e[i - 1].sameMarkup(o) ? (n || (n = e.slice(0, i)), n[n.length - 1] = o.withText(n[n.length - 1].text + o.text)) : n && n.push(o);
    }
    return new ge(n || e, r);
  }
  /**
  Create a fragment from something that can be interpreted as a
  set of nodes. For `null`, it returns the empty fragment. For a
  fragment, the fragment itself. For a node or array of nodes, a
  fragment containing those nodes.
  */
  static from(e) {
    if (!e)
      return ge.empty;
    if (e instanceof ge)
      return e;
    if (Array.isArray(e))
      return this.fromArray(e);
    if (e.attrs)
      return new ge([e], e.nodeSize);
    throw new RangeError("Can not convert " + e + " to a Fragment" + (e.nodesBetween ? " (looks like multiple versions of prosemirror-model were loaded)" : ""));
  }
}
ge.empty = new ge([], 0);
const kc = { index: 0, offset: 0 };
function $o(t, e) {
  return kc.index = t, kc.offset = e, kc;
}
function Ja(t, e) {
  if (t === e)
    return !0;
  if (!(t && typeof t == "object") || !(e && typeof e == "object"))
    return !1;
  let n = Array.isArray(t);
  if (Array.isArray(e) != n)
    return !1;
  if (n) {
    if (t.length != e.length)
      return !1;
    for (let r = 0; r < t.length; r++)
      if (!Ja(t[r], e[r]))
        return !1;
  } else {
    for (let r in t)
      if (!(r in e) || !Ja(t[r], e[r]))
        return !1;
    for (let r in e)
      if (!(r in t))
        return !1;
  }
  return !0;
}
class qe {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.attrs = n;
  }
  /**
  Given a set of marks, create a new set which contains this one as
  well, in the right position. If this mark is already in the set,
  the set itself is returned. If any marks that are set to be
  [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,
  those are replaced by this one.
  */
  addToSet(e) {
    let n, r = !1;
    for (let i = 0; i < e.length; i++) {
      let o = e[i];
      if (this.eq(o))
        return e;
      if (this.type.excludes(o.type))
        n || (n = e.slice(0, i));
      else {
        if (o.type.excludes(this.type))
          return e;
        !r && o.type.rank > this.type.rank && (n || (n = e.slice(0, i)), n.push(this), r = !0), n && n.push(o);
      }
    }
    return n || (n = e.slice()), r || n.push(this), n;
  }
  /**
  Remove this mark from the given set, returning a new set. If this
  mark is not in the set, the set itself is returned.
  */
  removeFromSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return e.slice(0, n).concat(e.slice(n + 1));
    return e;
  }
  /**
  Test whether this mark is in the given set of marks.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return !0;
    return !1;
  }
  /**
  Test whether this mark has the same type and attributes as
  another mark.
  */
  eq(e) {
    return this == e || this.type == e.type && Ja(this.attrs, e.attrs);
  }
  /**
  Convert this mark to a JSON-serializeable representation.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return e;
  }
  /**
  Deserialize a mark from JSON.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Mark.fromJSON");
    let r = e.marks[n.type];
    if (!r)
      throw new RangeError(`There is no mark type ${n.type} in this schema`);
    let i = r.create(n.attrs);
    return r.checkAttrs(i.attrs), i;
  }
  /**
  Test whether two sets of marks are identical.
  */
  static sameSet(e, n) {
    if (e == n)
      return !0;
    if (e.length != n.length)
      return !1;
    for (let r = 0; r < e.length; r++)
      if (!e[r].eq(n[r]))
        return !1;
    return !0;
  }
  /**
  Create a properly sorted mark set from null, a single mark, or an
  unsorted array of marks.
  */
  static setFrom(e) {
    if (!e || Array.isArray(e) && e.length == 0)
      return qe.none;
    if (e instanceof qe)
      return [e];
    let n = e.slice();
    return n.sort((r, i) => r.type.rank - i.type.rank), n;
  }
}
qe.none = [];
class Za extends Error {
}
class _e {
  /**
  Create a slice. When specifying a non-zero open depth, you must
  make sure that there are nodes of at least that depth at the
  appropriate side of the fragment—i.e. if the fragment is an
  empty paragraph node, `openStart` and `openEnd` can't be greater
  than 1.
  
  It is not necessary for the content of open nodes to conform to
  the schema's content constraints, though it should be a valid
  start/end/middle for such a node, depending on which sides are
  open.
  */
  constructor(e, n, r) {
    this.content = e, this.openStart = n, this.openEnd = r;
  }
  /**
  The size this slice would add when inserted into a document.
  */
  get size() {
    return this.content.size - this.openStart - this.openEnd;
  }
  /**
  @internal
  */
  insertAt(e, n) {
    let r = l0(this.content, e + this.openStart, n);
    return r && new _e(r, this.openStart, this.openEnd);
  }
  /**
  @internal
  */
  removeBetween(e, n) {
    return new _e(c0(this.content, e + this.openStart, n + this.openStart), this.openStart, this.openEnd);
  }
  /**
  Tests whether this slice is equal to another slice.
  */
  eq(e) {
    return this.content.eq(e.content) && this.openStart == e.openStart && this.openEnd == e.openEnd;
  }
  /**
  @internal
  */
  toString() {
    return this.content + "(" + this.openStart + "," + this.openEnd + ")";
  }
  /**
  Convert a slice to a JSON-serializable representation.
  */
  toJSON() {
    if (!this.content.size)
      return null;
    let e = { content: this.content.toJSON() };
    return this.openStart > 0 && (e.openStart = this.openStart), this.openEnd > 0 && (e.openEnd = this.openEnd), e;
  }
  /**
  Deserialize a slice from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return _e.empty;
    let r = n.openStart || 0, i = n.openEnd || 0;
    if (typeof r != "number" || typeof i != "number")
      throw new RangeError("Invalid input for Slice.fromJSON");
    return new _e(ge.fromJSON(e, n.content), r, i);
  }
  /**
  Create a slice from a fragment by taking the maximum possible
  open value on both side of the fragment.
  */
  static maxOpen(e, n = !0) {
    let r = 0, i = 0;
    for (let o = e.firstChild; o && !o.isLeaf && (n || !o.type.spec.isolating); o = o.firstChild)
      r++;
    for (let o = e.lastChild; o && !o.isLeaf && (n || !o.type.spec.isolating); o = o.lastChild)
      i++;
    return new _e(e, r, i);
  }
}
_e.empty = new _e(ge.empty, 0, 0);
function c0(t, e, n) {
  let { index: r, offset: i } = t.findIndex(e), o = t.maybeChild(r), { index: a, offset: s } = t.findIndex(n);
  if (i == e || o.isText) {
    if (s != n && !t.child(a).isText)
      throw new RangeError("Removing non-flat range");
    return t.cut(0, e).append(t.cut(n));
  }
  if (r != a)
    throw new RangeError("Removing non-flat range");
  return t.replaceChild(r, o.copy(c0(o.content, e - i - 1, n - i - 1)));
}
function l0(t, e, n, r) {
  let { index: i, offset: o } = t.findIndex(e), a = t.maybeChild(i);
  if (o == e || a.isText)
    return t.cut(0, e).append(n).append(t.cut(e));
  let s = l0(a.content, e - o - 1, n);
  return s && t.replaceChild(i, a.copy(s));
}
function f_(t, e, n) {
  if (n.openStart > t.depth)
    throw new Za("Inserted content deeper than insertion position");
  if (t.depth - n.openStart != e.depth - n.openEnd)
    throw new Za("Inconsistent open depths");
  return u0(t, e, n, 0);
}
function u0(t, e, n, r) {
  let i = t.index(r), o = t.node(r);
  if (i == e.index(r) && r < t.depth - n.openStart) {
    let a = u0(t, e, n, r + 1);
    return o.copy(o.content.replaceChild(i, a));
  } else if (n.content.size)
    if (!n.openStart && !n.openEnd && t.depth == r && e.depth == r) {
      let a = t.parent, s = a.content;
      return Or(a, s.cut(0, t.parentOffset).append(n.content).append(s.cut(e.parentOffset)));
    } else {
      let { start: a, end: s } = d_(n, t);
      return Or(o, d0(t, a, s, e, r));
    }
  else return Or(o, Ya(t, e, r));
}
function f0(t, e) {
  if (!e.type.compatibleContent(t.type))
    throw new Za("Cannot join " + e.type.name + " onto " + t.type.name);
}
function ad(t, e, n) {
  let r = t.node(n);
  return f0(r, e.node(n)), r;
}
function Fr(t, e) {
  let n = e.length - 1;
  n >= 0 && t.isText && t.sameMarkup(e[n]) ? e[n] = t.withText(e[n].text + t.text) : e.push(t);
}
function Qi(t, e, n, r) {
  let i = (e || t).node(n), o = 0, a = e ? e.index(n) : i.childCount;
  t && (o = t.index(n), t.depth > n ? o++ : t.textOffset && (Fr(t.nodeAfter, r), o++));
  for (let s = o; s < a; s++)
    Fr(i.child(s), r);
  e && e.depth == n && e.textOffset && Fr(e.nodeBefore, r);
}
function Or(t, e) {
  return t.type.checkContent(e), t.copy(e);
}
function d0(t, e, n, r, i) {
  let o = t.depth > i && ad(t, e, i + 1), a = r.depth > i && ad(n, r, i + 1), s = [];
  return Qi(null, t, i, s), o && a && e.index(i) == n.index(i) ? (f0(o, a), Fr(Or(o, d0(t, e, n, r, i + 1)), s)) : (o && Fr(Or(o, Ya(t, e, i + 1)), s), Qi(e, n, i, s), a && Fr(Or(a, Ya(n, r, i + 1)), s)), Qi(r, null, i, s), new ge(s);
}
function Ya(t, e, n) {
  let r = [];
  if (Qi(null, t, n, r), t.depth > n) {
    let i = ad(t, e, n + 1);
    Fr(Or(i, Ya(t, e, n + 1)), r);
  }
  return Qi(e, null, n, r), new ge(r);
}
function d_(t, e) {
  let n = e.depth - t.openStart, i = e.node(n).copy(t.content);
  for (let o = n - 1; o >= 0; o--)
    i = e.node(o).copy(ge.from(i));
  return {
    start: i.resolveNoCache(t.openStart + n),
    end: i.resolveNoCache(i.content.size - t.openEnd - n)
  };
}
class uo {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.pos = e, this.path = n, this.parentOffset = r, this.depth = n.length / 3 - 1;
  }
  /**
  @internal
  */
  resolveDepth(e) {
    return e == null ? this.depth : e < 0 ? this.depth + e : e;
  }
  /**
  The parent node that the position points into. Note that even if
  a position points into a text node, that node is not considered
  the parent—text nodes are ‘flat’ in this model, and have no content.
  */
  get parent() {
    return this.node(this.depth);
  }
  /**
  The root node in which the position was resolved.
  */
  get doc() {
    return this.node(0);
  }
  /**
  The ancestor node at the given level. `p.node(p.depth)` is the
  same as `p.parent`.
  */
  node(e) {
    return this.path[this.resolveDepth(e) * 3];
  }
  /**
  The index into the ancestor at the given level. If this points
  at the 3rd node in the 2nd paragraph on the top level, for
  example, `p.index(0)` is 1 and `p.index(1)` is 2.
  */
  index(e) {
    return this.path[this.resolveDepth(e) * 3 + 1];
  }
  /**
  The index pointing after this position into the ancestor at the
  given level.
  */
  indexAfter(e) {
    return e = this.resolveDepth(e), this.index(e) + (e == this.depth && !this.textOffset ? 0 : 1);
  }
  /**
  The (absolute) position at the start of the node at the given
  level.
  */
  start(e) {
    return e = this.resolveDepth(e), e == 0 ? 0 : this.path[e * 3 - 1] + 1;
  }
  /**
  The (absolute) position at the end of the node at the given
  level.
  */
  end(e) {
    return e = this.resolveDepth(e), this.start(e) + this.node(e).content.size;
  }
  /**
  The (absolute) position directly before the wrapping node at the
  given level, or, when `depth` is `this.depth + 1`, the original
  position.
  */
  before(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position before the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1];
  }
  /**
  The (absolute) position directly after the wrapping node at the
  given level, or the original position when `depth` is `this.depth + 1`.
  */
  after(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position after the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1] + this.path[e * 3].nodeSize;
  }
  /**
  When this position points into a text node, this returns the
  distance between the position and the start of the text node.
  Will be zero for positions that point between nodes.
  */
  get textOffset() {
    return this.pos - this.path[this.path.length - 1];
  }
  /**
  Get the node directly after the position, if any. If the position
  points into a text node, only the part of that node after the
  position is returned.
  */
  get nodeAfter() {
    let e = this.parent, n = this.index(this.depth);
    if (n == e.childCount)
      return null;
    let r = this.pos - this.path[this.path.length - 1], i = e.child(n);
    return r ? e.child(n).cut(r) : i;
  }
  /**
  Get the node directly before the position, if any. If the
  position points into a text node, only the part of that node
  before the position is returned.
  */
  get nodeBefore() {
    let e = this.index(this.depth), n = this.pos - this.path[this.path.length - 1];
    return n ? this.parent.child(e).cut(0, n) : e == 0 ? null : this.parent.child(e - 1);
  }
  /**
  Get the position at the given index in the parent node at the
  given depth (which defaults to `this.depth`).
  */
  posAtIndex(e, n) {
    n = this.resolveDepth(n);
    let r = this.path[n * 3], i = n == 0 ? 0 : this.path[n * 3 - 1] + 1;
    for (let o = 0; o < e; o++)
      i += r.child(o).nodeSize;
    return i;
  }
  /**
  Get the marks at this position, factoring in the surrounding
  marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the
  position is at the start of a non-empty node, the marks of the
  node after it (if any) are returned.
  */
  marks() {
    let e = this.parent, n = this.index();
    if (e.content.size == 0)
      return qe.none;
    if (this.textOffset)
      return e.child(n).marks;
    let r = e.maybeChild(n - 1), i = e.maybeChild(n);
    if (!r) {
      let s = r;
      r = i, i = s;
    }
    let o = r.marks;
    for (var a = 0; a < o.length; a++)
      o[a].type.spec.inclusive === !1 && (!i || !o[a].isInSet(i.marks)) && (o = o[a--].removeFromSet(o));
    return o;
  }
  /**
  Get the marks after the current position, if any, except those
  that are non-inclusive and not present at position `$end`. This
  is mostly useful for getting the set of marks to preserve after a
  deletion. Will return `null` if this position is at the end of
  its parent node or its parent node isn't a textblock (in which
  case no marks should be preserved).
  */
  marksAcross(e) {
    let n = this.parent.maybeChild(this.index());
    if (!n || !n.isInline)
      return null;
    let r = n.marks, i = e.parent.maybeChild(e.index());
    for (var o = 0; o < r.length; o++)
      r[o].type.spec.inclusive === !1 && (!i || !r[o].isInSet(i.marks)) && (r = r[o--].removeFromSet(r));
    return r;
  }
  /**
  The depth up to which this position and the given (non-resolved)
  position share the same parent nodes.
  */
  sharedDepth(e) {
    for (let n = this.depth; n > 0; n--)
      if (this.start(n) <= e && this.end(n) >= e)
        return n;
    return 0;
  }
  /**
  Returns a range based on the place where this position and the
  given position diverge around block content. If both point into
  the same textblock, for example, a range around that textblock
  will be returned. If they point into different blocks, the range
  around those blocks in their shared ancestor is returned. You can
  pass in an optional predicate that will be called with a parent
  node to see if a range into that parent is acceptable.
  */
  blockRange(e = this, n) {
    if (e.pos < this.pos)
      return e.blockRange(this);
    for (let r = this.depth - (this.parent.inlineContent || this.pos == e.pos ? 1 : 0); r >= 0; r--)
      if (e.pos <= this.end(r) && (!n || n(this.node(r))))
        return new Qa(this, e, r);
    return null;
  }
  /**
  Query whether the given position shares the same parent node.
  */
  sameParent(e) {
    return this.pos - this.parentOffset == e.pos - e.parentOffset;
  }
  /**
  Return the greater of this and the given position.
  */
  max(e) {
    return e.pos > this.pos ? e : this;
  }
  /**
  Return the smaller of this and the given position.
  */
  min(e) {
    return e.pos < this.pos ? e : this;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 1; n <= this.depth; n++)
      e += (e ? "/" : "") + this.node(n).type.name + "_" + this.index(n - 1);
    return e + ":" + this.parentOffset;
  }
  /**
  @internal
  */
  static resolve(e, n) {
    if (!(n >= 0 && n <= e.content.size))
      throw new RangeError("Position " + n + " out of range");
    let r = [], i = 0, o = n;
    for (let a = e; ; ) {
      let { index: s, offset: c } = a.content.findIndex(o), l = o - c;
      if (r.push(a, s, i + c), !l || (a = a.child(s), a.isText))
        break;
      o = l - 1, i += c + 1;
    }
    return new uo(n, r, o);
  }
  /**
  @internal
  */
  static resolveCached(e, n) {
    let r = Hp.get(e);
    if (r)
      for (let o = 0; o < r.elts.length; o++) {
        let a = r.elts[o];
        if (a.pos == n)
          return a;
      }
    else
      Hp.set(e, r = new h_());
    let i = r.elts[r.i] = uo.resolve(e, n);
    return r.i = (r.i + 1) % p_, i;
  }
}
class h_ {
  constructor() {
    this.elts = [], this.i = 0;
  }
}
const p_ = 12, Hp = /* @__PURE__ */ new WeakMap();
class Qa {
  /**
  Construct a node range. `$from` and `$to` should point into the
  same node until at least the given `depth`, since a node range
  denotes an adjacent set of nodes in a single parent node.
  */
  constructor(e, n, r) {
    this.$from = e, this.$to = n, this.depth = r;
  }
  /**
  The position at the start of the range.
  */
  get start() {
    return this.$from.before(this.depth + 1);
  }
  /**
  The position at the end of the range.
  */
  get end() {
    return this.$to.after(this.depth + 1);
  }
  /**
  The parent node that the range points into.
  */
  get parent() {
    return this.$from.node(this.depth);
  }
  /**
  The start index of the range in the parent node.
  */
  get startIndex() {
    return this.$from.index(this.depth);
  }
  /**
  The end index of the range in the parent node.
  */
  get endIndex() {
    return this.$to.indexAfter(this.depth);
  }
}
const g_ = /* @__PURE__ */ Object.create(null);
class hn {
  /**
  @internal
  */
  constructor(e, n, r, i = qe.none) {
    this.type = e, this.attrs = n, this.marks = i, this.content = r || ge.empty;
  }
  /**
  The array of this node's child nodes.
  */
  get children() {
    return this.content.content;
  }
  /**
  The size of this node, as defined by the integer-based [indexing
  scheme](/docs/guide/#doc.indexing). For text nodes, this is the
  amount of characters. For other leaf nodes, it is one. For
  non-leaf nodes, it is the size of the content plus two (the
  start and end token).
  */
  get nodeSize() {
    return this.isLeaf ? 1 : 2 + this.content.size;
  }
  /**
  The number of children that the node has.
  */
  get childCount() {
    return this.content.childCount;
  }
  /**
  Get the child node at the given index. Raises an error when the
  index is out of range.
  */
  child(e) {
    return this.content.child(e);
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content.maybeChild(e);
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    this.content.forEach(e);
  }
  /**
  Invoke a callback for all descendant nodes recursively between
  the given two positions that are relative to start of this
  node's content. The callback is invoked with the node, its
  position relative to the original node (method receiver),
  its parent node, and its child index. When the callback returns
  false for a given node, that node's children will not be
  recursed over. The last parameter can be used to specify a
  starting position to count from.
  */
  nodesBetween(e, n, r, i = 0) {
    this.content.nodesBetween(e, n, r, i, this);
  }
  /**
  Call the given callback for every descendant node. Doesn't
  descend into a node when the callback returns `false`.
  */
  descendants(e) {
    this.nodesBetween(0, this.content.size, e);
  }
  /**
  Concatenates all the text nodes found in this fragment and its
  children.
  */
  get textContent() {
    return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, "");
  }
  /**
  Get all text between positions `from` and `to`. When
  `blockSeparator` is given, it will be inserted to separate text
  from different block nodes. If `leafText` is given, it'll be
  inserted for every non-text leaf node encountered, otherwise
  [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.
  */
  textBetween(e, n, r, i) {
    return this.content.textBetween(e, n, r, i);
  }
  /**
  Returns this node's first child, or `null` if there are no
  children.
  */
  get firstChild() {
    return this.content.firstChild;
  }
  /**
  Returns this node's last child, or `null` if there are no
  children.
  */
  get lastChild() {
    return this.content.lastChild;
  }
  /**
  Test whether two nodes represent the same piece of document.
  */
  eq(e) {
    return this == e || this.sameMarkup(e) && this.content.eq(e.content);
  }
  /**
  Compare the markup (type, attributes, and marks) of this node to
  those of another. Returns `true` if both have the same markup.
  */
  sameMarkup(e) {
    return this.hasMarkup(e.type, e.attrs, e.marks);
  }
  /**
  Check whether this node's markup correspond to the given type,
  attributes, and marks.
  */
  hasMarkup(e, n, r) {
    return this.type == e && Ja(this.attrs, n || e.defaultAttrs || g_) && qe.sameSet(this.marks, r || qe.none);
  }
  /**
  Create a new node with the same markup as this node, containing
  the given content (or empty, if no content is given).
  */
  copy(e = null) {
    return e == this.content ? this : new hn(this.type, this.attrs, e, this.marks);
  }
  /**
  Create a copy of this node, with the given set of marks instead
  of the node's own marks.
  */
  mark(e) {
    return e == this.marks ? this : new hn(this.type, this.attrs, this.content, e);
  }
  /**
  Create a copy of this node with only the content between the
  given positions. If `to` is not given, it defaults to the end of
  the node.
  */
  cut(e, n = this.content.size) {
    return e == 0 && n == this.content.size ? this : this.copy(this.content.cut(e, n));
  }
  /**
  Cut out the part of the document between the given positions, and
  return it as a `Slice` object.
  */
  slice(e, n = this.content.size, r = !1) {
    if (e == n)
      return _e.empty;
    let i = this.resolve(e), o = this.resolve(n), a = r ? 0 : i.sharedDepth(n), s = i.start(a), l = i.node(a).content.cut(i.pos - s, o.pos - s);
    return new _e(l, i.depth - a, o.depth - a);
  }
  /**
  Replace the part of the document between the given positions with
  the given slice. The slice must 'fit', meaning its open sides
  must be able to connect to the surrounding content, and its
  content nodes must be valid children for the node they are placed
  into. If any of this is violated, an error of type
  [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.
  */
  replace(e, n, r) {
    return f_(this.resolve(e), this.resolve(n), r);
  }
  /**
  Find the node directly after the given position.
  */
  nodeAt(e) {
    for (let n = this; ; ) {
      let { index: r, offset: i } = n.content.findIndex(e);
      if (n = n.maybeChild(r), !n)
        return null;
      if (i == e || n.isText)
        return n;
      e -= i + 1;
    }
  }
  /**
  Find the (direct) child node after the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childAfter(e) {
    let { index: n, offset: r } = this.content.findIndex(e);
    return { node: this.content.maybeChild(n), index: n, offset: r };
  }
  /**
  Find the (direct) child node before the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childBefore(e) {
    if (e == 0)
      return { node: null, index: 0, offset: 0 };
    let { index: n, offset: r } = this.content.findIndex(e);
    if (r < e)
      return { node: this.content.child(n), index: n, offset: r };
    let i = this.content.child(n - 1);
    return { node: i, index: n - 1, offset: r - i.nodeSize };
  }
  /**
  Resolve the given position in the document, returning an
  [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.
  */
  resolve(e) {
    return uo.resolveCached(this, e);
  }
  /**
  @internal
  */
  resolveNoCache(e) {
    return uo.resolve(this, e);
  }
  /**
  Test whether a given mark or mark type occurs in this document
  between the two given positions.
  */
  rangeHasMark(e, n, r) {
    let i = !1;
    return n > e && this.nodesBetween(e, n, (o) => (r.isInSet(o.marks) && (i = !0), !i)), i;
  }
  /**
  True when this is a block (non-inline node)
  */
  get isBlock() {
    return this.type.isBlock;
  }
  /**
  True when this is a textblock node, a block node with inline
  content.
  */
  get isTextblock() {
    return this.type.isTextblock;
  }
  /**
  True when this node allows inline content.
  */
  get inlineContent() {
    return this.type.inlineContent;
  }
  /**
  True when this is an inline node (a text node or a node that can
  appear among text).
  */
  get isInline() {
    return this.type.isInline;
  }
  /**
  True when this is a text node.
  */
  get isText() {
    return this.type.isText;
  }
  /**
  True when this is a leaf node.
  */
  get isLeaf() {
    return this.type.isLeaf;
  }
  /**
  True when this is an atom, i.e. when it does not have directly
  editable content. This is usually the same as `isLeaf`, but can
  be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)
  on a node's spec (typically used when the node is displayed as
  an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).
  */
  get isAtom() {
    return this.type.isAtom;
  }
  /**
  Return a string representation of this node for debugging
  purposes.
  */
  toString() {
    if (this.type.spec.toDebugString)
      return this.type.spec.toDebugString(this);
    let e = this.type.name;
    return this.content.size && (e += "(" + this.content.toStringInner() + ")"), h0(this.marks, e);
  }
  /**
  Get the content match in this node at the given index.
  */
  contentMatchAt(e) {
    let n = this.type.contentMatch.matchFragment(this.content, 0, e);
    if (!n)
      throw new Error("Called contentMatchAt on a node with invalid content");
    return n;
  }
  /**
  Test whether replacing the range between `from` and `to` (by
  child index) with the given replacement fragment (which defaults
  to the empty fragment) would leave the node's content valid. You
  can optionally pass `start` and `end` indices into the
  replacement fragment.
  */
  canReplace(e, n, r = ge.empty, i = 0, o = r.childCount) {
    let a = this.contentMatchAt(e).matchFragment(r, i, o), s = a && a.matchFragment(this.content, n);
    if (!s || !s.validEnd)
      return !1;
    for (let c = i; c < o; c++)
      if (!this.type.allowsMarks(r.child(c).marks))
        return !1;
    return !0;
  }
  /**
  Test whether replacing the range `from` to `to` (by index) with
  a node of the given type would leave the node's content valid.
  */
  canReplaceWith(e, n, r, i) {
    if (i && !this.type.allowsMarks(i))
      return !1;
    let o = this.contentMatchAt(e).matchType(r), a = o && o.matchFragment(this.content, n);
    return a ? a.validEnd : !1;
  }
  /**
  Test whether the given node's content could be appended to this
  node. If that node is empty, this will only return true if there
  is at least one node type that can appear in both nodes (to avoid
  merging completely incompatible nodes).
  */
  canAppend(e) {
    return e.content.size ? this.canReplace(this.childCount, this.childCount, e.content) : this.type.compatibleContent(e.type);
  }
  /**
  Check whether this node and its descendants conform to the
  schema, and raise an exception when they do not.
  */
  check() {
    this.type.checkContent(this.content), this.type.checkAttrs(this.attrs);
    let e = qe.none;
    for (let n = 0; n < this.marks.length; n++) {
      let r = this.marks[n];
      r.type.checkAttrs(r.attrs), e = r.addToSet(e);
    }
    if (!qe.sameSet(e, this.marks))
      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map((n) => n.type.name)}`);
    this.content.forEach((n) => n.check());
  }
  /**
  Return a JSON-serializeable representation of this node.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return this.content.size && (e.content = this.content.toJSON()), this.marks.length && (e.marks = this.marks.map((n) => n.toJSON())), e;
  }
  /**
  Deserialize a node from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Node.fromJSON");
    let r;
    if (n.marks) {
      if (!Array.isArray(n.marks))
        throw new RangeError("Invalid mark data for Node.fromJSON");
      r = n.marks.map(e.markFromJSON);
    }
    if (n.type == "text") {
      if (typeof n.text != "string")
        throw new RangeError("Invalid text node in JSON");
      return e.text(n.text, r);
    }
    let i = ge.fromJSON(e, n.content), o = e.nodeType(n.type).create(n.attrs, i, r);
    return o.type.checkAttrs(o.attrs), o;
  }
}
hn.prototype.text = void 0;
class es extends hn {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    if (super(e, n, null, i), !r)
      throw new RangeError("Empty text nodes are not allowed");
    this.text = r;
  }
  toString() {
    return this.type.spec.toDebugString ? this.type.spec.toDebugString(this) : h0(this.marks, JSON.stringify(this.text));
  }
  get textContent() {
    return this.text;
  }
  textBetween(e, n) {
    return this.text.slice(e, n);
  }
  get nodeSize() {
    return this.text.length;
  }
  mark(e) {
    return e == this.marks ? this : new es(this.type, this.attrs, this.text, e);
  }
  withText(e) {
    return e == this.text ? this : new es(this.type, this.attrs, e, this.marks);
  }
  cut(e = 0, n = this.text.length) {
    return e == 0 && n == this.text.length ? this : this.withText(this.text.slice(e, n));
  }
  eq(e) {
    return this.sameMarkup(e) && this.text == e.text;
  }
  toJSON() {
    let e = super.toJSON();
    return e.text = this.text, e;
  }
}
function h0(t, e) {
  for (let n = t.length - 1; n >= 0; n--)
    e = t[n].type.name + "(" + e + ")";
  return e;
}
class Mr {
  /**
  @internal
  */
  constructor(e) {
    this.validEnd = e, this.next = [], this.wrapCache = [];
  }
  /**
  @internal
  */
  static parse(e, n) {
    let r = new m_(e, n);
    if (r.next == null)
      return Mr.empty;
    let i = p0(r);
    r.next && r.err("Unexpected trailing text");
    let o = __(w_(i));
    return T_(o, r), o;
  }
  /**
  Match a node type, returning a match after that node if
  successful.
  */
  matchType(e) {
    for (let n = 0; n < this.next.length; n++)
      if (this.next[n].type == e)
        return this.next[n].next;
    return null;
  }
  /**
  Try to match a fragment. Returns the resulting match when
  successful.
  */
  matchFragment(e, n = 0, r = e.childCount) {
    let i = this;
    for (let o = n; i && o < r; o++)
      i = i.matchType(e.child(o).type);
    return i;
  }
  /**
  @internal
  */
  get inlineContent() {
    return this.next.length != 0 && this.next[0].type.isInline;
  }
  /**
  Get the first matching node type at this match position that can
  be generated.
  */
  get defaultType() {
    for (let e = 0; e < this.next.length; e++) {
      let { type: n } = this.next[e];
      if (!(n.isText || n.hasRequiredAttrs()))
        return n;
    }
    return null;
  }
  /**
  @internal
  */
  compatible(e) {
    for (let n = 0; n < this.next.length; n++)
      for (let r = 0; r < e.next.length; r++)
        if (this.next[n].type == e.next[r].type)
          return !0;
    return !1;
  }
  /**
  Try to match the given fragment, and if that fails, see if it can
  be made to match by inserting nodes in front of it. When
  successful, return a fragment of inserted nodes (which may be
  empty if nothing had to be inserted). When `toEnd` is true, only
  return a fragment if the resulting match goes to the end of the
  content expression.
  */
  fillBefore(e, n = !1, r = 0) {
    let i = [this];
    function o(a, s) {
      let c = a.matchFragment(e, r);
      if (c && (!n || c.validEnd))
        return ge.from(s.map((l) => l.createAndFill()));
      for (let l = 0; l < a.next.length; l++) {
        let { type: u, next: f } = a.next[l];
        if (!(u.isText || u.hasRequiredAttrs()) && i.indexOf(f) == -1) {
          i.push(f);
          let d = o(f, s.concat(u));
          if (d)
            return d;
        }
      }
      return null;
    }
    return o(this, []);
  }
  /**
  Find a set of wrapping node types that would allow a node of the
  given type to appear at this position. The result may be empty
  (when it fits directly) and will be null when no such wrapping
  exists.
  */
  findWrapping(e) {
    for (let r = 0; r < this.wrapCache.length; r += 2)
      if (this.wrapCache[r] == e)
        return this.wrapCache[r + 1];
    let n = this.computeWrapping(e);
    return this.wrapCache.push(e, n), n;
  }
  /**
  @internal
  */
  computeWrapping(e) {
    let n = /* @__PURE__ */ Object.create(null), r = [{ match: this, type: null, via: null }];
    for (; r.length; ) {
      let i = r.shift(), o = i.match;
      if (o.matchType(e)) {
        let a = [];
        for (let s = i; s.type; s = s.via)
          a.push(s.type);
        return a.reverse();
      }
      for (let a = 0; a < o.next.length; a++) {
        let { type: s, next: c } = o.next[a];
        !s.isLeaf && !s.hasRequiredAttrs() && !(s.name in n) && (!i.type || c.validEnd) && (r.push({ match: s.contentMatch, type: s, via: i }), n[s.name] = !0);
      }
    }
    return null;
  }
  /**
  The number of outgoing edges this node has in the finite
  automaton that describes the content expression.
  */
  get edgeCount() {
    return this.next.length;
  }
  /**
  Get the _n_​th outgoing edge from this node in the finite
  automaton that describes the content expression.
  */
  edge(e) {
    if (e >= this.next.length)
      throw new RangeError(`There's no ${e}th edge in this content match`);
    return this.next[e];
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    function n(r) {
      e.push(r);
      for (let i = 0; i < r.next.length; i++)
        e.indexOf(r.next[i].next) == -1 && n(r.next[i].next);
    }
    return n(this), e.map((r, i) => {
      let o = i + (r.validEnd ? "*" : " ") + " ";
      for (let a = 0; a < r.next.length; a++)
        o += (a ? ", " : "") + r.next[a].type.name + "->" + e.indexOf(r.next[a].next);
      return o;
    }).join(`
`);
  }
}
Mr.empty = new Mr(!0);
class m_ {
  constructor(e, n) {
    this.string = e, this.nodeTypes = n, this.inline = null, this.pos = 0, this.tokens = e.split(/\s*(?=\b|\W|$)/), this.tokens[this.tokens.length - 1] == "" && this.tokens.pop(), this.tokens[0] == "" && this.tokens.shift();
  }
  get next() {
    return this.tokens[this.pos];
  }
  eat(e) {
    return this.next == e && (this.pos++ || !0);
  }
  err(e) {
    throw new SyntaxError(e + " (in content expression '" + this.string + "')");
  }
}
function p0(t) {
  let e = [];
  do
    e.push(y_(t));
  while (t.eat("|"));
  return e.length == 1 ? e[0] : { type: "choice", exprs: e };
}
function y_(t) {
  let e = [];
  do
    e.push(b_(t));
  while (t.next && t.next != ")" && t.next != "|");
  return e.length == 1 ? e[0] : { type: "seq", exprs: e };
}
function b_(t) {
  let e = x_(t);
  for (; ; )
    if (t.eat("+"))
      e = { type: "plus", expr: e };
    else if (t.eat("*"))
      e = { type: "star", expr: e };
    else if (t.eat("?"))
      e = { type: "opt", expr: e };
    else if (t.eat("{"))
      e = v_(t, e);
    else
      break;
  return e;
}
function Xp(t) {
  /\D/.test(t.next) && t.err("Expected number, got '" + t.next + "'");
  let e = Number(t.next);
  return t.pos++, e;
}
function v_(t, e) {
  let n = Xp(t), r = n;
  return t.eat(",") && (t.next != "}" ? r = Xp(t) : r = -1), t.eat("}") || t.err("Unclosed braced range"), { type: "range", min: n, max: r, expr: e };
}
function D_(t, e) {
  let n = t.nodeTypes, r = n[e];
  if (r)
    return [r];
  let i = [];
  for (let o in n) {
    let a = n[o];
    a.isInGroup(e) && i.push(a);
  }
  return i.length == 0 && t.err("No node type or group '" + e + "' found"), i;
}
function x_(t) {
  if (t.eat("(")) {
    let e = p0(t);
    return t.eat(")") || t.err("Missing closing paren"), e;
  } else if (/\W/.test(t.next))
    t.err("Unexpected token '" + t.next + "'");
  else {
    let e = D_(t, t.next).map((n) => (t.inline == null ? t.inline = n.isInline : t.inline != n.isInline && t.err("Mixing inline and block content"), { type: "name", value: n }));
    return t.pos++, e.length == 1 ? e[0] : { type: "choice", exprs: e };
  }
}
function w_(t) {
  let e = [[]];
  return i(o(t, 0), n()), e;
  function n() {
    return e.push([]) - 1;
  }
  function r(a, s, c) {
    let l = { term: c, to: s };
    return e[a].push(l), l;
  }
  function i(a, s) {
    a.forEach((c) => c.to = s);
  }
  function o(a, s) {
    if (a.type == "choice")
      return a.exprs.reduce((c, l) => c.concat(o(l, s)), []);
    if (a.type == "seq")
      for (let c = 0; ; c++) {
        let l = o(a.exprs[c], s);
        if (c == a.exprs.length - 1)
          return l;
        i(l, s = n());
      }
    else if (a.type == "star") {
      let c = n();
      return r(s, c), i(o(a.expr, c), c), [r(c)];
    } else if (a.type == "plus") {
      let c = n();
      return i(o(a.expr, s), c), i(o(a.expr, c), c), [r(c)];
    } else {
      if (a.type == "opt")
        return [r(s)].concat(o(a.expr, s));
      if (a.type == "range") {
        let c = s;
        for (let l = 0; l < a.min; l++) {
          let u = n();
          i(o(a.expr, c), u), c = u;
        }
        if (a.max == -1)
          i(o(a.expr, c), c);
        else
          for (let l = a.min; l < a.max; l++) {
            let u = n();
            r(c, u), i(o(a.expr, c), u), c = u;
          }
        return [r(c)];
      } else {
        if (a.type == "name")
          return [r(s, void 0, a.value)];
        throw new Error("Unknown expr type");
      }
    }
  }
}
function g0(t, e) {
  return e - t;
}
function Gp(t, e) {
  let n = [];
  return r(e), n.sort(g0);
  function r(i) {
    let o = t[i];
    if (o.length == 1 && !o[0].term)
      return r(o[0].to);
    n.push(i);
    for (let a = 0; a < o.length; a++) {
      let { term: s, to: c } = o[a];
      !s && n.indexOf(c) == -1 && r(c);
    }
  }
}
function __(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return n(Gp(t, 0));
  function n(r) {
    let i = [];
    r.forEach((a) => {
      t[a].forEach(({ term: s, to: c }) => {
        if (!s)
          return;
        let l;
        for (let u = 0; u < i.length; u++)
          i[u][0] == s && (l = i[u][1]);
        Gp(t, c).forEach((u) => {
          l || i.push([s, l = []]), l.indexOf(u) == -1 && l.push(u);
        });
      });
    });
    let o = e[r.join(",")] = new Mr(r.indexOf(t.length - 1) > -1);
    for (let a = 0; a < i.length; a++) {
      let s = i[a][1].sort(g0);
      o.next.push({ type: i[a][0], next: e[s.join(",")] || n(s) });
    }
    return o;
  }
}
function T_(t, e) {
  for (let n = 0, r = [t]; n < r.length; n++) {
    let i = r[n], o = !i.validEnd, a = [];
    for (let s = 0; s < i.next.length; s++) {
      let { type: c, next: l } = i.next[s];
      a.push(c.name), o && !(c.isText || c.hasRequiredAttrs()) && (o = !1), r.indexOf(l) == -1 && r.push(l);
    }
    o && e.err("Only non-generatable nodes (" + a.join(", ") + ") in a required position (see https://prosemirror.net/docs/guide/#generatable)");
  }
}
function m0(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let r = t[n];
    if (!r.hasDefault)
      return null;
    e[n] = r.default;
  }
  return e;
}
function y0(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let r in t) {
    let i = e && e[r];
    if (i === void 0) {
      let o = t[r];
      if (o.hasDefault)
        i = o.default;
      else
        throw new RangeError("No value supplied for attribute " + r);
    }
    n[r] = i;
  }
  return n;
}
function b0(t, e, n, r) {
  for (let i in e)
    if (!(i in t))
      throw new RangeError(`Unsupported attribute ${i} for ${n} of type ${i}`);
  for (let i in t) {
    let o = t[i];
    o.validate && o.validate(e[i]);
  }
}
function v0(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  if (e)
    for (let r in e)
      n[r] = new C_(t, r, e[r]);
  return n;
}
let Kp = class D0 {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.name = e, this.schema = n, this.spec = r, this.markSet = null, this.groups = r.group ? r.group.split(" ") : [], this.attrs = v0(e, r.attrs), this.defaultAttrs = m0(this.attrs), this.contentMatch = null, this.inlineContent = null, this.isBlock = !(r.inline || e == "text"), this.isText = e == "text";
  }
  /**
  True if this is an inline type.
  */
  get isInline() {
    return !this.isBlock;
  }
  /**
  True if this is a textblock type, a block that contains inline
  content.
  */
  get isTextblock() {
    return this.isBlock && this.inlineContent;
  }
  /**
  True for node types that allow no content.
  */
  get isLeaf() {
    return this.contentMatch == Mr.empty;
  }
  /**
  True when this node is an atom, i.e. when it does not have
  directly editable content.
  */
  get isAtom() {
    return this.isLeaf || !!this.spec.atom;
  }
  /**
  Return true when this node type is part of the given
  [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).
  */
  isInGroup(e) {
    return this.groups.indexOf(e) > -1;
  }
  /**
  The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.
  */
  get whitespace() {
    return this.spec.whitespace || (this.spec.code ? "pre" : "normal");
  }
  /**
  Tells you whether this node type has any required attributes.
  */
  hasRequiredAttrs() {
    for (let e in this.attrs)
      if (this.attrs[e].isRequired)
        return !0;
    return !1;
  }
  /**
  Indicates whether this node allows some of the same content as
  the given node type.
  */
  compatibleContent(e) {
    return this == e || this.contentMatch.compatible(e.contentMatch);
  }
  /**
  @internal
  */
  computeAttrs(e) {
    return !e && this.defaultAttrs ? this.defaultAttrs : y0(this.attrs, e);
  }
  /**
  Create a `Node` of this type. The given attributes are
  checked and defaulted (you can pass `null` to use the type's
  defaults entirely, if no required attributes exist). `content`
  may be a `Fragment`, a node, an array of nodes, or
  `null`. Similarly `marks` may be `null` to default to the empty
  set of marks.
  */
  create(e = null, n, r) {
    if (this.isText)
      throw new Error("NodeType.create can't construct text nodes");
    return new hn(this, this.computeAttrs(e), ge.from(n), qe.setFrom(r));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content
  against the node type's content restrictions, and throw an error
  if it doesn't match.
  */
  createChecked(e = null, n, r) {
    return n = ge.from(n), this.checkContent(n), new hn(this, this.computeAttrs(e), n, qe.setFrom(r));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is
  necessary to add nodes to the start or end of the given fragment
  to make it fit the node. If no fitting wrapping can be found,
  return null. Note that, due to the fact that required nodes can
  always be created, this will always succeed if you pass null or
  `Fragment.empty` as content.
  */
  createAndFill(e = null, n, r) {
    if (e = this.computeAttrs(e), n = ge.from(n), n.size) {
      let a = this.contentMatch.fillBefore(n);
      if (!a)
        return null;
      n = a.append(n);
    }
    let i = this.contentMatch.matchFragment(n), o = i && i.fillBefore(ge.empty, !0);
    return o ? new hn(this, e, n.append(o), qe.setFrom(r)) : null;
  }
  /**
  Returns true if the given fragment is valid content for this node
  type.
  */
  validContent(e) {
    let n = this.contentMatch.matchFragment(e);
    if (!n || !n.validEnd)
      return !1;
    for (let r = 0; r < e.childCount; r++)
      if (!this.allowsMarks(e.child(r).marks))
        return !1;
    return !0;
  }
  /**
  Throws a RangeError if the given fragment is not valid content for this
  node type.
  @internal
  */
  checkContent(e) {
    if (!this.validContent(e))
      throw new RangeError(`Invalid content for node ${this.name}: ${e.toString().slice(0, 50)}`);
  }
  /**
  @internal
  */
  checkAttrs(e) {
    b0(this.attrs, e, "node", this.name);
  }
  /**
  Check whether the given mark type is allowed in this node.
  */
  allowsMarkType(e) {
    return this.markSet == null || this.markSet.indexOf(e) > -1;
  }
  /**
  Test whether the given set of marks are allowed in this node.
  */
  allowsMarks(e) {
    if (this.markSet == null)
      return !0;
    for (let n = 0; n < e.length; n++)
      if (!this.allowsMarkType(e[n].type))
        return !1;
    return !0;
  }
  /**
  Removes the marks that are not allowed in this node from the given set.
  */
  allowedMarks(e) {
    if (this.markSet == null)
      return e;
    let n;
    for (let r = 0; r < e.length; r++)
      this.allowsMarkType(e[r].type) ? n && n.push(e[r]) : n || (n = e.slice(0, r));
    return n ? n.length ? n : qe.none : e;
  }
  /**
  @internal
  */
  static compile(e, n) {
    let r = /* @__PURE__ */ Object.create(null);
    e.forEach((o, a) => r[o] = new D0(o, n, a));
    let i = n.spec.topNode || "doc";
    if (!r[i])
      throw new RangeError("Schema is missing its top node type ('" + i + "')");
    if (!r.text)
      throw new RangeError("Every schema needs a 'text' type");
    for (let o in r.text.attrs)
      throw new RangeError("The text node type should not have attributes");
    return r;
  }
};
function E_(t, e, n) {
  let r = n.split("|");
  return (i) => {
    let o = i === null ? "null" : typeof i;
    if (r.indexOf(o) < 0)
      throw new RangeError(`Expected value of type ${r} for attribute ${e} on type ${t}, got ${o}`);
  };
}
class C_ {
  constructor(e, n, r) {
    this.hasDefault = Object.prototype.hasOwnProperty.call(r, "default"), this.default = r.default, this.validate = typeof r.validate == "string" ? E_(e, n, r.validate) : r.validate;
  }
  get isRequired() {
    return !this.hasDefault;
  }
}
class zs {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    this.name = e, this.rank = n, this.schema = r, this.spec = i, this.attrs = v0(e, i.attrs), this.excluded = null;
    let o = m0(this.attrs);
    this.instance = o ? new qe(this, o) : null;
  }
  /**
  Create a mark of this type. `attrs` may be `null` or an object
  containing only some of the mark's attributes. The others, if
  they have defaults, will be added.
  */
  create(e = null) {
    return !e && this.instance ? this.instance : new qe(this, y0(this.attrs, e));
  }
  /**
  @internal
  */
  static compile(e, n) {
    let r = /* @__PURE__ */ Object.create(null), i = 0;
    return e.forEach((o, a) => r[o] = new zs(o, i++, n, a)), r;
  }
  /**
  When there is a mark of this type in the given set, a new set
  without it is returned. Otherwise, the input set is returned.
  */
  removeFromSet(e) {
    for (var n = 0; n < e.length; n++)
      e[n].type == this && (e = e.slice(0, n).concat(e.slice(n + 1)), n--);
    return e;
  }
  /**
  Tests whether there is a mark of this type in the given set.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (e[n].type == this)
        return e[n];
  }
  /**
  @internal
  */
  checkAttrs(e) {
    b0(this.attrs, e, "mark", this.name);
  }
  /**
  Queries whether a given mark type is
  [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.
  */
  excludes(e) {
    return this.excluded.indexOf(e) > -1;
  }
}
class cR {
  /**
  Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).
  */
  constructor(e) {
    this.linebreakReplacement = null, this.cached = /* @__PURE__ */ Object.create(null);
    let n = this.spec = {};
    for (let i in e)
      n[i] = e[i];
    n.nodes = st.from(e.nodes), n.marks = st.from(e.marks || {}), this.nodes = Kp.compile(this.spec.nodes, this), this.marks = zs.compile(this.spec.marks, this);
    let r = /* @__PURE__ */ Object.create(null);
    for (let i in this.nodes) {
      if (i in this.marks)
        throw new RangeError(i + " can not be both a node and a mark");
      let o = this.nodes[i], a = o.spec.content || "", s = o.spec.marks;
      if (o.contentMatch = r[a] || (r[a] = Mr.parse(a, this.nodes)), o.inlineContent = o.contentMatch.inlineContent, o.spec.linebreakReplacement) {
        if (this.linebreakReplacement)
          throw new RangeError("Multiple linebreak nodes defined");
        if (!o.isInline || !o.isLeaf)
          throw new RangeError("Linebreak replacement nodes must be inline leaf nodes");
        this.linebreakReplacement = o;
      }
      o.markSet = s == "_" ? null : s ? Jp(this, s.split(" ")) : s == "" || !o.inlineContent ? [] : null;
    }
    for (let i in this.marks) {
      let o = this.marks[i], a = o.spec.excludes;
      o.excluded = a == null ? [o] : a == "" ? [] : Jp(this, a.split(" "));
    }
    this.nodeFromJSON = this.nodeFromJSON.bind(this), this.markFromJSON = this.markFromJSON.bind(this), this.topNodeType = this.nodes[this.spec.topNode || "doc"], this.cached.wrappings = /* @__PURE__ */ Object.create(null);
  }
  /**
  Create a node in this schema. The `type` may be a string or a
  `NodeType` instance. Attributes will be extended with defaults,
  `content` may be a `Fragment`, `null`, a `Node`, or an array of
  nodes.
  */
  node(e, n = null, r, i) {
    if (typeof e == "string")
      e = this.nodeType(e);
    else if (e instanceof Kp) {
      if (e.schema != this)
        throw new RangeError("Node type from different schema used (" + e.name + ")");
    } else throw new RangeError("Invalid node type: " + e);
    return e.createChecked(n, r, i);
  }
  /**
  Create a text node in the schema. Empty text nodes are not
  allowed.
  */
  text(e, n) {
    let r = this.nodes.text;
    return new es(r, r.defaultAttrs, e, qe.setFrom(n));
  }
  /**
  Create a mark with the given type and attributes.
  */
  mark(e, n) {
    return typeof e == "string" && (e = this.marks[e]), e.create(n);
  }
  /**
  Deserialize a node from its JSON representation. This method is
  bound.
  */
  nodeFromJSON(e) {
    return hn.fromJSON(this, e);
  }
  /**
  Deserialize a mark from its JSON representation. This method is
  bound.
  */
  markFromJSON(e) {
    return qe.fromJSON(this, e);
  }
  /**
  @internal
  */
  nodeType(e) {
    let n = this.nodes[e];
    if (!n)
      throw new RangeError("Unknown node type: " + e);
    return n;
  }
}
function Jp(t, e) {
  let n = [];
  for (let r = 0; r < e.length; r++) {
    let i = e[r], o = t.marks[i], a = o;
    if (o)
      n.push(o);
    else
      for (let s in t.marks) {
        let c = t.marks[s];
        (i == "_" || c.spec.group && c.spec.group.split(" ").indexOf(i) > -1) && n.push(a = c);
      }
    if (!a)
      throw new SyntaxError("Unknown mark type: '" + e[r] + "'");
  }
  return n;
}
function S_(t) {
  return t.tag != null;
}
function A_(t) {
  return t.style != null;
}
class fo {
  /**
  Create a parser that targets the given schema, using the given
  parsing rules.
  */
  constructor(e, n) {
    this.schema = e, this.rules = n, this.tags = [], this.styles = [];
    let r = this.matchedStyles = [];
    n.forEach((i) => {
      if (S_(i))
        this.tags.push(i);
      else if (A_(i)) {
        let o = /[^=]*/.exec(i.style)[0];
        r.indexOf(o) < 0 && r.push(o), this.styles.push(i);
      }
    }), this.normalizeLists = !this.tags.some((i) => {
      if (!/^(ul|ol)\b/.test(i.tag) || !i.node)
        return !1;
      let o = e.nodes[i.node];
      return o.contentMatch.matchType(o);
    });
  }
  /**
  Parse a document from the content of a DOM node.
  */
  parse(e, n = {}) {
    let r = new Yp(this, n, !1);
    return r.addAll(e, qe.none, n.from, n.to), r.finish();
  }
  /**
  Parses the content of the given DOM node, like
  [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of
  options. But unlike that method, which produces a whole node,
  this one returns a slice that is open at the sides, meaning that
  the schema constraints aren't applied to the start of nodes to
  the left of the input and the end of nodes at the end.
  */
  parseSlice(e, n = {}) {
    let r = new Yp(this, n, !0);
    return r.addAll(e, qe.none, n.from, n.to), _e.maxOpen(r.finish());
  }
  /**
  @internal
  */
  matchTag(e, n, r) {
    for (let i = r ? this.tags.indexOf(r) + 1 : 0; i < this.tags.length; i++) {
      let o = this.tags[i];
      if (F_(e, o.tag) && (o.namespace === void 0 || e.namespaceURI == o.namespace) && (!o.context || n.matchesContext(o.context))) {
        if (o.getAttrs) {
          let a = o.getAttrs(e);
          if (a === !1)
            continue;
          o.attrs = a || void 0;
        }
        return o;
      }
    }
  }
  /**
  @internal
  */
  matchStyle(e, n, r, i) {
    for (let o = i ? this.styles.indexOf(i) + 1 : 0; o < this.styles.length; o++) {
      let a = this.styles[o], s = a.style;
      if (!(s.indexOf(e) != 0 || a.context && !r.matchesContext(a.context) || // Test that the style string either precisely matches the prop,
      // or has an '=' sign after the prop, followed by the given
      // value.
      s.length > e.length && (s.charCodeAt(e.length) != 61 || s.slice(e.length + 1) != n))) {
        if (a.getAttrs) {
          let c = a.getAttrs(n);
          if (c === !1)
            continue;
          a.attrs = c || void 0;
        }
        return a;
      }
    }
  }
  /**
  @internal
  */
  static schemaRules(e) {
    let n = [];
    function r(i) {
      let o = i.priority == null ? 50 : i.priority, a = 0;
      for (; a < n.length; a++) {
        let s = n[a];
        if ((s.priority == null ? 50 : s.priority) < o)
          break;
      }
      n.splice(a, 0, i);
    }
    for (let i in e.marks) {
      let o = e.marks[i].spec.parseDOM;
      o && o.forEach((a) => {
        r(a = Qp(a)), a.mark || a.ignore || a.clearMark || (a.mark = i);
      });
    }
    for (let i in e.nodes) {
      let o = e.nodes[i].spec.parseDOM;
      o && o.forEach((a) => {
        r(a = Qp(a)), a.node || a.ignore || a.mark || (a.node = i);
      });
    }
    return n;
  }
  /**
  Construct a DOM parser using the parsing rules listed in a
  schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by
  [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).
  */
  static fromSchema(e) {
    return e.cached.domParser || (e.cached.domParser = new fo(e, fo.schemaRules(e)));
  }
}
const x0 = {
  address: !0,
  article: !0,
  aside: !0,
  blockquote: !0,
  canvas: !0,
  dd: !0,
  div: !0,
  dl: !0,
  fieldset: !0,
  figcaption: !0,
  figure: !0,
  footer: !0,
  form: !0,
  h1: !0,
  h2: !0,
  h3: !0,
  h4: !0,
  h5: !0,
  h6: !0,
  header: !0,
  hgroup: !0,
  hr: !0,
  li: !0,
  noscript: !0,
  ol: !0,
  output: !0,
  p: !0,
  pre: !0,
  section: !0,
  table: !0,
  tfoot: !0,
  ul: !0
}, U_ = {
  head: !0,
  noscript: !0,
  object: !0,
  script: !0,
  style: !0,
  title: !0
}, w0 = { ol: !0, ul: !0 }, ho = 1, sd = 2, wa = 4;
function Zp(t, e, n) {
  return e != null ? (e ? ho : 0) | (e === "full" ? sd : 0) : t && t.whitespace == "pre" ? ho | sd : n & -5;
}
class Vo {
  constructor(e, n, r, i, o, a) {
    this.type = e, this.attrs = n, this.marks = r, this.solid = i, this.options = a, this.content = [], this.activeMarks = qe.none, this.match = o || (a & wa ? null : e.contentMatch);
  }
  findWrapping(e) {
    if (!this.match) {
      if (!this.type)
        return [];
      let n = this.type.contentMatch.fillBefore(ge.from(e));
      if (n)
        this.match = this.type.contentMatch.matchFragment(n);
      else {
        let r = this.type.contentMatch, i;
        return (i = r.findWrapping(e.type)) ? (this.match = r, i) : null;
      }
    }
    return this.match.findWrapping(e.type);
  }
  finish(e) {
    if (!(this.options & ho)) {
      let r = this.content[this.content.length - 1], i;
      if (r && r.isText && (i = /[ \t\r\n\u000c]+$/.exec(r.text))) {
        let o = r;
        r.text.length == i[0].length ? this.content.pop() : this.content[this.content.length - 1] = o.withText(o.text.slice(0, o.text.length - i[0].length));
      }
    }
    let n = ge.from(this.content);
    return !e && this.match && (n = n.append(this.match.fillBefore(ge.empty, !0))), this.type ? this.type.create(this.attrs, n, this.marks) : n;
  }
  inlineContext(e) {
    return this.type ? this.type.inlineContent : this.content.length ? this.content[0].isInline : e.parentNode && !x0.hasOwnProperty(e.parentNode.nodeName.toLowerCase());
  }
}
class Yp {
  constructor(e, n, r) {
    this.parser = e, this.options = n, this.isOpen = r, this.open = 0, this.localPreserveWS = !1;
    let i = n.topNode, o, a = Zp(null, n.preserveWhitespace, 0) | (r ? wa : 0);
    i ? o = new Vo(i.type, i.attrs, qe.none, !0, n.topMatch || i.type.contentMatch, a) : r ? o = new Vo(null, null, qe.none, !0, null, a) : o = new Vo(e.schema.topNodeType, null, qe.none, !0, null, a), this.nodes = [o], this.find = n.findPositions, this.needsBlock = !1;
  }
  get top() {
    return this.nodes[this.open];
  }
  // Add a DOM node to the content. Text is inserted as text node,
  // otherwise, the node is passed to `addElement` or, if it has a
  // `style` attribute, `addElementWithStyles`.
  addDOM(e, n) {
    e.nodeType == 3 ? this.addTextNode(e, n) : e.nodeType == 1 && this.addElement(e, n);
  }
  addTextNode(e, n) {
    let r = e.nodeValue, i = this.top, o = i.options & sd ? "full" : this.localPreserveWS || (i.options & ho) > 0;
    if (o === "full" || i.inlineContext(e) || /[^ \t\r\n\u000c]/.test(r)) {
      if (o)
        o !== "full" ? r = r.replace(/\r?\n|\r/g, " ") : r = r.replace(/\r\n?/g, `
`);
      else if (r = r.replace(/[ \t\r\n\u000c]+/g, " "), /^[ \t\r\n\u000c]/.test(r) && this.open == this.nodes.length - 1) {
        let a = i.content[i.content.length - 1], s = e.previousSibling;
        (!a || s && s.nodeName == "BR" || a.isText && /[ \t\r\n\u000c]$/.test(a.text)) && (r = r.slice(1));
      }
      r && this.insertNode(this.parser.schema.text(r), n), this.findInText(e);
    } else
      this.findInside(e);
  }
  // Try to find a handler for the given tag and use that to parse. If
  // none is found, the element's content nodes are added directly.
  addElement(e, n, r) {
    let i = this.localPreserveWS, o = this.top;
    (e.tagName == "PRE" || /pre/.test(e.style && e.style.whiteSpace)) && (this.localPreserveWS = !0);
    let a = e.nodeName.toLowerCase(), s;
    w0.hasOwnProperty(a) && this.parser.normalizeLists && k_(e);
    let c = this.options.ruleFromNode && this.options.ruleFromNode(e) || (s = this.parser.matchTag(e, this, r));
    e: if (c ? c.ignore : U_.hasOwnProperty(a))
      this.findInside(e), this.ignoreFallback(e, n);
    else if (!c || c.skip || c.closeParent) {
      c && c.closeParent ? this.open = Math.max(0, this.open - 1) : c && c.skip.nodeType && (e = c.skip);
      let l, u = this.needsBlock;
      if (x0.hasOwnProperty(a))
        o.content.length && o.content[0].isInline && this.open && (this.open--, o = this.top), l = !0, o.type || (this.needsBlock = !0);
      else if (!e.firstChild) {
        this.leafFallback(e, n);
        break e;
      }
      let f = c && c.skip ? n : this.readStyles(e, n);
      f && this.addAll(e, f), l && this.sync(o), this.needsBlock = u;
    } else {
      let l = this.readStyles(e, n);
      l && this.addElementByRule(e, c, l, c.consuming === !1 ? s : void 0);
    }
    this.localPreserveWS = i;
  }
  // Called for leaf DOM nodes that would otherwise be ignored
  leafFallback(e, n) {
    e.nodeName == "BR" && this.top.type && this.top.type.inlineContent && this.addTextNode(e.ownerDocument.createTextNode(`
`), n);
  }
  // Called for ignored nodes
  ignoreFallback(e, n) {
    e.nodeName == "BR" && (!this.top.type || !this.top.type.inlineContent) && this.findPlace(this.parser.schema.text("-"), n);
  }
  // Run any style parser associated with the node's styles. Either
  // return an updated array of marks, or null to indicate some of the
  // styles had a rule with `ignore` set.
  readStyles(e, n) {
    let r = e.style;
    if (r && r.length)
      for (let i = 0; i < this.parser.matchedStyles.length; i++) {
        let o = this.parser.matchedStyles[i], a = r.getPropertyValue(o);
        if (a)
          for (let s = void 0; ; ) {
            let c = this.parser.matchStyle(o, a, this, s);
            if (!c)
              break;
            if (c.ignore)
              return null;
            if (c.clearMark ? n = n.filter((l) => !c.clearMark(l)) : n = n.concat(this.parser.schema.marks[c.mark].create(c.attrs)), c.consuming === !1)
              s = c;
            else
              break;
          }
      }
    return n;
  }
  // Look up a handler for the given node. If none are found, return
  // false. Otherwise, apply it, use its return value to drive the way
  // the node's content is wrapped, and return true.
  addElementByRule(e, n, r, i) {
    let o, a;
    if (n.node)
      if (a = this.parser.schema.nodes[n.node], a.isLeaf)
        this.insertNode(a.create(n.attrs), r) || this.leafFallback(e, r);
      else {
        let c = this.enter(a, n.attrs || null, r, n.preserveWhitespace);
        c && (o = !0, r = c);
      }
    else {
      let c = this.parser.schema.marks[n.mark];
      r = r.concat(c.create(n.attrs));
    }
    let s = this.top;
    if (a && a.isLeaf)
      this.findInside(e);
    else if (i)
      this.addElement(e, r, i);
    else if (n.getContent)
      this.findInside(e), n.getContent(e, this.parser.schema).forEach((c) => this.insertNode(c, r));
    else {
      let c = e;
      typeof n.contentElement == "string" ? c = e.querySelector(n.contentElement) : typeof n.contentElement == "function" ? c = n.contentElement(e) : n.contentElement && (c = n.contentElement), this.findAround(e, c, !0), this.addAll(c, r), this.findAround(e, c, !1);
    }
    o && this.sync(s) && this.open--;
  }
  // Add all child nodes between `startIndex` and `endIndex` (or the
  // whole node, if not given). If `sync` is passed, use it to
  // synchronize after every block element.
  addAll(e, n, r, i) {
    let o = r || 0;
    for (let a = r ? e.childNodes[r] : e.firstChild, s = i == null ? null : e.childNodes[i]; a != s; a = a.nextSibling, ++o)
      this.findAtPoint(e, o), this.addDOM(a, n);
    this.findAtPoint(e, o);
  }
  // Try to find a way to fit the given node type into the current
  // context. May add intermediate wrappers and/or leave non-solid
  // nodes that we're in.
  findPlace(e, n) {
    let r, i;
    for (let o = this.open; o >= 0; o--) {
      let a = this.nodes[o], s = a.findWrapping(e);
      if (s && (!r || r.length > s.length) && (r = s, i = a, !s.length) || a.solid)
        break;
    }
    if (!r)
      return null;
    this.sync(i);
    for (let o = 0; o < r.length; o++)
      n = this.enterInner(r[o], null, n, !1);
    return n;
  }
  // Try to insert the given node, adjusting the context when needed.
  insertNode(e, n) {
    if (e.isInline && this.needsBlock && !this.top.type) {
      let i = this.textblockFromContext();
      i && (n = this.enterInner(i, null, n));
    }
    let r = this.findPlace(e, n);
    if (r) {
      this.closeExtra();
      let i = this.top;
      i.match && (i.match = i.match.matchType(e.type));
      let o = qe.none;
      for (let a of r.concat(e.marks))
        (i.type ? i.type.allowsMarkType(a.type) : eg(a.type, e.type)) && (o = a.addToSet(o));
      return i.content.push(e.mark(o)), !0;
    }
    return !1;
  }
  // Try to start a node of the given type, adjusting the context when
  // necessary.
  enter(e, n, r, i) {
    let o = this.findPlace(e.create(n), r);
    return o && (o = this.enterInner(e, n, r, !0, i)), o;
  }
  // Open a node of the given type
  enterInner(e, n, r, i = !1, o) {
    this.closeExtra();
    let a = this.top;
    a.match = a.match && a.match.matchType(e);
    let s = Zp(e, o, a.options);
    a.options & wa && a.content.length == 0 && (s |= wa);
    let c = qe.none;
    return r = r.filter((l) => (a.type ? a.type.allowsMarkType(l.type) : eg(l.type, e)) ? (c = l.addToSet(c), !1) : !0), this.nodes.push(new Vo(e, n, c, i, null, s)), this.open++, r;
  }
  // Make sure all nodes above this.open are finished and added to
  // their parents
  closeExtra(e = !1) {
    let n = this.nodes.length - 1;
    if (n > this.open) {
      for (; n > this.open; n--)
        this.nodes[n - 1].content.push(this.nodes[n].finish(e));
      this.nodes.length = this.open + 1;
    }
  }
  finish() {
    return this.open = 0, this.closeExtra(this.isOpen), this.nodes[0].finish(!!(this.isOpen || this.options.topOpen));
  }
  sync(e) {
    for (let n = this.open; n >= 0; n--) {
      if (this.nodes[n] == e)
        return this.open = n, !0;
      this.localPreserveWS && (this.nodes[n].options |= ho);
    }
    return !1;
  }
  get currentPos() {
    this.closeExtra();
    let e = 0;
    for (let n = this.open; n >= 0; n--) {
      let r = this.nodes[n].content;
      for (let i = r.length - 1; i >= 0; i--)
        e += r[i].nodeSize;
      n && e++;
    }
    return e;
  }
  findAtPoint(e, n) {
    if (this.find)
      for (let r = 0; r < this.find.length; r++)
        this.find[r].node == e && this.find[r].offset == n && (this.find[r].pos = this.currentPos);
  }
  findInside(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].pos == null && e.nodeType == 1 && e.contains(this.find[n].node) && (this.find[n].pos = this.currentPos);
  }
  findAround(e, n, r) {
    if (e != n && this.find)
      for (let i = 0; i < this.find.length; i++)
        this.find[i].pos == null && e.nodeType == 1 && e.contains(this.find[i].node) && n.compareDocumentPosition(this.find[i].node) & (r ? 2 : 4) && (this.find[i].pos = this.currentPos);
  }
  findInText(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].node == e && (this.find[n].pos = this.currentPos - (e.nodeValue.length - this.find[n].offset));
  }
  // Determines whether the given context string matches this context.
  matchesContext(e) {
    if (e.indexOf("|") > -1)
      return e.split(/\s*\|\s*/).some(this.matchesContext, this);
    let n = e.split("/"), r = this.options.context, i = !this.isOpen && (!r || r.parent.type == this.nodes[0].type), o = -(r ? r.depth + 1 : 0) + (i ? 0 : 1), a = (s, c) => {
      for (; s >= 0; s--) {
        let l = n[s];
        if (l == "") {
          if (s == n.length - 1 || s == 0)
            continue;
          for (; c >= o; c--)
            if (a(s - 1, c))
              return !0;
          return !1;
        } else {
          let u = c > 0 || c == 0 && i ? this.nodes[c].type : r && c >= o ? r.node(c - o).type : null;
          if (!u || u.name != l && !u.isInGroup(l))
            return !1;
          c--;
        }
      }
      return !0;
    };
    return a(n.length - 1, this.open);
  }
  textblockFromContext() {
    let e = this.options.context;
    if (e)
      for (let n = e.depth; n >= 0; n--) {
        let r = e.node(n).contentMatchAt(e.indexAfter(n)).defaultType;
        if (r && r.isTextblock && r.defaultAttrs)
          return r;
      }
    for (let n in this.parser.schema.nodes) {
      let r = this.parser.schema.nodes[n];
      if (r.isTextblock && r.defaultAttrs)
        return r;
    }
  }
}
function k_(t) {
  for (let e = t.firstChild, n = null; e; e = e.nextSibling) {
    let r = e.nodeType == 1 ? e.nodeName.toLowerCase() : null;
    r && w0.hasOwnProperty(r) && n ? (n.appendChild(e), e = n) : r == "li" ? n = e : r && (n = null);
  }
}
function F_(t, e) {
  return (t.matches || t.msMatchesSelector || t.webkitMatchesSelector || t.mozMatchesSelector).call(t, e);
}
function Qp(t) {
  let e = {};
  for (let n in t)
    e[n] = t[n];
  return e;
}
function eg(t, e) {
  let n = e.schema.nodes;
  for (let r in n) {
    let i = n[r];
    if (!i.allowsMarkType(t))
      continue;
    let o = [], a = (s) => {
      o.push(s);
      for (let c = 0; c < s.edgeCount; c++) {
        let { type: l, next: u } = s.edge(c);
        if (l == e || o.indexOf(u) < 0 && a(u))
          return !0;
      }
    };
    if (a(i.contentMatch))
      return !0;
  }
}
class Ti {
  /**
  Create a serializer. `nodes` should map node names to functions
  that take a node and return a description of the corresponding
  DOM. `marks` does the same for mark names, but also gets an
  argument that tells it whether the mark's content is block or
  inline content (for typical use, it'll always be inline). A mark
  serializer may be `null` to indicate that marks of that type
  should not be serialized.
  */
  constructor(e, n) {
    this.nodes = e, this.marks = n;
  }
  /**
  Serialize the content of this fragment to a DOM fragment. When
  not in the browser, the `document` option, containing a DOM
  document, should be passed so that the serializer can create
  nodes.
  */
  serializeFragment(e, n = {}, r) {
    r || (r = Fc(n).createDocumentFragment());
    let i = r, o = [];
    return e.forEach((a) => {
      if (o.length || a.marks.length) {
        let s = 0, c = 0;
        for (; s < o.length && c < a.marks.length; ) {
          let l = a.marks[c];
          if (!this.marks[l.type.name]) {
            c++;
            continue;
          }
          if (!l.eq(o[s][0]) || l.type.spec.spanning === !1)
            break;
          s++, c++;
        }
        for (; s < o.length; )
          i = o.pop()[1];
        for (; c < a.marks.length; ) {
          let l = a.marks[c++], u = this.serializeMark(l, a.isInline, n);
          u && (o.push([l, i]), i.appendChild(u.dom), i = u.contentDOM || u.dom);
        }
      }
      i.appendChild(this.serializeNodeInner(a, n));
    }), r;
  }
  /**
  @internal
  */
  serializeNodeInner(e, n) {
    let { dom: r, contentDOM: i } = _a(Fc(n), this.nodes[e.type.name](e), null, e.attrs);
    if (i) {
      if (e.isLeaf)
        throw new RangeError("Content hole not allowed in a leaf node spec");
      this.serializeFragment(e.content, n, i);
    }
    return r;
  }
  /**
  Serialize this node to a DOM node. This can be useful when you
  need to serialize a part of a document, as opposed to the whole
  document. To serialize a whole document, use
  [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on
  its [content](https://prosemirror.net/docs/ref/#model.Node.content).
  */
  serializeNode(e, n = {}) {
    let r = this.serializeNodeInner(e, n);
    for (let i = e.marks.length - 1; i >= 0; i--) {
      let o = this.serializeMark(e.marks[i], e.isInline, n);
      o && ((o.contentDOM || o.dom).appendChild(r), r = o.dom);
    }
    return r;
  }
  /**
  @internal
  */
  serializeMark(e, n, r = {}) {
    let i = this.marks[e.type.name];
    return i && _a(Fc(r), i(e, n), null, e.attrs);
  }
  static renderSpec(e, n, r = null, i) {
    return _a(e, n, r, i);
  }
  /**
  Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)
  properties in a schema's node and mark specs.
  */
  static fromSchema(e) {
    return e.cached.domSerializer || (e.cached.domSerializer = new Ti(this.nodesFromSchema(e), this.marksFromSchema(e)));
  }
  /**
  Gather the serializers in a schema's node specs into an object.
  This can be useful as a base to build a custom serializer from.
  */
  static nodesFromSchema(e) {
    let n = tg(e.nodes);
    return n.text || (n.text = (r) => r.text), n;
  }
  /**
  Gather the serializers in a schema's mark specs into an object.
  */
  static marksFromSchema(e) {
    return tg(e.marks);
  }
}
function tg(t) {
  let e = {};
  for (let n in t) {
    let r = t[n].spec.toDOM;
    r && (e[n] = r);
  }
  return e;
}
function Fc(t) {
  return t.document || window.document;
}
const ng = /* @__PURE__ */ new WeakMap();
function O_(t) {
  let e = ng.get(t);
  return e === void 0 && ng.set(t, e = R_(t)), e;
}
function R_(t) {
  let e = null;
  function n(r) {
    if (r && typeof r == "object")
      if (Array.isArray(r))
        if (typeof r[0] == "string")
          e || (e = []), e.push(r);
        else
          for (let i = 0; i < r.length; i++)
            n(r[i]);
      else
        for (let i in r)
          n(r[i]);
  }
  return n(t), e;
}
function _a(t, e, n, r) {
  if (typeof e == "string")
    return { dom: t.createTextNode(e) };
  if (e.nodeType != null)
    return { dom: e };
  if (e.dom && e.dom.nodeType != null)
    return e;
  let i = e[0], o;
  if (typeof i != "string")
    throw new RangeError("Invalid array passed to renderSpec");
  if (r && (o = O_(r)) && o.indexOf(e) > -1)
    throw new RangeError("Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.");
  let a = i.indexOf(" ");
  a > 0 && (n = i.slice(0, a), i = i.slice(a + 1));
  let s, c = n ? t.createElementNS(n, i) : t.createElement(i), l = e[1], u = 1;
  if (l && typeof l == "object" && l.nodeType == null && !Array.isArray(l)) {
    u = 2;
    for (let f in l)
      if (l[f] != null) {
        let d = f.indexOf(" ");
        d > 0 ? c.setAttributeNS(f.slice(0, d), f.slice(d + 1), l[f]) : c.setAttribute(f, l[f]);
      }
  }
  for (let f = u; f < e.length; f++) {
    let d = e[f];
    if (d === 0) {
      if (f < e.length - 1 || f > u)
        throw new RangeError("Content hole must be the only child of its parent node");
      return { dom: c, contentDOM: c };
    } else {
      let { dom: h, contentDOM: p } = _a(t, d, n, r);
      if (c.appendChild(h), p) {
        if (s)
          throw new RangeError("Multiple content holes");
        s = p;
      }
    }
  }
  return { dom: c, contentDOM: s };
}
const _0 = 65535, T0 = Math.pow(2, 16);
function N_(t, e) {
  return t + e * T0;
}
function rg(t) {
  return t & _0;
}
function B_(t) {
  return (t - (t & _0)) / T0;
}
const E0 = 1, C0 = 2, Ta = 4, S0 = 8;
class cd {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.pos = e, this.delInfo = n, this.recover = r;
  }
  /**
  Tells you whether the position was deleted, that is, whether the
  step removed the token on the side queried (via the `assoc`)
  argument from the document.
  */
  get deleted() {
    return (this.delInfo & S0) > 0;
  }
  /**
  Tells you whether the token before the mapped position was deleted.
  */
  get deletedBefore() {
    return (this.delInfo & (E0 | Ta)) > 0;
  }
  /**
  True when the token after the mapped position was deleted.
  */
  get deletedAfter() {
    return (this.delInfo & (C0 | Ta)) > 0;
  }
  /**
  Tells whether any of the steps mapped through deletes across the
  position (including both the token before and after the
  position).
  */
  get deletedAcross() {
    return (this.delInfo & Ta) > 0;
  }
}
class Nt {
  /**
  Create a position map. The modifications to the document are
  represented as an array of numbers, in which each group of three
  represents a modified chunk as `[start, oldSize, newSize]`.
  */
  constructor(e, n = !1) {
    if (this.ranges = e, this.inverted = n, !e.length && Nt.empty)
      return Nt.empty;
  }
  /**
  @internal
  */
  recover(e) {
    let n = 0, r = rg(e);
    if (!this.inverted)
      for (let i = 0; i < r; i++)
        n += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];
    return this.ranges[r * 3] + n + B_(e);
  }
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  map(e, n = 1) {
    return this._map(e, n, !0);
  }
  /**
  @internal
  */
  _map(e, n, r) {
    let i = 0, o = this.inverted ? 2 : 1, a = this.inverted ? 1 : 2;
    for (let s = 0; s < this.ranges.length; s += 3) {
      let c = this.ranges[s] - (this.inverted ? i : 0);
      if (c > e)
        break;
      let l = this.ranges[s + o], u = this.ranges[s + a], f = c + l;
      if (e <= f) {
        let d = l ? e == c ? -1 : e == f ? 1 : n : n, h = c + i + (d < 0 ? 0 : u);
        if (r)
          return h;
        let p = e == (n < 0 ? c : f) ? null : N_(s / 3, e - c), m = e == c ? C0 : e == f ? E0 : Ta;
        return (n < 0 ? e != c : e != f) && (m |= S0), new cd(h, m, p);
      }
      i += u - l;
    }
    return r ? e + i : new cd(e + i, 0, null);
  }
  /**
  @internal
  */
  touches(e, n) {
    let r = 0, i = rg(n), o = this.inverted ? 2 : 1, a = this.inverted ? 1 : 2;
    for (let s = 0; s < this.ranges.length; s += 3) {
      let c = this.ranges[s] - (this.inverted ? r : 0);
      if (c > e)
        break;
      let l = this.ranges[s + o], u = c + l;
      if (e <= u && s == i * 3)
        return !0;
      r += this.ranges[s + a] - l;
    }
    return !1;
  }
  /**
  Calls the given function on each of the changed ranges included in
  this map.
  */
  forEach(e) {
    let n = this.inverted ? 2 : 1, r = this.inverted ? 1 : 2;
    for (let i = 0, o = 0; i < this.ranges.length; i += 3) {
      let a = this.ranges[i], s = a - (this.inverted ? o : 0), c = a + (this.inverted ? 0 : o), l = this.ranges[i + n], u = this.ranges[i + r];
      e(s, s + l, c, c + u), o += u - l;
    }
  }
  /**
  Create an inverted version of this map. The result can be used to
  map positions in the post-step document to the pre-step document.
  */
  invert() {
    return new Nt(this.ranges, !this.inverted);
  }
  /**
  @internal
  */
  toString() {
    return (this.inverted ? "-" : "") + JSON.stringify(this.ranges);
  }
  /**
  Create a map that moves all positions by offset `n` (which may be
  negative). This can be useful when applying steps meant for a
  sub-document to a larger document, or vice-versa.
  */
  static offset(e) {
    return e == 0 ? Nt.empty : new Nt(e < 0 ? [0, -e, 0] : [0, 0, e]);
  }
}
Nt.empty = new Nt([]);
class ui {
  /**
  Create a new mapping with the given position maps.
  */
  constructor(e = [], n, r = 0, i = e.length) {
    this.maps = e, this.mirror = n, this.from = r, this.to = i;
  }
  /**
  Create a mapping that maps only through a part of this one.
  */
  slice(e = 0, n = this.maps.length) {
    return new ui(this.maps, this.mirror, e, n);
  }
  /**
  @internal
  */
  copy() {
    return new ui(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);
  }
  /**
  Add a step map to the end of this mapping. If `mirrors` is
  given, it should be the index of the step map that is the mirror
  image of this one.
  */
  appendMap(e, n) {
    this.to = this.maps.push(e), n != null && this.setMirror(this.maps.length - 1, n);
  }
  /**
  Add all the step maps in a given mapping to this one (preserving
  mirroring information).
  */
  appendMapping(e) {
    for (let n = 0, r = this.maps.length; n < e.maps.length; n++) {
      let i = e.getMirror(n);
      this.appendMap(e.maps[n], i != null && i < n ? r + i : void 0);
    }
  }
  /**
  Finds the offset of the step map that mirrors the map at the
  given offset, in this mapping (as per the second argument to
  `appendMap`).
  */
  getMirror(e) {
    if (this.mirror) {
      for (let n = 0; n < this.mirror.length; n++)
        if (this.mirror[n] == e)
          return this.mirror[n + (n % 2 ? -1 : 1)];
    }
  }
  /**
  @internal
  */
  setMirror(e, n) {
    this.mirror || (this.mirror = []), this.mirror.push(e, n);
  }
  /**
  Append the inverse of the given mapping to this one.
  */
  appendMappingInverted(e) {
    for (let n = e.maps.length - 1, r = this.maps.length + e.maps.length; n >= 0; n--) {
      let i = e.getMirror(n);
      this.appendMap(e.maps[n].invert(), i != null && i > n ? r - i - 1 : void 0);
    }
  }
  /**
  Create an inverted version of this mapping.
  */
  invert() {
    let e = new ui();
    return e.appendMappingInverted(this), e;
  }
  /**
  Map a position through this mapping.
  */
  map(e, n = 1) {
    if (this.mirror)
      return this._map(e, n, !0);
    for (let r = this.from; r < this.to; r++)
      e = this.maps[r].map(e, n);
    return e;
  }
  /**
  Map a position through this mapping, returning a mapping
  result.
  */
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  /**
  @internal
  */
  _map(e, n, r) {
    let i = 0;
    for (let o = this.from; o < this.to; o++) {
      let a = this.maps[o], s = a.mapResult(e, n);
      if (s.recover != null) {
        let c = this.getMirror(o);
        if (c != null && c > o && c < this.to) {
          o = c, e = this.maps[c].recover(s.recover);
          continue;
        }
      }
      i |= s.delInfo, e = s.pos;
    }
    return r ? e : new cd(e, i, null);
  }
}
const Oc = /* @__PURE__ */ Object.create(null);
class mt {
  /**
  Get the step map that represents the changes made by this step,
  and which can be used to transform between positions in the old
  and the new document.
  */
  getMap() {
    return Nt.empty;
  }
  /**
  Try to merge this step with another one, to be applied directly
  after it. Returns the merged step when possible, null if the
  steps can't be merged.
  */
  merge(e) {
    return null;
  }
  /**
  Deserialize a step from its JSON representation. Will call
  through to the step class' own implementation of this method.
  */
  static fromJSON(e, n) {
    if (!n || !n.stepType)
      throw new RangeError("Invalid input for Step.fromJSON");
    let r = Oc[n.stepType];
    if (!r)
      throw new RangeError(`No step type ${n.stepType} defined`);
    return r.fromJSON(e, n);
  }
  /**
  To be able to serialize steps to JSON, each step needs a string
  ID to attach to its JSON representation. Use this method to
  register an ID for your step classes. Try to pick something
  that's unlikely to clash with steps from other modules.
  */
  static jsonID(e, n) {
    if (e in Oc)
      throw new RangeError("Duplicate use of step JSON ID " + e);
    return Oc[e] = n, n.prototype.jsonID = e, n;
  }
}
class tt {
  /**
  @internal
  */
  constructor(e, n) {
    this.doc = e, this.failed = n;
  }
  /**
  Create a successful step result.
  */
  static ok(e) {
    return new tt(e, null);
  }
  /**
  Create a failed step result.
  */
  static fail(e) {
    return new tt(null, e);
  }
  /**
  Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given
  arguments. Create a successful result if it succeeds, and a
  failed one if it throws a `ReplaceError`.
  */
  static fromReplace(e, n, r, i) {
    try {
      return tt.ok(e.replace(n, r, i));
    } catch (o) {
      if (o instanceof Za)
        return tt.fail(o.message);
      throw o;
    }
  }
}
function nh(t, e, n) {
  let r = [];
  for (let i = 0; i < t.childCount; i++) {
    let o = t.child(i);
    o.content.size && (o = o.copy(nh(o.content, e, o))), o.isInline && (o = e(o, n, i)), r.push(o);
  }
  return ge.fromArray(r);
}
class nr extends mt {
  /**
  Create a mark step.
  */
  constructor(e, n, r) {
    super(), this.from = e, this.to = n, this.mark = r;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), r = e.resolve(this.from), i = r.node(r.sharedDepth(this.to)), o = new _e(nh(n.content, (a, s) => !a.isAtom || !s.type.allowsMarkType(this.mark.type) ? a : a.mark(this.mark.addToSet(a.marks)), i), n.openStart, n.openEnd);
    return tt.fromReplace(e, this.from, this.to, o);
  }
  invert() {
    return new dn(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return n.deleted && r.deleted || n.pos >= r.pos ? null : new nr(n.pos, r.pos, this.mark);
  }
  merge(e) {
    return e instanceof nr && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new nr(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "addMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for AddMarkStep.fromJSON");
    return new nr(n.from, n.to, e.markFromJSON(n.mark));
  }
}
mt.jsonID("addMark", nr);
class dn extends mt {
  /**
  Create a mark-removing step.
  */
  constructor(e, n, r) {
    super(), this.from = e, this.to = n, this.mark = r;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), r = new _e(nh(n.content, (i) => i.mark(this.mark.removeFromSet(i.marks)), e), n.openStart, n.openEnd);
    return tt.fromReplace(e, this.from, this.to, r);
  }
  invert() {
    return new nr(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return n.deleted && r.deleted || n.pos >= r.pos ? null : new dn(n.pos, r.pos, this.mark);
  }
  merge(e) {
    return e instanceof dn && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new dn(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "removeMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for RemoveMarkStep.fromJSON");
    return new dn(n.from, n.to, e.markFromJSON(n.mark));
  }
}
mt.jsonID("removeMark", dn);
class rr extends mt {
  /**
  Create a node mark step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return tt.fail("No node at mark step's position");
    let r = n.type.create(n.attrs, null, this.mark.addToSet(n.marks));
    return tt.fromReplace(e, this.pos, this.pos + 1, new _e(ge.from(r), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    if (n) {
      let r = this.mark.addToSet(n.marks);
      if (r.length == n.marks.length) {
        for (let i = 0; i < n.marks.length; i++)
          if (!n.marks[i].isInSet(r))
            return new rr(this.pos, n.marks[i]);
        return new rr(this.pos, this.mark);
      }
    }
    return new yi(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new rr(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "addNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for AddNodeMarkStep.fromJSON");
    return new rr(n.pos, e.markFromJSON(n.mark));
  }
}
mt.jsonID("addNodeMark", rr);
class yi extends mt {
  /**
  Create a mark-removing step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return tt.fail("No node at mark step's position");
    let r = n.type.create(n.attrs, null, this.mark.removeFromSet(n.marks));
    return tt.fromReplace(e, this.pos, this.pos + 1, new _e(ge.from(r), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    return !n || !this.mark.isInSet(n.marks) ? this : new rr(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new yi(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "removeNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for RemoveNodeMarkStep.fromJSON");
    return new yi(n.pos, e.markFromJSON(n.mark));
  }
}
mt.jsonID("removeNodeMark", yi);
class ct extends mt {
  /**
  The given `slice` should fit the 'gap' between `from` and
  `to`—the depths must line up, and the surrounding nodes must be
  able to be joined with the open sides of the slice. When
  `structure` is true, the step will fail if the content between
  from and to is not just a sequence of closing and then opening
  tokens (this is to guard against rebased replace steps
  overwriting something they weren't supposed to).
  */
  constructor(e, n, r, i = !1) {
    super(), this.from = e, this.to = n, this.slice = r, this.structure = i;
  }
  apply(e) {
    return this.structure && ld(e, this.from, this.to) ? tt.fail("Structure replace would overwrite content") : tt.fromReplace(e, this.from, this.to, this.slice);
  }
  getMap() {
    return new Nt([this.from, this.to - this.from, this.slice.size]);
  }
  invert(e) {
    return new ct(this.from, this.from + this.slice.size, e.slice(this.from, this.to));
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return n.deletedAcross && r.deletedAcross ? null : new ct(n.pos, Math.max(n.pos, r.pos), this.slice);
  }
  merge(e) {
    if (!(e instanceof ct) || e.structure || this.structure)
      return null;
    if (this.from + this.slice.size == e.from && !this.slice.openEnd && !e.slice.openStart) {
      let n = this.slice.size + e.slice.size == 0 ? _e.empty : new _e(this.slice.content.append(e.slice.content), this.slice.openStart, e.slice.openEnd);
      return new ct(this.from, this.to + (e.to - e.from), n, this.structure);
    } else if (e.to == this.from && !this.slice.openStart && !e.slice.openEnd) {
      let n = this.slice.size + e.slice.size == 0 ? _e.empty : new _e(e.slice.content.append(this.slice.content), e.slice.openStart, this.slice.openEnd);
      return new ct(e.from, this.to, n, this.structure);
    } else
      return null;
  }
  toJSON() {
    let e = { stepType: "replace", from: this.from, to: this.to };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for ReplaceStep.fromJSON");
    return new ct(n.from, n.to, _e.fromJSON(e, n.slice), !!n.structure);
  }
}
mt.jsonID("replace", ct);
class ft extends mt {
  /**
  Create a replace-around step with the given range and gap.
  `insert` should be the point in the slice into which the content
  of the gap should be moved. `structure` has the same meaning as
  it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.
  */
  constructor(e, n, r, i, o, a, s = !1) {
    super(), this.from = e, this.to = n, this.gapFrom = r, this.gapTo = i, this.slice = o, this.insert = a, this.structure = s;
  }
  apply(e) {
    if (this.structure && (ld(e, this.from, this.gapFrom) || ld(e, this.gapTo, this.to)))
      return tt.fail("Structure gap-replace would overwrite content");
    let n = e.slice(this.gapFrom, this.gapTo);
    if (n.openStart || n.openEnd)
      return tt.fail("Gap is not a flat range");
    let r = this.slice.insertAt(this.insert, n.content);
    return r ? tt.fromReplace(e, this.from, this.to, r) : tt.fail("Content does not fit in gap");
  }
  getMap() {
    return new Nt([
      this.from,
      this.gapFrom - this.from,
      this.insert,
      this.gapTo,
      this.to - this.gapTo,
      this.slice.size - this.insert
    ]);
  }
  invert(e) {
    let n = this.gapTo - this.gapFrom;
    return new ft(this.from, this.from + this.slice.size + n, this.from + this.insert, this.from + this.insert + n, e.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1), i = this.from == this.gapFrom ? n.pos : e.map(this.gapFrom, -1), o = this.to == this.gapTo ? r.pos : e.map(this.gapTo, 1);
    return n.deletedAcross && r.deletedAcross || i < n.pos || o > r.pos ? null : new ft(n.pos, r.pos, i, o, this.slice, this.insert, this.structure);
  }
  toJSON() {
    let e = {
      stepType: "replaceAround",
      from: this.from,
      to: this.to,
      gapFrom: this.gapFrom,
      gapTo: this.gapTo,
      insert: this.insert
    };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number" || typeof n.gapFrom != "number" || typeof n.gapTo != "number" || typeof n.insert != "number")
      throw new RangeError("Invalid input for ReplaceAroundStep.fromJSON");
    return new ft(n.from, n.to, n.gapFrom, n.gapTo, _e.fromJSON(e, n.slice), n.insert, !!n.structure);
  }
}
mt.jsonID("replaceAround", ft);
function ld(t, e, n) {
  let r = t.resolve(e), i = n - e, o = r.depth;
  for (; i > 0 && o > 0 && r.indexAfter(o) == r.node(o).childCount; )
    o--, i--;
  if (i > 0) {
    let a = r.node(o).maybeChild(r.indexAfter(o));
    for (; i > 0; ) {
      if (!a || a.isLeaf)
        return !0;
      a = a.firstChild, i--;
    }
  }
  return !1;
}
function I_(t, e, n, r) {
  let i = [], o = [], a, s;
  t.doc.nodesBetween(e, n, (c, l, u) => {
    if (!c.isInline)
      return;
    let f = c.marks;
    if (!r.isInSet(f) && u.type.allowsMarkType(r.type)) {
      let d = Math.max(l, e), h = Math.min(l + c.nodeSize, n), p = r.addToSet(f);
      for (let m = 0; m < f.length; m++)
        f[m].isInSet(p) || (a && a.to == d && a.mark.eq(f[m]) ? a.to = h : i.push(a = new dn(d, h, f[m])));
      s && s.to == d ? s.to = h : o.push(s = new nr(d, h, r));
    }
  }), i.forEach((c) => t.step(c)), o.forEach((c) => t.step(c));
}
function M_(t, e, n, r) {
  let i = [], o = 0;
  t.doc.nodesBetween(e, n, (a, s) => {
    if (!a.isInline)
      return;
    o++;
    let c = null;
    if (r instanceof zs) {
      let l = a.marks, u;
      for (; u = r.isInSet(l); )
        (c || (c = [])).push(u), l = u.removeFromSet(l);
    } else r ? r.isInSet(a.marks) && (c = [r]) : c = a.marks;
    if (c && c.length) {
      let l = Math.min(s + a.nodeSize, n);
      for (let u = 0; u < c.length; u++) {
        let f = c[u], d;
        for (let h = 0; h < i.length; h++) {
          let p = i[h];
          p.step == o - 1 && f.eq(i[h].style) && (d = p);
        }
        d ? (d.to = l, d.step = o) : i.push({ style: f, from: Math.max(s, e), to: l, step: o });
      }
    }
  }), i.forEach((a) => t.step(new dn(a.from, a.to, a.style)));
}
function rh(t, e, n, r = n.contentMatch, i = !0) {
  let o = t.doc.nodeAt(e), a = [], s = e + 1;
  for (let c = 0; c < o.childCount; c++) {
    let l = o.child(c), u = s + l.nodeSize, f = r.matchType(l.type);
    if (!f)
      a.push(new ct(s, u, _e.empty));
    else {
      r = f;
      for (let d = 0; d < l.marks.length; d++)
        n.allowsMarkType(l.marks[d].type) || t.step(new dn(s, u, l.marks[d]));
      if (i && l.isText && n.whitespace != "pre") {
        let d, h = /\r?\n|\r/g, p;
        for (; d = h.exec(l.text); )
          p || (p = new _e(ge.from(n.schema.text(" ", n.allowedMarks(l.marks))), 0, 0)), a.push(new ct(s + d.index, s + d.index + d[0].length, p));
      }
    }
    s = u;
  }
  if (!r.validEnd) {
    let c = r.fillBefore(ge.empty, !0);
    t.replace(s, s, new _e(c, 0, 0));
  }
  for (let c = a.length - 1; c >= 0; c--)
    t.step(a[c]);
}
function W_(t, e, n) {
  return (e == 0 || t.canReplace(e, t.childCount)) && (n == t.childCount || t.canReplace(0, n));
}
function Oo(t) {
  let n = t.parent.content.cutByIndex(t.startIndex, t.endIndex);
  for (let r = t.depth; ; --r) {
    let i = t.$from.node(r), o = t.$from.index(r), a = t.$to.indexAfter(r);
    if (r < t.depth && i.canReplace(o, a, n))
      return r;
    if (r == 0 || i.type.spec.isolating || !W_(i, o, a))
      break;
  }
  return null;
}
function L_(t, e, n) {
  let { $from: r, $to: i, depth: o } = e, a = r.before(o + 1), s = i.after(o + 1), c = a, l = s, u = ge.empty, f = 0;
  for (let p = o, m = !1; p > n; p--)
    m || r.index(p) > 0 ? (m = !0, u = ge.from(r.node(p).copy(u)), f++) : c--;
  let d = ge.empty, h = 0;
  for (let p = o, m = !1; p > n; p--)
    m || i.after(p + 1) < i.end(p) ? (m = !0, d = ge.from(i.node(p).copy(d)), h++) : l++;
  t.step(new ft(c, l, a, s, new _e(u.append(d), f, h), u.size - f, !0));
}
function A0(t, e, n = null, r = t) {
  let i = P_(t, e), o = i && q_(r, e);
  return o ? i.map(ig).concat({ type: e, attrs: n }).concat(o.map(ig)) : null;
}
function ig(t) {
  return { type: t, attrs: null };
}
function P_(t, e) {
  let { parent: n, startIndex: r, endIndex: i } = t, o = n.contentMatchAt(r).findWrapping(e);
  if (!o)
    return null;
  let a = o.length ? o[0] : e;
  return n.canReplaceWith(r, i, a) ? o : null;
}
function q_(t, e) {
  let { parent: n, startIndex: r, endIndex: i } = t, o = n.child(r), a = e.contentMatch.findWrapping(o.type);
  if (!a)
    return null;
  let c = (a.length ? a[a.length - 1] : e).contentMatch;
  for (let l = r; c && l < i; l++)
    c = c.matchType(n.child(l).type);
  return !c || !c.validEnd ? null : a;
}
function z_(t, e, n) {
  let r = ge.empty;
  for (let a = n.length - 1; a >= 0; a--) {
    if (r.size) {
      let s = n[a].type.contentMatch.matchFragment(r);
      if (!s || !s.validEnd)
        throw new RangeError("Wrapper type given to Transform.wrap does not form valid content of its parent wrapper");
    }
    r = ge.from(n[a].type.create(n[a].attrs, r));
  }
  let i = e.start, o = e.end;
  t.step(new ft(i, o, i, o, new _e(r, 0, 0), n.length, !0));
}
function j_(t, e, n, r, i) {
  if (!r.isTextblock)
    throw new RangeError("Type given to setBlockType should be a textblock");
  let o = t.steps.length;
  t.doc.nodesBetween(e, n, (a, s) => {
    let c = typeof i == "function" ? i(a) : i;
    if (a.isTextblock && !a.hasMarkup(r, c) && $_(t.doc, t.mapping.slice(o).map(s), r)) {
      let l = null;
      if (r.schema.linebreakReplacement) {
        let h = r.whitespace == "pre", p = !!r.contentMatch.matchType(r.schema.linebreakReplacement);
        h && !p ? l = !1 : !h && p && (l = !0);
      }
      l === !1 && k0(t, a, s, o), rh(t, t.mapping.slice(o).map(s, 1), r, void 0, l === null);
      let u = t.mapping.slice(o), f = u.map(s, 1), d = u.map(s + a.nodeSize, 1);
      return t.step(new ft(f, d, f + 1, d - 1, new _e(ge.from(r.create(c, null, a.marks)), 0, 0), 1, !0)), l === !0 && U0(t, a, s, o), !1;
    }
  });
}
function U0(t, e, n, r) {
  e.forEach((i, o) => {
    if (i.isText) {
      let a, s = /\r?\n|\r/g;
      for (; a = s.exec(i.text); ) {
        let c = t.mapping.slice(r).map(n + 1 + o + a.index);
        t.replaceWith(c, c + 1, e.type.schema.linebreakReplacement.create());
      }
    }
  });
}
function k0(t, e, n, r) {
  e.forEach((i, o) => {
    if (i.type == i.type.schema.linebreakReplacement) {
      let a = t.mapping.slice(r).map(n + 1 + o);
      t.replaceWith(a, a + 1, e.type.schema.text(`
`));
    }
  });
}
function $_(t, e, n) {
  let r = t.resolve(e), i = r.index();
  return r.parent.canReplaceWith(i, i + 1, n);
}
function V_(t, e, n, r, i) {
  let o = t.doc.nodeAt(e);
  if (!o)
    throw new RangeError("No node at given position");
  n || (n = o.type);
  let a = n.create(r, null, i || o.marks);
  if (o.isLeaf)
    return t.replaceWith(e, e + o.nodeSize, a);
  if (!n.validContent(o.content))
    throw new RangeError("Invalid content for node type " + n.name);
  t.step(new ft(e, e + o.nodeSize, e + 1, e + o.nodeSize - 1, new _e(ge.from(a), 0, 0), 1, !0));
}
function eo(t, e, n = 1, r) {
  let i = t.resolve(e), o = i.depth - n, a = r && r[r.length - 1] || i.parent;
  if (o < 0 || i.parent.type.spec.isolating || !i.parent.canReplace(i.index(), i.parent.childCount) || !a.type.validContent(i.parent.content.cutByIndex(i.index(), i.parent.childCount)))
    return !1;
  for (let l = i.depth - 1, u = n - 2; l > o; l--, u--) {
    let f = i.node(l), d = i.index(l);
    if (f.type.spec.isolating)
      return !1;
    let h = f.content.cutByIndex(d, f.childCount), p = r && r[u + 1];
    p && (h = h.replaceChild(0, p.type.create(p.attrs)));
    let m = r && r[u] || f;
    if (!f.canReplace(d + 1, f.childCount) || !m.type.validContent(h))
      return !1;
  }
  let s = i.indexAfter(o), c = r && r[0];
  return i.node(o).canReplaceWith(s, s, c ? c.type : i.node(o + 1).type);
}
function H_(t, e, n = 1, r) {
  let i = t.doc.resolve(e), o = ge.empty, a = ge.empty;
  for (let s = i.depth, c = i.depth - n, l = n - 1; s > c; s--, l--) {
    o = ge.from(i.node(s).copy(o));
    let u = r && r[l];
    a = ge.from(u ? u.type.create(u.attrs, a) : i.node(s).copy(a));
  }
  t.step(new ct(e, e, new _e(o.append(a), n, n), !0));
}
function Ro(t, e) {
  let n = t.resolve(e), r = n.index();
  return F0(n.nodeBefore, n.nodeAfter) && n.parent.canReplace(r, r + 1);
}
function X_(t, e) {
  e.content.size || t.type.compatibleContent(e.type);
  let n = t.contentMatchAt(t.childCount), { linebreakReplacement: r } = t.type.schema;
  for (let i = 0; i < e.childCount; i++) {
    let o = e.child(i), a = o.type == r ? t.type.schema.nodes.text : o.type;
    if (n = n.matchType(a), !n || !t.type.allowsMarks(o.marks))
      return !1;
  }
  return n.validEnd;
}
function F0(t, e) {
  return !!(t && e && !t.isLeaf && X_(t, e));
}
function O0(t, e, n = -1) {
  let r = t.resolve(e);
  for (let i = r.depth; ; i--) {
    let o, a, s = r.index(i);
    if (i == r.depth ? (o = r.nodeBefore, a = r.nodeAfter) : n > 0 ? (o = r.node(i + 1), s++, a = r.node(i).maybeChild(s)) : (o = r.node(i).maybeChild(s - 1), a = r.node(i + 1)), o && !o.isTextblock && F0(o, a) && r.node(i).canReplace(s, s + 1))
      return e;
    if (i == 0)
      break;
    e = n < 0 ? r.before(i) : r.after(i);
  }
}
function G_(t, e, n) {
  let r = null, { linebreakReplacement: i } = t.doc.type.schema, o = t.doc.resolve(e - n), a = o.node().type;
  if (i && a.inlineContent) {
    let u = a.whitespace == "pre", f = !!a.contentMatch.matchType(i);
    u && !f ? r = !1 : !u && f && (r = !0);
  }
  let s = t.steps.length;
  if (r === !1) {
    let u = t.doc.resolve(e + n);
    k0(t, u.node(), u.before(), s);
  }
  a.inlineContent && rh(t, e + n - 1, a, o.node().contentMatchAt(o.index()), r == null);
  let c = t.mapping.slice(s), l = c.map(e - n);
  if (t.step(new ct(l, c.map(e + n, -1), _e.empty, !0)), r === !0) {
    let u = t.doc.resolve(l);
    U0(t, u.node(), u.before(), t.steps.length);
  }
  return t;
}
function K_(t, e, n) {
  let r = t.resolve(e);
  if (r.parent.canReplaceWith(r.index(), r.index(), n))
    return e;
  if (r.parentOffset == 0)
    for (let i = r.depth - 1; i >= 0; i--) {
      let o = r.index(i);
      if (r.node(i).canReplaceWith(o, o, n))
        return r.before(i + 1);
      if (o > 0)
        return null;
    }
  if (r.parentOffset == r.parent.content.size)
    for (let i = r.depth - 1; i >= 0; i--) {
      let o = r.indexAfter(i);
      if (r.node(i).canReplaceWith(o, o, n))
        return r.after(i + 1);
      if (o < r.node(i).childCount)
        return null;
    }
  return null;
}
function R0(t, e, n) {
  let r = t.resolve(e);
  if (!n.content.size)
    return e;
  let i = n.content;
  for (let o = 0; o < n.openStart; o++)
    i = i.firstChild.content;
  for (let o = 1; o <= (n.openStart == 0 && n.size ? 2 : 1); o++)
    for (let a = r.depth; a >= 0; a--) {
      let s = a == r.depth ? 0 : r.pos <= (r.start(a + 1) + r.end(a + 1)) / 2 ? -1 : 1, c = r.index(a) + (s > 0 ? 1 : 0), l = r.node(a), u = !1;
      if (o == 1)
        u = l.canReplace(c, c, i);
      else {
        let f = l.contentMatchAt(c).findWrapping(i.firstChild.type);
        u = f && l.canReplaceWith(c, c, f[0]);
      }
      if (u)
        return s == 0 ? r.pos : s < 0 ? r.before(a + 1) : r.after(a + 1);
    }
  return null;
}
function js(t, e, n = e, r = _e.empty) {
  if (e == n && !r.size)
    return null;
  let i = t.resolve(e), o = t.resolve(n);
  return N0(i, o, r) ? new ct(e, n, r) : new J_(i, o, r).fit();
}
function N0(t, e, n) {
  return !n.openStart && !n.openEnd && t.start() == e.start() && t.parent.canReplace(t.index(), e.index(), n.content);
}
class J_ {
  constructor(e, n, r) {
    this.$from = e, this.$to = n, this.unplaced = r, this.frontier = [], this.placed = ge.empty;
    for (let i = 0; i <= e.depth; i++) {
      let o = e.node(i);
      this.frontier.push({
        type: o.type,
        match: o.contentMatchAt(e.indexAfter(i))
      });
    }
    for (let i = e.depth; i > 0; i--)
      this.placed = ge.from(e.node(i).copy(this.placed));
  }
  get depth() {
    return this.frontier.length - 1;
  }
  fit() {
    for (; this.unplaced.size; ) {
      let l = this.findFittable();
      l ? this.placeNodes(l) : this.openMore() || this.dropNode();
    }
    let e = this.mustMoveInline(), n = this.placed.size - this.depth - this.$from.depth, r = this.$from, i = this.close(e < 0 ? this.$to : r.doc.resolve(e));
    if (!i)
      return null;
    let o = this.placed, a = r.depth, s = i.depth;
    for (; a && s && o.childCount == 1; )
      o = o.firstChild.content, a--, s--;
    let c = new _e(o, a, s);
    return e > -1 ? new ft(r.pos, e, this.$to.pos, this.$to.end(), c, n) : c.size || r.pos != this.$to.pos ? new ct(r.pos, i.pos, c) : null;
  }
  // Find a position on the start spine of `this.unplaced` that has
  // content that can be moved somewhere on the frontier. Returns two
  // depths, one for the slice and one for the frontier.
  findFittable() {
    let e = this.unplaced.openStart;
    for (let n = this.unplaced.content, r = 0, i = this.unplaced.openEnd; r < e; r++) {
      let o = n.firstChild;
      if (n.childCount > 1 && (i = 0), o.type.spec.isolating && i <= r) {
        e = r;
        break;
      }
      n = o.content;
    }
    for (let n = 1; n <= 2; n++)
      for (let r = n == 1 ? e : this.unplaced.openStart; r >= 0; r--) {
        let i, o = null;
        r ? (o = Rc(this.unplaced.content, r - 1).firstChild, i = o.content) : i = this.unplaced.content;
        let a = i.firstChild;
        for (let s = this.depth; s >= 0; s--) {
          let { type: c, match: l } = this.frontier[s], u, f = null;
          if (n == 1 && (a ? l.matchType(a.type) || (f = l.fillBefore(ge.from(a), !1)) : o && c.compatibleContent(o.type)))
            return { sliceDepth: r, frontierDepth: s, parent: o, inject: f };
          if (n == 2 && a && (u = l.findWrapping(a.type)))
            return { sliceDepth: r, frontierDepth: s, parent: o, wrap: u };
          if (o && l.matchType(o.type))
            break;
        }
      }
  }
  openMore() {
    let { content: e, openStart: n, openEnd: r } = this.unplaced, i = Rc(e, n);
    return !i.childCount || i.firstChild.isLeaf ? !1 : (this.unplaced = new _e(e, n + 1, Math.max(r, i.size + n >= e.size - r ? n + 1 : 0)), !0);
  }
  dropNode() {
    let { content: e, openStart: n, openEnd: r } = this.unplaced, i = Rc(e, n);
    if (i.childCount <= 1 && n > 0) {
      let o = e.size - n <= n + i.size;
      this.unplaced = new _e(Gi(e, n - 1, 1), n - 1, o ? n - 1 : r);
    } else
      this.unplaced = new _e(Gi(e, n, 1), n, r);
  }
  // Move content from the unplaced slice at `sliceDepth` to the
  // frontier node at `frontierDepth`. Close that frontier node when
  // applicable.
  placeNodes({ sliceDepth: e, frontierDepth: n, parent: r, inject: i, wrap: o }) {
    for (; this.depth > n; )
      this.closeFrontierNode();
    if (o)
      for (let m = 0; m < o.length; m++)
        this.openFrontierNode(o[m]);
    let a = this.unplaced, s = r ? r.content : a.content, c = a.openStart - e, l = 0, u = [], { match: f, type: d } = this.frontier[n];
    if (i) {
      for (let m = 0; m < i.childCount; m++)
        u.push(i.child(m));
      f = f.matchFragment(i);
    }
    let h = s.size + e - (a.content.size - a.openEnd);
    for (; l < s.childCount; ) {
      let m = s.child(l), g = f.matchType(m.type);
      if (!g)
        break;
      l++, (l > 1 || c == 0 || m.content.size) && (f = g, u.push(B0(m.mark(d.allowedMarks(m.marks)), l == 1 ? c : 0, l == s.childCount ? h : -1)));
    }
    let p = l == s.childCount;
    p || (h = -1), this.placed = Ki(this.placed, n, ge.from(u)), this.frontier[n].match = f, p && h < 0 && r && r.type == this.frontier[this.depth].type && this.frontier.length > 1 && this.closeFrontierNode();
    for (let m = 0, g = s; m < h; m++) {
      let y = g.lastChild;
      this.frontier.push({ type: y.type, match: y.contentMatchAt(y.childCount) }), g = y.content;
    }
    this.unplaced = p ? e == 0 ? _e.empty : new _e(Gi(a.content, e - 1, 1), e - 1, h < 0 ? a.openEnd : e - 1) : new _e(Gi(a.content, e, l), a.openStart, a.openEnd);
  }
  mustMoveInline() {
    if (!this.$to.parent.isTextblock)
      return -1;
    let e = this.frontier[this.depth], n;
    if (!e.type.isTextblock || !Nc(this.$to, this.$to.depth, e.type, e.match, !1) || this.$to.depth == this.depth && (n = this.findCloseLevel(this.$to)) && n.depth == this.depth)
      return -1;
    let { depth: r } = this.$to, i = this.$to.after(r);
    for (; r > 1 && i == this.$to.end(--r); )
      ++i;
    return i;
  }
  findCloseLevel(e) {
    e: for (let n = Math.min(this.depth, e.depth); n >= 0; n--) {
      let { match: r, type: i } = this.frontier[n], o = n < e.depth && e.end(n + 1) == e.pos + (e.depth - (n + 1)), a = Nc(e, n, i, r, o);
      if (a) {
        for (let s = n - 1; s >= 0; s--) {
          let { match: c, type: l } = this.frontier[s], u = Nc(e, s, l, c, !0);
          if (!u || u.childCount)
            continue e;
        }
        return { depth: n, fit: a, move: o ? e.doc.resolve(e.after(n + 1)) : e };
      }
    }
  }
  close(e) {
    let n = this.findCloseLevel(e);
    if (!n)
      return null;
    for (; this.depth > n.depth; )
      this.closeFrontierNode();
    n.fit.childCount && (this.placed = Ki(this.placed, n.depth, n.fit)), e = n.move;
    for (let r = n.depth + 1; r <= e.depth; r++) {
      let i = e.node(r), o = i.type.contentMatch.fillBefore(i.content, !0, e.index(r));
      this.openFrontierNode(i.type, i.attrs, o);
    }
    return e;
  }
  openFrontierNode(e, n = null, r) {
    let i = this.frontier[this.depth];
    i.match = i.match.matchType(e), this.placed = Ki(this.placed, this.depth, ge.from(e.create(n, r))), this.frontier.push({ type: e, match: e.contentMatch });
  }
  closeFrontierNode() {
    let n = this.frontier.pop().match.fillBefore(ge.empty, !0);
    n.childCount && (this.placed = Ki(this.placed, this.frontier.length, n));
  }
}
function Gi(t, e, n) {
  return e == 0 ? t.cutByIndex(n, t.childCount) : t.replaceChild(0, t.firstChild.copy(Gi(t.firstChild.content, e - 1, n)));
}
function Ki(t, e, n) {
  return e == 0 ? t.append(n) : t.replaceChild(t.childCount - 1, t.lastChild.copy(Ki(t.lastChild.content, e - 1, n)));
}
function Rc(t, e) {
  for (let n = 0; n < e; n++)
    t = t.firstChild.content;
  return t;
}
function B0(t, e, n) {
  if (e <= 0)
    return t;
  let r = t.content;
  return e > 1 && (r = r.replaceChild(0, B0(r.firstChild, e - 1, r.childCount == 1 ? n - 1 : 0))), e > 0 && (r = t.type.contentMatch.fillBefore(r).append(r), n <= 0 && (r = r.append(t.type.contentMatch.matchFragment(r).fillBefore(ge.empty, !0)))), t.copy(r);
}
function Nc(t, e, n, r, i) {
  let o = t.node(e), a = i ? t.indexAfter(e) : t.index(e);
  if (a == o.childCount && !n.compatibleContent(o.type))
    return null;
  let s = r.fillBefore(o.content, !0, a);
  return s && !Z_(n, o.content, a) ? s : null;
}
function Z_(t, e, n) {
  for (let r = n; r < e.childCount; r++)
    if (!t.allowsMarks(e.child(r).marks))
      return !0;
  return !1;
}
function Y_(t) {
  return t.spec.defining || t.spec.definingForContent;
}
function Q_(t, e, n, r) {
  if (!r.size)
    return t.deleteRange(e, n);
  let i = t.doc.resolve(e), o = t.doc.resolve(n);
  if (N0(i, o, r))
    return t.step(new ct(e, n, r));
  let a = M0(i, t.doc.resolve(n));
  a[a.length - 1] == 0 && a.pop();
  let s = -(i.depth + 1);
  a.unshift(s);
  for (let d = i.depth, h = i.pos - 1; d > 0; d--, h--) {
    let p = i.node(d).type.spec;
    if (p.defining || p.definingAsContext || p.isolating)
      break;
    a.indexOf(d) > -1 ? s = d : i.before(d) == h && a.splice(1, 0, -d);
  }
  let c = a.indexOf(s), l = [], u = r.openStart;
  for (let d = r.content, h = 0; ; h++) {
    let p = d.firstChild;
    if (l.push(p), h == r.openStart)
      break;
    d = p.content;
  }
  for (let d = u - 1; d >= 0; d--) {
    let h = l[d], p = Y_(h.type);
    if (p && !h.sameMarkup(i.node(Math.abs(s) - 1)))
      u = d;
    else if (p || !h.type.isTextblock)
      break;
  }
  for (let d = r.openStart; d >= 0; d--) {
    let h = (d + u + 1) % (r.openStart + 1), p = l[h];
    if (p)
      for (let m = 0; m < a.length; m++) {
        let g = a[(m + c) % a.length], y = !0;
        g < 0 && (y = !1, g = -g);
        let b = i.node(g - 1), v = i.index(g - 1);
        if (b.canReplaceWith(v, v, p.type, p.marks))
          return t.replace(i.before(g), y ? o.after(g) : n, new _e(I0(r.content, 0, r.openStart, h), h, r.openEnd));
      }
  }
  let f = t.steps.length;
  for (let d = a.length - 1; d >= 0 && (t.replace(e, n, r), !(t.steps.length > f)); d--) {
    let h = a[d];
    h < 0 || (e = i.before(h), n = o.after(h));
  }
}
function I0(t, e, n, r, i) {
  if (e < n) {
    let o = t.firstChild;
    t = t.replaceChild(0, o.copy(I0(o.content, e + 1, n, r, o)));
  }
  if (e > r) {
    let o = i.contentMatchAt(0), a = o.fillBefore(t).append(t);
    t = a.append(o.matchFragment(a).fillBefore(ge.empty, !0));
  }
  return t;
}
function eT(t, e, n, r) {
  if (!r.isInline && e == n && t.doc.resolve(e).parent.content.size) {
    let i = K_(t.doc, e, r.type);
    i != null && (e = n = i);
  }
  t.replaceRange(e, n, new _e(ge.from(r), 0, 0));
}
function tT(t, e, n) {
  let r = t.doc.resolve(e), i = t.doc.resolve(n), o = M0(r, i);
  for (let a = 0; a < o.length; a++) {
    let s = o[a], c = a == o.length - 1;
    if (c && s == 0 || r.node(s).type.contentMatch.validEnd)
      return t.delete(r.start(s), i.end(s));
    if (s > 0 && (c || r.node(s - 1).canReplace(r.index(s - 1), i.indexAfter(s - 1))))
      return t.delete(r.before(s), i.after(s));
  }
  for (let a = 1; a <= r.depth && a <= i.depth; a++)
    if (e - r.start(a) == r.depth - a && n > r.end(a) && i.end(a) - n != i.depth - a && r.start(a - 1) == i.start(a - 1) && r.node(a - 1).canReplace(r.index(a - 1), i.index(a - 1)))
      return t.delete(r.before(a), n);
  t.delete(e, n);
}
function M0(t, e) {
  let n = [], r = Math.min(t.depth, e.depth);
  for (let i = r; i >= 0; i--) {
    let o = t.start(i);
    if (o < t.pos - (t.depth - i) || e.end(i) > e.pos + (e.depth - i) || t.node(i).type.spec.isolating || e.node(i).type.spec.isolating)
      break;
    (o == e.start(i) || i == t.depth && i == e.depth && t.parent.inlineContent && e.parent.inlineContent && i && e.start(i - 1) == o - 1) && n.push(i);
  }
  return n;
}
class fi extends mt {
  /**
  Construct an attribute step.
  */
  constructor(e, n, r) {
    super(), this.pos = e, this.attr = n, this.value = r;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return tt.fail("No node at attribute step's position");
    let r = /* @__PURE__ */ Object.create(null);
    for (let o in n.attrs)
      r[o] = n.attrs[o];
    r[this.attr] = this.value;
    let i = n.type.create(r, null, n.marks);
    return tt.fromReplace(e, this.pos, this.pos + 1, new _e(ge.from(i), 0, n.isLeaf ? 0 : 1));
  }
  getMap() {
    return Nt.empty;
  }
  invert(e) {
    return new fi(this.pos, this.attr, e.nodeAt(this.pos).attrs[this.attr]);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new fi(n.pos, this.attr, this.value);
  }
  toJSON() {
    return { stepType: "attr", pos: this.pos, attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.pos != "number" || typeof n.attr != "string")
      throw new RangeError("Invalid input for AttrStep.fromJSON");
    return new fi(n.pos, n.attr, n.value);
  }
}
mt.jsonID("attr", fi);
class po extends mt {
  /**
  Construct an attribute step.
  */
  constructor(e, n) {
    super(), this.attr = e, this.value = n;
  }
  apply(e) {
    let n = /* @__PURE__ */ Object.create(null);
    for (let i in e.attrs)
      n[i] = e.attrs[i];
    n[this.attr] = this.value;
    let r = e.type.create(n, e.content, e.marks);
    return tt.ok(r);
  }
  getMap() {
    return Nt.empty;
  }
  invert(e) {
    return new po(this.attr, e.attrs[this.attr]);
  }
  map(e) {
    return this;
  }
  toJSON() {
    return { stepType: "docAttr", attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.attr != "string")
      throw new RangeError("Invalid input for DocAttrStep.fromJSON");
    return new po(n.attr, n.value);
  }
}
mt.jsonID("docAttr", po);
let bi = class extends Error {
};
bi = function t(e) {
  let n = Error.call(this, e);
  return n.__proto__ = t.prototype, n;
};
bi.prototype = Object.create(Error.prototype);
bi.prototype.constructor = bi;
bi.prototype.name = "TransformError";
class W0 {
  /**
  Create a transform that starts with the given document.
  */
  constructor(e) {
    this.doc = e, this.steps = [], this.docs = [], this.mapping = new ui();
  }
  /**
  The starting document.
  */
  get before() {
    return this.docs.length ? this.docs[0] : this.doc;
  }
  /**
  Apply a new step in this transform, saving the result. Throws an
  error when the step fails.
  */
  step(e) {
    let n = this.maybeStep(e);
    if (n.failed)
      throw new bi(n.failed);
    return this;
  }
  /**
  Try to apply a step in this transformation, ignoring it if it
  fails. Returns the step result.
  */
  maybeStep(e) {
    let n = e.apply(this.doc);
    return n.failed || this.addStep(e, n.doc), n;
  }
  /**
  True when the document has been changed (when there are any
  steps).
  */
  get docChanged() {
    return this.steps.length > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    this.docs.push(this.doc), this.steps.push(e), this.mapping.appendMap(e.getMap()), this.doc = n;
  }
  /**
  Replace the part of the document between `from` and `to` with the
  given `slice`.
  */
  replace(e, n = e, r = _e.empty) {
    let i = js(this.doc, e, n, r);
    return i && this.step(i), this;
  }
  /**
  Replace the given range with the given content, which may be a
  fragment, node, or array of nodes.
  */
  replaceWith(e, n, r) {
    return this.replace(e, n, new _e(ge.from(r), 0, 0));
  }
  /**
  Delete the content between the given positions.
  */
  delete(e, n) {
    return this.replace(e, n, _e.empty);
  }
  /**
  Insert the given content at the given position.
  */
  insert(e, n) {
    return this.replaceWith(e, e, n);
  }
  /**
  Replace a range of the document with a given slice, using
  `from`, `to`, and the slice's
  [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather
  than fixed start and end points. This method may grow the
  replaced area or close open nodes in the slice in order to get a
  fit that is more in line with WYSIWYG expectations, by dropping
  fully covered parent nodes of the replaced region when they are
  marked [non-defining as
  context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an
  open parent node from the slice that _is_ marked as [defining
  its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).
  
  This is the method, for example, to handle paste. The similar
  [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more
  primitive tool which will _not_ move the start and end of its given
  range, and is useful in situations where you need more precise
  control over what happens.
  */
  replaceRange(e, n, r) {
    return Q_(this, e, n, r), this;
  }
  /**
  Replace the given range with a node, but use `from` and `to` as
  hints, rather than precise positions. When from and to are the same
  and are at the start or end of a parent node in which the given
  node doesn't fit, this method may _move_ them out towards a parent
  that does allow the given node to be placed. When the given range
  completely covers a parent node, this method may completely replace
  that parent node.
  */
  replaceRangeWith(e, n, r) {
    return eT(this, e, n, r), this;
  }
  /**
  Delete the given range, expanding it to cover fully covered
  parent nodes until a valid replace is found.
  */
  deleteRange(e, n) {
    return tT(this, e, n), this;
  }
  /**
  Split the content in the given range off from its parent, if there
  is sibling content before or after it, and move it up the tree to
  the depth specified by `target`. You'll probably want to use
  [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make
  sure the lift is valid.
  */
  lift(e, n) {
    return L_(this, e, n), this;
  }
  /**
  Join the blocks around the given position. If depth is 2, their
  last and first siblings are also joined, and so on.
  */
  join(e, n = 1) {
    return G_(this, e, n), this;
  }
  /**
  Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.
  The wrappers are assumed to be valid in this position, and should
  probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).
  */
  wrap(e, n) {
    return z_(this, e, n), this;
  }
  /**
  Set the type of all textblocks (partly) between `from` and `to` to
  the given node type with the given attributes.
  */
  setBlockType(e, n = e, r, i = null) {
    return j_(this, e, n, r, i), this;
  }
  /**
  Change the type, attributes, and/or marks of the node at `pos`.
  When `type` isn't given, the existing node type is preserved,
  */
  setNodeMarkup(e, n, r = null, i) {
    return V_(this, e, n, r, i), this;
  }
  /**
  Set a single attribute on a given node to a new value.
  The `pos` addresses the document content. Use `setDocAttribute`
  to set attributes on the document itself.
  */
  setNodeAttribute(e, n, r) {
    return this.step(new fi(e, n, r)), this;
  }
  /**
  Set a single attribute on the document to a new value.
  */
  setDocAttribute(e, n) {
    return this.step(new po(e, n)), this;
  }
  /**
  Add a mark to the node at position `pos`.
  */
  addNodeMark(e, n) {
    return this.step(new rr(e, n)), this;
  }
  /**
  Remove a mark (or a mark of the given type) from the node at
  position `pos`.
  */
  removeNodeMark(e, n) {
    if (!(n instanceof qe)) {
      let r = this.doc.nodeAt(e);
      if (!r)
        throw new RangeError("No node at position " + e);
      if (n = n.isInSet(r.marks), !n)
        return this;
    }
    return this.step(new yi(e, n)), this;
  }
  /**
  Split the node at the given position, and optionally, if `depth` is
  greater than one, any number of nodes above that. By default, the
  parts split off will inherit the node type of the original node.
  This can be changed by passing an array of types and attributes to
  use after the split.
  */
  split(e, n = 1, r) {
    return H_(this, e, n, r), this;
  }
  /**
  Add the given mark to the inline content between `from` and `to`.
  */
  addMark(e, n, r) {
    return I_(this, e, n, r), this;
  }
  /**
  Remove marks from inline nodes between `from` and `to`. When
  `mark` is a single mark, remove precisely that mark. When it is
  a mark type, remove all marks of that type. When it is null,
  remove all marks of any type.
  */
  removeMark(e, n, r) {
    return M_(this, e, n, r), this;
  }
  /**
  Removes all marks and nodes from the content of the node at
  `pos` that don't match the given new parent node type. Accepts
  an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as
  third argument.
  */
  clearIncompatible(e, n, r) {
    return rh(this, e, n, r), this;
  }
}
const Bc = /* @__PURE__ */ Object.create(null);
class Oe {
  /**
  Initialize a selection with the head and anchor and ranges. If no
  ranges are given, constructs a single range across `$anchor` and
  `$head`.
  */
  constructor(e, n, r) {
    this.$anchor = e, this.$head = n, this.ranges = r || [new L0(e.min(n), e.max(n))];
  }
  /**
  The selection's anchor, as an unresolved position.
  */
  get anchor() {
    return this.$anchor.pos;
  }
  /**
  The selection's head.
  */
  get head() {
    return this.$head.pos;
  }
  /**
  The lower bound of the selection's main range.
  */
  get from() {
    return this.$from.pos;
  }
  /**
  The upper bound of the selection's main range.
  */
  get to() {
    return this.$to.pos;
  }
  /**
  The resolved lower  bound of the selection's main range.
  */
  get $from() {
    return this.ranges[0].$from;
  }
  /**
  The resolved upper bound of the selection's main range.
  */
  get $to() {
    return this.ranges[0].$to;
  }
  /**
  Indicates whether the selection contains any content.
  */
  get empty() {
    let e = this.ranges;
    for (let n = 0; n < e.length; n++)
      if (e[n].$from.pos != e[n].$to.pos)
        return !1;
    return !0;
  }
  /**
  Get the content of this selection as a slice.
  */
  content() {
    return this.$from.doc.slice(this.from, this.to, !0);
  }
  /**
  Replace the selection with a slice or, if no slice is given,
  delete the selection. Will append to the given transaction.
  */
  replace(e, n = _e.empty) {
    let r = n.content.lastChild, i = null;
    for (let s = 0; s < n.openEnd; s++)
      i = r, r = r.lastChild;
    let o = e.steps.length, a = this.ranges;
    for (let s = 0; s < a.length; s++) {
      let { $from: c, $to: l } = a[s], u = e.mapping.slice(o);
      e.replaceRange(u.map(c.pos), u.map(l.pos), s ? _e.empty : n), s == 0 && sg(e, o, (r ? r.isInline : i && i.isTextblock) ? -1 : 1);
    }
  }
  /**
  Replace the selection with the given node, appending the changes
  to the given transaction.
  */
  replaceWith(e, n) {
    let r = e.steps.length, i = this.ranges;
    for (let o = 0; o < i.length; o++) {
      let { $from: a, $to: s } = i[o], c = e.mapping.slice(r), l = c.map(a.pos), u = c.map(s.pos);
      o ? e.deleteRange(l, u) : (e.replaceRangeWith(l, u, n), sg(e, r, n.isInline ? -1 : 1));
    }
  }
  /**
  Find a valid cursor or leaf node selection starting at the given
  position and searching back if `dir` is negative, and forward if
  positive. When `textOnly` is true, only consider cursor
  selections. Will return null when no valid selection position is
  found.
  */
  static findFrom(e, n, r = !1) {
    let i = e.parent.inlineContent ? new Be(e) : si(e.node(0), e.parent, e.pos, e.index(), n, r);
    if (i)
      return i;
    for (let o = e.depth - 1; o >= 0; o--) {
      let a = n < 0 ? si(e.node(0), e.node(o), e.before(o + 1), e.index(o), n, r) : si(e.node(0), e.node(o), e.after(o + 1), e.index(o) + 1, n, r);
      if (a)
        return a;
    }
    return null;
  }
  /**
  Find a valid cursor or leaf node selection near the given
  position. Searches forward first by default, but if `bias` is
  negative, it will search backwards first.
  */
  static near(e, n = 1) {
    return this.findFrom(e, n) || this.findFrom(e, -n) || new Xt(e.node(0));
  }
  /**
  Find the cursor or leaf node selection closest to the start of
  the given document. Will return an
  [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position
  exists.
  */
  static atStart(e) {
    return si(e, e, 0, 0, 1) || new Xt(e);
  }
  /**
  Find the cursor or leaf node selection closest to the end of the
  given document.
  */
  static atEnd(e) {
    return si(e, e, e.content.size, e.childCount, -1) || new Xt(e);
  }
  /**
  Deserialize the JSON representation of a selection. Must be
  implemented for custom classes (as a static class method).
  */
  static fromJSON(e, n) {
    if (!n || !n.type)
      throw new RangeError("Invalid input for Selection.fromJSON");
    let r = Bc[n.type];
    if (!r)
      throw new RangeError(`No selection type ${n.type} defined`);
    return r.fromJSON(e, n);
  }
  /**
  To be able to deserialize selections from JSON, custom selection
  classes must register themselves with an ID string, so that they
  can be disambiguated. Try to pick something that's unlikely to
  clash with classes from other modules.
  */
  static jsonID(e, n) {
    if (e in Bc)
      throw new RangeError("Duplicate use of selection JSON ID " + e);
    return Bc[e] = n, n.prototype.jsonID = e, n;
  }
  /**
  Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,
  which is a value that can be mapped without having access to a
  current document, and later resolved to a real selection for a
  given document again. (This is used mostly by the history to
  track and restore old selections.) The default implementation of
  this method just converts the selection to a text selection and
  returns the bookmark for that.
  */
  getBookmark() {
    return Be.between(this.$anchor, this.$head).getBookmark();
  }
}
Oe.prototype.visible = !0;
class L0 {
  /**
  Create a range.
  */
  constructor(e, n) {
    this.$from = e, this.$to = n;
  }
}
let og = !1;
function ag(t) {
  !og && !t.parent.inlineContent && (og = !0, console.warn("TextSelection endpoint not pointing into a node with inline content (" + t.parent.type.name + ")"));
}
class Be extends Oe {
  /**
  Construct a text selection between the given points.
  */
  constructor(e, n = e) {
    ag(e), ag(n), super(e, n);
  }
  /**
  Returns a resolved position if this is a cursor selection (an
  empty text selection), and null otherwise.
  */
  get $cursor() {
    return this.$anchor.pos == this.$head.pos ? this.$head : null;
  }
  map(e, n) {
    let r = e.resolve(n.map(this.head));
    if (!r.parent.inlineContent)
      return Oe.near(r);
    let i = e.resolve(n.map(this.anchor));
    return new Be(i.parent.inlineContent ? i : r, r);
  }
  replace(e, n = _e.empty) {
    if (super.replace(e, n), n == _e.empty) {
      let r = this.$from.marksAcross(this.$to);
      r && e.ensureMarks(r);
    }
  }
  eq(e) {
    return e instanceof Be && e.anchor == this.anchor && e.head == this.head;
  }
  getBookmark() {
    return new $s(this.anchor, this.head);
  }
  toJSON() {
    return { type: "text", anchor: this.anchor, head: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number" || typeof n.head != "number")
      throw new RangeError("Invalid input for TextSelection.fromJSON");
    return new Be(e.resolve(n.anchor), e.resolve(n.head));
  }
  /**
  Create a text selection from non-resolved positions.
  */
  static create(e, n, r = n) {
    let i = e.resolve(n);
    return new this(i, r == n ? i : e.resolve(r));
  }
  /**
  Return a text selection that spans the given positions or, if
  they aren't text positions, find a text selection near them.
  `bias` determines whether the method searches forward (default)
  or backwards (negative number) first. Will fall back to calling
  [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document
  doesn't contain a valid text position.
  */
  static between(e, n, r) {
    let i = e.pos - n.pos;
    if ((!r || i) && (r = i >= 0 ? 1 : -1), !n.parent.inlineContent) {
      let o = Oe.findFrom(n, r, !0) || Oe.findFrom(n, -r, !0);
      if (o)
        n = o.$head;
      else
        return Oe.near(n, r);
    }
    return e.parent.inlineContent || (i == 0 ? e = n : (e = (Oe.findFrom(e, -r, !0) || Oe.findFrom(e, r, !0)).$anchor, e.pos < n.pos != i < 0 && (e = n))), new Be(e, n);
  }
}
Oe.jsonID("text", Be);
class $s {
  constructor(e, n) {
    this.anchor = e, this.head = n;
  }
  map(e) {
    return new $s(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    return Be.between(e.resolve(this.anchor), e.resolve(this.head));
  }
}
class Ue extends Oe {
  /**
  Create a node selection. Does not verify the validity of its
  argument.
  */
  constructor(e) {
    let n = e.nodeAfter, r = e.node(0).resolve(e.pos + n.nodeSize);
    super(e, r), this.node = n;
  }
  map(e, n) {
    let { deleted: r, pos: i } = n.mapResult(this.anchor), o = e.resolve(i);
    return r ? Oe.near(o) : new Ue(o);
  }
  content() {
    return new _e(ge.from(this.node), 0, 0);
  }
  eq(e) {
    return e instanceof Ue && e.anchor == this.anchor;
  }
  toJSON() {
    return { type: "node", anchor: this.anchor };
  }
  getBookmark() {
    return new ih(this.anchor);
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number")
      throw new RangeError("Invalid input for NodeSelection.fromJSON");
    return new Ue(e.resolve(n.anchor));
  }
  /**
  Create a node selection from non-resolved positions.
  */
  static create(e, n) {
    return new Ue(e.resolve(n));
  }
  /**
  Determines whether the given node may be selected as a node
  selection.
  */
  static isSelectable(e) {
    return !e.isText && e.type.spec.selectable !== !1;
  }
}
Ue.prototype.visible = !1;
Oe.jsonID("node", Ue);
class ih {
  constructor(e) {
    this.anchor = e;
  }
  map(e) {
    let { deleted: n, pos: r } = e.mapResult(this.anchor);
    return n ? new $s(r, r) : new ih(r);
  }
  resolve(e) {
    let n = e.resolve(this.anchor), r = n.nodeAfter;
    return r && Ue.isSelectable(r) ? new Ue(n) : Oe.near(n);
  }
}
class Xt extends Oe {
  /**
  Create an all-selection over the given document.
  */
  constructor(e) {
    super(e.resolve(0), e.resolve(e.content.size));
  }
  replace(e, n = _e.empty) {
    if (n == _e.empty) {
      e.delete(0, e.doc.content.size);
      let r = Oe.atStart(e.doc);
      r.eq(e.selection) || e.setSelection(r);
    } else
      super.replace(e, n);
  }
  toJSON() {
    return { type: "all" };
  }
  /**
  @internal
  */
  static fromJSON(e) {
    return new Xt(e);
  }
  map(e) {
    return new Xt(e);
  }
  eq(e) {
    return e instanceof Xt;
  }
  getBookmark() {
    return nT;
  }
}
Oe.jsonID("all", Xt);
const nT = {
  map() {
    return this;
  },
  resolve(t) {
    return new Xt(t);
  }
};
function si(t, e, n, r, i, o = !1) {
  if (e.inlineContent)
    return Be.create(t, n);
  for (let a = r - (i > 0 ? 0 : 1); i > 0 ? a < e.childCount : a >= 0; a += i) {
    let s = e.child(a);
    if (s.isAtom) {
      if (!o && Ue.isSelectable(s))
        return Ue.create(t, n - (i < 0 ? s.nodeSize : 0));
    } else {
      let c = si(t, s, n + i, i < 0 ? s.childCount : 0, i, o);
      if (c)
        return c;
    }
    n += s.nodeSize * i;
  }
  return null;
}
function sg(t, e, n) {
  let r = t.steps.length - 1;
  if (r < e)
    return;
  let i = t.steps[r];
  if (!(i instanceof ct || i instanceof ft))
    return;
  let o = t.mapping.maps[r], a;
  o.forEach((s, c, l, u) => {
    a == null && (a = u);
  }), t.setSelection(Oe.near(t.doc.resolve(a), n));
}
const cg = 1, lg = 2, ug = 4;
class rT extends W0 {
  /**
  @internal
  */
  constructor(e) {
    super(e.doc), this.curSelectionFor = 0, this.updated = 0, this.meta = /* @__PURE__ */ Object.create(null), this.time = Date.now(), this.curSelection = e.selection, this.storedMarks = e.storedMarks;
  }
  /**
  The transaction's current selection. This defaults to the editor
  selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the
  transaction, but can be overwritten with
  [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).
  */
  get selection() {
    return this.curSelectionFor < this.steps.length && (this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor)), this.curSelectionFor = this.steps.length), this.curSelection;
  }
  /**
  Update the transaction's current selection. Will determine the
  selection that the editor gets when the transaction is applied.
  */
  setSelection(e) {
    if (e.$from.doc != this.doc)
      throw new RangeError("Selection passed to setSelection must point at the current document");
    return this.curSelection = e, this.curSelectionFor = this.steps.length, this.updated = (this.updated | cg) & -3, this.storedMarks = null, this;
  }
  /**
  Whether the selection was explicitly updated by this transaction.
  */
  get selectionSet() {
    return (this.updated & cg) > 0;
  }
  /**
  Set the current stored marks.
  */
  setStoredMarks(e) {
    return this.storedMarks = e, this.updated |= lg, this;
  }
  /**
  Make sure the current stored marks or, if that is null, the marks
  at the selection, match the given set of marks. Does nothing if
  this is already the case.
  */
  ensureMarks(e) {
    return qe.sameSet(this.storedMarks || this.selection.$from.marks(), e) || this.setStoredMarks(e), this;
  }
  /**
  Add a mark to the set of stored marks.
  */
  addStoredMark(e) {
    return this.ensureMarks(e.addToSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Remove a mark or mark type from the set of stored marks.
  */
  removeStoredMark(e) {
    return this.ensureMarks(e.removeFromSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Whether the stored marks were explicitly set for this transaction.
  */
  get storedMarksSet() {
    return (this.updated & lg) > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    super.addStep(e, n), this.updated = this.updated & -3, this.storedMarks = null;
  }
  /**
  Update the timestamp for the transaction.
  */
  setTime(e) {
    return this.time = e, this;
  }
  /**
  Replace the current selection with the given slice.
  */
  replaceSelection(e) {
    return this.selection.replace(this, e), this;
  }
  /**
  Replace the selection with the given node. When `inheritMarks` is
  true and the content is inline, it inherits the marks from the
  place where it is inserted.
  */
  replaceSelectionWith(e, n = !0) {
    let r = this.selection;
    return n && (e = e.mark(this.storedMarks || (r.empty ? r.$from.marks() : r.$from.marksAcross(r.$to) || qe.none))), r.replaceWith(this, e), this;
  }
  /**
  Delete the selection.
  */
  deleteSelection() {
    return this.selection.replace(this), this;
  }
  /**
  Replace the given range, or the selection if no range is given,
  with a text node containing the given string.
  */
  insertText(e, n, r) {
    let i = this.doc.type.schema;
    if (n == null)
      return e ? this.replaceSelectionWith(i.text(e), !0) : this.deleteSelection();
    {
      if (r == null && (r = n), r = r ?? n, !e)
        return this.deleteRange(n, r);
      let o = this.storedMarks;
      if (!o) {
        let a = this.doc.resolve(n);
        o = r == n ? a.marks() : a.marksAcross(this.doc.resolve(r));
      }
      return this.replaceRangeWith(n, r, i.text(e, o)), this.selection.empty || this.setSelection(Oe.near(this.selection.$to)), this;
    }
  }
  /**
  Store a metadata property in this transaction, keyed either by
  name or by plugin.
  */
  setMeta(e, n) {
    return this.meta[typeof e == "string" ? e : e.key] = n, this;
  }
  /**
  Retrieve a metadata property for a given name or plugin.
  */
  getMeta(e) {
    return this.meta[typeof e == "string" ? e : e.key];
  }
  /**
  Returns true if this transaction doesn't contain any metadata,
  and can thus safely be extended.
  */
  get isGeneric() {
    for (let e in this.meta)
      return !1;
    return !0;
  }
  /**
  Indicate that the editor should scroll the selection into view
  when updated to the state produced by this transaction.
  */
  scrollIntoView() {
    return this.updated |= ug, this;
  }
  /**
  True when this transaction has had `scrollIntoView` called on it.
  */
  get scrolledIntoView() {
    return (this.updated & ug) > 0;
  }
}
function fg(t, e) {
  return !e || !t ? t : t.bind(e);
}
class Ji {
  constructor(e, n, r) {
    this.name = e, this.init = fg(n.init, r), this.apply = fg(n.apply, r);
  }
}
const iT = [
  new Ji("doc", {
    init(t) {
      return t.doc || t.schema.topNodeType.createAndFill();
    },
    apply(t) {
      return t.doc;
    }
  }),
  new Ji("selection", {
    init(t, e) {
      return t.selection || Oe.atStart(e.doc);
    },
    apply(t) {
      return t.selection;
    }
  }),
  new Ji("storedMarks", {
    init(t) {
      return t.storedMarks || null;
    },
    apply(t, e, n, r) {
      return r.selection.$cursor ? t.storedMarks : null;
    }
  }),
  new Ji("scrollToSelection", {
    init() {
      return 0;
    },
    apply(t, e) {
      return t.scrolledIntoView ? e + 1 : e;
    }
  })
];
class Ic {
  constructor(e, n) {
    this.schema = e, this.plugins = [], this.pluginsByKey = /* @__PURE__ */ Object.create(null), this.fields = iT.slice(), n && n.forEach((r) => {
      if (this.pluginsByKey[r.key])
        throw new RangeError("Adding different instances of a keyed plugin (" + r.key + ")");
      this.plugins.push(r), this.pluginsByKey[r.key] = r, r.spec.state && this.fields.push(new Ji(r.key, r.spec.state, r));
    });
  }
}
class Zi {
  /**
  @internal
  */
  constructor(e) {
    this.config = e;
  }
  /**
  The schema of the state's document.
  */
  get schema() {
    return this.config.schema;
  }
  /**
  The plugins that are active in this state.
  */
  get plugins() {
    return this.config.plugins;
  }
  /**
  Apply the given transaction to produce a new state.
  */
  apply(e) {
    return this.applyTransaction(e).state;
  }
  /**
  @internal
  */
  filterTransaction(e, n = -1) {
    for (let r = 0; r < this.config.plugins.length; r++)
      if (r != n) {
        let i = this.config.plugins[r];
        if (i.spec.filterTransaction && !i.spec.filterTransaction.call(i, e, this))
          return !1;
      }
    return !0;
  }
  /**
  Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that
  returns the precise transactions that were applied (which might
  be influenced by the [transaction
  hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of
  plugins) along with the new state.
  */
  applyTransaction(e) {
    if (!this.filterTransaction(e))
      return { state: this, transactions: [] };
    let n = [e], r = this.applyInner(e), i = null;
    for (; ; ) {
      let o = !1;
      for (let a = 0; a < this.config.plugins.length; a++) {
        let s = this.config.plugins[a];
        if (s.spec.appendTransaction) {
          let c = i ? i[a].n : 0, l = i ? i[a].state : this, u = c < n.length && s.spec.appendTransaction.call(s, c ? n.slice(c) : n, l, r);
          if (u && r.filterTransaction(u, a)) {
            if (u.setMeta("appendedTransaction", e), !i) {
              i = [];
              for (let f = 0; f < this.config.plugins.length; f++)
                i.push(f < a ? { state: r, n: n.length } : { state: this, n: 0 });
            }
            n.push(u), r = r.applyInner(u), o = !0;
          }
          i && (i[a] = { state: r, n: n.length });
        }
      }
      if (!o)
        return { state: r, transactions: n };
    }
  }
  /**
  @internal
  */
  applyInner(e) {
    if (!e.before.eq(this.doc))
      throw new RangeError("Applying a mismatched transaction");
    let n = new Zi(this.config), r = this.config.fields;
    for (let i = 0; i < r.length; i++) {
      let o = r[i];
      n[o.name] = o.apply(e, this[o.name], this, n);
    }
    return n;
  }
  /**
  Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.
  */
  get tr() {
    return new rT(this);
  }
  /**
  Create a new state.
  */
  static create(e) {
    let n = new Ic(e.doc ? e.doc.type.schema : e.schema, e.plugins), r = new Zi(n);
    for (let i = 0; i < n.fields.length; i++)
      r[n.fields[i].name] = n.fields[i].init(e, r);
    return r;
  }
  /**
  Create a new state based on this one, but with an adjusted set
  of active plugins. State fields that exist in both sets of
  plugins are kept unchanged. Those that no longer exist are
  dropped, and those that are new are initialized using their
  [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new
  configuration object..
  */
  reconfigure(e) {
    let n = new Ic(this.schema, e.plugins), r = n.fields, i = new Zi(n);
    for (let o = 0; o < r.length; o++) {
      let a = r[o].name;
      i[a] = this.hasOwnProperty(a) ? this[a] : r[o].init(e, i);
    }
    return i;
  }
  /**
  Serialize this state to JSON. If you want to serialize the state
  of plugins, pass an object mapping property names to use in the
  resulting JSON object to plugin objects. The argument may also be
  a string or number, in which case it is ignored, to support the
  way `JSON.stringify` calls `toString` methods.
  */
  toJSON(e) {
    let n = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };
    if (this.storedMarks && (n.storedMarks = this.storedMarks.map((r) => r.toJSON())), e && typeof e == "object")
      for (let r in e) {
        if (r == "doc" || r == "selection")
          throw new RangeError("The JSON fields `doc` and `selection` are reserved");
        let i = e[r], o = i.spec.state;
        o && o.toJSON && (n[r] = o.toJSON.call(i, this[i.key]));
      }
    return n;
  }
  /**
  Deserialize a JSON representation of a state. `config` should
  have at least a `schema` field, and should contain array of
  plugins to initialize the state with. `pluginFields` can be used
  to deserialize the state of plugins, by associating plugin
  instances with the property names they use in the JSON object.
  */
  static fromJSON(e, n, r) {
    if (!n)
      throw new RangeError("Invalid input for EditorState.fromJSON");
    if (!e.schema)
      throw new RangeError("Required config field 'schema' missing");
    let i = new Ic(e.schema, e.plugins), o = new Zi(i);
    return i.fields.forEach((a) => {
      if (a.name == "doc")
        o.doc = hn.fromJSON(e.schema, n.doc);
      else if (a.name == "selection")
        o.selection = Oe.fromJSON(o.doc, n.selection);
      else if (a.name == "storedMarks")
        n.storedMarks && (o.storedMarks = n.storedMarks.map(e.schema.markFromJSON));
      else {
        if (r)
          for (let s in r) {
            let c = r[s], l = c.spec.state;
            if (c.key == a.name && l && l.fromJSON && Object.prototype.hasOwnProperty.call(n, s)) {
              o[a.name] = l.fromJSON.call(c, e, n[s], o);
              return;
            }
          }
        o[a.name] = a.init(e, o);
      }
    }), o;
  }
}
function P0(t, e, n) {
  for (let r in t) {
    let i = t[r];
    i instanceof Function ? i = i.bind(e) : r == "handleDOMEvents" && (i = P0(i, e, {})), n[r] = i;
  }
  return n;
}
class Ei {
  /**
  Create a plugin.
  */
  constructor(e) {
    this.spec = e, this.props = {}, e.props && P0(e.props, this, this.props), this.key = e.key ? e.key.key : q0("plugin");
  }
  /**
  Extract the plugin's state field from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const Mc = /* @__PURE__ */ Object.create(null);
function q0(t) {
  return t in Mc ? t + "$" + ++Mc[t] : (Mc[t] = 0, t + "$");
}
class No {
  /**
  Create a plugin key.
  */
  constructor(e = "key") {
    this.key = q0(e);
  }
  /**
  Get the active plugin with this key, if any, from an editor
  state.
  */
  get(e) {
    return e.config.pluginsByKey[this.key];
  }
  /**
  Get the plugin's state from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const lt = function(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}, go = function(t) {
  let e = t.assignedSlot || t.parentNode;
  return e && e.nodeType == 11 ? e.host : e;
};
let ud = null;
const kn = function(t, e, n) {
  let r = ud || (ud = document.createRange());
  return r.setEnd(t, n ?? t.nodeValue.length), r.setStart(t, e || 0), r;
}, oT = function() {
  ud = null;
}, Wr = function(t, e, n, r) {
  return n && (dg(t, e, n, r, -1) || dg(t, e, n, r, 1));
}, aT = /^(img|br|input|textarea|hr)$/i;
function dg(t, e, n, r, i) {
  for (; ; ) {
    if (t == n && e == r)
      return !0;
    if (e == (i < 0 ? 0 : Vt(t))) {
      let o = t.parentNode;
      if (!o || o.nodeType != 1 || Bo(t) || aT.test(t.nodeName) || t.contentEditable == "false")
        return !1;
      e = lt(t) + (i < 0 ? 0 : 1), t = o;
    } else if (t.nodeType == 1) {
      if (t = t.childNodes[e + (i < 0 ? -1 : 0)], t.contentEditable == "false")
        return !1;
      e = i < 0 ? Vt(t) : 0;
    } else
      return !1;
  }
}
function Vt(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function sT(t, e) {
  for (; ; ) {
    if (t.nodeType == 3 && e)
      return t;
    if (t.nodeType == 1 && e > 0) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[e - 1], e = Vt(t);
    } else if (t.parentNode && !Bo(t))
      e = lt(t), t = t.parentNode;
    else
      return null;
  }
}
function cT(t, e) {
  for (; ; ) {
    if (t.nodeType == 3 && e < t.nodeValue.length)
      return t;
    if (t.nodeType == 1 && e < t.childNodes.length) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[e], e = 0;
    } else if (t.parentNode && !Bo(t))
      e = lt(t) + 1, t = t.parentNode;
    else
      return null;
  }
}
function lT(t, e, n) {
  for (let r = e == 0, i = e == Vt(t); r || i; ) {
    if (t == n)
      return !0;
    let o = lt(t);
    if (t = t.parentNode, !t)
      return !1;
    r = r && o == 0, i = i && o == Vt(t);
  }
}
function Bo(t) {
  let e;
  for (let n = t; n && !(e = n.pmViewDesc); n = n.parentNode)
    ;
  return e && e.node && e.node.isBlock && (e.dom == t || e.contentDOM == t);
}
const Vs = function(t) {
  return t.focusNode && Wr(t.focusNode, t.focusOffset, t.anchorNode, t.anchorOffset);
};
function Sr(t, e) {
  let n = document.createEvent("Event");
  return n.initEvent("keydown", !0, !0), n.keyCode = t, n.key = n.code = e, n;
}
function uT(t) {
  let e = t.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
function fT(t, e, n) {
  if (t.caretPositionFromPoint)
    try {
      let r = t.caretPositionFromPoint(e, n);
      if (r)
        return { node: r.offsetNode, offset: Math.min(Vt(r.offsetNode), r.offset) };
    } catch {
    }
  if (t.caretRangeFromPoint) {
    let r = t.caretRangeFromPoint(e, n);
    if (r)
      return { node: r.startContainer, offset: Math.min(Vt(r.startContainer), r.startOffset) };
  }
}
const gn = typeof navigator < "u" ? navigator : null, hg = typeof document < "u" ? document : null, pr = gn && gn.userAgent || "", fd = /Edge\/(\d+)/.exec(pr), z0 = /MSIE \d/.exec(pr), dd = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(pr), At = !!(z0 || dd || fd), ar = z0 ? document.documentMode : dd ? +dd[1] : fd ? +fd[1] : 0, rn = !At && /gecko\/(\d+)/i.test(pr);
rn && +(/Firefox\/(\d+)/.exec(pr) || [0, 0])[1];
const hd = !At && /Chrome\/(\d+)/.exec(pr), ht = !!hd, j0 = hd ? +hd[1] : 0, xt = !At && !!gn && /Apple Computer/.test(gn.vendor), vi = xt && (/Mobile\/\w+/.test(pr) || !!gn && gn.maxTouchPoints > 2), $t = vi || (gn ? /Mac/.test(gn.platform) : !1), dT = gn ? /Win/.test(gn.platform) : !1, On = /Android \d/.test(pr), Io = !!hg && "webkitFontSmoothing" in hg.documentElement.style, hT = Io ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;
function pT(t) {
  let e = t.defaultView && t.defaultView.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: t.documentElement.clientWidth,
    top: 0,
    bottom: t.documentElement.clientHeight
  };
}
function wn(t, e) {
  return typeof t == "number" ? t : t[e];
}
function gT(t) {
  let e = t.getBoundingClientRect(), n = e.width / t.offsetWidth || 1, r = e.height / t.offsetHeight || 1;
  return {
    left: e.left,
    right: e.left + t.clientWidth * n,
    top: e.top,
    bottom: e.top + t.clientHeight * r
  };
}
function pg(t, e, n) {
  let r = t.someProp("scrollThreshold") || 0, i = t.someProp("scrollMargin") || 5, o = t.dom.ownerDocument;
  for (let a = n || t.dom; a; a = go(a)) {
    if (a.nodeType != 1)
      continue;
    let s = a, c = s == o.body, l = c ? pT(o) : gT(s), u = 0, f = 0;
    if (e.top < l.top + wn(r, "top") ? f = -(l.top - e.top + wn(i, "top")) : e.bottom > l.bottom - wn(r, "bottom") && (f = e.bottom - e.top > l.bottom - l.top ? e.top + wn(i, "top") - l.top : e.bottom - l.bottom + wn(i, "bottom")), e.left < l.left + wn(r, "left") ? u = -(l.left - e.left + wn(i, "left")) : e.right > l.right - wn(r, "right") && (u = e.right - l.right + wn(i, "right")), u || f)
      if (c)
        o.defaultView.scrollBy(u, f);
      else {
        let d = s.scrollLeft, h = s.scrollTop;
        f && (s.scrollTop += f), u && (s.scrollLeft += u);
        let p = s.scrollLeft - d, m = s.scrollTop - h;
        e = { left: e.left - p, top: e.top - m, right: e.right - p, bottom: e.bottom - m };
      }
    if (c || /^(fixed|sticky)$/.test(getComputedStyle(a).position))
      break;
  }
}
function mT(t) {
  let e = t.dom.getBoundingClientRect(), n = Math.max(0, e.top), r, i;
  for (let o = (e.left + e.right) / 2, a = n + 1; a < Math.min(innerHeight, e.bottom); a += 5) {
    let s = t.root.elementFromPoint(o, a);
    if (!s || s == t.dom || !t.dom.contains(s))
      continue;
    let c = s.getBoundingClientRect();
    if (c.top >= n - 20) {
      r = s, i = c.top;
      break;
    }
  }
  return { refDOM: r, refTop: i, stack: $0(t.dom) };
}
function $0(t) {
  let e = [], n = t.ownerDocument;
  for (let r = t; r && (e.push({ dom: r, top: r.scrollTop, left: r.scrollLeft }), t != n); r = go(r))
    ;
  return e;
}
function yT({ refDOM: t, refTop: e, stack: n }) {
  let r = t ? t.getBoundingClientRect().top : 0;
  V0(n, r == 0 ? 0 : r - e);
}
function V0(t, e) {
  for (let n = 0; n < t.length; n++) {
    let { dom: r, top: i, left: o } = t[n];
    r.scrollTop != i + e && (r.scrollTop = i + e), r.scrollLeft != o && (r.scrollLeft = o);
  }
}
let ti = null;
function bT(t) {
  if (t.setActive)
    return t.setActive();
  if (ti)
    return t.focus(ti);
  let e = $0(t);
  t.focus(ti == null ? {
    get preventScroll() {
      return ti = { preventScroll: !0 }, !0;
    }
  } : void 0), ti || (ti = !1, V0(e, 0));
}
function H0(t, e) {
  let n, r = 2e8, i, o = 0, a = e.top, s = e.top, c, l;
  for (let u = t.firstChild, f = 0; u; u = u.nextSibling, f++) {
    let d;
    if (u.nodeType == 1)
      d = u.getClientRects();
    else if (u.nodeType == 3)
      d = kn(u).getClientRects();
    else
      continue;
    for (let h = 0; h < d.length; h++) {
      let p = d[h];
      if (p.top <= a && p.bottom >= s) {
        a = Math.max(p.bottom, a), s = Math.min(p.top, s);
        let m = p.left > e.left ? p.left - e.left : p.right < e.left ? e.left - p.right : 0;
        if (m < r) {
          n = u, r = m, i = m && n.nodeType == 3 ? {
            left: p.right < e.left ? p.right : p.left,
            top: e.top
          } : e, u.nodeType == 1 && m && (o = f + (e.left >= (p.left + p.right) / 2 ? 1 : 0));
          continue;
        }
      } else p.top > e.top && !c && p.left <= e.left && p.right >= e.left && (c = u, l = { left: Math.max(p.left, Math.min(p.right, e.left)), top: p.top });
      !n && (e.left >= p.right && e.top >= p.top || e.left >= p.left && e.top >= p.bottom) && (o = f + 1);
    }
  }
  return !n && c && (n = c, i = l, r = 0), n && n.nodeType == 3 ? vT(n, i) : !n || r && n.nodeType == 1 ? { node: t, offset: o } : H0(n, i);
}
function vT(t, e) {
  let n = t.nodeValue.length, r = document.createRange();
  for (let i = 0; i < n; i++) {
    r.setEnd(t, i + 1), r.setStart(t, i);
    let o = Gn(r, 1);
    if (o.top != o.bottom && oh(e, o))
      return { node: t, offset: i + (e.left >= (o.left + o.right) / 2 ? 1 : 0) };
  }
  return { node: t, offset: 0 };
}
function oh(t, e) {
  return t.left >= e.left - 1 && t.left <= e.right + 1 && t.top >= e.top - 1 && t.top <= e.bottom + 1;
}
function DT(t, e) {
  let n = t.parentNode;
  return n && /^li$/i.test(n.nodeName) && e.left < t.getBoundingClientRect().left ? n : t;
}
function xT(t, e, n) {
  let { node: r, offset: i } = H0(e, n), o = -1;
  if (r.nodeType == 1 && !r.firstChild) {
    let a = r.getBoundingClientRect();
    o = a.left != a.right && n.left > (a.left + a.right) / 2 ? 1 : -1;
  }
  return t.docView.posFromDOM(r, i, o);
}
function wT(t, e, n, r) {
  let i = -1;
  for (let o = e, a = !1; o != t.dom; ) {
    let s = t.docView.nearestDesc(o, !0), c;
    if (!s)
      return null;
    if (s.dom.nodeType == 1 && (s.node.isBlock && s.parent || !s.contentDOM) && // Ignore elements with zero-size bounding rectangles
    ((c = s.dom.getBoundingClientRect()).width || c.height) && (s.node.isBlock && s.parent && (!a && c.left > r.left || c.top > r.top ? i = s.posBefore : (!a && c.right < r.left || c.bottom < r.top) && (i = s.posAfter), a = !0), !s.contentDOM && i < 0 && !s.node.isText))
      return (s.node.isBlock ? r.top < (c.top + c.bottom) / 2 : r.left < (c.left + c.right) / 2) ? s.posBefore : s.posAfter;
    o = s.dom.parentNode;
  }
  return i > -1 ? i : t.docView.posFromDOM(e, n, -1);
}
function X0(t, e, n) {
  let r = t.childNodes.length;
  if (r && n.top < n.bottom)
    for (let i = Math.max(0, Math.min(r - 1, Math.floor(r * (e.top - n.top) / (n.bottom - n.top)) - 2)), o = i; ; ) {
      let a = t.childNodes[o];
      if (a.nodeType == 1) {
        let s = a.getClientRects();
        for (let c = 0; c < s.length; c++) {
          let l = s[c];
          if (oh(e, l))
            return X0(a, e, l);
        }
      }
      if ((o = (o + 1) % r) == i)
        break;
    }
  return t;
}
function _T(t, e) {
  let n = t.dom.ownerDocument, r, i = 0, o = fT(n, e.left, e.top);
  o && ({ node: r, offset: i } = o);
  let a = (t.root.elementFromPoint ? t.root : n).elementFromPoint(e.left, e.top), s;
  if (!a || !t.dom.contains(a.nodeType != 1 ? a.parentNode : a)) {
    let l = t.dom.getBoundingClientRect();
    if (!oh(e, l) || (a = X0(t.dom, e, l), !a))
      return null;
  }
  if (xt)
    for (let l = a; r && l; l = go(l))
      l.draggable && (r = void 0);
  if (a = DT(a, e), r) {
    if (rn && r.nodeType == 1 && (i = Math.min(i, r.childNodes.length), i < r.childNodes.length)) {
      let u = r.childNodes[i], f;
      u.nodeName == "IMG" && (f = u.getBoundingClientRect()).right <= e.left && f.bottom > e.top && i++;
    }
    let l;
    Io && i && r.nodeType == 1 && (l = r.childNodes[i - 1]).nodeType == 1 && l.contentEditable == "false" && l.getBoundingClientRect().top >= e.top && i--, r == t.dom && i == r.childNodes.length - 1 && r.lastChild.nodeType == 1 && e.top > r.lastChild.getBoundingClientRect().bottom ? s = t.state.doc.content.size : (i == 0 || r.nodeType != 1 || r.childNodes[i - 1].nodeName != "BR") && (s = wT(t, r, i, e));
  }
  s == null && (s = xT(t, a, e));
  let c = t.docView.nearestDesc(a, !0);
  return { pos: s, inside: c ? c.posAtStart - c.border : -1 };
}
function gg(t) {
  return t.top < t.bottom || t.left < t.right;
}
function Gn(t, e) {
  let n = t.getClientRects();
  if (n.length) {
    let r = n[e < 0 ? 0 : n.length - 1];
    if (gg(r))
      return r;
  }
  return Array.prototype.find.call(n, gg) || t.getBoundingClientRect();
}
const TT = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
function G0(t, e, n) {
  let { node: r, offset: i, atom: o } = t.docView.domFromPos(e, n < 0 ? -1 : 1), a = Io || rn;
  if (r.nodeType == 3)
    if (a && (TT.test(r.nodeValue) || (n < 0 ? !i : i == r.nodeValue.length))) {
      let c = Gn(kn(r, i, i), n);
      if (rn && i && /\s/.test(r.nodeValue[i - 1]) && i < r.nodeValue.length) {
        let l = Gn(kn(r, i - 1, i - 1), -1);
        if (l.top == c.top) {
          let u = Gn(kn(r, i, i + 1), -1);
          if (u.top != c.top)
            return Fi(u, u.left < l.left);
        }
      }
      return c;
    } else {
      let c = i, l = i, u = n < 0 ? 1 : -1;
      return n < 0 && !i ? (l++, u = -1) : n >= 0 && i == r.nodeValue.length ? (c--, u = 1) : n < 0 ? c-- : l++, Fi(Gn(kn(r, c, l), u), u < 0);
    }
  if (!t.state.doc.resolve(e - (o || 0)).parent.inlineContent) {
    if (o == null && i && (n < 0 || i == Vt(r))) {
      let c = r.childNodes[i - 1];
      if (c.nodeType == 1)
        return Wc(c.getBoundingClientRect(), !1);
    }
    if (o == null && i < Vt(r)) {
      let c = r.childNodes[i];
      if (c.nodeType == 1)
        return Wc(c.getBoundingClientRect(), !0);
    }
    return Wc(r.getBoundingClientRect(), n >= 0);
  }
  if (o == null && i && (n < 0 || i == Vt(r))) {
    let c = r.childNodes[i - 1], l = c.nodeType == 3 ? kn(c, Vt(c) - (a ? 0 : 1)) : c.nodeType == 1 && (c.nodeName != "BR" || !c.nextSibling) ? c : null;
    if (l)
      return Fi(Gn(l, 1), !1);
  }
  if (o == null && i < Vt(r)) {
    let c = r.childNodes[i];
    for (; c.pmViewDesc && c.pmViewDesc.ignoreForCoords; )
      c = c.nextSibling;
    let l = c ? c.nodeType == 3 ? kn(c, 0, a ? 0 : 1) : c.nodeType == 1 ? c : null : null;
    if (l)
      return Fi(Gn(l, -1), !0);
  }
  return Fi(Gn(r.nodeType == 3 ? kn(r) : r, -n), n >= 0);
}
function Fi(t, e) {
  if (t.width == 0)
    return t;
  let n = e ? t.left : t.right;
  return { top: t.top, bottom: t.bottom, left: n, right: n };
}
function Wc(t, e) {
  if (t.height == 0)
    return t;
  let n = e ? t.top : t.bottom;
  return { top: n, bottom: n, left: t.left, right: t.right };
}
function K0(t, e, n) {
  let r = t.state, i = t.root.activeElement;
  r != e && t.updateState(e), i != t.dom && t.focus();
  try {
    return n();
  } finally {
    r != e && t.updateState(r), i != t.dom && i && i.focus();
  }
}
function ET(t, e, n) {
  let r = e.selection, i = n == "up" ? r.$from : r.$to;
  return K0(t, e, () => {
    let { node: o } = t.docView.domFromPos(i.pos, n == "up" ? -1 : 1);
    for (; ; ) {
      let s = t.docView.nearestDesc(o, !0);
      if (!s)
        break;
      if (s.node.isBlock) {
        o = s.contentDOM || s.dom;
        break;
      }
      o = s.dom.parentNode;
    }
    let a = G0(t, i.pos, 1);
    for (let s = o.firstChild; s; s = s.nextSibling) {
      let c;
      if (s.nodeType == 1)
        c = s.getClientRects();
      else if (s.nodeType == 3)
        c = kn(s, 0, s.nodeValue.length).getClientRects();
      else
        continue;
      for (let l = 0; l < c.length; l++) {
        let u = c[l];
        if (u.bottom > u.top + 1 && (n == "up" ? a.top - u.top > (u.bottom - a.top) * 2 : u.bottom - a.bottom > (a.bottom - u.top) * 2))
          return !1;
      }
    }
    return !0;
  });
}
const CT = /[\u0590-\u08ac]/;
function ST(t, e, n) {
  let { $head: r } = e.selection;
  if (!r.parent.isTextblock)
    return !1;
  let i = r.parentOffset, o = !i, a = i == r.parent.content.size, s = t.domSelection();
  return s ? !CT.test(r.parent.textContent) || !s.modify ? n == "left" || n == "backward" ? o : a : K0(t, e, () => {
    let { focusNode: c, focusOffset: l, anchorNode: u, anchorOffset: f } = t.domSelectionRange(), d = s.caretBidiLevel;
    s.modify("move", n, "character");
    let h = r.depth ? t.docView.domAfterPos(r.before()) : t.dom, { focusNode: p, focusOffset: m } = t.domSelectionRange(), g = p && !h.contains(p.nodeType == 1 ? p : p.parentNode) || c == p && l == m;
    try {
      s.collapse(u, f), c && (c != u || l != f) && s.extend && s.extend(c, l);
    } catch {
    }
    return d != null && (s.caretBidiLevel = d), g;
  }) : r.pos == r.start() || r.pos == r.end();
}
let mg = null, yg = null, bg = !1;
function AT(t, e, n) {
  return mg == e && yg == n ? bg : (mg = e, yg = n, bg = n == "up" || n == "down" ? ET(t, e, n) : ST(t, e, n));
}
const Gt = 0, vg = 1, Ar = 2, mn = 3;
class Mo {
  constructor(e, n, r, i) {
    this.parent = e, this.children = n, this.dom = r, this.contentDOM = i, this.dirty = Gt, r.pmViewDesc = this;
  }
  // Used to check whether a given description corresponds to a
  // widget/mark/node.
  matchesWidget(e) {
    return !1;
  }
  matchesMark(e) {
    return !1;
  }
  matchesNode(e, n, r) {
    return !1;
  }
  matchesHack(e) {
    return !1;
  }
  // When parsing in-editor content (in domchange.js), we allow
  // descriptions to determine the parse rules that should be used to
  // parse them.
  parseRule() {
    return null;
  }
  // Used by the editor's event handler to ignore events that come
  // from certain descs.
  stopEvent(e) {
    return !1;
  }
  // The size of the content represented by this desc.
  get size() {
    let e = 0;
    for (let n = 0; n < this.children.length; n++)
      e += this.children[n].size;
    return e;
  }
  // For block nodes, this represents the space taken up by their
  // start/end tokens.
  get border() {
    return 0;
  }
  destroy() {
    this.parent = void 0, this.dom.pmViewDesc == this && (this.dom.pmViewDesc = void 0);
    for (let e = 0; e < this.children.length; e++)
      this.children[e].destroy();
  }
  posBeforeChild(e) {
    for (let n = 0, r = this.posAtStart; ; n++) {
      let i = this.children[n];
      if (i == e)
        return r;
      r += i.size;
    }
  }
  get posBefore() {
    return this.parent.posBeforeChild(this);
  }
  get posAtStart() {
    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;
  }
  get posAfter() {
    return this.posBefore + this.size;
  }
  get posAtEnd() {
    return this.posAtStart + this.size - 2 * this.border;
  }
  localPosFromDOM(e, n, r) {
    if (this.contentDOM && this.contentDOM.contains(e.nodeType == 1 ? e : e.parentNode))
      if (r < 0) {
        let o, a;
        if (e == this.contentDOM)
          o = e.childNodes[n - 1];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          o = e.previousSibling;
        }
        for (; o && !((a = o.pmViewDesc) && a.parent == this); )
          o = o.previousSibling;
        return o ? this.posBeforeChild(a) + a.size : this.posAtStart;
      } else {
        let o, a;
        if (e == this.contentDOM)
          o = e.childNodes[n];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          o = e.nextSibling;
        }
        for (; o && !((a = o.pmViewDesc) && a.parent == this); )
          o = o.nextSibling;
        return o ? this.posBeforeChild(a) : this.posAtEnd;
      }
    let i;
    if (e == this.dom && this.contentDOM)
      i = n > lt(this.contentDOM);
    else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM))
      i = e.compareDocumentPosition(this.contentDOM) & 2;
    else if (this.dom.firstChild) {
      if (n == 0)
        for (let o = e; ; o = o.parentNode) {
          if (o == this.dom) {
            i = !1;
            break;
          }
          if (o.previousSibling)
            break;
        }
      if (i == null && n == e.childNodes.length)
        for (let o = e; ; o = o.parentNode) {
          if (o == this.dom) {
            i = !0;
            break;
          }
          if (o.nextSibling)
            break;
        }
    }
    return i ?? r > 0 ? this.posAtEnd : this.posAtStart;
  }
  nearestDesc(e, n = !1) {
    for (let r = !0, i = e; i; i = i.parentNode) {
      let o = this.getDesc(i), a;
      if (o && (!n || o.node))
        if (r && (a = o.nodeDOM) && !(a.nodeType == 1 ? a.contains(e.nodeType == 1 ? e : e.parentNode) : a == e))
          r = !1;
        else
          return o;
    }
  }
  getDesc(e) {
    let n = e.pmViewDesc;
    for (let r = n; r; r = r.parent)
      if (r == this)
        return n;
  }
  posFromDOM(e, n, r) {
    for (let i = e; i; i = i.parentNode) {
      let o = this.getDesc(i);
      if (o)
        return o.localPosFromDOM(e, n, r);
    }
    return -1;
  }
  // Find the desc for the node after the given pos, if any. (When a
  // parent node overrode rendering, there might not be one.)
  descAt(e) {
    for (let n = 0, r = 0; n < this.children.length; n++) {
      let i = this.children[n], o = r + i.size;
      if (r == e && o != r) {
        for (; !i.border && i.children.length; )
          for (let a = 0; a < i.children.length; a++) {
            let s = i.children[a];
            if (s.size) {
              i = s;
              break;
            }
          }
        return i;
      }
      if (e < o)
        return i.descAt(e - r - i.border);
      r = o;
    }
  }
  domFromPos(e, n) {
    if (!this.contentDOM)
      return { node: this.dom, offset: 0, atom: e + 1 };
    let r = 0, i = 0;
    for (let o = 0; r < this.children.length; r++) {
      let a = this.children[r], s = o + a.size;
      if (s > e || a instanceof Z0) {
        i = e - o;
        break;
      }
      o = s;
    }
    if (i)
      return this.children[r].domFromPos(i - this.children[r].border, n);
    for (let o; r && !(o = this.children[r - 1]).size && o instanceof J0 && o.side >= 0; r--)
      ;
    if (n <= 0) {
      let o, a = !0;
      for (; o = r ? this.children[r - 1] : null, !(!o || o.dom.parentNode == this.contentDOM); r--, a = !1)
        ;
      return o && n && a && !o.border && !o.domAtom ? o.domFromPos(o.size, n) : { node: this.contentDOM, offset: o ? lt(o.dom) + 1 : 0 };
    } else {
      let o, a = !0;
      for (; o = r < this.children.length ? this.children[r] : null, !(!o || o.dom.parentNode == this.contentDOM); r++, a = !1)
        ;
      return o && a && !o.border && !o.domAtom ? o.domFromPos(0, n) : { node: this.contentDOM, offset: o ? lt(o.dom) : this.contentDOM.childNodes.length };
    }
  }
  // Used to find a DOM range in a single parent for a given changed
  // range.
  parseRange(e, n, r = 0) {
    if (this.children.length == 0)
      return { node: this.contentDOM, from: e, to: n, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };
    let i = -1, o = -1;
    for (let a = r, s = 0; ; s++) {
      let c = this.children[s], l = a + c.size;
      if (i == -1 && e <= l) {
        let u = a + c.border;
        if (e >= u && n <= l - c.border && c.node && c.contentDOM && this.contentDOM.contains(c.contentDOM))
          return c.parseRange(e, n, u);
        e = a;
        for (let f = s; f > 0; f--) {
          let d = this.children[f - 1];
          if (d.size && d.dom.parentNode == this.contentDOM && !d.emptyChildAt(1)) {
            i = lt(d.dom) + 1;
            break;
          }
          e -= d.size;
        }
        i == -1 && (i = 0);
      }
      if (i > -1 && (l > n || s == this.children.length - 1)) {
        n = l;
        for (let u = s + 1; u < this.children.length; u++) {
          let f = this.children[u];
          if (f.size && f.dom.parentNode == this.contentDOM && !f.emptyChildAt(-1)) {
            o = lt(f.dom);
            break;
          }
          n += f.size;
        }
        o == -1 && (o = this.contentDOM.childNodes.length);
        break;
      }
      a = l;
    }
    return { node: this.contentDOM, from: e, to: n, fromOffset: i, toOffset: o };
  }
  emptyChildAt(e) {
    if (this.border || !this.contentDOM || !this.children.length)
      return !1;
    let n = this.children[e < 0 ? 0 : this.children.length - 1];
    return n.size == 0 || n.emptyChildAt(e);
  }
  domAfterPos(e) {
    let { node: n, offset: r } = this.domFromPos(e, 0);
    if (n.nodeType != 1 || r == n.childNodes.length)
      throw new RangeError("No node after pos " + e);
    return n.childNodes[r];
  }
  // View descs are responsible for setting any selection that falls
  // entirely inside of them, so that custom implementations can do
  // custom things with the selection. Note that this falls apart when
  // a selection starts in such a node and ends in another, in which
  // case we just use whatever domFromPos produces as a best effort.
  setSelection(e, n, r, i = !1) {
    let o = Math.min(e, n), a = Math.max(e, n);
    for (let h = 0, p = 0; h < this.children.length; h++) {
      let m = this.children[h], g = p + m.size;
      if (o > p && a < g)
        return m.setSelection(e - p - m.border, n - p - m.border, r, i);
      p = g;
    }
    let s = this.domFromPos(e, e ? -1 : 1), c = n == e ? s : this.domFromPos(n, n ? -1 : 1), l = r.root.getSelection(), u = r.domSelectionRange(), f = !1;
    if ((rn || xt) && e == n) {
      let { node: h, offset: p } = s;
      if (h.nodeType == 3) {
        if (f = !!(p && h.nodeValue[p - 1] == `
`), f && p == h.nodeValue.length)
          for (let m = h, g; m; m = m.parentNode) {
            if (g = m.nextSibling) {
              g.nodeName == "BR" && (s = c = { node: g.parentNode, offset: lt(g) + 1 });
              break;
            }
            let y = m.pmViewDesc;
            if (y && y.node && y.node.isBlock)
              break;
          }
      } else {
        let m = h.childNodes[p - 1];
        f = m && (m.nodeName == "BR" || m.contentEditable == "false");
      }
    }
    if (rn && u.focusNode && u.focusNode != c.node && u.focusNode.nodeType == 1) {
      let h = u.focusNode.childNodes[u.focusOffset];
      h && h.contentEditable == "false" && (i = !0);
    }
    if (!(i || f && xt) && Wr(s.node, s.offset, u.anchorNode, u.anchorOffset) && Wr(c.node, c.offset, u.focusNode, u.focusOffset))
      return;
    let d = !1;
    if ((l.extend || e == n) && !f) {
      l.collapse(s.node, s.offset);
      try {
        e != n && l.extend(c.node, c.offset), d = !0;
      } catch {
      }
    }
    if (!d) {
      if (e > n) {
        let p = s;
        s = c, c = p;
      }
      let h = document.createRange();
      h.setEnd(c.node, c.offset), h.setStart(s.node, s.offset), l.removeAllRanges(), l.addRange(h);
    }
  }
  ignoreMutation(e) {
    return !this.contentDOM && e.type != "selection";
  }
  get contentLost() {
    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);
  }
  // Remove a subtree of the element tree that has been touched
  // by a DOM change, so that the next update will redraw it.
  markDirty(e, n) {
    for (let r = 0, i = 0; i < this.children.length; i++) {
      let o = this.children[i], a = r + o.size;
      if (r == a ? e <= a && n >= r : e < a && n > r) {
        let s = r + o.border, c = a - o.border;
        if (e >= s && n <= c) {
          this.dirty = e == r || n == a ? Ar : vg, e == s && n == c && (o.contentLost || o.dom.parentNode != this.contentDOM) ? o.dirty = mn : o.markDirty(e - s, n - s);
          return;
        } else
          o.dirty = o.dom == o.contentDOM && o.dom.parentNode == this.contentDOM && !o.children.length ? Ar : mn;
      }
      r = a;
    }
    this.dirty = Ar;
  }
  markParentsDirty() {
    let e = 1;
    for (let n = this.parent; n; n = n.parent, e++) {
      let r = e == 1 ? Ar : vg;
      n.dirty < r && (n.dirty = r);
    }
  }
  get domAtom() {
    return !1;
  }
  get ignoreForCoords() {
    return !1;
  }
  isText(e) {
    return !1;
  }
}
class J0 extends Mo {
  constructor(e, n, r, i) {
    let o, a = n.type.toDOM;
    if (typeof a == "function" && (a = a(r, () => {
      if (!o)
        return i;
      if (o.parent)
        return o.parent.posBeforeChild(o);
    })), !n.type.spec.raw) {
      if (a.nodeType != 1) {
        let s = document.createElement("span");
        s.appendChild(a), a = s;
      }
      a.contentEditable = "false", a.classList.add("ProseMirror-widget");
    }
    super(e, [], a, null), this.widget = n, this.widget = n, o = this;
  }
  matchesWidget(e) {
    return this.dirty == Gt && e.type.eq(this.widget.type);
  }
  parseRule() {
    return { ignore: !0 };
  }
  stopEvent(e) {
    let n = this.widget.spec.stopEvent;
    return n ? n(e) : !1;
  }
  ignoreMutation(e) {
    return e.type != "selection" || this.widget.spec.ignoreSelection;
  }
  destroy() {
    this.widget.type.destroy(this.dom), super.destroy();
  }
  get domAtom() {
    return !0;
  }
  get side() {
    return this.widget.type.side;
  }
}
class UT extends Mo {
  constructor(e, n, r, i) {
    super(e, [], n, null), this.textDOM = r, this.text = i;
  }
  get size() {
    return this.text.length;
  }
  localPosFromDOM(e, n) {
    return e != this.textDOM ? this.posAtStart + (n ? this.size : 0) : this.posAtStart + n;
  }
  domFromPos(e) {
    return { node: this.textDOM, offset: e };
  }
  ignoreMutation(e) {
    return e.type === "characterData" && e.target.nodeValue == e.oldValue;
  }
}
class Lr extends Mo {
  constructor(e, n, r, i, o) {
    super(e, [], r, i), this.mark = n, this.spec = o;
  }
  static create(e, n, r, i) {
    let o = i.nodeViews[n.type.name], a = o && o(n, i, r);
    return (!a || !a.dom) && (a = Ti.renderSpec(document, n.type.spec.toDOM(n, r), null, n.attrs)), new Lr(e, n, a.dom, a.contentDOM || a.dom, a);
  }
  parseRule() {
    return this.dirty & mn || this.mark.type.spec.reparseInView ? null : { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };
  }
  matchesMark(e) {
    return this.dirty != mn && this.mark.eq(e);
  }
  markDirty(e, n) {
    if (super.markDirty(e, n), this.dirty != Gt) {
      let r = this.parent;
      for (; !r.node; )
        r = r.parent;
      r.dirty < this.dirty && (r.dirty = this.dirty), this.dirty = Gt;
    }
  }
  slice(e, n, r) {
    let i = Lr.create(this.parent, this.mark, !0, r), o = this.children, a = this.size;
    n < a && (o = gd(o, n, a, r)), e > 0 && (o = gd(o, 0, e, r));
    for (let s = 0; s < o.length; s++)
      o[s].parent = i;
    return i.children = o, i;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
}
class sr extends Mo {
  constructor(e, n, r, i, o, a, s, c, l) {
    super(e, [], o, a), this.node = n, this.outerDeco = r, this.innerDeco = i, this.nodeDOM = s;
  }
  // By default, a node is rendered using the `toDOM` method from the
  // node type spec. But client code can use the `nodeViews` spec to
  // supply a custom node view, which can influence various aspects of
  // the way the node works.
  //
  // (Using subclassing for this was intentionally decided against,
  // since it'd require exposing a whole slew of finicky
  // implementation details to the user code that they probably will
  // never need.)
  static create(e, n, r, i, o, a) {
    let s = o.nodeViews[n.type.name], c, l = s && s(n, o, () => {
      if (!c)
        return a;
      if (c.parent)
        return c.parent.posBeforeChild(c);
    }, r, i), u = l && l.dom, f = l && l.contentDOM;
    if (n.isText) {
      if (!u)
        u = document.createTextNode(n.text);
      else if (u.nodeType != 3)
        throw new RangeError("Text must be rendered as a DOM text node");
    } else u || ({ dom: u, contentDOM: f } = Ti.renderSpec(document, n.type.spec.toDOM(n), null, n.attrs));
    !f && !n.isText && u.nodeName != "BR" && (u.hasAttribute("contenteditable") || (u.contentEditable = "false"), n.type.spec.draggable && (u.draggable = !0));
    let d = u;
    return u = ev(u, r, n), l ? c = new kT(e, n, r, i, u, f || null, d, l, o, a + 1) : n.isText ? new Hs(e, n, r, i, u, d, o) : new sr(e, n, r, i, u, f || null, d, o, a + 1);
  }
  parseRule() {
    if (this.node.type.spec.reparseInView)
      return null;
    let e = { node: this.node.type.name, attrs: this.node.attrs };
    if (this.node.type.whitespace == "pre" && (e.preserveWhitespace = "full"), !this.contentDOM)
      e.getContent = () => this.node.content;
    else if (!this.contentLost)
      e.contentElement = this.contentDOM;
    else {
      for (let n = this.children.length - 1; n >= 0; n--) {
        let r = this.children[n];
        if (this.dom.contains(r.dom.parentNode)) {
          e.contentElement = r.dom.parentNode;
          break;
        }
      }
      e.contentElement || (e.getContent = () => ge.empty);
    }
    return e;
  }
  matchesNode(e, n, r) {
    return this.dirty == Gt && e.eq(this.node) && ts(n, this.outerDeco) && r.eq(this.innerDeco);
  }
  get size() {
    return this.node.nodeSize;
  }
  get border() {
    return this.node.isLeaf ? 0 : 1;
  }
  // Syncs `this.children` to match `this.node.content` and the local
  // decorations, possibly introducing nesting for marks. Then, in a
  // separate step, syncs the DOM inside `this.contentDOM` to
  // `this.children`.
  updateChildren(e, n) {
    let r = this.node.inlineContent, i = n, o = e.composing ? this.localCompositionInfo(e, n) : null, a = o && o.pos > -1 ? o : null, s = o && o.pos < 0, c = new OT(this, a && a.node, e);
    BT(this.node, this.innerDeco, (l, u, f) => {
      l.spec.marks ? c.syncToMarks(l.spec.marks, r, e) : l.type.side >= 0 && !f && c.syncToMarks(u == this.node.childCount ? qe.none : this.node.child(u).marks, r, e), c.placeWidget(l, e, i);
    }, (l, u, f, d) => {
      c.syncToMarks(l.marks, r, e);
      let h;
      c.findNodeMatch(l, u, f, d) || s && e.state.selection.from > i && e.state.selection.to < i + l.nodeSize && (h = c.findIndexWithChild(o.node)) > -1 && c.updateNodeAt(l, u, f, h, e) || c.updateNextNode(l, u, f, e, d, i) || c.addNode(l, u, f, e, i), i += l.nodeSize;
    }), c.syncToMarks([], r, e), this.node.isTextblock && c.addTextblockHacks(), c.destroyRest(), (c.changed || this.dirty == Ar) && (a && this.protectLocalComposition(e, a), Y0(this.contentDOM, this.children, e), vi && IT(this.dom));
  }
  localCompositionInfo(e, n) {
    let { from: r, to: i } = e.state.selection;
    if (!(e.state.selection instanceof Be) || r < n || i > n + this.node.content.size)
      return null;
    let o = e.input.compositionNode;
    if (!o || !this.dom.contains(o.parentNode))
      return null;
    if (this.node.inlineContent) {
      let a = o.nodeValue, s = MT(this.node.content, a, r - n, i - n);
      return s < 0 ? null : { node: o, pos: s, text: a };
    } else
      return { node: o, pos: -1, text: "" };
  }
  protectLocalComposition(e, { node: n, pos: r, text: i }) {
    if (this.getDesc(n))
      return;
    let o = n;
    for (; o.parentNode != this.contentDOM; o = o.parentNode) {
      for (; o.previousSibling; )
        o.parentNode.removeChild(o.previousSibling);
      for (; o.nextSibling; )
        o.parentNode.removeChild(o.nextSibling);
      o.pmViewDesc && (o.pmViewDesc = void 0);
    }
    let a = new UT(this, o, n, i);
    e.input.compositionNodes.push(a), this.children = gd(this.children, r, r + i.length, e, a);
  }
  // If this desc must be updated to match the given node decoration,
  // do so and return true.
  update(e, n, r, i) {
    return this.dirty == mn || !e.sameMarkup(this.node) ? !1 : (this.updateInner(e, n, r, i), !0);
  }
  updateInner(e, n, r, i) {
    this.updateOuterDeco(n), this.node = e, this.innerDeco = r, this.contentDOM && this.updateChildren(i, this.posAtStart), this.dirty = Gt;
  }
  updateOuterDeco(e) {
    if (ts(e, this.outerDeco))
      return;
    let n = this.nodeDOM.nodeType != 1, r = this.dom;
    this.dom = Q0(this.dom, this.nodeDOM, pd(this.outerDeco, this.node, n), pd(e, this.node, n)), this.dom != r && (r.pmViewDesc = void 0, this.dom.pmViewDesc = this), this.outerDeco = e;
  }
  // Mark this node as being the selected node.
  selectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.add("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && (this.dom.draggable = !0);
  }
  // Remove selected node marking from this node.
  deselectNode() {
    this.nodeDOM.nodeType == 1 && (this.nodeDOM.classList.remove("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && this.dom.removeAttribute("draggable"));
  }
  get domAtom() {
    return this.node.isAtom;
  }
}
function Dg(t, e, n, r, i) {
  ev(r, e, t);
  let o = new sr(void 0, t, e, n, r, r, r, i, 0);
  return o.contentDOM && o.updateChildren(i, 0), o;
}
class Hs extends sr {
  constructor(e, n, r, i, o, a, s) {
    super(e, n, r, i, o, null, a, s, 0);
  }
  parseRule() {
    let e = this.nodeDOM.parentNode;
    for (; e && e != this.dom && !e.pmIsDeco; )
      e = e.parentNode;
    return { skip: e || !0 };
  }
  update(e, n, r, i) {
    return this.dirty == mn || this.dirty != Gt && !this.inParent() || !e.sameMarkup(this.node) ? !1 : (this.updateOuterDeco(n), (this.dirty != Gt || e.text != this.node.text) && e.text != this.nodeDOM.nodeValue && (this.nodeDOM.nodeValue = e.text, i.trackWrites == this.nodeDOM && (i.trackWrites = null)), this.node = e, this.dirty = Gt, !0);
  }
  inParent() {
    let e = this.parent.contentDOM;
    for (let n = this.nodeDOM; n; n = n.parentNode)
      if (n == e)
        return !0;
    return !1;
  }
  domFromPos(e) {
    return { node: this.nodeDOM, offset: e };
  }
  localPosFromDOM(e, n, r) {
    return e == this.nodeDOM ? this.posAtStart + Math.min(n, this.node.text.length) : super.localPosFromDOM(e, n, r);
  }
  ignoreMutation(e) {
    return e.type != "characterData" && e.type != "selection";
  }
  slice(e, n, r) {
    let i = this.node.cut(e, n), o = document.createTextNode(i.text);
    return new Hs(this.parent, i, this.outerDeco, this.innerDeco, o, o, r);
  }
  markDirty(e, n) {
    super.markDirty(e, n), this.dom != this.nodeDOM && (e == 0 || n == this.nodeDOM.nodeValue.length) && (this.dirty = mn);
  }
  get domAtom() {
    return !1;
  }
  isText(e) {
    return this.node.text == e;
  }
}
class Z0 extends Mo {
  parseRule() {
    return { ignore: !0 };
  }
  matchesHack(e) {
    return this.dirty == Gt && this.dom.nodeName == e;
  }
  get domAtom() {
    return !0;
  }
  get ignoreForCoords() {
    return this.dom.nodeName == "IMG";
  }
}
class kT extends sr {
  constructor(e, n, r, i, o, a, s, c, l, u) {
    super(e, n, r, i, o, a, s, l, u), this.spec = c;
  }
  // A custom `update` method gets to decide whether the update goes
  // through. If it does, and there's a `contentDOM` node, our logic
  // updates the children.
  update(e, n, r, i) {
    if (this.dirty == mn)
      return !1;
    if (this.spec.update && (this.node.type == e.type || this.spec.multiType)) {
      let o = this.spec.update(e, n, r);
      return o && this.updateInner(e, n, r, i), o;
    } else return !this.contentDOM && !e.isLeaf ? !1 : super.update(e, n, r, i);
  }
  selectNode() {
    this.spec.selectNode ? this.spec.selectNode() : super.selectNode();
  }
  deselectNode() {
    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();
  }
  setSelection(e, n, r, i) {
    this.spec.setSelection ? this.spec.setSelection(e, n, r.root) : super.setSelection(e, n, r, i);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
  stopEvent(e) {
    return this.spec.stopEvent ? this.spec.stopEvent(e) : !1;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
}
function Y0(t, e, n) {
  let r = t.firstChild, i = !1;
  for (let o = 0; o < e.length; o++) {
    let a = e[o], s = a.dom;
    if (s.parentNode == t) {
      for (; s != r; )
        r = xg(r), i = !0;
      r = r.nextSibling;
    } else
      i = !0, t.insertBefore(s, r);
    if (a instanceof Lr) {
      let c = r ? r.previousSibling : t.lastChild;
      Y0(a.contentDOM, a.children, n), r = c ? c.nextSibling : t.firstChild;
    }
  }
  for (; r; )
    r = xg(r), i = !0;
  i && n.trackWrites == t && (n.trackWrites = null);
}
const to = function(t) {
  t && (this.nodeName = t);
};
to.prototype = /* @__PURE__ */ Object.create(null);
const Ur = [new to()];
function pd(t, e, n) {
  if (t.length == 0)
    return Ur;
  let r = n ? Ur[0] : new to(), i = [r];
  for (let o = 0; o < t.length; o++) {
    let a = t[o].type.attrs;
    if (a) {
      a.nodeName && i.push(r = new to(a.nodeName));
      for (let s in a) {
        let c = a[s];
        c != null && (n && i.length == 1 && i.push(r = new to(e.isInline ? "span" : "div")), s == "class" ? r.class = (r.class ? r.class + " " : "") + c : s == "style" ? r.style = (r.style ? r.style + ";" : "") + c : s != "nodeName" && (r[s] = c));
      }
    }
  }
  return i;
}
function Q0(t, e, n, r) {
  if (n == Ur && r == Ur)
    return e;
  let i = e;
  for (let o = 0; o < r.length; o++) {
    let a = r[o], s = n[o];
    if (o) {
      let c;
      s && s.nodeName == a.nodeName && i != t && (c = i.parentNode) && c.nodeName.toLowerCase() == a.nodeName || (c = document.createElement(a.nodeName), c.pmIsDeco = !0, c.appendChild(i), s = Ur[0]), i = c;
    }
    FT(i, s || Ur[0], a);
  }
  return i;
}
function FT(t, e, n) {
  for (let r in e)
    r != "class" && r != "style" && r != "nodeName" && !(r in n) && t.removeAttribute(r);
  for (let r in n)
    r != "class" && r != "style" && r != "nodeName" && n[r] != e[r] && t.setAttribute(r, n[r]);
  if (e.class != n.class) {
    let r = e.class ? e.class.split(" ").filter(Boolean) : [], i = n.class ? n.class.split(" ").filter(Boolean) : [];
    for (let o = 0; o < r.length; o++)
      i.indexOf(r[o]) == -1 && t.classList.remove(r[o]);
    for (let o = 0; o < i.length; o++)
      r.indexOf(i[o]) == -1 && t.classList.add(i[o]);
    t.classList.length == 0 && t.removeAttribute("class");
  }
  if (e.style != n.style) {
    if (e.style) {
      let r = /\s*([\w\-\xa1-\uffff]+)\s*:(?:"(?:\\.|[^"])*"|'(?:\\.|[^'])*'|\(.*?\)|[^;])*/g, i;
      for (; i = r.exec(e.style); )
        t.style.removeProperty(i[1]);
    }
    n.style && (t.style.cssText += n.style);
  }
}
function ev(t, e, n) {
  return Q0(t, t, Ur, pd(e, n, t.nodeType != 1));
}
function ts(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].type.eq(e[n].type))
      return !1;
  return !0;
}
function xg(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class OT {
  constructor(e, n, r) {
    this.lock = n, this.view = r, this.index = 0, this.stack = [], this.changed = !1, this.top = e, this.preMatch = RT(e.node.content, e);
  }
  // Destroy and remove the children between the given indices in
  // `this.top`.
  destroyBetween(e, n) {
    if (e != n) {
      for (let r = e; r < n; r++)
        this.top.children[r].destroy();
      this.top.children.splice(e, n - e), this.changed = !0;
    }
  }
  // Destroy all remaining children in `this.top`.
  destroyRest() {
    this.destroyBetween(this.index, this.top.children.length);
  }
  // Sync the current stack of mark descs with the given array of
  // marks, reusing existing mark descs when possible.
  syncToMarks(e, n, r) {
    let i = 0, o = this.stack.length >> 1, a = Math.min(o, e.length);
    for (; i < a && (i == o - 1 ? this.top : this.stack[i + 1 << 1]).matchesMark(e[i]) && e[i].type.spec.spanning !== !1; )
      i++;
    for (; i < o; )
      this.destroyRest(), this.top.dirty = Gt, this.index = this.stack.pop(), this.top = this.stack.pop(), o--;
    for (; o < e.length; ) {
      this.stack.push(this.top, this.index + 1);
      let s = -1;
      for (let c = this.index; c < Math.min(this.index + 3, this.top.children.length); c++) {
        let l = this.top.children[c];
        if (l.matchesMark(e[o]) && !this.isLocked(l.dom)) {
          s = c;
          break;
        }
      }
      if (s > -1)
        s > this.index && (this.changed = !0, this.destroyBetween(this.index, s)), this.top = this.top.children[this.index];
      else {
        let c = Lr.create(this.top, e[o], n, r);
        this.top.children.splice(this.index, 0, c), this.top = c, this.changed = !0;
      }
      this.index = 0, o++;
    }
  }
  // Try to find a node desc matching the given data. Skip over it and
  // return true when successful.
  findNodeMatch(e, n, r, i) {
    let o = -1, a;
    if (i >= this.preMatch.index && (a = this.preMatch.matches[i - this.preMatch.index]).parent == this.top && a.matchesNode(e, n, r))
      o = this.top.children.indexOf(a, this.index);
    else
      for (let s = this.index, c = Math.min(this.top.children.length, s + 5); s < c; s++) {
        let l = this.top.children[s];
        if (l.matchesNode(e, n, r) && !this.preMatch.matched.has(l)) {
          o = s;
          break;
        }
      }
    return o < 0 ? !1 : (this.destroyBetween(this.index, o), this.index++, !0);
  }
  updateNodeAt(e, n, r, i, o) {
    let a = this.top.children[i];
    return a.dirty == mn && a.dom == a.contentDOM && (a.dirty = Ar), a.update(e, n, r, o) ? (this.destroyBetween(this.index, i), this.index++, !0) : !1;
  }
  findIndexWithChild(e) {
    for (; ; ) {
      let n = e.parentNode;
      if (!n)
        return -1;
      if (n == this.top.contentDOM) {
        let r = e.pmViewDesc;
        if (r) {
          for (let i = this.index; i < this.top.children.length; i++)
            if (this.top.children[i] == r)
              return i;
        }
        return -1;
      }
      e = n;
    }
  }
  // Try to update the next node, if any, to the given data. Checks
  // pre-matches to avoid overwriting nodes that could still be used.
  updateNextNode(e, n, r, i, o, a) {
    for (let s = this.index; s < this.top.children.length; s++) {
      let c = this.top.children[s];
      if (c instanceof sr) {
        let l = this.preMatch.matched.get(c);
        if (l != null && l != o)
          return !1;
        let u = c.dom, f, d = this.isLocked(u) && !(e.isText && c.node && c.node.isText && c.nodeDOM.nodeValue == e.text && c.dirty != mn && ts(n, c.outerDeco));
        if (!d && c.update(e, n, r, i))
          return this.destroyBetween(this.index, s), c.dom != u && (this.changed = !0), this.index++, !0;
        if (!d && (f = this.recreateWrapper(c, e, n, r, i, a)))
          return this.destroyBetween(this.index, s), this.top.children[this.index] = f, f.contentDOM && (f.dirty = Ar, f.updateChildren(i, a + 1), f.dirty = Gt), this.changed = !0, this.index++, !0;
        break;
      }
    }
    return !1;
  }
  // When a node with content is replaced by a different node with
  // identical content, move over its children.
  recreateWrapper(e, n, r, i, o, a) {
    if (e.dirty || n.isAtom || !e.children.length || !e.node.content.eq(n.content) || !ts(r, e.outerDeco) || !i.eq(e.innerDeco))
      return null;
    let s = sr.create(this.top, n, r, i, o, a);
    if (s.contentDOM) {
      s.children = e.children, e.children = [];
      for (let c of s.children)
        c.parent = s;
    }
    return e.destroy(), s;
  }
  // Insert the node as a newly created node desc.
  addNode(e, n, r, i, o) {
    let a = sr.create(this.top, e, n, r, i, o);
    a.contentDOM && a.updateChildren(i, o + 1), this.top.children.splice(this.index++, 0, a), this.changed = !0;
  }
  placeWidget(e, n, r) {
    let i = this.index < this.top.children.length ? this.top.children[this.index] : null;
    if (i && i.matchesWidget(e) && (e == i.widget || !i.widget.type.toDOM.parentNode))
      this.index++;
    else {
      let o = new J0(this.top, e, n, r);
      this.top.children.splice(this.index++, 0, o), this.changed = !0;
    }
  }
  // Make sure a textblock looks and behaves correctly in
  // contentEditable.
  addTextblockHacks() {
    let e = this.top.children[this.index - 1], n = this.top;
    for (; e instanceof Lr; )
      n = e, e = n.children[n.children.length - 1];
    (!e || // Empty textblock
    !(e instanceof Hs) || /\n$/.test(e.node.text) || this.view.requiresGeckoHackNode && /\s$/.test(e.node.text)) && ((xt || ht) && e && e.dom.contentEditable == "false" && this.addHackNode("IMG", n), this.addHackNode("BR", this.top));
  }
  addHackNode(e, n) {
    if (n == this.top && this.index < n.children.length && n.children[this.index].matchesHack(e))
      this.index++;
    else {
      let r = document.createElement(e);
      e == "IMG" && (r.className = "ProseMirror-separator", r.alt = ""), e == "BR" && (r.className = "ProseMirror-trailingBreak");
      let i = new Z0(this.top, [], r, null);
      n != this.top ? n.children.push(i) : n.children.splice(this.index++, 0, i), this.changed = !0;
    }
  }
  isLocked(e) {
    return this.lock && (e == this.lock || e.nodeType == 1 && e.contains(this.lock.parentNode));
  }
}
function RT(t, e) {
  let n = e, r = n.children.length, i = t.childCount, o = /* @__PURE__ */ new Map(), a = [];
  e: for (; i > 0; ) {
    let s;
    for (; ; )
      if (r) {
        let l = n.children[r - 1];
        if (l instanceof Lr)
          n = l, r = l.children.length;
        else {
          s = l, r--;
          break;
        }
      } else {
        if (n == e)
          break e;
        r = n.parent.children.indexOf(n), n = n.parent;
      }
    let c = s.node;
    if (c) {
      if (c != t.child(i - 1))
        break;
      --i, o.set(s, i), a.push(s);
    }
  }
  return { index: i, matched: o, matches: a.reverse() };
}
function NT(t, e) {
  return t.type.side - e.type.side;
}
function BT(t, e, n, r) {
  let i = e.locals(t), o = 0;
  if (i.length == 0) {
    for (let l = 0; l < t.childCount; l++) {
      let u = t.child(l);
      r(u, i, e.forChild(o, u), l), o += u.nodeSize;
    }
    return;
  }
  let a = 0, s = [], c = null;
  for (let l = 0; ; ) {
    let u, f;
    for (; a < i.length && i[a].to == o; ) {
      let g = i[a++];
      g.widget && (u ? (f || (f = [u])).push(g) : u = g);
    }
    if (u)
      if (f) {
        f.sort(NT);
        for (let g = 0; g < f.length; g++)
          n(f[g], l, !!c);
      } else
        n(u, l, !!c);
    let d, h;
    if (c)
      h = -1, d = c, c = null;
    else if (l < t.childCount)
      h = l, d = t.child(l++);
    else
      break;
    for (let g = 0; g < s.length; g++)
      s[g].to <= o && s.splice(g--, 1);
    for (; a < i.length && i[a].from <= o && i[a].to > o; )
      s.push(i[a++]);
    let p = o + d.nodeSize;
    if (d.isText) {
      let g = p;
      a < i.length && i[a].from < g && (g = i[a].from);
      for (let y = 0; y < s.length; y++)
        s[y].to < g && (g = s[y].to);
      g < p && (c = d.cut(g - o), d = d.cut(0, g - o), p = g, h = -1);
    } else
      for (; a < i.length && i[a].to < p; )
        a++;
    let m = d.isInline && !d.isLeaf ? s.filter((g) => !g.inline) : s.slice();
    r(d, m, e.forChild(o, d), h), o = p;
  }
}
function IT(t) {
  if (t.nodeName == "UL" || t.nodeName == "OL") {
    let e = t.style.cssText;
    t.style.cssText = e + "; list-style: square !important", window.getComputedStyle(t).listStyle, t.style.cssText = e;
  }
}
function MT(t, e, n, r) {
  for (let i = 0, o = 0; i < t.childCount && o <= r; ) {
    let a = t.child(i++), s = o;
    if (o += a.nodeSize, !a.isText)
      continue;
    let c = a.text;
    for (; i < t.childCount; ) {
      let l = t.child(i++);
      if (o += l.nodeSize, !l.isText)
        break;
      c += l.text;
    }
    if (o >= n) {
      if (o >= r && c.slice(r - e.length - s, r - s) == e)
        return r - e.length;
      let l = s < r ? c.lastIndexOf(e, r - s - 1) : -1;
      if (l >= 0 && l + e.length + s >= n)
        return s + l;
      if (n == r && c.length >= r + e.length - s && c.slice(r - s, r - s + e.length) == e)
        return r;
    }
  }
  return -1;
}
function gd(t, e, n, r, i) {
  let o = [];
  for (let a = 0, s = 0; a < t.length; a++) {
    let c = t[a], l = s, u = s += c.size;
    l >= n || u <= e ? o.push(c) : (l < e && o.push(c.slice(0, e - l, r)), i && (o.push(i), i = void 0), u > n && o.push(c.slice(n - l, c.size, r)));
  }
  return o;
}
function ah(t, e = null) {
  let n = t.domSelectionRange(), r = t.state.doc;
  if (!n.focusNode)
    return null;
  let i = t.docView.nearestDesc(n.focusNode), o = i && i.size == 0, a = t.docView.posFromDOM(n.focusNode, n.focusOffset, 1);
  if (a < 0)
    return null;
  let s = r.resolve(a), c, l;
  if (Vs(n)) {
    for (c = a; i && !i.node; )
      i = i.parent;
    let f = i.node;
    if (i && f.isAtom && Ue.isSelectable(f) && i.parent && !(f.isInline && lT(n.focusNode, n.focusOffset, i.dom))) {
      let d = i.posBefore;
      l = new Ue(a == d ? s : r.resolve(d));
    }
  } else {
    if (n instanceof t.dom.ownerDocument.defaultView.Selection && n.rangeCount > 1) {
      let f = a, d = a;
      for (let h = 0; h < n.rangeCount; h++) {
        let p = n.getRangeAt(h);
        f = Math.min(f, t.docView.posFromDOM(p.startContainer, p.startOffset, 1)), d = Math.max(d, t.docView.posFromDOM(p.endContainer, p.endOffset, -1));
      }
      if (f < 0)
        return null;
      [c, a] = d == t.state.selection.anchor ? [d, f] : [f, d], s = r.resolve(a);
    } else
      c = t.docView.posFromDOM(n.anchorNode, n.anchorOffset, 1);
    if (c < 0)
      return null;
  }
  let u = r.resolve(c);
  if (!l) {
    let f = e == "pointer" || t.state.selection.head < s.pos && !o ? 1 : -1;
    l = sh(t, u, s, f);
  }
  return l;
}
function tv(t) {
  return t.editable ? t.hasFocus() : rv(t) && document.activeElement && document.activeElement.contains(t.dom);
}
function Rn(t, e = !1) {
  let n = t.state.selection;
  if (nv(t, n), !!tv(t)) {
    if (!e && t.input.mouseDown && t.input.mouseDown.allowDefault && ht) {
      let r = t.domSelectionRange(), i = t.domObserver.currentSelection;
      if (r.anchorNode && i.anchorNode && Wr(r.anchorNode, r.anchorOffset, i.anchorNode, i.anchorOffset)) {
        t.input.mouseDown.delayedSelectionSync = !0, t.domObserver.setCurSelection();
        return;
      }
    }
    if (t.domObserver.disconnectSelection(), t.cursorWrapper)
      LT(t);
    else {
      let { anchor: r, head: i } = n, o, a;
      wg && !(n instanceof Be) && (n.$from.parent.inlineContent || (o = _g(t, n.from)), !n.empty && !n.$from.parent.inlineContent && (a = _g(t, n.to))), t.docView.setSelection(r, i, t, e), wg && (o && Tg(o), a && Tg(a)), n.visible ? t.dom.classList.remove("ProseMirror-hideselection") : (t.dom.classList.add("ProseMirror-hideselection"), "onselectionchange" in document && WT(t));
    }
    t.domObserver.setCurSelection(), t.domObserver.connectSelection();
  }
}
const wg = xt || ht && j0 < 63;
function _g(t, e) {
  let { node: n, offset: r } = t.docView.domFromPos(e, 0), i = r < n.childNodes.length ? n.childNodes[r] : null, o = r ? n.childNodes[r - 1] : null;
  if (xt && i && i.contentEditable == "false")
    return Lc(i);
  if ((!i || i.contentEditable == "false") && (!o || o.contentEditable == "false")) {
    if (i)
      return Lc(i);
    if (o)
      return Lc(o);
  }
}
function Lc(t) {
  return t.contentEditable = "true", xt && t.draggable && (t.draggable = !1, t.wasDraggable = !0), t;
}
function Tg(t) {
  t.contentEditable = "false", t.wasDraggable && (t.draggable = !0, t.wasDraggable = null);
}
function WT(t) {
  let e = t.dom.ownerDocument;
  e.removeEventListener("selectionchange", t.input.hideSelectionGuard);
  let n = t.domSelectionRange(), r = n.anchorNode, i = n.anchorOffset;
  e.addEventListener("selectionchange", t.input.hideSelectionGuard = () => {
    (n.anchorNode != r || n.anchorOffset != i) && (e.removeEventListener("selectionchange", t.input.hideSelectionGuard), setTimeout(() => {
      (!tv(t) || t.state.selection.visible) && t.dom.classList.remove("ProseMirror-hideselection");
    }, 20));
  });
}
function LT(t) {
  let e = t.domSelection(), n = document.createRange();
  if (!e)
    return;
  let r = t.cursorWrapper.dom, i = r.nodeName == "IMG";
  i ? n.setStart(r.parentNode, lt(r) + 1) : n.setStart(r, 0), n.collapse(!0), e.removeAllRanges(), e.addRange(n), !i && !t.state.selection.visible && At && ar <= 11 && (r.disabled = !0, r.disabled = !1);
}
function nv(t, e) {
  if (e instanceof Ue) {
    let n = t.docView.descAt(e.from);
    n != t.lastSelectedViewDesc && (Eg(t), n && n.selectNode(), t.lastSelectedViewDesc = n);
  } else
    Eg(t);
}
function Eg(t) {
  t.lastSelectedViewDesc && (t.lastSelectedViewDesc.parent && t.lastSelectedViewDesc.deselectNode(), t.lastSelectedViewDesc = void 0);
}
function sh(t, e, n, r) {
  return t.someProp("createSelectionBetween", (i) => i(t, e, n)) || Be.between(e, n, r);
}
function Cg(t) {
  return t.editable && !t.hasFocus() ? !1 : rv(t);
}
function rv(t) {
  let e = t.domSelectionRange();
  if (!e.anchorNode)
    return !1;
  try {
    return t.dom.contains(e.anchorNode.nodeType == 3 ? e.anchorNode.parentNode : e.anchorNode) && (t.editable || t.dom.contains(e.focusNode.nodeType == 3 ? e.focusNode.parentNode : e.focusNode));
  } catch {
    return !1;
  }
}
function PT(t) {
  let e = t.docView.domFromPos(t.state.selection.anchor, 0), n = t.domSelectionRange();
  return Wr(e.node, e.offset, n.anchorNode, n.anchorOffset);
}
function md(t, e) {
  let { $anchor: n, $head: r } = t.selection, i = e > 0 ? n.max(r) : n.min(r), o = i.parent.inlineContent ? i.depth ? t.doc.resolve(e > 0 ? i.after() : i.before()) : null : i;
  return o && Oe.findFrom(o, e);
}
function Kn(t, e) {
  return t.dispatch(t.state.tr.setSelection(e).scrollIntoView()), !0;
}
function Sg(t, e, n) {
  let r = t.state.selection;
  if (r instanceof Be)
    if (n.indexOf("s") > -1) {
      let { $head: i } = r, o = i.textOffset ? null : e < 0 ? i.nodeBefore : i.nodeAfter;
      if (!o || o.isText || !o.isLeaf)
        return !1;
      let a = t.state.doc.resolve(i.pos + o.nodeSize * (e < 0 ? -1 : 1));
      return Kn(t, new Be(r.$anchor, a));
    } else if (r.empty) {
      if (t.endOfTextblock(e > 0 ? "forward" : "backward")) {
        let i = md(t.state, e);
        return i && i instanceof Ue ? Kn(t, i) : !1;
      } else if (!($t && n.indexOf("m") > -1)) {
        let i = r.$head, o = i.textOffset ? null : e < 0 ? i.nodeBefore : i.nodeAfter, a;
        if (!o || o.isText)
          return !1;
        let s = e < 0 ? i.pos - o.nodeSize : i.pos;
        return o.isAtom || (a = t.docView.descAt(s)) && !a.contentDOM ? Ue.isSelectable(o) ? Kn(t, new Ue(e < 0 ? t.state.doc.resolve(i.pos - o.nodeSize) : i)) : Io ? Kn(t, new Be(t.state.doc.resolve(e < 0 ? s : s + o.nodeSize))) : !1 : !1;
      }
    } else return !1;
  else {
    if (r instanceof Ue && r.node.isInline)
      return Kn(t, new Be(e > 0 ? r.$to : r.$from));
    {
      let i = md(t.state, e);
      return i ? Kn(t, i) : !1;
    }
  }
}
function ns(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function no(t, e) {
  let n = t.pmViewDesc;
  return n && n.size == 0 && (e < 0 || t.nextSibling || t.nodeName != "BR");
}
function ni(t, e) {
  return e < 0 ? qT(t) : zT(t);
}
function qT(t) {
  let e = t.domSelectionRange(), n = e.focusNode, r = e.focusOffset;
  if (!n)
    return;
  let i, o, a = !1;
  for (rn && n.nodeType == 1 && r < ns(n) && no(n.childNodes[r], -1) && (a = !0); ; )
    if (r > 0) {
      if (n.nodeType != 1)
        break;
      {
        let s = n.childNodes[r - 1];
        if (no(s, -1))
          i = n, o = --r;
        else if (s.nodeType == 3)
          n = s, r = n.nodeValue.length;
        else
          break;
      }
    } else {
      if (iv(n))
        break;
      {
        let s = n.previousSibling;
        for (; s && no(s, -1); )
          i = n.parentNode, o = lt(s), s = s.previousSibling;
        if (s)
          n = s, r = ns(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          r = 0;
        }
      }
    }
  a ? yd(t, n, r) : i && yd(t, i, o);
}
function zT(t) {
  let e = t.domSelectionRange(), n = e.focusNode, r = e.focusOffset;
  if (!n)
    return;
  let i = ns(n), o, a;
  for (; ; )
    if (r < i) {
      if (n.nodeType != 1)
        break;
      let s = n.childNodes[r];
      if (no(s, 1))
        o = n, a = ++r;
      else
        break;
    } else {
      if (iv(n))
        break;
      {
        let s = n.nextSibling;
        for (; s && no(s, 1); )
          o = s.parentNode, a = lt(s) + 1, s = s.nextSibling;
        if (s)
          n = s, r = 0, i = ns(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          r = i = 0;
        }
      }
    }
  o && yd(t, o, a);
}
function iv(t) {
  let e = t.pmViewDesc;
  return e && e.node && e.node.isBlock;
}
function jT(t, e) {
  for (; t && e == t.childNodes.length && !Bo(t); )
    e = lt(t) + 1, t = t.parentNode;
  for (; t && e < t.childNodes.length; ) {
    let n = t.childNodes[e];
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && n.contentEditable == "false")
      break;
    t = n, e = 0;
  }
}
function $T(t, e) {
  for (; t && !e && !Bo(t); )
    e = lt(t), t = t.parentNode;
  for (; t && e; ) {
    let n = t.childNodes[e - 1];
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && n.contentEditable == "false")
      break;
    t = n, e = t.childNodes.length;
  }
}
function yd(t, e, n) {
  if (e.nodeType != 3) {
    let o, a;
    (a = jT(e, n)) ? (e = a, n = 0) : (o = $T(e, n)) && (e = o, n = o.nodeValue.length);
  }
  let r = t.domSelection();
  if (!r)
    return;
  if (Vs(r)) {
    let o = document.createRange();
    o.setEnd(e, n), o.setStart(e, n), r.removeAllRanges(), r.addRange(o);
  } else r.extend && r.extend(e, n);
  t.domObserver.setCurSelection();
  let { state: i } = t;
  setTimeout(() => {
    t.state == i && Rn(t);
  }, 50);
}
function Ag(t, e) {
  let n = t.state.doc.resolve(e);
  if (!(ht || dT) && n.parent.inlineContent) {
    let i = t.coordsAtPos(e);
    if (e > n.start()) {
      let o = t.coordsAtPos(e - 1), a = (o.top + o.bottom) / 2;
      if (a > i.top && a < i.bottom && Math.abs(o.left - i.left) > 1)
        return o.left < i.left ? "ltr" : "rtl";
    }
    if (e < n.end()) {
      let o = t.coordsAtPos(e + 1), a = (o.top + o.bottom) / 2;
      if (a > i.top && a < i.bottom && Math.abs(o.left - i.left) > 1)
        return o.left > i.left ? "ltr" : "rtl";
    }
  }
  return getComputedStyle(t.dom).direction == "rtl" ? "rtl" : "ltr";
}
function Ug(t, e, n) {
  let r = t.state.selection;
  if (r instanceof Be && !r.empty || n.indexOf("s") > -1 || $t && n.indexOf("m") > -1)
    return !1;
  let { $from: i, $to: o } = r;
  if (!i.parent.inlineContent || t.endOfTextblock(e < 0 ? "up" : "down")) {
    let a = md(t.state, e);
    if (a && a instanceof Ue)
      return Kn(t, a);
  }
  if (!i.parent.inlineContent) {
    let a = e < 0 ? i : o, s = r instanceof Xt ? Oe.near(a, e) : Oe.findFrom(a, e);
    return s ? Kn(t, s) : !1;
  }
  return !1;
}
function kg(t, e) {
  if (!(t.state.selection instanceof Be))
    return !0;
  let { $head: n, $anchor: r, empty: i } = t.state.selection;
  if (!n.sameParent(r))
    return !0;
  if (!i)
    return !1;
  if (t.endOfTextblock(e > 0 ? "forward" : "backward"))
    return !0;
  let o = !n.textOffset && (e < 0 ? n.nodeBefore : n.nodeAfter);
  if (o && !o.isText) {
    let a = t.state.tr;
    return e < 0 ? a.delete(n.pos - o.nodeSize, n.pos) : a.delete(n.pos, n.pos + o.nodeSize), t.dispatch(a), !0;
  }
  return !1;
}
function Fg(t, e, n) {
  t.domObserver.stop(), e.contentEditable = n, t.domObserver.start();
}
function VT(t) {
  if (!xt || t.state.selection.$head.parentOffset > 0)
    return !1;
  let { focusNode: e, focusOffset: n } = t.domSelectionRange();
  if (e && e.nodeType == 1 && n == 0 && e.firstChild && e.firstChild.contentEditable == "false") {
    let r = e.firstChild;
    Fg(t, r, "true"), setTimeout(() => Fg(t, r, "false"), 20);
  }
  return !1;
}
function HT(t) {
  let e = "";
  return t.ctrlKey && (e += "c"), t.metaKey && (e += "m"), t.altKey && (e += "a"), t.shiftKey && (e += "s"), e;
}
function XT(t, e) {
  let n = e.keyCode, r = HT(e);
  if (n == 8 || $t && n == 72 && r == "c")
    return kg(t, -1) || ni(t, -1);
  if (n == 46 && !e.shiftKey || $t && n == 68 && r == "c")
    return kg(t, 1) || ni(t, 1);
  if (n == 13 || n == 27)
    return !0;
  if (n == 37 || $t && n == 66 && r == "c") {
    let i = n == 37 ? Ag(t, t.state.selection.from) == "ltr" ? -1 : 1 : -1;
    return Sg(t, i, r) || ni(t, i);
  } else if (n == 39 || $t && n == 70 && r == "c") {
    let i = n == 39 ? Ag(t, t.state.selection.from) == "ltr" ? 1 : -1 : 1;
    return Sg(t, i, r) || ni(t, i);
  } else {
    if (n == 38 || $t && n == 80 && r == "c")
      return Ug(t, -1, r) || ni(t, -1);
    if (n == 40 || $t && n == 78 && r == "c")
      return VT(t) || Ug(t, 1, r) || ni(t, 1);
    if (r == ($t ? "m" : "c") && (n == 66 || n == 73 || n == 89 || n == 90))
      return !0;
  }
  return !1;
}
function ch(t, e) {
  t.someProp("transformCopied", (h) => {
    e = h(e, t);
  });
  let n = [], { content: r, openStart: i, openEnd: o } = e;
  for (; i > 1 && o > 1 && r.childCount == 1 && r.firstChild.childCount == 1; ) {
    i--, o--;
    let h = r.firstChild;
    n.push(h.type.name, h.attrs != h.type.defaultAttrs ? h.attrs : null), r = h.content;
  }
  let a = t.someProp("clipboardSerializer") || Ti.fromSchema(t.state.schema), s = uv(), c = s.createElement("div");
  c.appendChild(a.serializeFragment(r, { document: s }));
  let l = c.firstChild, u, f = 0;
  for (; l && l.nodeType == 1 && (u = lv[l.nodeName.toLowerCase()]); ) {
    for (let h = u.length - 1; h >= 0; h--) {
      let p = s.createElement(u[h]);
      for (; c.firstChild; )
        p.appendChild(c.firstChild);
      c.appendChild(p), f++;
    }
    l = c.firstChild;
  }
  l && l.nodeType == 1 && l.setAttribute("data-pm-slice", `${i} ${o}${f ? ` -${f}` : ""} ${JSON.stringify(n)}`);
  let d = t.someProp("clipboardTextSerializer", (h) => h(e, t)) || e.content.textBetween(0, e.content.size, `

`);
  return { dom: c, text: d, slice: e };
}
function ov(t, e, n, r, i) {
  let o = i.parent.type.spec.code, a, s;
  if (!n && !e)
    return null;
  let c = e && (r || o || !n);
  if (c) {
    if (t.someProp("transformPastedText", (d) => {
      e = d(e, o || r, t);
    }), o)
      return e ? new _e(ge.from(t.state.schema.text(e.replace(/\r\n?/g, `
`))), 0, 0) : _e.empty;
    let f = t.someProp("clipboardTextParser", (d) => d(e, i, r, t));
    if (f)
      s = f;
    else {
      let d = i.marks(), { schema: h } = t.state, p = Ti.fromSchema(h);
      a = document.createElement("div"), e.split(/(?:\r\n?|\n)+/).forEach((m) => {
        let g = a.appendChild(document.createElement("p"));
        m && g.appendChild(p.serializeNode(h.text(m, d)));
      });
    }
  } else
    t.someProp("transformPastedHTML", (f) => {
      n = f(n, t);
    }), a = ZT(n), Io && YT(a);
  let l = a && a.querySelector("[data-pm-slice]"), u = l && /^(\d+) (\d+)(?: -(\d+))? (.*)/.exec(l.getAttribute("data-pm-slice") || "");
  if (u && u[3])
    for (let f = +u[3]; f > 0; f--) {
      let d = a.firstChild;
      for (; d && d.nodeType != 1; )
        d = d.nextSibling;
      if (!d)
        break;
      a = d;
    }
  if (s || (s = (t.someProp("clipboardParser") || t.someProp("domParser") || fo.fromSchema(t.state.schema)).parseSlice(a, {
    preserveWhitespace: !!(c || u),
    context: i,
    ruleFromNode(d) {
      return d.nodeName == "BR" && !d.nextSibling && d.parentNode && !GT.test(d.parentNode.nodeName) ? { ignore: !0 } : null;
    }
  })), u)
    s = QT(Og(s, +u[1], +u[2]), u[4]);
  else if (s = _e.maxOpen(KT(s.content, i), !0), s.openStart || s.openEnd) {
    let f = 0, d = 0;
    for (let h = s.content.firstChild; f < s.openStart && !h.type.spec.isolating; f++, h = h.firstChild)
      ;
    for (let h = s.content.lastChild; d < s.openEnd && !h.type.spec.isolating; d++, h = h.lastChild)
      ;
    s = Og(s, f, d);
  }
  return t.someProp("transformPasted", (f) => {
    s = f(s, t);
  }), s;
}
const GT = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;
function KT(t, e) {
  if (t.childCount < 2)
    return t;
  for (let n = e.depth; n >= 0; n--) {
    let i = e.node(n).contentMatchAt(e.index(n)), o, a = [];
    if (t.forEach((s) => {
      if (!a)
        return;
      let c = i.findWrapping(s.type), l;
      if (!c)
        return a = null;
      if (l = a.length && o.length && sv(c, o, s, a[a.length - 1], 0))
        a[a.length - 1] = l;
      else {
        a.length && (a[a.length - 1] = cv(a[a.length - 1], o.length));
        let u = av(s, c);
        a.push(u), i = i.matchType(u.type), o = c;
      }
    }), a)
      return ge.from(a);
  }
  return t;
}
function av(t, e, n = 0) {
  for (let r = e.length - 1; r >= n; r--)
    t = e[r].create(null, ge.from(t));
  return t;
}
function sv(t, e, n, r, i) {
  if (i < t.length && i < e.length && t[i] == e[i]) {
    let o = sv(t, e, n, r.lastChild, i + 1);
    if (o)
      return r.copy(r.content.replaceChild(r.childCount - 1, o));
    if (r.contentMatchAt(r.childCount).matchType(i == t.length - 1 ? n.type : t[i + 1]))
      return r.copy(r.content.append(ge.from(av(n, t, i + 1))));
  }
}
function cv(t, e) {
  if (e == 0)
    return t;
  let n = t.content.replaceChild(t.childCount - 1, cv(t.lastChild, e - 1)), r = t.contentMatchAt(t.childCount).fillBefore(ge.empty, !0);
  return t.copy(n.append(r));
}
function bd(t, e, n, r, i, o) {
  let a = e < 0 ? t.firstChild : t.lastChild, s = a.content;
  return t.childCount > 1 && (o = 0), i < r - 1 && (s = bd(s, e, n, r, i + 1, o)), i >= n && (s = e < 0 ? a.contentMatchAt(0).fillBefore(s, o <= i).append(s) : s.append(a.contentMatchAt(a.childCount).fillBefore(ge.empty, !0))), t.replaceChild(e < 0 ? 0 : t.childCount - 1, a.copy(s));
}
function Og(t, e, n) {
  return e < t.openStart && (t = new _e(bd(t.content, -1, e, t.openStart, 0, t.openEnd), e, t.openEnd)), n < t.openEnd && (t = new _e(bd(t.content, 1, n, t.openEnd, 0, 0), t.openStart, n)), t;
}
const lv = {
  thead: ["table"],
  tbody: ["table"],
  tfoot: ["table"],
  caption: ["table"],
  colgroup: ["table"],
  col: ["table", "colgroup"],
  tr: ["table", "tbody"],
  td: ["table", "tbody", "tr"],
  th: ["table", "tbody", "tr"]
};
let Rg = null;
function uv() {
  return Rg || (Rg = document.implementation.createHTMLDocument("title"));
}
let Pc = null;
function JT(t) {
  let e = window.trustedTypes;
  return e ? (Pc || (Pc = e.createPolicy("ProseMirrorClipboard", { createHTML: (n) => n })), Pc.createHTML(t)) : t;
}
function ZT(t) {
  let e = /^(\s*<meta [^>]*>)*/.exec(t);
  e && (t = t.slice(e[0].length));
  let n = uv().createElement("div"), r = /<([a-z][^>\s]+)/i.exec(t), i;
  if ((i = r && lv[r[1].toLowerCase()]) && (t = i.map((o) => "<" + o + ">").join("") + t + i.map((o) => "</" + o + ">").reverse().join("")), n.innerHTML = JT(t), i)
    for (let o = 0; o < i.length; o++)
      n = n.querySelector(i[o]) || n;
  return n;
}
function YT(t) {
  let e = t.querySelectorAll(ht ? "span:not([class]):not([style])" : "span.Apple-converted-space");
  for (let n = 0; n < e.length; n++) {
    let r = e[n];
    r.childNodes.length == 1 && r.textContent == " " && r.parentNode && r.parentNode.replaceChild(t.ownerDocument.createTextNode(" "), r);
  }
}
function QT(t, e) {
  if (!t.size)
    return t;
  let n = t.content.firstChild.type.schema, r;
  try {
    r = JSON.parse(e);
  } catch {
    return t;
  }
  let { content: i, openStart: o, openEnd: a } = t;
  for (let s = r.length - 2; s >= 0; s -= 2) {
    let c = n.nodes[r[s]];
    if (!c || c.hasRequiredAttrs())
      break;
    i = ge.from(c.create(r[s + 1], i)), o++, a++;
  }
  return new _e(i, o, a);
}
const wt = {}, _t = {}, e3 = { touchstart: !0, touchmove: !0 };
class t3 {
  constructor() {
    this.shiftKey = !1, this.mouseDown = null, this.lastKeyCode = null, this.lastKeyCodeTime = 0, this.lastClick = { time: 0, x: 0, y: 0, type: "" }, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastIOSEnter = 0, this.lastIOSEnterFallbackTimeout = -1, this.lastFocus = 0, this.lastTouch = 0, this.lastChromeDelete = 0, this.composing = !1, this.compositionNode = null, this.composingTimeout = -1, this.compositionNodes = [], this.compositionEndedAt = -2e8, this.compositionID = 1, this.compositionPendingChanges = 0, this.domChangeCount = 0, this.eventHandlers = /* @__PURE__ */ Object.create(null), this.hideSelectionGuard = null;
  }
}
function n3(t) {
  for (let e in wt) {
    let n = wt[e];
    t.dom.addEventListener(e, t.input.eventHandlers[e] = (r) => {
      i3(t, r) && !lh(t, r) && (t.editable || !(r.type in _t)) && n(t, r);
    }, e3[e] ? { passive: !0 } : void 0);
  }
  xt && t.dom.addEventListener("input", () => null), vd(t);
}
function ir(t, e) {
  t.input.lastSelectionOrigin = e, t.input.lastSelectionTime = Date.now();
}
function r3(t) {
  t.domObserver.stop();
  for (let e in t.input.eventHandlers)
    t.dom.removeEventListener(e, t.input.eventHandlers[e]);
  clearTimeout(t.input.composingTimeout), clearTimeout(t.input.lastIOSEnterFallbackTimeout);
}
function vd(t) {
  t.someProp("handleDOMEvents", (e) => {
    for (let n in e)
      t.input.eventHandlers[n] || t.dom.addEventListener(n, t.input.eventHandlers[n] = (r) => lh(t, r));
  });
}
function lh(t, e) {
  return t.someProp("handleDOMEvents", (n) => {
    let r = n[e.type];
    return r ? r(t, e) || e.defaultPrevented : !1;
  });
}
function i3(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target; n != t.dom; n = n.parentNode)
    if (!n || n.nodeType == 11 || n.pmViewDesc && n.pmViewDesc.stopEvent(e))
      return !1;
  return !0;
}
function o3(t, e) {
  !lh(t, e) && wt[e.type] && (t.editable || !(e.type in _t)) && wt[e.type](t, e);
}
_t.keydown = (t, e) => {
  let n = e;
  if (t.input.shiftKey = n.keyCode == 16 || n.shiftKey, !dv(t, n) && (t.input.lastKeyCode = n.keyCode, t.input.lastKeyCodeTime = Date.now(), !(On && ht && n.keyCode == 13)))
    if (n.keyCode != 229 && t.domObserver.forceFlush(), vi && n.keyCode == 13 && !n.ctrlKey && !n.altKey && !n.metaKey) {
      let r = Date.now();
      t.input.lastIOSEnter = r, t.input.lastIOSEnterFallbackTimeout = setTimeout(() => {
        t.input.lastIOSEnter == r && (t.someProp("handleKeyDown", (i) => i(t, Sr(13, "Enter"))), t.input.lastIOSEnter = 0);
      }, 200);
    } else t.someProp("handleKeyDown", (r) => r(t, n)) || XT(t, n) ? n.preventDefault() : ir(t, "key");
};
_t.keyup = (t, e) => {
  e.keyCode == 16 && (t.input.shiftKey = !1);
};
_t.keypress = (t, e) => {
  let n = e;
  if (dv(t, n) || !n.charCode || n.ctrlKey && !n.altKey || $t && n.metaKey)
    return;
  if (t.someProp("handleKeyPress", (i) => i(t, n))) {
    n.preventDefault();
    return;
  }
  let r = t.state.selection;
  if (!(r instanceof Be) || !r.$from.sameParent(r.$to)) {
    let i = String.fromCharCode(n.charCode);
    !/[\r\n]/.test(i) && !t.someProp("handleTextInput", (o) => o(t, r.$from.pos, r.$to.pos, i)) && t.dispatch(t.state.tr.insertText(i).scrollIntoView()), n.preventDefault();
  }
};
function Xs(t) {
  return { left: t.clientX, top: t.clientY };
}
function a3(t, e) {
  let n = e.x - t.clientX, r = e.y - t.clientY;
  return n * n + r * r < 100;
}
function uh(t, e, n, r, i) {
  if (r == -1)
    return !1;
  let o = t.state.doc.resolve(r);
  for (let a = o.depth + 1; a > 0; a--)
    if (t.someProp(e, (s) => a > o.depth ? s(t, n, o.nodeAfter, o.before(a), i, !0) : s(t, n, o.node(a), o.before(a), i, !1)))
      return !0;
  return !1;
}
function di(t, e, n) {
  if (t.focused || t.focus(), t.state.selection.eq(e))
    return;
  let r = t.state.tr.setSelection(e);
  r.setMeta("pointer", !0), t.dispatch(r);
}
function s3(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.doc.resolve(e), r = n.nodeAfter;
  return r && r.isAtom && Ue.isSelectable(r) ? (di(t, new Ue(n)), !0) : !1;
}
function c3(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.selection, r, i;
  n instanceof Ue && (r = n.node);
  let o = t.state.doc.resolve(e);
  for (let a = o.depth + 1; a > 0; a--) {
    let s = a > o.depth ? o.nodeAfter : o.node(a);
    if (Ue.isSelectable(s)) {
      r && n.$from.depth > 0 && a >= n.$from.depth && o.before(n.$from.depth + 1) == n.$from.pos ? i = o.before(n.$from.depth) : i = o.before(a);
      break;
    }
  }
  return i != null ? (di(t, Ue.create(t.state.doc, i)), !0) : !1;
}
function l3(t, e, n, r, i) {
  return uh(t, "handleClickOn", e, n, r) || t.someProp("handleClick", (o) => o(t, e, r)) || (i ? c3(t, n) : s3(t, n));
}
function u3(t, e, n, r) {
  return uh(t, "handleDoubleClickOn", e, n, r) || t.someProp("handleDoubleClick", (i) => i(t, e, r));
}
function f3(t, e, n, r) {
  return uh(t, "handleTripleClickOn", e, n, r) || t.someProp("handleTripleClick", (i) => i(t, e, r)) || d3(t, n, r);
}
function d3(t, e, n) {
  if (n.button != 0)
    return !1;
  let r = t.state.doc;
  if (e == -1)
    return r.inlineContent ? (di(t, Be.create(r, 0, r.content.size)), !0) : !1;
  let i = r.resolve(e);
  for (let o = i.depth + 1; o > 0; o--) {
    let a = o > i.depth ? i.nodeAfter : i.node(o), s = i.before(o);
    if (a.inlineContent)
      di(t, Be.create(r, s + 1, s + 1 + a.content.size));
    else if (Ue.isSelectable(a))
      di(t, Ue.create(r, s));
    else
      continue;
    return !0;
  }
}
function fh(t) {
  return rs(t);
}
const fv = $t ? "metaKey" : "ctrlKey";
wt.mousedown = (t, e) => {
  let n = e;
  t.input.shiftKey = n.shiftKey;
  let r = fh(t), i = Date.now(), o = "singleClick";
  i - t.input.lastClick.time < 500 && a3(n, t.input.lastClick) && !n[fv] && (t.input.lastClick.type == "singleClick" ? o = "doubleClick" : t.input.lastClick.type == "doubleClick" && (o = "tripleClick")), t.input.lastClick = { time: i, x: n.clientX, y: n.clientY, type: o };
  let a = t.posAtCoords(Xs(n));
  a && (o == "singleClick" ? (t.input.mouseDown && t.input.mouseDown.done(), t.input.mouseDown = new h3(t, a, n, !!r)) : (o == "doubleClick" ? u3 : f3)(t, a.pos, a.inside, n) ? n.preventDefault() : ir(t, "pointer"));
};
class h3 {
  constructor(e, n, r, i) {
    this.view = e, this.pos = n, this.event = r, this.flushed = i, this.delayedSelectionSync = !1, this.mightDrag = null, this.startDoc = e.state.doc, this.selectNode = !!r[fv], this.allowDefault = r.shiftKey;
    let o, a;
    if (n.inside > -1)
      o = e.state.doc.nodeAt(n.inside), a = n.inside;
    else {
      let u = e.state.doc.resolve(n.pos);
      o = u.parent, a = u.depth ? u.before() : 0;
    }
    const s = i ? null : r.target, c = s ? e.docView.nearestDesc(s, !0) : null;
    this.target = c && c.dom.nodeType == 1 ? c.dom : null;
    let { selection: l } = e.state;
    (r.button == 0 && o.type.spec.draggable && o.type.spec.selectable !== !1 || l instanceof Ue && l.from <= a && l.to > a) && (this.mightDrag = {
      node: o,
      pos: a,
      addAttr: !!(this.target && !this.target.draggable),
      setUneditable: !!(this.target && rn && !this.target.hasAttribute("contentEditable"))
    }), this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable) && (this.view.domObserver.stop(), this.mightDrag.addAttr && (this.target.draggable = !0), this.mightDrag.setUneditable && setTimeout(() => {
      this.view.input.mouseDown == this && this.target.setAttribute("contentEditable", "false");
    }, 20), this.view.domObserver.start()), e.root.addEventListener("mouseup", this.up = this.up.bind(this)), e.root.addEventListener("mousemove", this.move = this.move.bind(this)), ir(e, "pointer");
  }
  done() {
    this.view.root.removeEventListener("mouseup", this.up), this.view.root.removeEventListener("mousemove", this.move), this.mightDrag && this.target && (this.view.domObserver.stop(), this.mightDrag.addAttr && this.target.removeAttribute("draggable"), this.mightDrag.setUneditable && this.target.removeAttribute("contentEditable"), this.view.domObserver.start()), this.delayedSelectionSync && setTimeout(() => Rn(this.view)), this.view.input.mouseDown = null;
  }
  up(e) {
    if (this.done(), !this.view.dom.contains(e.target))
      return;
    let n = this.pos;
    this.view.state.doc != this.startDoc && (n = this.view.posAtCoords(Xs(e))), this.updateAllowDefault(e), this.allowDefault || !n ? ir(this.view, "pointer") : l3(this.view, n.pos, n.inside, e, this.selectNode) ? e.preventDefault() : e.button == 0 && (this.flushed || // Safari ignores clicks on draggable elements
    xt && this.mightDrag && !this.mightDrag.node.isAtom || // Chrome will sometimes treat a node selection as a
    // cursor, but still report that the node is selected
    // when asked through getSelection. You'll then get a
    // situation where clicking at the point where that
    // (hidden) cursor is doesn't change the selection, and
    // thus doesn't get a reaction from ProseMirror. This
    // works around that.
    ht && !this.view.state.selection.visible && Math.min(Math.abs(n.pos - this.view.state.selection.from), Math.abs(n.pos - this.view.state.selection.to)) <= 2) ? (di(this.view, Oe.near(this.view.state.doc.resolve(n.pos))), e.preventDefault()) : ir(this.view, "pointer");
  }
  move(e) {
    this.updateAllowDefault(e), ir(this.view, "pointer"), e.buttons == 0 && this.done();
  }
  updateAllowDefault(e) {
    !this.allowDefault && (Math.abs(this.event.x - e.clientX) > 4 || Math.abs(this.event.y - e.clientY) > 4) && (this.allowDefault = !0);
  }
}
wt.touchstart = (t) => {
  t.input.lastTouch = Date.now(), fh(t), ir(t, "pointer");
};
wt.touchmove = (t) => {
  t.input.lastTouch = Date.now(), ir(t, "pointer");
};
wt.contextmenu = (t) => fh(t);
function dv(t, e) {
  return t.composing ? !0 : xt && Math.abs(e.timeStamp - t.input.compositionEndedAt) < 500 ? (t.input.compositionEndedAt = -2e8, !0) : !1;
}
const p3 = On ? 5e3 : -1;
_t.compositionstart = _t.compositionupdate = (t) => {
  if (!t.composing) {
    t.domObserver.flush();
    let { state: e } = t, n = e.selection.$to;
    if (e.selection instanceof Be && (e.storedMarks || !n.textOffset && n.parentOffset && n.nodeBefore.marks.some((r) => r.type.spec.inclusive === !1)))
      t.markCursor = t.state.storedMarks || n.marks(), rs(t, !0), t.markCursor = null;
    else if (rs(t, !e.selection.empty), rn && e.selection.empty && n.parentOffset && !n.textOffset && n.nodeBefore.marks.length) {
      let r = t.domSelectionRange();
      for (let i = r.focusNode, o = r.focusOffset; i && i.nodeType == 1 && o != 0; ) {
        let a = o < 0 ? i.lastChild : i.childNodes[o - 1];
        if (!a)
          break;
        if (a.nodeType == 3) {
          let s = t.domSelection();
          s && s.collapse(a, a.nodeValue.length);
          break;
        } else
          i = a, o = -1;
      }
    }
    t.input.composing = !0;
  }
  hv(t, p3);
};
_t.compositionend = (t, e) => {
  t.composing && (t.input.composing = !1, t.input.compositionEndedAt = e.timeStamp, t.input.compositionPendingChanges = t.domObserver.pendingRecords().length ? t.input.compositionID : 0, t.input.compositionNode = null, t.input.compositionPendingChanges && Promise.resolve().then(() => t.domObserver.flush()), t.input.compositionID++, hv(t, 20));
};
function hv(t, e) {
  clearTimeout(t.input.composingTimeout), e > -1 && (t.input.composingTimeout = setTimeout(() => rs(t), e));
}
function pv(t) {
  for (t.composing && (t.input.composing = !1, t.input.compositionEndedAt = m3()); t.input.compositionNodes.length > 0; )
    t.input.compositionNodes.pop().markParentsDirty();
}
function g3(t) {
  let e = t.domSelectionRange();
  if (!e.focusNode)
    return null;
  let n = sT(e.focusNode, e.focusOffset), r = cT(e.focusNode, e.focusOffset);
  if (n && r && n != r) {
    let i = r.pmViewDesc, o = t.domObserver.lastChangedTextNode;
    if (n == o || r == o)
      return o;
    if (!i || !i.isText(r.nodeValue))
      return r;
    if (t.input.compositionNode == r) {
      let a = n.pmViewDesc;
      if (!(!a || !a.isText(n.nodeValue)))
        return r;
    }
  }
  return n || r;
}
function m3() {
  let t = document.createEvent("Event");
  return t.initEvent("event", !0, !0), t.timeStamp;
}
function rs(t, e = !1) {
  if (!(On && t.domObserver.flushingSoon >= 0)) {
    if (t.domObserver.forceFlush(), pv(t), e || t.docView && t.docView.dirty) {
      let n = ah(t);
      return n && !n.eq(t.state.selection) ? t.dispatch(t.state.tr.setSelection(n)) : (t.markCursor || e) && !t.state.selection.empty ? t.dispatch(t.state.tr.deleteSelection()) : t.updateState(t.state), !0;
    }
    return !1;
  }
}
function y3(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.dom.parentNode.appendChild(document.createElement("div"));
  n.appendChild(e), n.style.cssText = "position: fixed; left: -10000px; top: 10px";
  let r = getSelection(), i = document.createRange();
  i.selectNodeContents(e), t.dom.blur(), r.removeAllRanges(), r.addRange(i), setTimeout(() => {
    n.parentNode && n.parentNode.removeChild(n), t.focus();
  }, 50);
}
const mo = At && ar < 15 || vi && hT < 604;
wt.copy = _t.cut = (t, e) => {
  let n = e, r = t.state.selection, i = n.type == "cut";
  if (r.empty)
    return;
  let o = mo ? null : n.clipboardData, a = r.content(), { dom: s, text: c } = ch(t, a);
  o ? (n.preventDefault(), o.clearData(), o.setData("text/html", s.innerHTML), o.setData("text/plain", c)) : y3(t, s), i && t.dispatch(t.state.tr.deleteSelection().scrollIntoView().setMeta("uiEvent", "cut"));
};
function b3(t) {
  return t.openStart == 0 && t.openEnd == 0 && t.content.childCount == 1 ? t.content.firstChild : null;
}
function v3(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.input.shiftKey || t.state.selection.$from.parent.type.spec.code, r = t.dom.parentNode.appendChild(document.createElement(n ? "textarea" : "div"));
  n || (r.contentEditable = "true"), r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.focus();
  let i = t.input.shiftKey && t.input.lastKeyCode != 45;
  setTimeout(() => {
    t.focus(), r.parentNode && r.parentNode.removeChild(r), n ? yo(t, r.value, null, i, e) : yo(t, r.textContent, r.innerHTML, i, e);
  }, 50);
}
function yo(t, e, n, r, i) {
  let o = ov(t, e, n, r, t.state.selection.$from);
  if (t.someProp("handlePaste", (c) => c(t, i, o || _e.empty)))
    return !0;
  if (!o)
    return !1;
  let a = b3(o), s = a ? t.state.tr.replaceSelectionWith(a, r) : t.state.tr.replaceSelection(o);
  return t.dispatch(s.scrollIntoView().setMeta("paste", !0).setMeta("uiEvent", "paste")), !0;
}
function gv(t) {
  let e = t.getData("text/plain") || t.getData("Text");
  if (e)
    return e;
  let n = t.getData("text/uri-list");
  return n ? n.replace(/\r?\n/g, " ") : "";
}
_t.paste = (t, e) => {
  let n = e;
  if (t.composing && !On)
    return;
  let r = mo ? null : n.clipboardData, i = t.input.shiftKey && t.input.lastKeyCode != 45;
  r && yo(t, gv(r), r.getData("text/html"), i, n) ? n.preventDefault() : v3(t, n);
};
class mv {
  constructor(e, n, r) {
    this.slice = e, this.move = n, this.node = r;
  }
}
const yv = $t ? "altKey" : "ctrlKey";
wt.dragstart = (t, e) => {
  let n = e, r = t.input.mouseDown;
  if (r && r.done(), !n.dataTransfer)
    return;
  let i = t.state.selection, o = i.empty ? null : t.posAtCoords(Xs(n)), a;
  if (!(o && o.pos >= i.from && o.pos <= (i instanceof Ue ? i.to - 1 : i.to))) {
    if (r && r.mightDrag)
      a = Ue.create(t.state.doc, r.mightDrag.pos);
    else if (n.target && n.target.nodeType == 1) {
      let f = t.docView.nearestDesc(n.target, !0);
      f && f.node.type.spec.draggable && f != t.docView && (a = Ue.create(t.state.doc, f.posBefore));
    }
  }
  let s = (a || t.state.selection).content(), { dom: c, text: l, slice: u } = ch(t, s);
  (!n.dataTransfer.files.length || !ht || j0 > 120) && n.dataTransfer.clearData(), n.dataTransfer.setData(mo ? "Text" : "text/html", c.innerHTML), n.dataTransfer.effectAllowed = "copyMove", mo || n.dataTransfer.setData("text/plain", l), t.dragging = new mv(u, !n[yv], a);
};
wt.dragend = (t) => {
  let e = t.dragging;
  window.setTimeout(() => {
    t.dragging == e && (t.dragging = null);
  }, 50);
};
_t.dragover = _t.dragenter = (t, e) => e.preventDefault();
_t.drop = (t, e) => {
  let n = e, r = t.dragging;
  if (t.dragging = null, !n.dataTransfer)
    return;
  let i = t.posAtCoords(Xs(n));
  if (!i)
    return;
  let o = t.state.doc.resolve(i.pos), a = r && r.slice;
  a ? t.someProp("transformPasted", (p) => {
    a = p(a, t);
  }) : a = ov(t, gv(n.dataTransfer), mo ? null : n.dataTransfer.getData("text/html"), !1, o);
  let s = !!(r && !n[yv]);
  if (t.someProp("handleDrop", (p) => p(t, n, a || _e.empty, s))) {
    n.preventDefault();
    return;
  }
  if (!a)
    return;
  n.preventDefault();
  let c = a ? R0(t.state.doc, o.pos, a) : o.pos;
  c == null && (c = o.pos);
  let l = t.state.tr;
  if (s) {
    let { node: p } = r;
    p ? p.replace(l) : l.deleteSelection();
  }
  let u = l.mapping.map(c), f = a.openStart == 0 && a.openEnd == 0 && a.content.childCount == 1, d = l.doc;
  if (f ? l.replaceRangeWith(u, u, a.content.firstChild) : l.replaceRange(u, u, a), l.doc.eq(d))
    return;
  let h = l.doc.resolve(u);
  if (f && Ue.isSelectable(a.content.firstChild) && h.nodeAfter && h.nodeAfter.sameMarkup(a.content.firstChild))
    l.setSelection(new Ue(h));
  else {
    let p = l.mapping.map(c);
    l.mapping.maps[l.mapping.maps.length - 1].forEach((m, g, y, b) => p = b), l.setSelection(sh(t, h, l.doc.resolve(p)));
  }
  t.focus(), t.dispatch(l.setMeta("uiEvent", "drop"));
};
wt.focus = (t) => {
  t.input.lastFocus = Date.now(), t.focused || (t.domObserver.stop(), t.dom.classList.add("ProseMirror-focused"), t.domObserver.start(), t.focused = !0, setTimeout(() => {
    t.docView && t.hasFocus() && !t.domObserver.currentSelection.eq(t.domSelectionRange()) && Rn(t);
  }, 20));
};
wt.blur = (t, e) => {
  let n = e;
  t.focused && (t.domObserver.stop(), t.dom.classList.remove("ProseMirror-focused"), t.domObserver.start(), n.relatedTarget && t.dom.contains(n.relatedTarget) && t.domObserver.currentSelection.clear(), t.focused = !1);
};
wt.beforeinput = (t, e) => {
  if (ht && On && e.inputType == "deleteContentBackward") {
    t.domObserver.flushSoon();
    let { domChangeCount: r } = t.input;
    setTimeout(() => {
      if (t.input.domChangeCount != r || (t.dom.blur(), t.focus(), t.someProp("handleKeyDown", (o) => o(t, Sr(8, "Backspace")))))
        return;
      let { $cursor: i } = t.state.selection;
      i && i.pos > 0 && t.dispatch(t.state.tr.delete(i.pos - 1, i.pos).scrollIntoView());
    }, 50);
  }
};
for (let t in _t)
  wt[t] = _t[t];
function bo(t, e) {
  if (t == e)
    return !0;
  for (let n in t)
    if (t[n] !== e[n])
      return !1;
  for (let n in e)
    if (!(n in t))
      return !1;
  return !0;
}
class is {
  constructor(e, n) {
    this.toDOM = e, this.spec = n || Rr, this.side = this.spec.side || 0;
  }
  map(e, n, r, i) {
    let { pos: o, deleted: a } = e.mapResult(n.from + i, this.side < 0 ? -1 : 1);
    return a ? null : new Dt(o - r, o - r, this);
  }
  valid() {
    return !0;
  }
  eq(e) {
    return this == e || e instanceof is && (this.spec.key && this.spec.key == e.spec.key || this.toDOM == e.toDOM && bo(this.spec, e.spec));
  }
  destroy(e) {
    this.spec.destroy && this.spec.destroy(e);
  }
}
class cr {
  constructor(e, n) {
    this.attrs = e, this.spec = n || Rr;
  }
  map(e, n, r, i) {
    let o = e.map(n.from + i, this.spec.inclusiveStart ? -1 : 1) - r, a = e.map(n.to + i, this.spec.inclusiveEnd ? 1 : -1) - r;
    return o >= a ? null : new Dt(o, a, this);
  }
  valid(e, n) {
    return n.from < n.to;
  }
  eq(e) {
    return this == e || e instanceof cr && bo(this.attrs, e.attrs) && bo(this.spec, e.spec);
  }
  static is(e) {
    return e.type instanceof cr;
  }
  destroy() {
  }
}
class dh {
  constructor(e, n) {
    this.attrs = e, this.spec = n || Rr;
  }
  map(e, n, r, i) {
    let o = e.mapResult(n.from + i, 1);
    if (o.deleted)
      return null;
    let a = e.mapResult(n.to + i, -1);
    return a.deleted || a.pos <= o.pos ? null : new Dt(o.pos - r, a.pos - r, this);
  }
  valid(e, n) {
    let { index: r, offset: i } = e.content.findIndex(n.from), o;
    return i == n.from && !(o = e.child(r)).isText && i + o.nodeSize == n.to;
  }
  eq(e) {
    return this == e || e instanceof dh && bo(this.attrs, e.attrs) && bo(this.spec, e.spec);
  }
  destroy() {
  }
}
class Dt {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.from = e, this.to = n, this.type = r;
  }
  /**
  @internal
  */
  copy(e, n) {
    return new Dt(e, n, this.type);
  }
  /**
  @internal
  */
  eq(e, n = 0) {
    return this.type.eq(e.type) && this.from + n == e.from && this.to + n == e.to;
  }
  /**
  @internal
  */
  map(e, n, r) {
    return this.type.map(e, this, n, r);
  }
  /**
  Creates a widget decoration, which is a DOM node that's shown in
  the document at the given position. It is recommended that you
  delay rendering the widget by passing a function that will be
  called when the widget is actually drawn in a view, but you can
  also directly pass a DOM node. `getPos` can be used to find the
  widget's current document position.
  */
  static widget(e, n, r) {
    return new Dt(e, e, new is(n, r));
  }
  /**
  Creates an inline decoration, which adds the given attributes to
  each inline node between `from` and `to`.
  */
  static inline(e, n, r, i) {
    return new Dt(e, n, new cr(r, i));
  }
  /**
  Creates a node decoration. `from` and `to` should point precisely
  before and after a node in the document. That node, and only that
  node, will receive the given attributes.
  */
  static node(e, n, r, i) {
    return new Dt(e, n, new dh(r, i));
  }
  /**
  The spec provided when creating this decoration. Can be useful
  if you've stored extra information in that object.
  */
  get spec() {
    return this.type.spec;
  }
  /**
  @internal
  */
  get inline() {
    return this.type instanceof cr;
  }
  /**
  @internal
  */
  get widget() {
    return this.type instanceof is;
  }
}
const ci = [], Rr = {};
class Ze {
  /**
  @internal
  */
  constructor(e, n) {
    this.local = e.length ? e : ci, this.children = n.length ? n : ci;
  }
  /**
  Create a set of decorations, using the structure of the given
  document. This will consume (modify) the `decorations` array, so
  you must make a copy if you want need to preserve that.
  */
  static create(e, n) {
    return n.length ? as(n, e, 0, Rr) : dt;
  }
  /**
  Find all decorations in this set which touch the given range
  (including decorations that start or end directly at the
  boundaries) and match the given predicate on their spec. When
  `start` and `end` are omitted, all decorations in the set are
  considered. When `predicate` isn't given, all decorations are
  assumed to match.
  */
  find(e, n, r) {
    let i = [];
    return this.findInner(e ?? 0, n ?? 1e9, i, 0, r), i;
  }
  findInner(e, n, r, i, o) {
    for (let a = 0; a < this.local.length; a++) {
      let s = this.local[a];
      s.from <= n && s.to >= e && (!o || o(s.spec)) && r.push(s.copy(s.from + i, s.to + i));
    }
    for (let a = 0; a < this.children.length; a += 3)
      if (this.children[a] < n && this.children[a + 1] > e) {
        let s = this.children[a] + 1;
        this.children[a + 2].findInner(e - s, n - s, r, i + s, o);
      }
  }
  /**
  Map the set of decorations in response to a change in the
  document.
  */
  map(e, n, r) {
    return this == dt || e.maps.length == 0 ? this : this.mapInner(e, n, 0, 0, r || Rr);
  }
  /**
  @internal
  */
  mapInner(e, n, r, i, o) {
    let a;
    for (let s = 0; s < this.local.length; s++) {
      let c = this.local[s].map(e, r, i);
      c && c.type.valid(n, c) ? (a || (a = [])).push(c) : o.onRemove && o.onRemove(this.local[s].spec);
    }
    return this.children.length ? D3(this.children, a || [], e, n, r, i, o) : a ? new Ze(a.sort(Nr), ci) : dt;
  }
  /**
  Add the given array of decorations to the ones in the set,
  producing a new set. Consumes the `decorations` array. Needs
  access to the current document to create the appropriate tree
  structure.
  */
  add(e, n) {
    return n.length ? this == dt ? Ze.create(e, n) : this.addInner(e, n, 0) : this;
  }
  addInner(e, n, r) {
    let i, o = 0;
    e.forEach((s, c) => {
      let l = c + r, u;
      if (u = vv(n, s, l)) {
        for (i || (i = this.children.slice()); o < i.length && i[o] < c; )
          o += 3;
        i[o] == c ? i[o + 2] = i[o + 2].addInner(s, u, l + 1) : i.splice(o, 0, c, c + s.nodeSize, as(u, s, l + 1, Rr)), o += 3;
      }
    });
    let a = bv(o ? Dv(n) : n, -r);
    for (let s = 0; s < a.length; s++)
      a[s].type.valid(e, a[s]) || a.splice(s--, 1);
    return new Ze(a.length ? this.local.concat(a).sort(Nr) : this.local, i || this.children);
  }
  /**
  Create a new set that contains the decorations in this set, minus
  the ones in the given array.
  */
  remove(e) {
    return e.length == 0 || this == dt ? this : this.removeInner(e, 0);
  }
  removeInner(e, n) {
    let r = this.children, i = this.local;
    for (let o = 0; o < r.length; o += 3) {
      let a, s = r[o] + n, c = r[o + 1] + n;
      for (let u = 0, f; u < e.length; u++)
        (f = e[u]) && f.from > s && f.to < c && (e[u] = null, (a || (a = [])).push(f));
      if (!a)
        continue;
      r == this.children && (r = this.children.slice());
      let l = r[o + 2].removeInner(a, s + 1);
      l != dt ? r[o + 2] = l : (r.splice(o, 3), o -= 3);
    }
    if (i.length) {
      for (let o = 0, a; o < e.length; o++)
        if (a = e[o])
          for (let s = 0; s < i.length; s++)
            i[s].eq(a, n) && (i == this.local && (i = this.local.slice()), i.splice(s--, 1));
    }
    return r == this.children && i == this.local ? this : i.length || r.length ? new Ze(i, r) : dt;
  }
  forChild(e, n) {
    if (this == dt)
      return this;
    if (n.isLeaf)
      return Ze.empty;
    let r, i;
    for (let s = 0; s < this.children.length; s += 3)
      if (this.children[s] >= e) {
        this.children[s] == e && (r = this.children[s + 2]);
        break;
      }
    let o = e + 1, a = o + n.content.size;
    for (let s = 0; s < this.local.length; s++) {
      let c = this.local[s];
      if (c.from < a && c.to > o && c.type instanceof cr) {
        let l = Math.max(o, c.from) - o, u = Math.min(a, c.to) - o;
        l < u && (i || (i = [])).push(c.copy(l, u));
      }
    }
    if (i) {
      let s = new Ze(i.sort(Nr), ci);
      return r ? new Qn([s, r]) : s;
    }
    return r || dt;
  }
  /**
  @internal
  */
  eq(e) {
    if (this == e)
      return !0;
    if (!(e instanceof Ze) || this.local.length != e.local.length || this.children.length != e.children.length)
      return !1;
    for (let n = 0; n < this.local.length; n++)
      if (!this.local[n].eq(e.local[n]))
        return !1;
    for (let n = 0; n < this.children.length; n += 3)
      if (this.children[n] != e.children[n] || this.children[n + 1] != e.children[n + 1] || !this.children[n + 2].eq(e.children[n + 2]))
        return !1;
    return !0;
  }
  /**
  @internal
  */
  locals(e) {
    return hh(this.localsInner(e));
  }
  /**
  @internal
  */
  localsInner(e) {
    if (this == dt)
      return ci;
    if (e.inlineContent || !this.local.some(cr.is))
      return this.local;
    let n = [];
    for (let r = 0; r < this.local.length; r++)
      this.local[r].type instanceof cr || n.push(this.local[r]);
    return n;
  }
  forEachSet(e) {
    e(this);
  }
}
Ze.empty = new Ze([], []);
Ze.removeOverlap = hh;
const dt = Ze.empty;
class Qn {
  constructor(e) {
    this.members = e;
  }
  map(e, n) {
    const r = this.members.map((i) => i.map(e, n, Rr));
    return Qn.from(r);
  }
  forChild(e, n) {
    if (n.isLeaf)
      return Ze.empty;
    let r = [];
    for (let i = 0; i < this.members.length; i++) {
      let o = this.members[i].forChild(e, n);
      o != dt && (o instanceof Qn ? r = r.concat(o.members) : r.push(o));
    }
    return Qn.from(r);
  }
  eq(e) {
    if (!(e instanceof Qn) || e.members.length != this.members.length)
      return !1;
    for (let n = 0; n < this.members.length; n++)
      if (!this.members[n].eq(e.members[n]))
        return !1;
    return !0;
  }
  locals(e) {
    let n, r = !0;
    for (let i = 0; i < this.members.length; i++) {
      let o = this.members[i].localsInner(e);
      if (o.length)
        if (!n)
          n = o;
        else {
          r && (n = n.slice(), r = !1);
          for (let a = 0; a < o.length; a++)
            n.push(o[a]);
        }
    }
    return n ? hh(r ? n : n.sort(Nr)) : ci;
  }
  // Create a group for the given array of decoration sets, or return
  // a single set when possible.
  static from(e) {
    switch (e.length) {
      case 0:
        return dt;
      case 1:
        return e[0];
      default:
        return new Qn(e.every((n) => n instanceof Ze) ? e : e.reduce((n, r) => n.concat(r instanceof Ze ? r : r.members), []));
    }
  }
  forEachSet(e) {
    for (let n = 0; n < this.members.length; n++)
      this.members[n].forEachSet(e);
  }
}
function D3(t, e, n, r, i, o, a) {
  let s = t.slice();
  for (let l = 0, u = o; l < n.maps.length; l++) {
    let f = 0;
    n.maps[l].forEach((d, h, p, m) => {
      let g = m - p - (h - d);
      for (let y = 0; y < s.length; y += 3) {
        let b = s[y + 1];
        if (b < 0 || d > b + u - f)
          continue;
        let v = s[y] + u - f;
        h >= v ? s[y + 1] = d <= v ? -2 : -1 : d >= u && g && (s[y] += g, s[y + 1] += g);
      }
      f += g;
    }), u = n.maps[l].map(u, -1);
  }
  let c = !1;
  for (let l = 0; l < s.length; l += 3)
    if (s[l + 1] < 0) {
      if (s[l + 1] == -2) {
        c = !0, s[l + 1] = -1;
        continue;
      }
      let u = n.map(t[l] + o), f = u - i;
      if (f < 0 || f >= r.content.size) {
        c = !0;
        continue;
      }
      let d = n.map(t[l + 1] + o, -1), h = d - i, { index: p, offset: m } = r.content.findIndex(f), g = r.maybeChild(p);
      if (g && m == f && m + g.nodeSize == h) {
        let y = s[l + 2].mapInner(n, g, u + 1, t[l] + o + 1, a);
        y != dt ? (s[l] = f, s[l + 1] = h, s[l + 2] = y) : (s[l + 1] = -2, c = !0);
      } else
        c = !0;
    }
  if (c) {
    let l = x3(s, t, e, n, i, o, a), u = as(l, r, 0, a);
    e = u.local;
    for (let f = 0; f < s.length; f += 3)
      s[f + 1] < 0 && (s.splice(f, 3), f -= 3);
    for (let f = 0, d = 0; f < u.children.length; f += 3) {
      let h = u.children[f];
      for (; d < s.length && s[d] < h; )
        d += 3;
      s.splice(d, 0, u.children[f], u.children[f + 1], u.children[f + 2]);
    }
  }
  return new Ze(e.sort(Nr), s);
}
function bv(t, e) {
  if (!e || !t.length)
    return t;
  let n = [];
  for (let r = 0; r < t.length; r++) {
    let i = t[r];
    n.push(new Dt(i.from + e, i.to + e, i.type));
  }
  return n;
}
function x3(t, e, n, r, i, o, a) {
  function s(c, l) {
    for (let u = 0; u < c.local.length; u++) {
      let f = c.local[u].map(r, i, l);
      f ? n.push(f) : a.onRemove && a.onRemove(c.local[u].spec);
    }
    for (let u = 0; u < c.children.length; u += 3)
      s(c.children[u + 2], c.children[u] + l + 1);
  }
  for (let c = 0; c < t.length; c += 3)
    t[c + 1] == -1 && s(t[c + 2], e[c] + o + 1);
  return n;
}
function vv(t, e, n) {
  if (e.isLeaf)
    return null;
  let r = n + e.nodeSize, i = null;
  for (let o = 0, a; o < t.length; o++)
    (a = t[o]) && a.from > n && a.to < r && ((i || (i = [])).push(a), t[o] = null);
  return i;
}
function Dv(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    t[n] != null && e.push(t[n]);
  return e;
}
function as(t, e, n, r) {
  let i = [], o = !1;
  e.forEach((s, c) => {
    let l = vv(t, s, c + n);
    if (l) {
      o = !0;
      let u = as(l, s, n + c + 1, r);
      u != dt && i.push(c, c + s.nodeSize, u);
    }
  });
  let a = bv(o ? Dv(t) : t, -n).sort(Nr);
  for (let s = 0; s < a.length; s++)
    a[s].type.valid(e, a[s]) || (r.onRemove && r.onRemove(a[s].spec), a.splice(s--, 1));
  return a.length || i.length ? new Ze(a, i) : dt;
}
function Nr(t, e) {
  return t.from - e.from || t.to - e.to;
}
function hh(t) {
  let e = t;
  for (let n = 0; n < e.length - 1; n++) {
    let r = e[n];
    if (r.from != r.to)
      for (let i = n + 1; i < e.length; i++) {
        let o = e[i];
        if (o.from == r.from) {
          o.to != r.to && (e == t && (e = t.slice()), e[i] = o.copy(o.from, r.to), Ng(e, i + 1, o.copy(r.to, o.to)));
          continue;
        } else {
          o.from < r.to && (e == t && (e = t.slice()), e[n] = r.copy(r.from, o.from), Ng(e, i, r.copy(o.from, r.to)));
          break;
        }
      }
  }
  return e;
}
function Ng(t, e, n) {
  for (; e < t.length && Nr(n, t[e]) > 0; )
    e++;
  t.splice(e, 0, n);
}
function qc(t) {
  let e = [];
  return t.someProp("decorations", (n) => {
    let r = n(t.state);
    r && r != dt && e.push(r);
  }), t.cursorWrapper && e.push(Ze.create(t.state.doc, [t.cursorWrapper.deco])), Qn.from(e);
}
const w3 = {
  childList: !0,
  characterData: !0,
  characterDataOldValue: !0,
  attributes: !0,
  attributeOldValue: !0,
  subtree: !0
}, _3 = At && ar <= 11;
class T3 {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  set(e) {
    this.anchorNode = e.anchorNode, this.anchorOffset = e.anchorOffset, this.focusNode = e.focusNode, this.focusOffset = e.focusOffset;
  }
  clear() {
    this.anchorNode = this.focusNode = null;
  }
  eq(e) {
    return e.anchorNode == this.anchorNode && e.anchorOffset == this.anchorOffset && e.focusNode == this.focusNode && e.focusOffset == this.focusOffset;
  }
}
class E3 {
  constructor(e, n) {
    this.view = e, this.handleDOMChange = n, this.queue = [], this.flushingSoon = -1, this.observer = null, this.currentSelection = new T3(), this.onCharData = null, this.suppressingSelectionUpdates = !1, this.lastChangedTextNode = null, this.observer = window.MutationObserver && new window.MutationObserver((r) => {
      for (let i = 0; i < r.length; i++)
        this.queue.push(r[i]);
      At && ar <= 11 && r.some((i) => i.type == "childList" && i.removedNodes.length || i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), _3 && (this.onCharData = (r) => {
      this.queue.push({ target: r.target, type: "characterData", oldValue: r.prevValue }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  flushSoon() {
    this.flushingSoon < 0 && (this.flushingSoon = window.setTimeout(() => {
      this.flushingSoon = -1, this.flush();
    }, 20));
  }
  forceFlush() {
    this.flushingSoon > -1 && (window.clearTimeout(this.flushingSoon), this.flushingSoon = -1, this.flush());
  }
  start() {
    this.observer && (this.observer.takeRecords(), this.observer.observe(this.view.dom, w3)), this.onCharData && this.view.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.connectSelection();
  }
  stop() {
    if (this.observer) {
      let e = this.observer.takeRecords();
      if (e.length) {
        for (let n = 0; n < e.length; n++)
          this.queue.push(e[n]);
        window.setTimeout(() => this.flush(), 20);
      }
      this.observer.disconnect();
    }
    this.onCharData && this.view.dom.removeEventListener("DOMCharacterDataModified", this.onCharData), this.disconnectSelection();
  }
  connectSelection() {
    this.view.dom.ownerDocument.addEventListener("selectionchange", this.onSelectionChange);
  }
  disconnectSelection() {
    this.view.dom.ownerDocument.removeEventListener("selectionchange", this.onSelectionChange);
  }
  suppressSelectionUpdates() {
    this.suppressingSelectionUpdates = !0, setTimeout(() => this.suppressingSelectionUpdates = !1, 50);
  }
  onSelectionChange() {
    if (Cg(this.view)) {
      if (this.suppressingSelectionUpdates)
        return Rn(this.view);
      if (At && ar <= 11 && !this.view.state.selection.empty) {
        let e = this.view.domSelectionRange();
        if (e.focusNode && Wr(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset))
          return this.flushSoon();
      }
      this.flush();
    }
  }
  setCurSelection() {
    this.currentSelection.set(this.view.domSelectionRange());
  }
  ignoreSelectionChange(e) {
    if (!e.focusNode)
      return !0;
    let n = /* @__PURE__ */ new Set(), r;
    for (let o = e.focusNode; o; o = go(o))
      n.add(o);
    for (let o = e.anchorNode; o; o = go(o))
      if (n.has(o)) {
        r = o;
        break;
      }
    let i = r && this.view.docView.nearestDesc(r);
    if (i && i.ignoreMutation({
      type: "selection",
      target: r.nodeType == 3 ? r.parentNode : r
    }))
      return this.setCurSelection(), !0;
  }
  pendingRecords() {
    if (this.observer)
      for (let e of this.observer.takeRecords())
        this.queue.push(e);
    return this.queue;
  }
  flush() {
    let { view: e } = this;
    if (!e.docView || this.flushingSoon > -1)
      return;
    let n = this.pendingRecords();
    n.length && (this.queue = []);
    let r = e.domSelectionRange(), i = !this.suppressingSelectionUpdates && !this.currentSelection.eq(r) && Cg(e) && !this.ignoreSelectionChange(r), o = -1, a = -1, s = !1, c = [];
    if (e.editable)
      for (let u = 0; u < n.length; u++) {
        let f = this.registerMutation(n[u], c);
        f && (o = o < 0 ? f.from : Math.min(f.from, o), a = a < 0 ? f.to : Math.max(f.to, a), f.typeOver && (s = !0));
      }
    if (rn && c.length) {
      let u = c.filter((f) => f.nodeName == "BR");
      if (u.length == 2) {
        let [f, d] = u;
        f.parentNode && f.parentNode.parentNode == d.parentNode ? d.remove() : f.remove();
      } else {
        let { focusNode: f } = this.currentSelection;
        for (let d of u) {
          let h = d.parentNode;
          h && h.nodeName == "LI" && (!f || A3(e, f) != h) && d.remove();
        }
      }
    }
    let l = null;
    o < 0 && i && e.input.lastFocus > Date.now() - 200 && Math.max(e.input.lastTouch, e.input.lastClick.time) < Date.now() - 300 && Vs(r) && (l = ah(e)) && l.eq(Oe.near(e.state.doc.resolve(0), 1)) ? (e.input.lastFocus = 0, Rn(e), this.currentSelection.set(r)) : (o > -1 || i) && (o > -1 && (e.docView.markDirty(o, a), C3(e)), this.handleDOMChange(o, a, s, c), e.docView && e.docView.dirty ? e.updateState(e.state) : this.currentSelection.eq(r) || Rn(e), this.currentSelection.set(r));
  }
  registerMutation(e, n) {
    if (n.indexOf(e.target) > -1)
      return null;
    let r = this.view.docView.nearestDesc(e.target);
    if (e.type == "attributes" && (r == this.view.docView || e.attributeName == "contenteditable" || // Firefox sometimes fires spurious events for null/empty styles
    e.attributeName == "style" && !e.oldValue && !e.target.getAttribute("style")) || !r || r.ignoreMutation(e))
      return null;
    if (e.type == "childList") {
      for (let u = 0; u < e.addedNodes.length; u++) {
        let f = e.addedNodes[u];
        n.push(f), f.nodeType == 3 && (this.lastChangedTextNode = f);
      }
      if (r.contentDOM && r.contentDOM != r.dom && !r.contentDOM.contains(e.target))
        return { from: r.posBefore, to: r.posAfter };
      let i = e.previousSibling, o = e.nextSibling;
      if (At && ar <= 11 && e.addedNodes.length)
        for (let u = 0; u < e.addedNodes.length; u++) {
          let { previousSibling: f, nextSibling: d } = e.addedNodes[u];
          (!f || Array.prototype.indexOf.call(e.addedNodes, f) < 0) && (i = f), (!d || Array.prototype.indexOf.call(e.addedNodes, d) < 0) && (o = d);
        }
      let a = i && i.parentNode == e.target ? lt(i) + 1 : 0, s = r.localPosFromDOM(e.target, a, -1), c = o && o.parentNode == e.target ? lt(o) : e.target.childNodes.length, l = r.localPosFromDOM(e.target, c, 1);
      return { from: s, to: l };
    } else return e.type == "attributes" ? { from: r.posAtStart - r.border, to: r.posAtEnd + r.border } : (this.lastChangedTextNode = e.target, {
      from: r.posAtStart,
      to: r.posAtEnd,
      // An event was generated for a text change that didn't change
      // any text. Mark the dom change to fall back to assuming the
      // selection was typed over with an identical value if it can't
      // find another change.
      typeOver: e.target.nodeValue == e.oldValue
    });
  }
}
let Bg = /* @__PURE__ */ new WeakMap(), Ig = !1;
function C3(t) {
  if (!Bg.has(t) && (Bg.set(t, null), ["normal", "nowrap", "pre-line"].indexOf(getComputedStyle(t.dom).whiteSpace) !== -1)) {
    if (t.requiresGeckoHackNode = rn, Ig)
      return;
    console.warn("ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package."), Ig = !0;
  }
}
function Mg(t, e) {
  let n = e.startContainer, r = e.startOffset, i = e.endContainer, o = e.endOffset, a = t.domAtPos(t.state.selection.anchor);
  return Wr(a.node, a.offset, i, o) && ([n, r, i, o] = [i, o, n, r]), { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: o };
}
function S3(t, e) {
  if (e.getComposedRanges) {
    let i = e.getComposedRanges(t.root)[0];
    if (i)
      return Mg(t, i);
  }
  let n;
  function r(i) {
    i.preventDefault(), i.stopImmediatePropagation(), n = i.getTargetRanges()[0];
  }
  return t.dom.addEventListener("beforeinput", r, !0), document.execCommand("indent"), t.dom.removeEventListener("beforeinput", r, !0), n ? Mg(t, n) : null;
}
function A3(t, e) {
  for (let n = e.parentNode; n && n != t.dom; n = n.parentNode) {
    let r = t.docView.nearestDesc(n, !0);
    if (r && r.node.isBlock)
      return n;
  }
  return null;
}
function U3(t, e, n) {
  let { node: r, fromOffset: i, toOffset: o, from: a, to: s } = t.docView.parseRange(e, n), c = t.domSelectionRange(), l, u = c.anchorNode;
  if (u && t.dom.contains(u.nodeType == 1 ? u : u.parentNode) && (l = [{ node: u, offset: c.anchorOffset }], Vs(c) || l.push({ node: c.focusNode, offset: c.focusOffset })), ht && t.input.lastKeyCode === 8)
    for (let g = o; g > i; g--) {
      let y = r.childNodes[g - 1], b = y.pmViewDesc;
      if (y.nodeName == "BR" && !b) {
        o = g;
        break;
      }
      if (!b || b.size)
        break;
    }
  let f = t.state.doc, d = t.someProp("domParser") || fo.fromSchema(t.state.schema), h = f.resolve(a), p = null, m = d.parse(r, {
    topNode: h.parent,
    topMatch: h.parent.contentMatchAt(h.index()),
    topOpen: !0,
    from: i,
    to: o,
    preserveWhitespace: h.parent.type.whitespace == "pre" ? "full" : !0,
    findPositions: l,
    ruleFromNode: k3,
    context: h
  });
  if (l && l[0].pos != null) {
    let g = l[0].pos, y = l[1] && l[1].pos;
    y == null && (y = g), p = { anchor: g + a, head: y + a };
  }
  return { doc: m, sel: p, from: a, to: s };
}
function k3(t) {
  let e = t.pmViewDesc;
  if (e)
    return e.parseRule();
  if (t.nodeName == "BR" && t.parentNode) {
    if (xt && /^(ul|ol)$/i.test(t.parentNode.nodeName)) {
      let n = document.createElement("div");
      return n.appendChild(document.createElement("li")), { skip: n };
    } else if (t.parentNode.lastChild == t || xt && /^(tr|table)$/i.test(t.parentNode.nodeName))
      return { ignore: !0 };
  } else if (t.nodeName == "IMG" && t.getAttribute("mark-placeholder"))
    return { ignore: !0 };
  return null;
}
const F3 = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;
function O3(t, e, n, r, i) {
  let o = t.input.compositionPendingChanges || (t.composing ? t.input.compositionID : 0);
  if (t.input.compositionPendingChanges = 0, e < 0) {
    let C = t.input.lastSelectionTime > Date.now() - 50 ? t.input.lastSelectionOrigin : null, R = ah(t, C);
    if (R && !t.state.selection.eq(R)) {
      if (ht && On && t.input.lastKeyCode === 13 && Date.now() - 100 < t.input.lastKeyCodeTime && t.someProp("handleKeyDown", (T) => T(t, Sr(13, "Enter"))))
        return;
      let j = t.state.tr.setSelection(R);
      C == "pointer" ? j.setMeta("pointer", !0) : C == "key" && j.scrollIntoView(), o && j.setMeta("composition", o), t.dispatch(j);
    }
    return;
  }
  let a = t.state.doc.resolve(e), s = a.sharedDepth(n);
  e = a.before(s + 1), n = t.state.doc.resolve(n).after(s + 1);
  let c = t.state.selection, l = U3(t, e, n), u = t.state.doc, f = u.slice(l.from, l.to), d, h;
  t.input.lastKeyCode === 8 && Date.now() - 100 < t.input.lastKeyCodeTime ? (d = t.state.selection.to, h = "end") : (d = t.state.selection.from, h = "start"), t.input.lastKeyCode = null;
  let p = B3(f.content, l.doc.content, l.from, d, h);
  if (p && t.input.domChangeCount++, (vi && t.input.lastIOSEnter > Date.now() - 225 || On) && i.some((C) => C.nodeType == 1 && !F3.test(C.nodeName)) && (!p || p.endA >= p.endB) && t.someProp("handleKeyDown", (C) => C(t, Sr(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (!p)
    if (r && c instanceof Be && !c.empty && c.$head.sameParent(c.$anchor) && !t.composing && !(l.sel && l.sel.anchor != l.sel.head))
      p = { start: c.from, endA: c.to, endB: c.to };
    else {
      if (l.sel) {
        let C = Wg(t, t.state.doc, l.sel);
        if (C && !C.eq(t.state.selection)) {
          let R = t.state.tr.setSelection(C);
          o && R.setMeta("composition", o), t.dispatch(R);
        }
      }
      return;
    }
  t.state.selection.from < t.state.selection.to && p.start == p.endB && t.state.selection instanceof Be && (p.start > t.state.selection.from && p.start <= t.state.selection.from + 2 && t.state.selection.from >= l.from ? p.start = t.state.selection.from : p.endA < t.state.selection.to && p.endA >= t.state.selection.to - 2 && t.state.selection.to <= l.to && (p.endB += t.state.selection.to - p.endA, p.endA = t.state.selection.to)), At && ar <= 11 && p.endB == p.start + 1 && p.endA == p.start && p.start > l.from && l.doc.textBetween(p.start - l.from - 1, p.start - l.from + 1) == "  " && (p.start--, p.endA--, p.endB--);
  let m = l.doc.resolveNoCache(p.start - l.from), g = l.doc.resolveNoCache(p.endB - l.from), y = u.resolve(p.start), b = m.sameParent(g) && m.parent.inlineContent && y.end() >= p.endA, v;
  if ((vi && t.input.lastIOSEnter > Date.now() - 225 && (!b || i.some((C) => C.nodeName == "DIV" || C.nodeName == "P")) || !b && m.pos < l.doc.content.size && !m.sameParent(g) && (v = Oe.findFrom(l.doc.resolve(m.pos + 1), 1, !0)) && v.head == g.pos) && t.someProp("handleKeyDown", (C) => C(t, Sr(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (t.state.selection.anchor > p.start && N3(u, p.start, p.endA, m, g) && t.someProp("handleKeyDown", (C) => C(t, Sr(8, "Backspace")))) {
    On && ht && t.domObserver.suppressSelectionUpdates();
    return;
  }
  ht && p.endB == p.start && (t.input.lastChromeDelete = Date.now()), On && !b && m.start() != g.start() && g.parentOffset == 0 && m.depth == g.depth && l.sel && l.sel.anchor == l.sel.head && l.sel.head == p.endA && (p.endB -= 2, g = l.doc.resolveNoCache(p.endB - l.from), setTimeout(() => {
    t.someProp("handleKeyDown", function(C) {
      return C(t, Sr(13, "Enter"));
    });
  }, 20));
  let _ = p.start, x = p.endA, E, S, U;
  if (b) {
    if (m.pos == g.pos)
      At && ar <= 11 && m.parentOffset == 0 && (t.domObserver.suppressSelectionUpdates(), setTimeout(() => Rn(t), 20)), E = t.state.tr.delete(_, x), S = u.resolve(p.start).marksAcross(u.resolve(p.endA));
    else if (
      // Adding or removing a mark
      p.endA == p.endB && (U = R3(m.parent.content.cut(m.parentOffset, g.parentOffset), y.parent.content.cut(y.parentOffset, p.endA - y.start())))
    )
      E = t.state.tr, U.type == "add" ? E.addMark(_, x, U.mark) : E.removeMark(_, x, U.mark);
    else if (m.parent.child(m.index()).isText && m.index() == g.index() - (g.textOffset ? 0 : 1)) {
      let C = m.parent.textBetween(m.parentOffset, g.parentOffset);
      if (t.someProp("handleTextInput", (R) => R(t, _, x, C)))
        return;
      E = t.state.tr.insertText(C, _, x);
    }
  }
  if (E || (E = t.state.tr.replace(_, x, l.doc.slice(p.start - l.from, p.endB - l.from))), l.sel) {
    let C = Wg(t, E.doc, l.sel);
    C && !(ht && t.composing && C.empty && (p.start != p.endB || t.input.lastChromeDelete < Date.now() - 100) && (C.head == _ || C.head == E.mapping.map(x) - 1) || At && C.empty && C.head == _) && E.setSelection(C);
  }
  S && E.ensureMarks(S), o && E.setMeta("composition", o), t.dispatch(E.scrollIntoView());
}
function Wg(t, e, n) {
  return Math.max(n.anchor, n.head) > e.content.size ? null : sh(t, e.resolve(n.anchor), e.resolve(n.head));
}
function R3(t, e) {
  let n = t.firstChild.marks, r = e.firstChild.marks, i = n, o = r, a, s, c;
  for (let u = 0; u < r.length; u++)
    i = r[u].removeFromSet(i);
  for (let u = 0; u < n.length; u++)
    o = n[u].removeFromSet(o);
  if (i.length == 1 && o.length == 0)
    s = i[0], a = "add", c = (u) => u.mark(s.addToSet(u.marks));
  else if (i.length == 0 && o.length == 1)
    s = o[0], a = "remove", c = (u) => u.mark(s.removeFromSet(u.marks));
  else
    return null;
  let l = [];
  for (let u = 0; u < e.childCount; u++)
    l.push(c(e.child(u)));
  if (ge.from(l).eq(t))
    return { mark: s, type: a };
}
function N3(t, e, n, r, i) {
  if (
    // The content must have shrunk
    n - e <= i.pos - r.pos || // newEnd must point directly at or after the end of the block that newStart points into
    zc(r, !0, !1) < i.pos
  )
    return !1;
  let o = t.resolve(e);
  if (!r.parent.isTextblock) {
    let s = o.nodeAfter;
    return s != null && n == e + s.nodeSize;
  }
  if (o.parentOffset < o.parent.content.size || !o.parent.isTextblock)
    return !1;
  let a = t.resolve(zc(o, !0, !0));
  return !a.parent.isTextblock || a.pos > n || zc(a, !0, !1) < n ? !1 : r.parent.content.cut(r.parentOffset).eq(a.parent.content);
}
function zc(t, e, n) {
  let r = t.depth, i = e ? t.end() : t.pos;
  for (; r > 0 && (e || t.indexAfter(r) == t.node(r).childCount); )
    r--, i++, e = !1;
  if (n) {
    let o = t.node(r).maybeChild(t.indexAfter(r));
    for (; o && !o.isLeaf; )
      o = o.firstChild, i++;
  }
  return i;
}
function B3(t, e, n, r, i) {
  let o = t.findDiffStart(e, n);
  if (o == null)
    return null;
  let { a, b: s } = t.findDiffEnd(e, n + t.size, n + e.size);
  if (i == "end") {
    let c = Math.max(0, o - Math.min(a, s));
    r -= a + c - o;
  }
  if (a < o && t.size < e.size) {
    let c = r <= o && r >= a ? o - r : 0;
    o -= c, o && o < e.size && Lg(e.textBetween(o - 1, o + 1)) && (o += c ? 1 : -1), s = o + (s - a), a = o;
  } else if (s < o) {
    let c = r <= o && r >= s ? o - r : 0;
    o -= c, o && o < t.size && Lg(t.textBetween(o - 1, o + 1)) && (o += c ? 1 : -1), a = o + (a - s), s = o;
  }
  return { start: o, endA: a, endB: s };
}
function Lg(t) {
  if (t.length != 2)
    return !1;
  let e = t.charCodeAt(0), n = t.charCodeAt(1);
  return e >= 56320 && e <= 57343 && n >= 55296 && n <= 56319;
}
class lR {
  /**
  Create a view. `place` may be a DOM node that the editor should
  be appended to, a function that will place it into the document,
  or an object whose `mount` property holds the node to use as the
  document container. If it is `null`, the editor will not be
  added to the document.
  */
  constructor(e, n) {
    this._root = null, this.focused = !1, this.trackWrites = null, this.mounted = !1, this.markCursor = null, this.cursorWrapper = null, this.lastSelectedViewDesc = void 0, this.input = new t3(), this.prevDirectPlugins = [], this.pluginViews = [], this.requiresGeckoHackNode = !1, this.dragging = null, this._props = n, this.state = n.state, this.directPlugins = n.plugins || [], this.directPlugins.forEach($g), this.dispatch = this.dispatch.bind(this), this.dom = e && e.mount || document.createElement("div"), e && (e.appendChild ? e.appendChild(this.dom) : typeof e == "function" ? e(this.dom) : e.mount && (this.mounted = !0)), this.editable = zg(this), qg(this), this.nodeViews = jg(this), this.docView = Dg(this.state.doc, Pg(this), qc(this), this.dom, this), this.domObserver = new E3(this, (r, i, o, a) => O3(this, r, i, o, a)), this.domObserver.start(), n3(this), this.updatePluginViews();
  }
  /**
  Holds `true` when a
  [composition](https://w3c.github.io/uievents/#events-compositionevents)
  is active.
  */
  get composing() {
    return this.input.composing;
  }
  /**
  The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).
  */
  get props() {
    if (this._props.state != this.state) {
      let e = this._props;
      this._props = {};
      for (let n in e)
        this._props[n] = e[n];
      this._props.state = this.state;
    }
    return this._props;
  }
  /**
  Update the view's props. Will immediately cause an update to
  the DOM.
  */
  update(e) {
    e.handleDOMEvents != this._props.handleDOMEvents && vd(this);
    let n = this._props;
    this._props = e, e.plugins && (e.plugins.forEach($g), this.directPlugins = e.plugins), this.updateStateInner(e.state, n);
  }
  /**
  Update the view by updating existing props object with the object
  given as argument. Equivalent to `view.update(Object.assign({},
  view.props, props))`.
  */
  setProps(e) {
    let n = {};
    for (let r in this._props)
      n[r] = this._props[r];
    n.state = this.state;
    for (let r in e)
      n[r] = e[r];
    this.update(n);
  }
  /**
  Update the editor's `state` prop, without touching any of the
  other props.
  */
  updateState(e) {
    this.updateStateInner(e, this._props);
  }
  updateStateInner(e, n) {
    var r;
    let i = this.state, o = !1, a = !1;
    e.storedMarks && this.composing && (pv(this), a = !0), this.state = e;
    let s = i.plugins != e.plugins || this._props.plugins != n.plugins;
    if (s || this._props.plugins != n.plugins || this._props.nodeViews != n.nodeViews) {
      let h = jg(this);
      M3(h, this.nodeViews) && (this.nodeViews = h, o = !0);
    }
    (s || n.handleDOMEvents != this._props.handleDOMEvents) && vd(this), this.editable = zg(this), qg(this);
    let c = qc(this), l = Pg(this), u = i.plugins != e.plugins && !i.doc.eq(e.doc) ? "reset" : e.scrollToSelection > i.scrollToSelection ? "to selection" : "preserve", f = o || !this.docView.matchesNode(e.doc, l, c);
    (f || !e.selection.eq(i.selection)) && (a = !0);
    let d = u == "preserve" && a && this.dom.style.overflowAnchor == null && mT(this);
    if (a) {
      this.domObserver.stop();
      let h = f && (At || ht) && !this.composing && !i.selection.empty && !e.selection.empty && I3(i.selection, e.selection);
      if (f) {
        let p = ht ? this.trackWrites = this.domSelectionRange().focusNode : null;
        this.composing && (this.input.compositionNode = g3(this)), (o || !this.docView.update(e.doc, l, c, this)) && (this.docView.updateOuterDeco(l), this.docView.destroy(), this.docView = Dg(e.doc, l, c, this.dom, this)), p && !this.trackWrites && (h = !0);
      }
      h || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && PT(this)) ? Rn(this, h) : (nv(this, e.selection), this.domObserver.setCurSelection()), this.domObserver.start();
    }
    this.updatePluginViews(i), !((r = this.dragging) === null || r === void 0) && r.node && !i.doc.eq(e.doc) && this.updateDraggedNode(this.dragging, i), u == "reset" ? this.dom.scrollTop = 0 : u == "to selection" ? this.scrollToSelection() : d && yT(d);
  }
  /**
  @internal
  */
  scrollToSelection() {
    let e = this.domSelectionRange().focusNode;
    if (!(!e || !this.dom.contains(e.nodeType == 1 ? e : e.parentNode))) {
      if (!this.someProp("handleScrollToSelection", (n) => n(this))) if (this.state.selection instanceof Ue) {
        let n = this.docView.domAfterPos(this.state.selection.from);
        n.nodeType == 1 && pg(this, n.getBoundingClientRect(), e);
      } else
        pg(this, this.coordsAtPos(this.state.selection.head, 1), e);
    }
  }
  destroyPluginViews() {
    let e;
    for (; e = this.pluginViews.pop(); )
      e.destroy && e.destroy();
  }
  updatePluginViews(e) {
    if (!e || e.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {
      this.prevDirectPlugins = this.directPlugins, this.destroyPluginViews();
      for (let n = 0; n < this.directPlugins.length; n++) {
        let r = this.directPlugins[n];
        r.spec.view && this.pluginViews.push(r.spec.view(this));
      }
      for (let n = 0; n < this.state.plugins.length; n++) {
        let r = this.state.plugins[n];
        r.spec.view && this.pluginViews.push(r.spec.view(this));
      }
    } else
      for (let n = 0; n < this.pluginViews.length; n++) {
        let r = this.pluginViews[n];
        r.update && r.update(this, e);
      }
  }
  updateDraggedNode(e, n) {
    let r = e.node, i = -1;
    if (this.state.doc.nodeAt(r.from) == r.node)
      i = r.from;
    else {
      let o = r.from + (this.state.doc.content.size - n.doc.content.size);
      (o > 0 && this.state.doc.nodeAt(o)) == r.node && (i = o);
    }
    this.dragging = new mv(e.slice, e.move, i < 0 ? void 0 : Ue.create(this.state.doc, i));
  }
  someProp(e, n) {
    let r = this._props && this._props[e], i;
    if (r != null && (i = n ? n(r) : r))
      return i;
    for (let a = 0; a < this.directPlugins.length; a++) {
      let s = this.directPlugins[a].props[e];
      if (s != null && (i = n ? n(s) : s))
        return i;
    }
    let o = this.state.plugins;
    if (o)
      for (let a = 0; a < o.length; a++) {
        let s = o[a].props[e];
        if (s != null && (i = n ? n(s) : s))
          return i;
      }
  }
  /**
  Query whether the view has focus.
  */
  hasFocus() {
    if (At) {
      let e = this.root.activeElement;
      if (e == this.dom)
        return !0;
      if (!e || !this.dom.contains(e))
        return !1;
      for (; e && this.dom != e && this.dom.contains(e); ) {
        if (e.contentEditable == "false")
          return !1;
        e = e.parentElement;
      }
      return !0;
    }
    return this.root.activeElement == this.dom;
  }
  /**
  Focus the editor.
  */
  focus() {
    this.domObserver.stop(), this.editable && bT(this.dom), Rn(this), this.domObserver.start();
  }
  /**
  Get the document root in which the editor exists. This will
  usually be the top-level `document`, but might be a [shadow
  DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)
  root if the editor is inside one.
  */
  get root() {
    let e = this._root;
    if (e == null) {
      for (let n = this.dom.parentNode; n; n = n.parentNode)
        if (n.nodeType == 9 || n.nodeType == 11 && n.host)
          return n.getSelection || (Object.getPrototypeOf(n).getSelection = () => n.ownerDocument.getSelection()), this._root = n;
    }
    return e || document;
  }
  /**
  When an existing editor view is moved to a new document or
  shadow tree, call this to make it recompute its root.
  */
  updateRoot() {
    this._root = null;
  }
  /**
  Given a pair of viewport coordinates, return the document
  position that corresponds to them. May return null if the given
  coordinates aren't inside of the editor. When an object is
  returned, its `pos` property is the position nearest to the
  coordinates, and its `inside` property holds the position of the
  inner node that the position falls inside of, or -1 if it is at
  the top level, not in any node.
  */
  posAtCoords(e) {
    return _T(this, e);
  }
  /**
  Returns the viewport rectangle at a given document position.
  `left` and `right` will be the same number, as this returns a
  flat cursor-ish rectangle. If the position is between two things
  that aren't directly adjacent, `side` determines which element
  is used. When < 0, the element before the position is used,
  otherwise the element after.
  */
  coordsAtPos(e, n = 1) {
    return G0(this, e, n);
  }
  /**
  Find the DOM position that corresponds to the given document
  position. When `side` is negative, find the position as close as
  possible to the content before the position. When positive,
  prefer positions close to the content after the position. When
  zero, prefer as shallow a position as possible.
  
  Note that you should **not** mutate the editor's internal DOM,
  only inspect it (and even that is usually not necessary).
  */
  domAtPos(e, n = 0) {
    return this.docView.domFromPos(e, n);
  }
  /**
  Find the DOM node that represents the document node after the
  given position. May return `null` when the position doesn't point
  in front of a node or if the node is inside an opaque node view.
  
  This is intended to be able to call things like
  `getBoundingClientRect` on that DOM node. Do **not** mutate the
  editor DOM directly, or add styling this way, since that will be
  immediately overriden by the editor as it redraws the node.
  */
  nodeDOM(e) {
    let n = this.docView.descAt(e);
    return n ? n.nodeDOM : null;
  }
  /**
  Find the document position that corresponds to a given DOM
  position. (Whenever possible, it is preferable to inspect the
  document structure directly, rather than poking around in the
  DOM, but sometimes—for example when interpreting an event
  target—you don't have a choice.)
  
  The `bias` parameter can be used to influence which side of a DOM
  node to use when the position is inside a leaf node.
  */
  posAtDOM(e, n, r = -1) {
    let i = this.docView.posFromDOM(e, n, r);
    if (i == null)
      throw new RangeError("DOM position not inside the editor");
    return i;
  }
  /**
  Find out whether the selection is at the end of a textblock when
  moving in a given direction. When, for example, given `"left"`,
  it will return true if moving left from the current cursor
  position would leave that position's parent textblock. Will apply
  to the view's current state by default, but it is possible to
  pass a different state.
  */
  endOfTextblock(e, n) {
    return AT(this, n || this.state, e);
  }
  /**
  Run the editor's paste logic with the given HTML string. The
  `event`, if given, will be passed to the
  [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.
  */
  pasteHTML(e, n) {
    return yo(this, "", e, !1, n || new ClipboardEvent("paste"));
  }
  /**
  Run the editor's paste logic with the given plain-text input.
  */
  pasteText(e, n) {
    return yo(this, e, null, !0, n || new ClipboardEvent("paste"));
  }
  /**
  Serialize the given slice as it would be if it was copied from
  this editor. Returns a DOM element that contains a
  representation of the slice as its children, a textual
  representation, and the transformed slice (which can be
  different from the given input due to hooks like
  [`transformCopied`](https://prosemirror.net/docs/ref/#view.EditorProps.transformCopied)).
  */
  serializeForClipboard(e) {
    return ch(this, e);
  }
  /**
  Removes the editor from the DOM and destroys all [node
  views](https://prosemirror.net/docs/ref/#view.NodeView).
  */
  destroy() {
    this.docView && (r3(this), this.destroyPluginViews(), this.mounted ? (this.docView.update(this.state.doc, [], qc(this), this), this.dom.textContent = "") : this.dom.parentNode && this.dom.parentNode.removeChild(this.dom), this.docView.destroy(), this.docView = null, oT());
  }
  /**
  This is true when the view has been
  [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be
  used anymore).
  */
  get isDestroyed() {
    return this.docView == null;
  }
  /**
  Used for testing.
  */
  dispatchEvent(e) {
    return o3(this, e);
  }
  /**
  Dispatch a transaction. Will call
  [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)
  when given, and otherwise defaults to applying the transaction to
  the current state and calling
  [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.
  This method is bound to the view instance, so that it can be
  easily passed around.
  */
  dispatch(e) {
    let n = this._props.dispatchTransaction;
    n ? n.call(this, e) : this.updateState(this.state.apply(e));
  }
  /**
  @internal
  */
  domSelectionRange() {
    let e = this.domSelection();
    return e ? xt && this.root.nodeType === 11 && uT(this.dom.ownerDocument) == this.dom && S3(this, e) || e : { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };
  }
  /**
  @internal
  */
  domSelection() {
    return this.root.getSelection();
  }
}
function Pg(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return e.class = "ProseMirror", e.contenteditable = String(t.editable), t.someProp("attributes", (n) => {
    if (typeof n == "function" && (n = n(t.state)), n)
      for (let r in n)
        r == "class" ? e.class += " " + n[r] : r == "style" ? e.style = (e.style ? e.style + ";" : "") + n[r] : !e[r] && r != "contenteditable" && r != "nodeName" && (e[r] = String(n[r]));
  }), e.translate || (e.translate = "no"), [Dt.node(0, t.state.doc.content.size, e)];
}
function qg(t) {
  if (t.markCursor) {
    let e = document.createElement("img");
    e.className = "ProseMirror-separator", e.setAttribute("mark-placeholder", "true"), e.setAttribute("alt", ""), t.cursorWrapper = { dom: e, deco: Dt.widget(t.state.selection.from, e, { raw: !0, marks: t.markCursor }) };
  } else
    t.cursorWrapper = null;
}
function zg(t) {
  return !t.someProp("editable", (e) => e(t.state) === !1);
}
function I3(t, e) {
  let n = Math.min(t.$anchor.sharedDepth(t.head), e.$anchor.sharedDepth(e.head));
  return t.$anchor.start(n) != e.$anchor.start(n);
}
function jg(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(r) {
    for (let i in r)
      Object.prototype.hasOwnProperty.call(e, i) || (e[i] = r[i]);
  }
  return t.someProp("nodeViews", n), t.someProp("markViews", n), e;
}
function M3(t, e) {
  let n = 0, r = 0;
  for (let i in t) {
    if (t[i] != e[i])
      return !0;
    n++;
  }
  for (let i in e)
    r++;
  return n != r;
}
function $g(t) {
  if (t.spec.state || t.spec.filterTransaction || t.spec.appendTransaction)
    throw new RangeError("Plugins passed directly to the view must not have a state component");
}
var lr = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, ss = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, W3 = typeof navigator < "u" && /Mac/.test(navigator.platform), L3 = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var ut = 0; ut < 10; ut++) lr[48 + ut] = lr[96 + ut] = String(ut);
for (var ut = 1; ut <= 24; ut++) lr[ut + 111] = "F" + ut;
for (var ut = 65; ut <= 90; ut++)
  lr[ut] = String.fromCharCode(ut + 32), ss[ut] = String.fromCharCode(ut);
for (var jc in lr) ss.hasOwnProperty(jc) || (ss[jc] = lr[jc]);
function P3(t) {
  var e = W3 && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || L3 && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? ss : lr)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
const q3 = typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : !1;
function z3(t) {
  let e = t.split(/-(?!$)/), n = e[e.length - 1];
  n == "Space" && (n = " ");
  let r, i, o, a;
  for (let s = 0; s < e.length - 1; s++) {
    let c = e[s];
    if (/^(cmd|meta|m)$/i.test(c))
      a = !0;
    else if (/^a(lt)?$/i.test(c))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(c))
      i = !0;
    else if (/^s(hift)?$/i.test(c))
      o = !0;
    else if (/^mod$/i.test(c))
      q3 ? a = !0 : i = !0;
    else
      throw new Error("Unrecognized modifier name: " + c);
  }
  return r && (n = "Alt-" + n), i && (n = "Ctrl-" + n), a && (n = "Meta-" + n), o && (n = "Shift-" + n), n;
}
function j3(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t)
    e[z3(n)] = t[n];
  return e;
}
function $c(t, e, n = !0) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n && e.shiftKey && (t = "Shift-" + t), t;
}
function uR(t) {
  return new Ei({ props: { handleKeyDown: ph(t) } });
}
function ph(t) {
  let e = j3(t);
  return function(n, r) {
    let i = P3(r), o, a = e[$c(i, r)];
    if (a && a(n.state, n.dispatch, n))
      return !0;
    if (i.length == 1 && i != " ") {
      if (r.shiftKey) {
        let s = e[$c(i, r, !1)];
        if (s && s(n.state, n.dispatch, n))
          return !0;
      }
      if ((r.shiftKey || r.altKey || r.metaKey || i.charCodeAt(0) > 127) && (o = lr[r.keyCode]) && o != i) {
        let s = e[$c(o, r)];
        if (s && s(n.state, n.dispatch, n))
          return !0;
      }
    }
    return !1;
  };
}
const xv = (t, e) => t.selection.empty ? !1 : (e && e(t.tr.deleteSelection().scrollIntoView()), !0);
function wv(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("backward", t) : n.parentOffset > 0) ? null : n;
}
const $3 = (t, e, n) => {
  let r = wv(t, n);
  if (!r)
    return !1;
  let i = gh(r);
  if (!i) {
    let a = r.blockRange(), s = a && Oo(a);
    return s == null ? !1 : (e && e(t.tr.lift(a, s).scrollIntoView()), !0);
  }
  let o = i.nodeBefore;
  if (Ev(t, i, e, -1))
    return !0;
  if (r.parent.content.size == 0 && (Di(o, "end") || Ue.isSelectable(o)))
    for (let a = r.depth; ; a--) {
      let s = js(t.doc, r.before(a), r.after(a), _e.empty);
      if (s && s.slice.size < s.to - s.from) {
        if (e) {
          let c = t.tr.step(s);
          c.setSelection(Di(o, "end") ? Oe.findFrom(c.doc.resolve(c.mapping.map(i.pos, -1)), -1) : Ue.create(c.doc, i.pos - o.nodeSize)), e(c.scrollIntoView());
        }
        return !0;
      }
      if (a == 1 || r.node(a - 1).childCount > 1)
        break;
    }
  return o.isAtom && i.depth == r.depth - 1 ? (e && e(t.tr.delete(i.pos - o.nodeSize, i.pos).scrollIntoView()), !0) : !1;
}, fR = (t, e, n) => {
  let r = wv(t, n);
  if (!r)
    return !1;
  let i = gh(r);
  return i ? _v(t, i, e) : !1;
}, dR = (t, e, n) => {
  let r = Tv(t, n);
  if (!r)
    return !1;
  let i = mh(r);
  return i ? _v(t, i, e) : !1;
};
function _v(t, e, n) {
  let r = e.nodeBefore, i = r, o = e.pos - 1;
  for (; !i.isTextblock; o--) {
    if (i.type.spec.isolating)
      return !1;
    let u = i.lastChild;
    if (!u)
      return !1;
    i = u;
  }
  let a = e.nodeAfter, s = a, c = e.pos + 1;
  for (; !s.isTextblock; c++) {
    if (s.type.spec.isolating)
      return !1;
    let u = s.firstChild;
    if (!u)
      return !1;
    s = u;
  }
  let l = js(t.doc, o, c, _e.empty);
  if (!l || l.from != o || l instanceof ct && l.slice.size >= c - o)
    return !1;
  if (n) {
    let u = t.tr.step(l);
    u.setSelection(Be.create(u.doc, o)), n(u.scrollIntoView());
  }
  return !0;
}
function Di(t, e, n = !1) {
  for (let r = t; r; r = e == "start" ? r.firstChild : r.lastChild) {
    if (r.isTextblock)
      return !0;
    if (n && r.childCount != 1)
      return !1;
  }
  return !1;
}
const V3 = (t, e, n) => {
  let { $head: r, empty: i } = t.selection, o = r;
  if (!i)
    return !1;
  if (r.parent.isTextblock) {
    if (n ? !n.endOfTextblock("backward", t) : r.parentOffset > 0)
      return !1;
    o = gh(r);
  }
  let a = o && o.nodeBefore;
  return !a || !Ue.isSelectable(a) ? !1 : (e && e(t.tr.setSelection(Ue.create(t.doc, o.pos - a.nodeSize)).scrollIntoView()), !0);
};
function gh(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      if (t.index(e) > 0)
        return t.doc.resolve(t.before(e + 1));
      if (t.node(e).type.spec.isolating)
        break;
    }
  return null;
}
function Tv(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("forward", t) : n.parentOffset < n.parent.content.size) ? null : n;
}
const H3 = (t, e, n) => {
  let r = Tv(t, n);
  if (!r)
    return !1;
  let i = mh(r);
  if (!i)
    return !1;
  let o = i.nodeAfter;
  if (Ev(t, i, e, 1))
    return !0;
  if (r.parent.content.size == 0 && (Di(o, "start") || Ue.isSelectable(o))) {
    let a = js(t.doc, r.before(), r.after(), _e.empty);
    if (a && a.slice.size < a.to - a.from) {
      if (e) {
        let s = t.tr.step(a);
        s.setSelection(Di(o, "start") ? Oe.findFrom(s.doc.resolve(s.mapping.map(i.pos)), 1) : Ue.create(s.doc, s.mapping.map(i.pos))), e(s.scrollIntoView());
      }
      return !0;
    }
  }
  return o.isAtom && i.depth == r.depth - 1 ? (e && e(t.tr.delete(i.pos, i.pos + o.nodeSize).scrollIntoView()), !0) : !1;
}, X3 = (t, e, n) => {
  let { $head: r, empty: i } = t.selection, o = r;
  if (!i)
    return !1;
  if (r.parent.isTextblock) {
    if (n ? !n.endOfTextblock("forward", t) : r.parentOffset < r.parent.content.size)
      return !1;
    o = mh(r);
  }
  let a = o && o.nodeAfter;
  return !a || !Ue.isSelectable(a) ? !1 : (e && e(t.tr.setSelection(Ue.create(t.doc, o.pos)).scrollIntoView()), !0);
};
function mh(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      let n = t.node(e);
      if (t.index(e) + 1 < n.childCount)
        return t.doc.resolve(t.after(e + 1));
      if (n.type.spec.isolating)
        break;
    }
  return null;
}
const hR = (t, e) => {
  let n = t.selection, r = n instanceof Ue, i;
  if (r) {
    if (n.node.isTextblock || !Ro(t.doc, n.from))
      return !1;
    i = n.from;
  } else if (i = O0(t.doc, n.from, -1), i == null)
    return !1;
  if (e) {
    let o = t.tr.join(i);
    r && o.setSelection(Ue.create(o.doc, i - t.doc.resolve(i).nodeBefore.nodeSize)), e(o.scrollIntoView());
  }
  return !0;
}, pR = (t, e) => {
  let n = t.selection, r;
  if (n instanceof Ue) {
    if (n.node.isTextblock || !Ro(t.doc, n.to))
      return !1;
    r = n.to;
  } else if (r = O0(t.doc, n.to, 1), r == null)
    return !1;
  return e && e(t.tr.join(r).scrollIntoView()), !0;
}, gR = (t, e) => {
  let { $from: n, $to: r } = t.selection, i = n.blockRange(r), o = i && Oo(i);
  return o == null ? !1 : (e && e(t.tr.lift(i, o).scrollIntoView()), !0);
}, G3 = (t, e) => {
  let { $head: n, $anchor: r } = t.selection;
  return !n.parent.type.spec.code || !n.sameParent(r) ? !1 : (e && e(t.tr.insertText(`
`).scrollIntoView()), !0);
};
function yh(t) {
  for (let e = 0; e < t.edgeCount; e++) {
    let { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
const mR = (t, e) => {
  let { $head: n, $anchor: r } = t.selection;
  if (!n.parent.type.spec.code || !n.sameParent(r))
    return !1;
  let i = n.node(-1), o = n.indexAfter(-1), a = yh(i.contentMatchAt(o));
  if (!a || !i.canReplaceWith(o, o, a))
    return !1;
  if (e) {
    let s = n.after(), c = t.tr.replaceWith(s, s, a.createAndFill());
    c.setSelection(Oe.near(c.doc.resolve(s), 1)), e(c.scrollIntoView());
  }
  return !0;
}, K3 = (t, e) => {
  let n = t.selection, { $from: r, $to: i } = n;
  if (n instanceof Xt || r.parent.inlineContent || i.parent.inlineContent)
    return !1;
  let o = yh(i.parent.contentMatchAt(i.indexAfter()));
  if (!o || !o.isTextblock)
    return !1;
  if (e) {
    let a = (!r.parentOffset && i.index() < i.parent.childCount ? r : i).pos, s = t.tr.insert(a, o.createAndFill());
    s.setSelection(Be.create(s.doc, a + 1)), e(s.scrollIntoView());
  }
  return !0;
}, J3 = (t, e) => {
  let { $cursor: n } = t.selection;
  if (!n || n.parent.content.size)
    return !1;
  if (n.depth > 1 && n.after() != n.end(-1)) {
    let o = n.before();
    if (eo(t.doc, o))
      return e && e(t.tr.split(o).scrollIntoView()), !0;
  }
  let r = n.blockRange(), i = r && Oo(r);
  return i == null ? !1 : (e && e(t.tr.lift(r, i).scrollIntoView()), !0);
};
function Z3(t) {
  return (e, n) => {
    let { $from: r, $to: i } = e.selection;
    if (e.selection instanceof Ue && e.selection.node.isBlock)
      return !r.parentOffset || !eo(e.doc, r.pos) ? !1 : (n && n(e.tr.split(r.pos).scrollIntoView()), !0);
    if (!r.depth)
      return !1;
    let o = [], a, s, c = !1, l = !1;
    for (let h = r.depth; ; h--)
      if (r.node(h).isBlock) {
        c = r.end(h) == r.pos + (r.depth - h), l = r.start(h) == r.pos - (r.depth - h), s = yh(r.node(h - 1).contentMatchAt(r.indexAfter(h - 1))), o.unshift(c && s ? { type: s } : null), a = h;
        break;
      } else {
        if (h == 1)
          return !1;
        o.unshift(null);
      }
    let u = e.tr;
    (e.selection instanceof Be || e.selection instanceof Xt) && u.deleteSelection();
    let f = u.mapping.map(r.pos), d = eo(u.doc, f, o.length, o);
    if (d || (o[0] = s ? { type: s } : null, d = eo(u.doc, f, o.length, o)), u.split(f, o.length, o), !c && l && r.node(a).type != s) {
      let h = u.mapping.map(r.before(a)), p = u.doc.resolve(h);
      s && r.node(a - 1).canReplaceWith(p.index(), p.index() + 1, s) && u.setNodeMarkup(u.mapping.map(r.before(a)), s);
    }
    return n && n(u.scrollIntoView()), !0;
  };
}
const Y3 = Z3(), yR = (t, e) => {
  let { $from: n, to: r } = t.selection, i, o = n.sharedDepth(r);
  return o == 0 ? !1 : (i = n.before(o), e && e(t.tr.setSelection(Ue.create(t.doc, i))), !0);
};
function Q3(t, e, n) {
  let r = e.nodeBefore, i = e.nodeAfter, o = e.index();
  return !r || !i || !r.type.compatibleContent(i.type) ? !1 : !r.content.size && e.parent.canReplace(o - 1, o) ? (n && n(t.tr.delete(e.pos - r.nodeSize, e.pos).scrollIntoView()), !0) : !e.parent.canReplace(o, o + 1) || !(i.isTextblock || Ro(t.doc, e.pos)) ? !1 : (n && n(t.tr.join(e.pos).scrollIntoView()), !0);
}
function Ev(t, e, n, r) {
  let i = e.nodeBefore, o = e.nodeAfter, a, s, c = i.type.spec.isolating || o.type.spec.isolating;
  if (!c && Q3(t, e, n))
    return !0;
  let l = !c && e.parent.canReplace(e.index(), e.index() + 1);
  if (l && (a = (s = i.contentMatchAt(i.childCount)).findWrapping(o.type)) && s.matchType(a[0] || o.type).validEnd) {
    if (n) {
      let h = e.pos + o.nodeSize, p = ge.empty;
      for (let y = a.length - 1; y >= 0; y--)
        p = ge.from(a[y].create(null, p));
      p = ge.from(i.copy(p));
      let m = t.tr.step(new ft(e.pos - 1, h, e.pos, h, new _e(p, 1, 0), a.length, !0)), g = m.doc.resolve(h + 2 * a.length);
      g.nodeAfter && g.nodeAfter.type == i.type && Ro(m.doc, g.pos) && m.join(g.pos), n(m.scrollIntoView());
    }
    return !0;
  }
  let u = o.type.spec.isolating || r > 0 && c ? null : Oe.findFrom(e, 1), f = u && u.$from.blockRange(u.$to), d = f && Oo(f);
  if (d != null && d >= e.depth)
    return n && n(t.tr.lift(f, d).scrollIntoView()), !0;
  if (l && Di(o, "start", !0) && Di(i, "end")) {
    let h = i, p = [];
    for (; p.push(h), !h.isTextblock; )
      h = h.lastChild;
    let m = o, g = 1;
    for (; !m.isTextblock; m = m.firstChild)
      g++;
    if (h.canReplace(h.childCount, h.childCount, m.content)) {
      if (n) {
        let y = ge.empty;
        for (let v = p.length - 1; v >= 0; v--)
          y = ge.from(p[v].copy(y));
        let b = t.tr.step(new ft(e.pos - p.length, e.pos + o.nodeSize, e.pos + g, e.pos + o.nodeSize - g, new _e(y, p.length, 0), 0, !0));
        n(b.scrollIntoView());
      }
      return !0;
    }
  }
  return !1;
}
function Cv(t) {
  return function(e, n) {
    let r = e.selection, i = t < 0 ? r.$from : r.$to, o = i.depth;
    for (; i.node(o).isInline; ) {
      if (!o)
        return !1;
      o--;
    }
    return i.node(o).isTextblock ? (n && n(e.tr.setSelection(Be.create(e.doc, t < 0 ? i.start(o) : i.end(o)))), !0) : !1;
  };
}
const bR = Cv(-1), vR = Cv(1);
function DR(t, e = null) {
  return function(n, r) {
    let { $from: i, $to: o } = n.selection, a = i.blockRange(o), s = a && A0(a, t, e);
    return s ? (r && r(n.tr.wrap(a, s).scrollIntoView()), !0) : !1;
  };
}
function xR(t, e = null) {
  return function(n, r) {
    let i = !1;
    for (let o = 0; o < n.selection.ranges.length && !i; o++) {
      let { $from: { pos: a }, $to: { pos: s } } = n.selection.ranges[o];
      n.doc.nodesBetween(a, s, (c, l) => {
        if (i)
          return !1;
        if (!(!c.isTextblock || c.hasMarkup(t, e)))
          if (c.type == t)
            i = !0;
          else {
            let u = n.doc.resolve(l), f = u.index();
            i = u.parent.canReplaceWith(f, f + 1, t);
          }
      });
    }
    if (!i)
      return !1;
    if (r) {
      let o = n.tr;
      for (let a = 0; a < n.selection.ranges.length; a++) {
        let { $from: { pos: s }, $to: { pos: c } } = n.selection.ranges[a];
        o.setBlockType(s, c, t, e);
      }
      r(o.scrollIntoView());
    }
    return !0;
  };
}
function bh(...t) {
  return function(e, n, r) {
    for (let i = 0; i < t.length; i++)
      if (t[i](e, n, r))
        return !0;
    return !1;
  };
}
bh(xv, $3, V3);
bh(xv, H3, X3);
bh(G3, K3, J3, Y3);
typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : typeof os < "u" && os.platform && os.platform() == "darwin";
function wR(t, e = null) {
  return function(n, r) {
    let { $from: i, $to: o } = n.selection, a = i.blockRange(o);
    if (!a)
      return !1;
    let s = r ? n.tr : null;
    return eE(s, a, t, e) ? (r && r(s.scrollIntoView()), !0) : !1;
  };
}
function eE(t, e, n, r = null) {
  let i = !1, o = e, a = e.$from.doc;
  if (e.depth >= 2 && e.$from.node(e.depth - 1).type.compatibleContent(n) && e.startIndex == 0) {
    if (e.$from.index(e.depth - 1) == 0)
      return !1;
    let c = a.resolve(e.start - 2);
    o = new Qa(c, c, e.depth), e.endIndex < e.parent.childCount && (e = new Qa(e.$from, a.resolve(e.$to.end(e.depth)), e.depth)), i = !0;
  }
  let s = A0(o, n, r, e);
  return s ? (t && tE(t, e, s, i, n), !0) : !1;
}
function tE(t, e, n, r, i) {
  let o = ge.empty;
  for (let u = n.length - 1; u >= 0; u--)
    o = ge.from(n[u].type.create(n[u].attrs, o));
  t.step(new ft(e.start - (r ? 2 : 0), e.end, e.start, e.end, new _e(o, 0, 0), n.length, !0));
  let a = 0;
  for (let u = 0; u < n.length; u++)
    n[u].type == i && (a = u + 1);
  let s = n.length - a, c = e.start + n.length - (r ? 2 : 0), l = e.parent;
  for (let u = e.startIndex, f = e.endIndex, d = !0; u < f; u++, d = !1)
    !d && eo(t.doc, c, s) && (t.split(c, s), c += 2 * s), c += l.child(u).nodeSize;
  return t;
}
function _R(t) {
  return function(e, n) {
    let { $from: r, $to: i } = e.selection, o = r.blockRange(i, (a) => a.childCount > 0 && a.firstChild.type == t);
    return o ? n ? r.node(o.depth - 1).type == t ? nE(e, n, t, o) : rE(e, n, o) : !0 : !1;
  };
}
function nE(t, e, n, r) {
  let i = t.tr, o = r.end, a = r.$to.end(r.depth);
  o < a && (i.step(new ft(o - 1, a, o, a, new _e(ge.from(n.create(null, r.parent.copy())), 1, 0), 1, !0)), r = new Qa(i.doc.resolve(r.$from.pos), i.doc.resolve(a), r.depth));
  const s = Oo(r);
  if (s == null)
    return !1;
  i.lift(r, s);
  let c = i.mapping.map(o, -1) - 1;
  return Ro(i.doc, c) && i.join(c), e(i.scrollIntoView()), !0;
}
function rE(t, e, n) {
  let r = t.tr, i = n.parent;
  for (let h = n.end, p = n.endIndex - 1, m = n.startIndex; p > m; p--)
    h -= i.child(p).nodeSize, r.delete(h - 1, h + 1);
  let o = r.doc.resolve(n.start), a = o.nodeAfter;
  if (r.mapping.map(n.end) != n.start + o.nodeAfter.nodeSize)
    return !1;
  let s = n.startIndex == 0, c = n.endIndex == i.childCount, l = o.node(-1), u = o.index(-1);
  if (!l.canReplace(u + (s ? 0 : 1), u + 1, a.content.append(c ? ge.empty : ge.from(i))))
    return !1;
  let f = o.pos, d = f + a.nodeSize;
  return r.step(new ft(f - (s ? 1 : 0), d + (c ? 1 : 0), f + 1, d - 1, new _e((s ? ge.empty : ge.from(i.copy(ge.empty))).append(c ? ge.empty : ge.from(i.copy(ge.empty))), s ? 0 : 1, c ? 0 : 1), s ? 0 : 1)), e(r.scrollIntoView()), !0;
}
function TR(t) {
  return function(e, n) {
    let { $from: r, $to: i } = e.selection, o = r.blockRange(i, (l) => l.childCount > 0 && l.firstChild.type == t);
    if (!o)
      return !1;
    let a = o.startIndex;
    if (a == 0)
      return !1;
    let s = o.parent, c = s.child(a - 1);
    if (c.type != t)
      return !1;
    if (n) {
      let l = c.lastChild && c.lastChild.type == s.type, u = ge.from(l ? t.create() : null), f = new _e(ge.from(t.create(null, ge.from(s.type.create(null, u)))), l ? 3 : 1, 0), d = o.start, h = o.end;
      n(e.tr.step(new ft(d - (l ? 3 : 1), h, d, h, f, 1, !0)).scrollIntoView());
    }
    return !0;
  };
}
var Sv = typeof global == "object" && global && global.Object === Object && global, iE = typeof self == "object" && self && self.Object === Object && self, vn = Sv || iE || Function("return this")(), yn = vn.Symbol, Av = Object.prototype, oE = Av.hasOwnProperty, aE = Av.toString, Oi = yn ? yn.toStringTag : void 0;
function sE(t) {
  var e = oE.call(t, Oi), n = t[Oi];
  try {
    t[Oi] = void 0;
    var r = !0;
  } catch {
  }
  var i = aE.call(t);
  return r && (e ? t[Oi] = n : delete t[Oi]), i;
}
var cE = Object.prototype, lE = cE.toString;
function uE(t) {
  return lE.call(t);
}
var fE = "[object Null]", dE = "[object Undefined]", Vg = yn ? yn.toStringTag : void 0;
function gr(t) {
  return t == null ? t === void 0 ? dE : fE : Vg && Vg in Object(t) ? sE(t) : uE(t);
}
function In(t) {
  return t != null && typeof t == "object";
}
var hE = "[object Symbol]";
function Gs(t) {
  return typeof t == "symbol" || In(t) && gr(t) == hE;
}
function Uv(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, i = Array(r); ++n < r; )
    i[n] = e(t[n], n, t);
  return i;
}
var bn = Array.isArray, Hg = yn ? yn.prototype : void 0, Xg = Hg ? Hg.toString : void 0;
function cs(t) {
  if (typeof t == "string")
    return t;
  if (bn(t))
    return Uv(t, cs) + "";
  if (Gs(t))
    return Xg ? Xg.call(t) : "";
  var e = t + "";
  return e == "0" && 1 / t == -1 / 0 ? "-0" : e;
}
var pE = /\s/;
function gE(t) {
  for (var e = t.length; e-- && pE.test(t.charAt(e)); )
    ;
  return e;
}
var mE = /^\s+/;
function yE(t) {
  return t && t.slice(0, gE(t) + 1).replace(mE, "");
}
function ur(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var Gg = NaN, bE = /^[-+]0x[0-9a-f]+$/i, vE = /^0b[01]+$/i, DE = /^0o[0-7]+$/i, xE = parseInt;
function hi(t) {
  if (typeof t == "number")
    return t;
  if (Gs(t))
    return Gg;
  if (ur(t)) {
    var e = typeof t.valueOf == "function" ? t.valueOf() : t;
    t = ur(e) ? e + "" : e;
  }
  if (typeof t != "string")
    return t === 0 ? t : +t;
  t = yE(t);
  var n = vE.test(t);
  return n || DE.test(t) ? xE(t.slice(2), n ? 2 : 8) : bE.test(t) ? Gg : +t;
}
var wE = 1 / 0, _E = 17976931348623157e292;
function TE(t) {
  if (!t)
    return t === 0 ? t : 0;
  if (t = hi(t), t === wE || t === -1 / 0) {
    var e = t < 0 ? -1 : 1;
    return e * _E;
  }
  return t === t ? t : 0;
}
function EE(t) {
  var e = TE(t), n = e % 1;
  return e === e ? n ? e - n : e : 0;
}
function vh(t) {
  return t;
}
var CE = "[object AsyncFunction]", SE = "[object Function]", AE = "[object GeneratorFunction]", UE = "[object Proxy]";
function kv(t) {
  if (!ur(t))
    return !1;
  var e = gr(t);
  return e == SE || e == AE || e == CE || e == UE;
}
var Vc = vn["__core-js_shared__"], Kg = function() {
  var t = /[^.]+$/.exec(Vc && Vc.keys && Vc.keys.IE_PROTO || "");
  return t ? "Symbol(src)_1." + t : "";
}();
function kE(t) {
  return !!Kg && Kg in t;
}
var FE = Function.prototype, OE = FE.toString;
function jr(t) {
  if (t != null) {
    try {
      return OE.call(t);
    } catch {
    }
    try {
      return t + "";
    } catch {
    }
  }
  return "";
}
var RE = /[\\^$.*+?()[\]{}|]/g, NE = /^\[object .+?Constructor\]$/, BE = Function.prototype, IE = Object.prototype, ME = BE.toString, WE = IE.hasOwnProperty, LE = RegExp(
  "^" + ME.call(WE).replace(RE, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function PE(t) {
  if (!ur(t) || kE(t))
    return !1;
  var e = kv(t) ? LE : NE;
  return e.test(jr(t));
}
function qE(t, e) {
  return t == null ? void 0 : t[e];
}
function $r(t, e) {
  var n = qE(t, e);
  return PE(n) ? n : void 0;
}
var Dd = $r(vn, "WeakMap");
function zE(t, e, n) {
  switch (n.length) {
    case 0:
      return t.call(e);
    case 1:
      return t.call(e, n[0]);
    case 2:
      return t.call(e, n[0], n[1]);
    case 3:
      return t.call(e, n[0], n[1], n[2]);
  }
  return t.apply(e, n);
}
var jE = 800, $E = 16, VE = Date.now;
function HE(t) {
  var e = 0, n = 0;
  return function() {
    var r = VE(), i = $E - (r - n);
    if (n = r, i > 0) {
      if (++e >= jE)
        return arguments[0];
    } else
      e = 0;
    return t.apply(void 0, arguments);
  };
}
function XE(t) {
  return function() {
    return t;
  };
}
var Jg = function() {
  try {
    var t = $r(Object, "defineProperty");
    return t({}, "", {}), t;
  } catch {
  }
}(), GE = Jg ? function(t, e) {
  return Jg(t, "toString", {
    configurable: !0,
    enumerable: !1,
    value: XE(e),
    writable: !0
  });
} : vh, KE = HE(GE);
function JE(t, e, n, r) {
  for (var i = t.length, o = n + -1; ++o < i; )
    if (e(t[o], o, t))
      return o;
  return -1;
}
function ZE(t) {
  return t !== t;
}
function YE(t, e, n) {
  for (var r = n - 1, i = t.length; ++r < i; )
    if (t[r] === e)
      return r;
  return -1;
}
function QE(t, e, n) {
  return e === e ? YE(t, e, n) : JE(t, ZE, n);
}
function eC(t, e) {
  var n = t == null ? 0 : t.length;
  return !!n && QE(t, e, 0) > -1;
}
var tC = 9007199254740991, nC = /^(?:0|[1-9]\d*)$/;
function Fv(t, e) {
  var n = typeof t;
  return e = e ?? tC, !!e && (n == "number" || n != "symbol" && nC.test(t)) && t > -1 && t % 1 == 0 && t < e;
}
function Ov(t, e) {
  return t === e || t !== t && e !== e;
}
var Zg = Math.max;
function rC(t, e, n) {
  return e = Zg(e === void 0 ? t.length - 1 : e, 0), function() {
    for (var r = arguments, i = -1, o = Zg(r.length - e, 0), a = Array(o); ++i < o; )
      a[i] = r[e + i];
    i = -1;
    for (var s = Array(e + 1); ++i < e; )
      s[i] = r[i];
    return s[e] = n(a), zE(t, this, s);
  };
}
function iC(t, e) {
  return KE(rC(t, e, vh), t + "");
}
var oC = 9007199254740991;
function Dh(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= oC;
}
function Rv(t) {
  return t != null && Dh(t.length) && !kv(t);
}
var aC = Object.prototype;
function sC(t) {
  var e = t && t.constructor, n = typeof e == "function" && e.prototype || aC;
  return t === n;
}
function cC(t, e) {
  for (var n = -1, r = Array(t); ++n < t; )
    r[n] = e(n);
  return r;
}
var lC = "[object Arguments]";
function Yg(t) {
  return In(t) && gr(t) == lC;
}
var Nv = Object.prototype, uC = Nv.hasOwnProperty, fC = Nv.propertyIsEnumerable, xh = Yg(/* @__PURE__ */ function() {
  return arguments;
}()) ? Yg : function(t) {
  return In(t) && uC.call(t, "callee") && !fC.call(t, "callee");
};
function dC() {
  return !1;
}
var Bv = typeof exports == "object" && exports && !exports.nodeType && exports, Qg = Bv && typeof module == "object" && module && !module.nodeType && module, hC = Qg && Qg.exports === Bv, em = hC ? vn.Buffer : void 0, pC = em ? em.isBuffer : void 0, xd = pC || dC, gC = "[object Arguments]", mC = "[object Array]", yC = "[object Boolean]", bC = "[object Date]", vC = "[object Error]", DC = "[object Function]", xC = "[object Map]", wC = "[object Number]", _C = "[object Object]", TC = "[object RegExp]", EC = "[object Set]", CC = "[object String]", SC = "[object WeakMap]", AC = "[object ArrayBuffer]", UC = "[object DataView]", kC = "[object Float32Array]", FC = "[object Float64Array]", OC = "[object Int8Array]", RC = "[object Int16Array]", NC = "[object Int32Array]", BC = "[object Uint8Array]", IC = "[object Uint8ClampedArray]", MC = "[object Uint16Array]", WC = "[object Uint32Array]", Xe = {};
Xe[kC] = Xe[FC] = Xe[OC] = Xe[RC] = Xe[NC] = Xe[BC] = Xe[IC] = Xe[MC] = Xe[WC] = !0;
Xe[gC] = Xe[mC] = Xe[AC] = Xe[yC] = Xe[UC] = Xe[bC] = Xe[vC] = Xe[DC] = Xe[xC] = Xe[wC] = Xe[_C] = Xe[TC] = Xe[EC] = Xe[CC] = Xe[SC] = !1;
function LC(t) {
  return In(t) && Dh(t.length) && !!Xe[gr(t)];
}
function wh(t) {
  return function(e) {
    return t(e);
  };
}
var Iv = typeof exports == "object" && exports && !exports.nodeType && exports, ro = Iv && typeof module == "object" && module && !module.nodeType && module, PC = ro && ro.exports === Iv, Hc = PC && Sv.process, ls = function() {
  try {
    var t = ro && ro.require && ro.require("util").types;
    return t || Hc && Hc.binding && Hc.binding("util");
  } catch {
  }
}(), tm = ls && ls.isTypedArray, Mv = tm ? wh(tm) : LC, qC = Object.prototype, zC = qC.hasOwnProperty;
function jC(t, e) {
  var n = bn(t), r = !n && xh(t), i = !n && !r && xd(t), o = !n && !r && !i && Mv(t), a = n || r || i || o, s = a ? cC(t.length, String) : [], c = s.length;
  for (var l in t)
    zC.call(t, l) && !(a && // Safari 9 has enumerable `arguments.length` in strict mode.
    (l == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (l == "offset" || l == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    o && (l == "buffer" || l == "byteLength" || l == "byteOffset") || // Skip index properties.
    Fv(l, c))) && s.push(l);
  return s;
}
function $C(t, e) {
  return function(n) {
    return t(e(n));
  };
}
var VC = $C(Object.keys, Object), HC = Object.prototype, XC = HC.hasOwnProperty;
function GC(t) {
  if (!sC(t))
    return VC(t);
  var e = [];
  for (var n in Object(t))
    XC.call(t, n) && n != "constructor" && e.push(n);
  return e;
}
function Wv(t) {
  return Rv(t) ? jC(t) : GC(t);
}
var KC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, JC = /^\w*$/;
function _h(t, e) {
  if (bn(t))
    return !1;
  var n = typeof t;
  return n == "number" || n == "symbol" || n == "boolean" || t == null || Gs(t) ? !0 : JC.test(t) || !KC.test(t) || e != null && t in Object(e);
}
var vo = $r(Object, "create");
function ZC() {
  this.__data__ = vo ? vo(null) : {}, this.size = 0;
}
function YC(t) {
  var e = this.has(t) && delete this.__data__[t];
  return this.size -= e ? 1 : 0, e;
}
var QC = "__lodash_hash_undefined__", eS = Object.prototype, tS = eS.hasOwnProperty;
function nS(t) {
  var e = this.__data__;
  if (vo) {
    var n = e[t];
    return n === QC ? void 0 : n;
  }
  return tS.call(e, t) ? e[t] : void 0;
}
var rS = Object.prototype, iS = rS.hasOwnProperty;
function oS(t) {
  var e = this.__data__;
  return vo ? e[t] !== void 0 : iS.call(e, t);
}
var aS = "__lodash_hash_undefined__";
function sS(t, e) {
  var n = this.__data__;
  return this.size += this.has(t) ? 0 : 1, n[t] = vo && e === void 0 ? aS : e, this;
}
function Pr(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
Pr.prototype.clear = ZC;
Pr.prototype.delete = YC;
Pr.prototype.get = nS;
Pr.prototype.has = oS;
Pr.prototype.set = sS;
function cS() {
  this.__data__ = [], this.size = 0;
}
function Ks(t, e) {
  for (var n = t.length; n--; )
    if (Ov(t[n][0], e))
      return n;
  return -1;
}
var lS = Array.prototype, uS = lS.splice;
function fS(t) {
  var e = this.__data__, n = Ks(e, t);
  if (n < 0)
    return !1;
  var r = e.length - 1;
  return n == r ? e.pop() : uS.call(e, n, 1), --this.size, !0;
}
function dS(t) {
  var e = this.__data__, n = Ks(e, t);
  return n < 0 ? void 0 : e[n][1];
}
function hS(t) {
  return Ks(this.__data__, t) > -1;
}
function pS(t, e) {
  var n = this.__data__, r = Ks(n, t);
  return r < 0 ? (++this.size, n.push([t, e])) : n[r][1] = e, this;
}
function Ln(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
Ln.prototype.clear = cS;
Ln.prototype.delete = fS;
Ln.prototype.get = dS;
Ln.prototype.has = hS;
Ln.prototype.set = pS;
var Do = $r(vn, "Map");
function gS() {
  this.size = 0, this.__data__ = {
    hash: new Pr(),
    map: new (Do || Ln)(),
    string: new Pr()
  };
}
function mS(t) {
  var e = typeof t;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null;
}
function Js(t, e) {
  var n = t.__data__;
  return mS(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map;
}
function yS(t) {
  var e = Js(this, t).delete(t);
  return this.size -= e ? 1 : 0, e;
}
function bS(t) {
  return Js(this, t).get(t);
}
function vS(t) {
  return Js(this, t).has(t);
}
function DS(t, e) {
  var n = Js(this, t), r = n.size;
  return n.set(t, e), this.size += n.size == r ? 0 : 1, this;
}
function Pn(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
Pn.prototype.clear = gS;
Pn.prototype.delete = yS;
Pn.prototype.get = bS;
Pn.prototype.has = vS;
Pn.prototype.set = DS;
var xS = "Expected a function";
function Th(t, e) {
  if (typeof t != "function" || e != null && typeof e != "function")
    throw new TypeError(xS);
  var n = function() {
    var r = arguments, i = e ? e.apply(this, r) : r[0], o = n.cache;
    if (o.has(i))
      return o.get(i);
    var a = t.apply(this, r);
    return n.cache = o.set(i, a) || o, a;
  };
  return n.cache = new (Th.Cache || Pn)(), n;
}
Th.Cache = Pn;
var wS = 500;
function _S(t) {
  var e = Th(t, function(r) {
    return n.size === wS && n.clear(), r;
  }), n = e.cache;
  return e;
}
var TS = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, ES = /\\(\\)?/g, CS = _S(function(t) {
  var e = [];
  return t.charCodeAt(0) === 46 && e.push(""), t.replace(TS, function(n, r, i, o) {
    e.push(i ? o.replace(ES, "$1") : r || n);
  }), e;
});
function wd(t) {
  return t == null ? "" : cs(t);
}
function Lv(t, e) {
  return bn(t) ? t : _h(t, e) ? [t] : CS(wd(t));
}
function Zs(t) {
  if (typeof t == "string" || Gs(t))
    return t;
  var e = t + "";
  return e == "0" && 1 / t == -1 / 0 ? "-0" : e;
}
function Pv(t, e) {
  e = Lv(e, t);
  for (var n = 0, r = e.length; t != null && n < r; )
    t = t[Zs(e[n++])];
  return n && n == r ? t : void 0;
}
function SS(t, e, n) {
  var r = t == null ? void 0 : Pv(t, e);
  return r === void 0 ? n : r;
}
function qv(t, e) {
  for (var n = -1, r = e.length, i = t.length; ++n < r; )
    t[i + n] = e[n];
  return t;
}
var nm = yn ? yn.isConcatSpreadable : void 0;
function AS(t) {
  return bn(t) || xh(t) || !!(nm && t && t[nm]);
}
function US(t, e, n, r, i) {
  var o = -1, a = t.length;
  for (n || (n = AS), i || (i = []); ++o < a; ) {
    var s = t[o];
    n(s) && qv(i, s);
  }
  return i;
}
function kS(t, e, n) {
  var r = -1, i = t.length;
  e < 0 && (e = -e > i ? 0 : i + e), n = n > i ? i : n, n < 0 && (n += i), i = e > n ? 0 : n - e >>> 0, e >>>= 0;
  for (var o = Array(i); ++r < i; )
    o[r] = t[r + e];
  return o;
}
function FS(t, e, n) {
  var r = t.length;
  return n = n === void 0 ? r : n, n >= r ? t : kS(t, e, n);
}
var OS = "\\ud800-\\udfff", RS = "\\u0300-\\u036f", NS = "\\ufe20-\\ufe2f", BS = "\\u20d0-\\u20ff", IS = RS + NS + BS, MS = "\\ufe0e\\ufe0f", WS = "\\u200d", LS = RegExp("[" + WS + OS + IS + MS + "]");
function Eh(t) {
  return LS.test(t);
}
function PS(t) {
  return t.split("");
}
var zv = "\\ud800-\\udfff", qS = "\\u0300-\\u036f", zS = "\\ufe20-\\ufe2f", jS = "\\u20d0-\\u20ff", $S = qS + zS + jS, VS = "\\ufe0e\\ufe0f", HS = "[" + zv + "]", _d = "[" + $S + "]", Td = "\\ud83c[\\udffb-\\udfff]", XS = "(?:" + _d + "|" + Td + ")", jv = "[^" + zv + "]", $v = "(?:\\ud83c[\\udde6-\\uddff]){2}", Vv = "[\\ud800-\\udbff][\\udc00-\\udfff]", GS = "\\u200d", Hv = XS + "?", Xv = "[" + VS + "]?", KS = "(?:" + GS + "(?:" + [jv, $v, Vv].join("|") + ")" + Xv + Hv + ")*", JS = Xv + Hv + KS, ZS = "(?:" + [jv + _d + "?", _d, $v, Vv, HS].join("|") + ")", YS = RegExp(Td + "(?=" + Td + ")|" + ZS + JS, "g");
function QS(t) {
  return t.match(YS) || [];
}
function eA(t) {
  return Eh(t) ? QS(t) : PS(t);
}
function tA(t, e, n) {
  return t === t && (n !== void 0 && (t = t <= n ? t : n), e !== void 0 && (t = t >= e ? t : e)), t;
}
function ER(t, e, n) {
  return n === void 0 && (n = e, e = void 0), n !== void 0 && (n = hi(n), n = n === n ? n : 0), e !== void 0 && (e = hi(e), e = e === e ? e : 0), tA(hi(t), e, n);
}
function nA() {
  this.__data__ = new Ln(), this.size = 0;
}
function rA(t) {
  var e = this.__data__, n = e.delete(t);
  return this.size = e.size, n;
}
function iA(t) {
  return this.__data__.get(t);
}
function oA(t) {
  return this.__data__.has(t);
}
var aA = 200;
function sA(t, e) {
  var n = this.__data__;
  if (n instanceof Ln) {
    var r = n.__data__;
    if (!Do || r.length < aA - 1)
      return r.push([t, e]), this.size = ++n.size, this;
    n = this.__data__ = new Pn(r);
  }
  return n.set(t, e), this.size = n.size, this;
}
function Nn(t) {
  var e = this.__data__ = new Ln(t);
  this.size = e.size;
}
Nn.prototype.clear = nA;
Nn.prototype.delete = rA;
Nn.prototype.get = iA;
Nn.prototype.has = oA;
Nn.prototype.set = sA;
function cA(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, i = 0, o = []; ++n < r; ) {
    var a = t[n];
    e(a, n, t) && (o[i++] = a);
  }
  return o;
}
function lA() {
  return [];
}
var uA = Object.prototype, fA = uA.propertyIsEnumerable, rm = Object.getOwnPropertySymbols, dA = rm ? function(t) {
  return t == null ? [] : (t = Object(t), cA(rm(t), function(e) {
    return fA.call(t, e);
  }));
} : lA;
function hA(t, e, n) {
  var r = e(t);
  return bn(t) ? r : qv(r, n(t));
}
function im(t) {
  return hA(t, Wv, dA);
}
var Ed = $r(vn, "DataView"), Cd = $r(vn, "Promise"), Sd = $r(vn, "Set"), om = "[object Map]", pA = "[object Object]", am = "[object Promise]", sm = "[object Set]", cm = "[object WeakMap]", lm = "[object DataView]", gA = jr(Ed), mA = jr(Do), yA = jr(Cd), bA = jr(Sd), vA = jr(Dd), Jn = gr;
(Ed && Jn(new Ed(new ArrayBuffer(1))) != lm || Do && Jn(new Do()) != om || Cd && Jn(Cd.resolve()) != am || Sd && Jn(new Sd()) != sm || Dd && Jn(new Dd()) != cm) && (Jn = function(t) {
  var e = gr(t), n = e == pA ? t.constructor : void 0, r = n ? jr(n) : "";
  if (r)
    switch (r) {
      case gA:
        return lm;
      case mA:
        return om;
      case yA:
        return am;
      case bA:
        return sm;
      case vA:
        return cm;
    }
  return e;
});
var um = vn.Uint8Array, DA = "__lodash_hash_undefined__";
function xA(t) {
  return this.__data__.set(t, DA), this;
}
function wA(t) {
  return this.__data__.has(t);
}
function xo(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.__data__ = new Pn(); ++e < n; )
    this.add(t[e]);
}
xo.prototype.add = xo.prototype.push = xA;
xo.prototype.has = wA;
function _A(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r; )
    if (e(t[n], n, t))
      return !0;
  return !1;
}
function Gv(t, e) {
  return t.has(e);
}
var TA = 1, EA = 2;
function Kv(t, e, n, r, i, o) {
  var a = n & TA, s = t.length, c = e.length;
  if (s != c && !(a && c > s))
    return !1;
  var l = o.get(t), u = o.get(e);
  if (l && u)
    return l == e && u == t;
  var f = -1, d = !0, h = n & EA ? new xo() : void 0;
  for (o.set(t, e), o.set(e, t); ++f < s; ) {
    var p = t[f], m = e[f];
    if (r)
      var g = a ? r(m, p, f, e, t, o) : r(p, m, f, t, e, o);
    if (g !== void 0) {
      if (g)
        continue;
      d = !1;
      break;
    }
    if (h) {
      if (!_A(e, function(y, b) {
        if (!Gv(h, b) && (p === y || i(p, y, n, r, o)))
          return h.push(b);
      })) {
        d = !1;
        break;
      }
    } else if (!(p === m || i(p, m, n, r, o))) {
      d = !1;
      break;
    }
  }
  return o.delete(t), o.delete(e), d;
}
function CA(t) {
  var e = -1, n = Array(t.size);
  return t.forEach(function(r, i) {
    n[++e] = [i, r];
  }), n;
}
function SA(t) {
  var e = -1, n = Array(t.size);
  return t.forEach(function(r) {
    n[++e] = r;
  }), n;
}
var AA = 1, UA = 2, kA = "[object Boolean]", FA = "[object Date]", OA = "[object Error]", RA = "[object Map]", NA = "[object Number]", BA = "[object RegExp]", IA = "[object Set]", MA = "[object String]", WA = "[object Symbol]", LA = "[object ArrayBuffer]", PA = "[object DataView]", fm = yn ? yn.prototype : void 0, Xc = fm ? fm.valueOf : void 0;
function qA(t, e, n, r, i, o, a) {
  switch (n) {
    case PA:
      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
        return !1;
      t = t.buffer, e = e.buffer;
    case LA:
      return !(t.byteLength != e.byteLength || !o(new um(t), new um(e)));
    case kA:
    case FA:
    case NA:
      return Ov(+t, +e);
    case OA:
      return t.name == e.name && t.message == e.message;
    case BA:
    case MA:
      return t == e + "";
    case RA:
      var s = CA;
    case IA:
      var c = r & AA;
      if (s || (s = SA), t.size != e.size && !c)
        return !1;
      var l = a.get(t);
      if (l)
        return l == e;
      r |= UA, a.set(t, e);
      var u = Kv(s(t), s(e), r, i, o, a);
      return a.delete(t), u;
    case WA:
      if (Xc)
        return Xc.call(t) == Xc.call(e);
  }
  return !1;
}
var zA = 1, jA = Object.prototype, $A = jA.hasOwnProperty;
function VA(t, e, n, r, i, o) {
  var a = n & zA, s = im(t), c = s.length, l = im(e), u = l.length;
  if (c != u && !a)
    return !1;
  for (var f = c; f--; ) {
    var d = s[f];
    if (!(a ? d in e : $A.call(e, d)))
      return !1;
  }
  var h = o.get(t), p = o.get(e);
  if (h && p)
    return h == e && p == t;
  var m = !0;
  o.set(t, e), o.set(e, t);
  for (var g = a; ++f < c; ) {
    d = s[f];
    var y = t[d], b = e[d];
    if (r)
      var v = a ? r(b, y, d, e, t, o) : r(y, b, d, t, e, o);
    if (!(v === void 0 ? y === b || i(y, b, n, r, o) : v)) {
      m = !1;
      break;
    }
    g || (g = d == "constructor");
  }
  if (m && !g) {
    var _ = t.constructor, x = e.constructor;
    _ != x && "constructor" in t && "constructor" in e && !(typeof _ == "function" && _ instanceof _ && typeof x == "function" && x instanceof x) && (m = !1);
  }
  return o.delete(t), o.delete(e), m;
}
var HA = 1, dm = "[object Arguments]", hm = "[object Array]", Ho = "[object Object]", XA = Object.prototype, pm = XA.hasOwnProperty;
function GA(t, e, n, r, i, o) {
  var a = bn(t), s = bn(e), c = a ? hm : Jn(t), l = s ? hm : Jn(e);
  c = c == dm ? Ho : c, l = l == dm ? Ho : l;
  var u = c == Ho, f = l == Ho, d = c == l;
  if (d && xd(t)) {
    if (!xd(e))
      return !1;
    a = !0, u = !1;
  }
  if (d && !u)
    return o || (o = new Nn()), a || Mv(t) ? Kv(t, e, n, r, i, o) : qA(t, e, c, n, r, i, o);
  if (!(n & HA)) {
    var h = u && pm.call(t, "__wrapped__"), p = f && pm.call(e, "__wrapped__");
    if (h || p) {
      var m = h ? t.value() : t, g = p ? e.value() : e;
      return o || (o = new Nn()), i(m, g, n, r, o);
    }
  }
  return d ? (o || (o = new Nn()), VA(t, e, n, r, i, o)) : !1;
}
function Ch(t, e, n, r, i) {
  return t === e ? !0 : t == null || e == null || !In(t) && !In(e) ? t !== t && e !== e : GA(t, e, n, r, Ch, i);
}
var KA = 1, JA = 2;
function ZA(t, e, n, r) {
  var i = n.length, o = i;
  if (t == null)
    return !o;
  for (t = Object(t); i--; ) {
    var a = n[i];
    if (a[2] ? a[1] !== t[a[0]] : !(a[0] in t))
      return !1;
  }
  for (; ++i < o; ) {
    a = n[i];
    var s = a[0], c = t[s], l = a[1];
    if (a[2]) {
      if (c === void 0 && !(s in t))
        return !1;
    } else {
      var u = new Nn(), f;
      if (!(f === void 0 ? Ch(l, c, KA | JA, r, u) : f))
        return !1;
    }
  }
  return !0;
}
function Jv(t) {
  return t === t && !ur(t);
}
function YA(t) {
  for (var e = Wv(t), n = e.length; n--; ) {
    var r = e[n], i = t[r];
    e[n] = [r, i, Jv(i)];
  }
  return e;
}
function Zv(t, e) {
  return function(n) {
    return n == null ? !1 : n[t] === e && (e !== void 0 || t in Object(n));
  };
}
function QA(t) {
  var e = YA(t);
  return e.length == 1 && e[0][2] ? Zv(e[0][0], e[0][1]) : function(n) {
    return n === t || ZA(n, t, e);
  };
}
function eU(t, e) {
  return t != null && e in Object(t);
}
function tU(t, e, n) {
  e = Lv(e, t);
  for (var r = -1, i = e.length, o = !1; ++r < i; ) {
    var a = Zs(e[r]);
    if (!(o = t != null && n(t, a)))
      break;
    t = t[a];
  }
  return o || ++r != i ? o : (i = t == null ? 0 : t.length, !!i && Dh(i) && Fv(a, i) && (bn(t) || xh(t)));
}
function nU(t, e) {
  return t != null && tU(t, e, eU);
}
var rU = 1, iU = 2;
function oU(t, e) {
  return _h(t) && Jv(e) ? Zv(Zs(t), e) : function(n) {
    var r = SS(n, t);
    return r === void 0 && r === e ? nU(n, t) : Ch(e, r, rU | iU);
  };
}
function Yv(t) {
  return function(e) {
    return e == null ? void 0 : e[t];
  };
}
function aU(t) {
  return function(e) {
    return Pv(e, t);
  };
}
function sU(t) {
  return _h(t) ? Yv(Zs(t)) : aU(t);
}
function cU(t) {
  return typeof t == "function" ? t : t == null ? vh : typeof t == "object" ? bn(t) ? oU(t[0], t[1]) : QA(t) : sU(t);
}
var Gc = function() {
  return vn.Date.now();
}, lU = "Expected a function", uU = Math.max, fU = Math.min;
function dU(t, e, n) {
  var r, i, o, a, s, c, l = 0, u = !1, f = !1, d = !0;
  if (typeof t != "function")
    throw new TypeError(lU);
  e = hi(e) || 0, ur(n) && (u = !!n.leading, f = "maxWait" in n, o = f ? uU(hi(n.maxWait) || 0, e) : o, d = "trailing" in n ? !!n.trailing : d);
  function h(E) {
    var S = r, U = i;
    return r = i = void 0, l = E, a = t.apply(U, S), a;
  }
  function p(E) {
    return l = E, s = setTimeout(y, e), u ? h(E) : a;
  }
  function m(E) {
    var S = E - c, U = E - l, C = e - S;
    return f ? fU(C, o - U) : C;
  }
  function g(E) {
    var S = E - c, U = E - l;
    return c === void 0 || S >= e || S < 0 || f && U >= o;
  }
  function y() {
    var E = Gc();
    if (g(E))
      return b(E);
    s = setTimeout(y, m(E));
  }
  function b(E) {
    return s = void 0, d && r ? h(E) : (r = i = void 0, a);
  }
  function v() {
    s !== void 0 && clearTimeout(s), l = 0, r = c = i = s = void 0;
  }
  function _() {
    return s === void 0 ? a : b(Gc());
  }
  function x() {
    var E = Gc(), S = g(E);
    if (r = arguments, i = this, c = E, S) {
      if (s === void 0)
        return p(c);
      if (f)
        return clearTimeout(s), s = setTimeout(y, e), h(c);
    }
    return s === void 0 && (s = setTimeout(y, e)), a;
  }
  return x.cancel = v, x.flush = _, x;
}
function Kc(t) {
  return In(t) && Rv(t);
}
var hU = 200;
function pU(t, e, n, r) {
  var i = -1, o = eC, a = !0, s = t.length, c = [], l = e.length;
  if (!s)
    return c;
  n && (e = Uv(e, wh(n))), e.length >= hU && (o = Gv, a = !1, e = new xo(e));
  e:
    for (; ++i < s; ) {
      var u = t[i], f = n == null ? u : n(u);
      if (u = u !== 0 ? u : 0, a && f === f) {
        for (var d = l; d--; )
          if (e[d] === f)
            continue e;
        c.push(u);
      } else o(e, f, r) || c.push(u);
    }
  return c;
}
function gU(t) {
  var e = t == null ? 0 : t.length;
  return e ? t[e - 1] : void 0;
}
var CR = iC(function(t, e) {
  var n = gU(e);
  return Kc(n) && (n = void 0), Kc(t) ? pU(t, US(e, 1, Kc), cU(n)) : [];
}), mU = "[object Number]";
function SR(t) {
  return typeof t == "number" || In(t) && gr(t) == mU;
}
var yU = "[object RegExp]";
function bU(t) {
  return In(t) && gr(t) == yU;
}
var gm = ls && ls.isRegExp, vU = gm ? wh(gm) : bU, DU = Yv("length"), Qv = "\\ud800-\\udfff", xU = "\\u0300-\\u036f", wU = "\\ufe20-\\ufe2f", _U = "\\u20d0-\\u20ff", TU = xU + wU + _U, EU = "\\ufe0e\\ufe0f", CU = "[" + Qv + "]", Ad = "[" + TU + "]", Ud = "\\ud83c[\\udffb-\\udfff]", SU = "(?:" + Ad + "|" + Ud + ")", eD = "[^" + Qv + "]", tD = "(?:\\ud83c[\\udde6-\\uddff]){2}", nD = "[\\ud800-\\udbff][\\udc00-\\udfff]", AU = "\\u200d", rD = SU + "?", iD = "[" + EU + "]?", UU = "(?:" + AU + "(?:" + [eD, tD, nD].join("|") + ")" + iD + rD + ")*", kU = iD + rD + UU, FU = "(?:" + [eD + Ad + "?", Ad, tD, nD, CU].join("|") + ")", mm = RegExp(Ud + "(?=" + Ud + ")|" + FU + kU, "g");
function OU(t) {
  for (var e = mm.lastIndex = 0; mm.test(t); )
    ++e;
  return e;
}
function RU(t) {
  return Eh(t) ? OU(t) : DU(t);
}
var NU = "Expected a function";
function AR(t, e, n) {
  var r = !0, i = !0;
  if (typeof t != "function")
    throw new TypeError(NU);
  return ur(n) && (r = "leading" in n ? !!n.leading : r, i = "trailing" in n ? !!n.trailing : i), dU(t, e, {
    leading: r,
    maxWait: e,
    trailing: i
  });
}
var BU = 30, IU = "...", MU = /\w*$/;
function UR(t, e) {
  var n = BU, r = IU;
  if (ur(e)) {
    var i = "separator" in e ? e.separator : i;
    n = "length" in e ? EE(e.length) : n, r = "omission" in e ? cs(e.omission) : r;
  }
  t = wd(t);
  var o = t.length;
  if (Eh(t)) {
    var a = eA(t);
    o = a.length;
  }
  if (n >= o)
    return t;
  var s = n - RU(r);
  if (s < 1)
    return r;
  var c = a ? FS(a, 0, s).join("") : t.slice(0, s);
  if (i === void 0)
    return c + r;
  if (a && (s += c.length - s), vU(i)) {
    if (t.slice(s).search(i)) {
      var l, u = c;
      for (i.global || (i = RegExp(i.source, wd(MU.exec(i)) + "g")), i.lastIndex = 0; l = i.exec(u); )
        var f = l.index;
      c = c.slice(0, f === void 0 ? s : f);
    }
  } else if (t.indexOf(cs(i), s) != s) {
    var d = c.lastIndexOf(i);
    d > -1 && (c = c.slice(0, d));
  }
  return c + r;
}
function oD(t) {
  var e, n, r = "";
  if (typeof t == "string" || typeof t == "number") r += t;
  else if (typeof t == "object") if (Array.isArray(t)) {
    var i = t.length;
    for (e = 0; e < i; e++) t[e] && (n = oD(t[e])) && (r && (r += " "), r += n);
  } else for (n in t) t[n] && (r && (r += " "), r += n);
  return r;
}
function Bn() {
  for (var t, e, n = 0, r = "", i = arguments.length; n < i; n++) (t = arguments[n]) && (e = oD(t)) && (r && (r += " "), r += e);
  return r;
}
const Sh = "-", WU = (t) => {
  const e = PU(t), {
    conflictingClassGroups: n,
    conflictingClassGroupModifiers: r
  } = t;
  return {
    getClassGroupId: (a) => {
      const s = a.split(Sh);
      return s[0] === "" && s.length !== 1 && s.shift(), aD(s, e) || LU(a);
    },
    getConflictingClassGroupIds: (a, s) => {
      const c = n[a] || [];
      return s && r[a] ? [...c, ...r[a]] : c;
    }
  };
}, aD = (t, e) => {
  var a;
  if (t.length === 0)
    return e.classGroupId;
  const n = t[0], r = e.nextPart.get(n), i = r ? aD(t.slice(1), r) : void 0;
  if (i)
    return i;
  if (e.validators.length === 0)
    return;
  const o = t.join(Sh);
  return (a = e.validators.find(({
    validator: s
  }) => s(o))) == null ? void 0 : a.classGroupId;
}, ym = /^\[(.+)\]$/, LU = (t) => {
  if (ym.test(t)) {
    const e = ym.exec(t)[1], n = e == null ? void 0 : e.substring(0, e.indexOf(":"));
    if (n)
      return "arbitrary.." + n;
  }
}, PU = (t) => {
  const {
    theme: e,
    prefix: n
  } = t, r = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return zU(Object.entries(t.classGroups), n).forEach(([o, a]) => {
    kd(a, r, o, e);
  }), r;
}, kd = (t, e, n, r) => {
  t.forEach((i) => {
    if (typeof i == "string") {
      const o = i === "" ? e : bm(e, i);
      o.classGroupId = n;
      return;
    }
    if (typeof i == "function") {
      if (qU(i)) {
        kd(i(r), e, n, r);
        return;
      }
      e.validators.push({
        validator: i,
        classGroupId: n
      });
      return;
    }
    Object.entries(i).forEach(([o, a]) => {
      kd(a, bm(e, o), n, r);
    });
  });
}, bm = (t, e) => {
  let n = t;
  return e.split(Sh).forEach((r) => {
    n.nextPart.has(r) || n.nextPart.set(r, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), n = n.nextPart.get(r);
  }), n;
}, qU = (t) => t.isThemeGetter, zU = (t, e) => e ? t.map(([n, r]) => {
  const i = r.map((o) => typeof o == "string" ? e + o : typeof o == "object" ? Object.fromEntries(Object.entries(o).map(([a, s]) => [e + a, s])) : o);
  return [n, i];
}) : t, jU = (t) => {
  if (t < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let e = 0, n = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Map();
  const i = (o, a) => {
    n.set(o, a), e++, e > t && (e = 0, r = n, n = /* @__PURE__ */ new Map());
  };
  return {
    get(o) {
      let a = n.get(o);
      if (a !== void 0)
        return a;
      if ((a = r.get(o)) !== void 0)
        return i(o, a), a;
    },
    set(o, a) {
      n.has(o) ? n.set(o, a) : i(o, a);
    }
  };
}, sD = "!", $U = (t) => {
  const {
    separator: e,
    experimentalParseClassName: n
  } = t, r = e.length === 1, i = e[0], o = e.length, a = (s) => {
    const c = [];
    let l = 0, u = 0, f;
    for (let g = 0; g < s.length; g++) {
      let y = s[g];
      if (l === 0) {
        if (y === i && (r || s.slice(g, g + o) === e)) {
          c.push(s.slice(u, g)), u = g + o;
          continue;
        }
        if (y === "/") {
          f = g;
          continue;
        }
      }
      y === "[" ? l++ : y === "]" && l--;
    }
    const d = c.length === 0 ? s : s.substring(u), h = d.startsWith(sD), p = h ? d.substring(1) : d, m = f && f > u ? f - u : void 0;
    return {
      modifiers: c,
      hasImportantModifier: h,
      baseClassName: p,
      maybePostfixModifierPosition: m
    };
  };
  return n ? (s) => n({
    className: s,
    parseClassName: a
  }) : a;
}, VU = (t) => {
  if (t.length <= 1)
    return t;
  const e = [];
  let n = [];
  return t.forEach((r) => {
    r[0] === "[" ? (e.push(...n.sort(), r), n = []) : n.push(r);
  }), e.push(...n.sort()), e;
}, HU = (t) => ({
  cache: jU(t.cacheSize),
  parseClassName: $U(t),
  ...WU(t)
}), XU = /\s+/, GU = (t, e) => {
  const {
    parseClassName: n,
    getClassGroupId: r,
    getConflictingClassGroupIds: i
  } = e, o = [], a = t.trim().split(XU);
  let s = "";
  for (let c = a.length - 1; c >= 0; c -= 1) {
    const l = a[c], {
      modifiers: u,
      hasImportantModifier: f,
      baseClassName: d,
      maybePostfixModifierPosition: h
    } = n(l);
    let p = !!h, m = r(p ? d.substring(0, h) : d);
    if (!m) {
      if (!p) {
        s = l + (s.length > 0 ? " " + s : s);
        continue;
      }
      if (m = r(d), !m) {
        s = l + (s.length > 0 ? " " + s : s);
        continue;
      }
      p = !1;
    }
    const g = VU(u).join(":"), y = f ? g + sD : g, b = y + m;
    if (o.includes(b))
      continue;
    o.push(b);
    const v = i(m, p);
    for (let _ = 0; _ < v.length; ++_) {
      const x = v[_];
      o.push(y + x);
    }
    s = l + (s.length > 0 ? " " + s : s);
  }
  return s;
};
function KU() {
  let t = 0, e, n, r = "";
  for (; t < arguments.length; )
    (e = arguments[t++]) && (n = cD(e)) && (r && (r += " "), r += n);
  return r;
}
const cD = (t) => {
  if (typeof t == "string")
    return t;
  let e, n = "";
  for (let r = 0; r < t.length; r++)
    t[r] && (e = cD(t[r])) && (n && (n += " "), n += e);
  return n;
};
function JU(t, ...e) {
  let n, r, i, o = a;
  function a(c) {
    const l = e.reduce((u, f) => f(u), t());
    return n = HU(l), r = n.cache.get, i = n.cache.set, o = s, s(c);
  }
  function s(c) {
    const l = r(c);
    if (l)
      return l;
    const u = GU(c, n);
    return i(c, u), u;
  }
  return function() {
    return o(KU.apply(null, arguments));
  };
}
const He = (t) => {
  const e = (n) => n[t] || [];
  return e.isThemeGetter = !0, e;
}, lD = /^\[(?:([a-z-]+):)?(.+)\]$/i, ZU = /^\d+\/\d+$/, YU = /* @__PURE__ */ new Set(["px", "full", "screen"]), QU = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, e5 = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, t5 = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, n5 = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, r5 = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, _n = (t) => pi(t) || YU.has(t) || ZU.test(t), jn = (t) => Ci(t, "length", f5), pi = (t) => !!t && !Number.isNaN(Number(t)), Jc = (t) => Ci(t, "number", pi), Ri = (t) => !!t && Number.isInteger(Number(t)), i5 = (t) => t.endsWith("%") && pi(t.slice(0, -1)), Re = (t) => lD.test(t), $n = (t) => QU.test(t), o5 = /* @__PURE__ */ new Set(["length", "size", "percentage"]), a5 = (t) => Ci(t, o5, uD), s5 = (t) => Ci(t, "position", uD), c5 = /* @__PURE__ */ new Set(["image", "url"]), l5 = (t) => Ci(t, c5, h5), u5 = (t) => Ci(t, "", d5), Ni = () => !0, Ci = (t, e, n) => {
  const r = lD.exec(t);
  return r ? r[1] ? typeof e == "string" ? r[1] === e : e.has(r[1]) : n(r[2]) : !1;
}, f5 = (t) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  e5.test(t) && !t5.test(t)
), uD = () => !1, d5 = (t) => n5.test(t), h5 = (t) => r5.test(t), p5 = () => {
  const t = He("colors"), e = He("spacing"), n = He("blur"), r = He("brightness"), i = He("borderColor"), o = He("borderRadius"), a = He("borderSpacing"), s = He("borderWidth"), c = He("contrast"), l = He("grayscale"), u = He("hueRotate"), f = He("invert"), d = He("gap"), h = He("gradientColorStops"), p = He("gradientColorStopPositions"), m = He("inset"), g = He("margin"), y = He("opacity"), b = He("padding"), v = He("saturate"), _ = He("scale"), x = He("sepia"), E = He("skew"), S = He("space"), U = He("translate"), C = () => ["auto", "contain", "none"], R = () => ["auto", "hidden", "clip", "visible", "scroll"], j = () => ["auto", Re, e], T = () => [Re, e], k = () => ["", _n, jn], w = () => ["auto", pi, Re], $ = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], N = () => ["solid", "dashed", "dotted", "double", "none"], M = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], K = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], P = () => ["", "0", Re], te = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], W = () => [pi, Re];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Ni],
      spacing: [_n, jn],
      blur: ["none", "", $n, Re],
      brightness: W(),
      borderColor: [t],
      borderRadius: ["none", "", "full", $n, Re],
      borderSpacing: T(),
      borderWidth: k(),
      contrast: W(),
      grayscale: P(),
      hueRotate: W(),
      invert: P(),
      gap: T(),
      gradientColorStops: [t],
      gradientColorStopPositions: [i5, jn],
      inset: j(),
      margin: j(),
      opacity: W(),
      padding: T(),
      saturate: W(),
      scale: W(),
      sepia: P(),
      skew: W(),
      space: T(),
      translate: T()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", Re]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [$n]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": te()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": te()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...$(), Re]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: R()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": R()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": R()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: C()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": C()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": C()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [m]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [m]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [m]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [m]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [m]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [m]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [m]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [m]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [m]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Ri, Re]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: j()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", Re]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: P()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: P()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Ri, Re]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Ni]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Ri, Re]
        }, Re]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": w()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": w()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Ni]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Ri, Re]
        }, Re]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": w()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": w()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", Re]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", Re]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [d]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [d]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [d]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...K()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...K(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...K(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [b]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [b]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [b]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [b]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [b]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [b]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [b]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [b]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [b]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [g]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [g]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [g]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [g]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [g]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [g]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [g]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [g]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [g]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [S]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [S]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", Re, e]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [Re, e, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [Re, e, "none", "full", "min", "max", "fit", "prose", {
          screen: [$n]
        }, $n]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [Re, e, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [Re, e, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [Re, e, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [Re, e, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", $n, jn]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", Jc]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Ni]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", Re]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", pi, Jc]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", _n, Re]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", Re]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", Re]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [t]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [y]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [t]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [y]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...N(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", _n, jn]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", _n, Re]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [t]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: T()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", Re]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", Re]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [y]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...$(), s5]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", a5]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, l5]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [t]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [p]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [p]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [p]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [h]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [h]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [h]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [o]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [o]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [o]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [o]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [o]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [o]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [o]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [o]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [o]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [o]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [o]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [o]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [o]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [o]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [o]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [y]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...N(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [y]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: N()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [i]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [i]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [i]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [i]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [i]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [i]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [i]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [i]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [i]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [i]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...N()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [_n, Re]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [_n, jn]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [t]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: k()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [t]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [y]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [_n, jn]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [t]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", $n, u5]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Ni]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [y]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...M(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": M()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [n]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [r]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [c]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", $n, Re]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [l]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [u]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [v]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [x]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [n]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [r]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [c]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [l]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [u]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [y]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [v]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [x]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [a]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [a]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [a]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", Re]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: W()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", Re]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: W()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", Re]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [_]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [_]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [_]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Ri, Re]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [U]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [U]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [E]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [E]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", Re]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", t]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", Re]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [t]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": T()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": T()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": T()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": T()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": T()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": T()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": T()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": T()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": T()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": T()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": T()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": T()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": T()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": T()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": T()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": T()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": T()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": T()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", Re]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [t, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [_n, jn, Jc]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [t, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}, kR = /* @__PURE__ */ JU(p5);
function g5({
  updateComputed: t,
  notifyEffect: e
}) {
  let n, r;
  return {
    /**
     * Links a given dependency and subscriber if they are not already linked.
     * 
     * @param dep - The dependency to be linked.
     * @param sub - The subscriber that depends on this dependency.
     * @returns The newly created link object if the two are not already linked; otherwise `undefined`.
     */
    link(l, u) {
      const f = u.depsTail;
      if (f !== void 0 && f.dep === l)
        return;
      const d = f !== void 0 ? f.nextDep : u.deps;
      if (d !== void 0 && d.dep === l) {
        u.depsTail = d;
        return;
      }
      const h = l.subsTail;
      if (!(h !== void 0 && h.sub === u && s(h, u)))
        return i(l, u, d, f);
    },
    /**
     * Traverses and marks subscribers starting from the provided link.
     * 
     * It sets flags (e.g., Dirty, PendingComputed, PendingEffect) on each subscriber
     * to indicate which ones require re-computation or effect processing. 
     * This function should be called after a signal's value changes.
     * 
     * @param link - The starting link from which propagation begins.
     */
    propagate(l) {
      let u = 32, f = l, d = 0;
      e: do {
        const h = l.sub, p = h.flags;
        if (!(p & 244) && (h.flags = p | u | 8, !0) || p & 16 && !(p & 4) && (h.flags = p & -17 | u | 8, !0) || !(p & 224) && s(l, h) && (h.flags = p | 16 | u | 8, h.subs !== void 0)) {
          const m = h.subs;
          if (m !== void 0) {
            m.nextSub !== void 0 ? (m.prevSub = f, l = f = m, u = 64, ++d) : (l = m, u = p & 2 ? 128 : 64);
            continue;
          }
          p & 2 && (r !== void 0 ? r.depsTail.nextDep = h.deps : n = h, r = h);
        } else p & (4 | u) ? !(p & u) && p & 224 && s(l, h) && (h.flags = p | u) : (h.flags = p | u | 8, (p & 10) === 2 && (r !== void 0 ? r.depsTail.nextDep = h.deps : n = h, r = h));
        if ((l = f.nextSub) !== void 0) {
          f = l, u = d ? 64 : 32;
          continue;
        }
        for (; d; ) {
          --d;
          const g = f.dep.subs;
          if (f = g.prevSub, g.prevSub = void 0, (l = f.nextSub) !== void 0) {
            f = l, u = d ? 64 : 32;
            continue e;
          }
        }
        break;
      } while (!0);
    },
    /**
     * Prepares the given subscriber to track new dependencies.
     * 
     * It resets the subscriber's internal pointers (e.g., depsTail) and
     * sets its flags to indicate it is now tracking dependency links.
     * 
     * @param sub - The subscriber to start tracking.
     */
    startTracking(l) {
      l.depsTail = void 0, l.flags = l.flags & -249 | 4;
    },
    /**
     * Concludes tracking of dependencies for the specified subscriber.
     * 
     * It clears or unlinks any tracked dependency information, then
     * updates the subscriber's flags to indicate tracking is complete.
     * 
     * @param sub - The subscriber whose tracking is ending.
     */
    endTracking(l) {
      const u = l.depsTail;
      if (u !== void 0) {
        const f = u.nextDep;
        f !== void 0 && (c(f), u.nextDep = void 0);
      } else l.deps !== void 0 && (c(l.deps), l.deps = void 0);
      l.flags &= -5;
    },
    /**
     * Updates the dirty flag for the given subscriber based on its dependencies.
     * 
     * If the subscriber has any pending computeds, this function sets the Dirty flag
     * and returns `true`. Otherwise, it clears the PendingComputed flag and returns `false`.
     * 
     * @param sub - The subscriber to update.
     * @param flags - The current flag set for this subscriber.
     * @returns `true` if the subscriber is marked as Dirty; otherwise `false`.
     */
    updateDirtyFlag(l, u) {
      return o(l.deps) ? (l.flags = u | 32, !0) : (l.flags = u & -65, !1);
    },
    /**
     * Updates the computed subscriber if necessary before its value is accessed.
     * 
     * If the subscriber is marked Dirty or PendingComputed, this function runs
     * the provided updateComputed logic and triggers a shallowPropagate for any
     * downstream subscribers if an actual update occurs.
     * 
     * @param computed - The computed subscriber to update.
     * @param flags - The current flag set for this subscriber.
     */
    processComputedUpdate(l, u) {
      if ((u & 32 || (o(l.deps) || (l.flags = u & -65, !1))) && t(l)) {
        const f = l.subs;
        f !== void 0 && a(f);
      }
    },
    /**
     * Ensures all pending internal effects for the given subscriber are processed.
     * 
     * This should be called after an effect decides not to re-run itself but may still
     * have dependencies flagged with PendingEffect. If the subscriber is flagged with
     * PendingEffect, this function clears that flag and invokes `notifyEffect` on any
     * related dependencies marked as Effect and Propagated, processing pending effects.
     * 
     * @param sub - The subscriber which may have pending effects.
     * @param flags - The current flags on the subscriber to check.
     */
    processPendingInnerEffects(l, u) {
      if (u & 128) {
        l.flags = u & -129;
        let f = l.deps;
        do {
          const d = f.dep;
          "flags" in d && d.flags & 2 && d.flags & 224 && e(d), f = f.nextDep;
        } while (f !== void 0);
      }
    },
    /**
     * Processes queued effect notifications after a batch operation finishes.
     * 
     * Iterates through all queued effects, calling notifyEffect on each.
     * If an effect remains partially handled, its flags are updated, and future
     * notifications may be triggered until fully handled.
     */
    processEffectNotifications() {
      for (; n !== void 0; ) {
        const l = n, u = l.depsTail, f = u.nextDep;
        f !== void 0 ? (u.nextDep = void 0, n = f.sub) : (n = void 0, r = void 0), e(l) || (l.flags &= -9);
      }
    }
  };
  function i(l, u, f, d) {
    const h = {
      dep: l,
      sub: u,
      nextDep: f,
      prevSub: void 0,
      nextSub: void 0
    };
    if (d === void 0 ? u.deps = h : d.nextDep = h, l.subs === void 0)
      l.subs = h;
    else {
      const p = l.subsTail;
      h.prevSub = p, p.nextSub = h;
    }
    return u.depsTail = h, l.subsTail = h, h;
  }
  function o(l) {
    let u = 0, f;
    e: do {
      f = !1;
      const d = l.dep;
      if ("flags" in d) {
        const h = d.flags;
        if ((h & 33) === 33) {
          if (t(d)) {
            const p = d.subs;
            p.nextSub !== void 0 && a(p), f = !0;
          }
        } else if ((h & 65) === 65) {
          const p = d.subs;
          p.nextSub !== void 0 && (p.prevSub = l), l = d.deps, ++u;
          continue;
        }
      }
      if (!f && l.nextDep !== void 0) {
        l = l.nextDep;
        continue;
      }
      if (u) {
        let h = l.sub;
        do {
          --u;
          const p = h.subs;
          if (f) {
            if (t(h)) {
              (l = p.prevSub) !== void 0 ? (p.prevSub = void 0, a(h.subs), h = l.sub) : h = p.sub;
              continue;
            }
          } else
            h.flags &= -65;
          if ((l = p.prevSub) !== void 0) {
            if (p.prevSub = void 0, l.nextDep !== void 0) {
              l = l.nextDep;
              continue e;
            }
            h = l.sub;
          } else {
            if ((l = p.nextDep) !== void 0)
              continue e;
            h = p.sub;
          }
          f = !1;
        } while (u);
      }
      return f;
    } while (!0);
  }
  function a(l) {
    do {
      const u = l.sub, f = u.flags;
      (f & 96) === 64 && (u.flags = f | 32 | 8, (f & 10) === 2 && (r !== void 0 ? r.depsTail.nextDep = u.deps : n = u, r = u)), l = l.nextSub;
    } while (l !== void 0);
  }
  function s(l, u) {
    const f = u.depsTail;
    if (f !== void 0) {
      let d = u.deps;
      do {
        if (d === l)
          return !0;
        if (d === f)
          break;
        d = d.nextDep;
      } while (d !== void 0);
    }
    return !1;
  }
  function c(l) {
    do {
      const u = l.dep, f = l.nextDep, d = l.nextSub, h = l.prevSub;
      if (d !== void 0 ? d.prevSub = h : u.subsTail = h, h !== void 0 ? h.nextSub = d : u.subs = d, u.subs === void 0 && "deps" in u) {
        const p = u.flags;
        p & 32 || (u.flags = p | 32);
        const m = u.deps;
        if (m !== void 0) {
          l = m, u.depsTail.nextDep = f, u.deps = void 0, u.depsTail = void 0;
          continue;
        }
      }
      l = f;
    } while (l !== void 0);
  }
}
var {
  link: fD,
  propagate: m5,
  updateDirtyFlag: y5,
  startTracking: Ah,
  endTracking: Uh,
  processEffectNotifications: b5,
  processComputedUpdate: FR,
  processPendingInnerEffects: dD
} = g5({
  updateComputed(t) {
    const e = pn;
    pn = t, Ah(t);
    try {
      const n = t.currentValue, r = t.getter(n);
      return n !== r ? (t.currentValue = r, !0) : !1;
    } finally {
      pn = e, Uh(t);
    }
  },
  notifyEffect(t) {
    return "isScope" in t ? w5(t) : x5(t);
  }
}), pn;
function v5(t) {
  return _5.bind({
    currentValue: t,
    subs: void 0,
    subsTail: void 0
  });
}
function D5(t) {
  const e = {
    fn: t,
    subs: void 0,
    subsTail: void 0,
    deps: void 0,
    depsTail: void 0,
    flags: 2
    /* Effect */
  };
  return pn !== void 0 && fD(e, pn), hD(e), T5.bind(e);
}
function hD(t) {
  const e = pn;
  pn = t, Ah(t);
  try {
    t.fn();
  } finally {
    pn = e, Uh(t);
  }
}
function x5(t) {
  const e = t.flags;
  return e & 32 || e & 64 && y5(t, e) ? hD(t) : dD(t, t.flags), !0;
}
function w5(t) {
  return t.flags & 128 ? (dD(t, t.flags), !0) : !1;
}
function _5(...t) {
  if (t.length) {
    if (this.currentValue !== (this.currentValue = t[0])) {
      const e = this.subs;
      e !== void 0 && (m5(e), b5());
    }
  } else
    return pn !== void 0 && fD(this, pn), this.currentValue;
}
function T5() {
  Ah(this), Uh(this);
}
function OR(t) {
  return v5(t);
}
function RR(t) {
  return [i_((e) => {
    let n = D5(() => {
      t(), e();
    });
    return () => n();
  }, () => t(), () => t()), (e) => {
    t(typeof e == "function" ? e(t()) : e);
  }];
}
const vm = (t) => typeof t == "boolean" ? `${t}` : t === 0 ? "0" : t, Dm = Bn, NR = (t, e) => (n) => {
  var r;
  if ((e == null ? void 0 : e.variants) == null) return Dm(t, n == null ? void 0 : n.class, n == null ? void 0 : n.className);
  const { variants: i, defaultVariants: o } = e, a = Object.keys(i).map((l) => {
    const u = n == null ? void 0 : n[l], f = o == null ? void 0 : o[l];
    if (u === null) return null;
    const d = vm(u) || vm(f);
    return i[l][d];
  }), s = n && Object.entries(n).reduce((l, u) => {
    let [f, d] = u;
    return d === void 0 || (l[f] = d), l;
  }, {}), c = e == null || (r = e.compoundVariants) === null || r === void 0 ? void 0 : r.reduce((l, u) => {
    let { class: f, className: d, ...h } = u;
    return Object.entries(h).every((p) => {
      let [m, g] = p;
      return Array.isArray(g) ? g.includes({
        ...o,
        ...s
      }[m]) : {
        ...o,
        ...s
      }[m] === g;
    }) ? [
      ...l,
      f,
      d
    ] : l;
  }, []);
  return Dm(t, a, c, n == null ? void 0 : n.class, n == null ? void 0 : n.className);
}, E5 = "aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2", C5 = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2", xi = (t, e) => {
  for (const n in e)
    t[n] = e[n];
  return t;
}, Fd = "numeric", Od = "ascii", Rd = "alpha", io = "asciinumeric", Yi = "alphanumeric", Nd = "domain", pD = "emoji", S5 = "scheme", A5 = "slashscheme", Zc = "whitespace";
function U5(t, e) {
  return t in e || (e[t] = []), e[t];
}
function kr(t, e, n) {
  e[Fd] && (e[io] = !0, e[Yi] = !0), e[Od] && (e[io] = !0, e[Rd] = !0), e[io] && (e[Yi] = !0), e[Rd] && (e[Yi] = !0), e[Yi] && (e[Nd] = !0), e[pD] && (e[Nd] = !0);
  for (const r in e) {
    const i = U5(r, n);
    i.indexOf(t) < 0 && i.push(t);
  }
}
function k5(t, e) {
  const n = {};
  for (const r in e)
    e[r].indexOf(t) >= 0 && (n[r] = !0);
  return n;
}
function St(t = null) {
  this.j = {}, this.jr = [], this.jd = null, this.t = t;
}
St.groups = {};
St.prototype = {
  accepts() {
    return !!this.t;
  },
  /**
   * Follow an existing transition from the given input to the next state.
   * Does not mutate.
   * @param {string} input character or token type to transition on
   * @returns {?State<T>} the next state, if any
   */
  go(t) {
    const e = this, n = e.j[t];
    if (n)
      return n;
    for (let r = 0; r < e.jr.length; r++) {
      const i = e.jr[r][0], o = e.jr[r][1];
      if (o && i.test(t))
        return o;
    }
    return e.jd;
  },
  /**
   * Whether the state has a transition for the given input. Set the second
   * argument to true to only look for an exact match (and not a default or
   * regular-expression-based transition)
   * @param {string} input
   * @param {boolean} exactOnly
   */
  has(t, e = !1) {
    return e ? t in this.j : !!this.go(t);
  },
  /**
   * Short for "transition all"; create a transition from the array of items
   * in the given list to the same final resulting state.
   * @param {string | string[]} inputs Group of inputs to transition on
   * @param {Transition<T> | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   */
  ta(t, e, n, r) {
    for (let i = 0; i < t.length; i++)
      this.tt(t[i], e, n, r);
  },
  /**
   * Short for "take regexp transition"; defines a transition for this state
   * when it encounters a token which matches the given regular expression
   * @param {RegExp} regexp Regular expression transition (populate first)
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  tr(t, e, n, r) {
    r = r || St.groups;
    let i;
    return e && e.j ? i = e : (i = new St(e), n && r && kr(e, n, r)), this.jr.push([t, i]), i;
  },
  /**
   * Short for "take transitions", will take as many sequential transitions as
   * the length of the given input and returns the
   * resulting final state.
   * @param {string | string[]} input
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  ts(t, e, n, r) {
    let i = this;
    const o = t.length;
    if (!o)
      return i;
    for (let a = 0; a < o - 1; a++)
      i = i.tt(t[a]);
    return i.tt(t[o - 1], e, n, r);
  },
  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * Specify a token group flags to define groups that this token belongs to.
   * The token will be added to corresponding entires in the given groups
   * object.
   *
   * @param {string} input character, token type to transition on
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of groups
   * @returns {State<T>} taken after the given input
   */
  tt(t, e, n, r) {
    r = r || St.groups;
    const i = this;
    if (e && e.j)
      return i.j[t] = e, e;
    const o = e;
    let a, s = i.go(t);
    if (s ? (a = new St(), xi(a.j, s.j), a.jr.push.apply(a.jr, s.jr), a.jd = s.jd, a.t = s.t) : a = new St(), o) {
      if (r)
        if (a.t && typeof a.t == "string") {
          const c = xi(k5(a.t, r), n);
          kr(o, c, r);
        } else n && kr(o, n, r);
      a.t = o;
    }
    return i.j[t] = a, a;
  }
};
const Ne = (t, e, n, r, i) => t.ta(e, n, r, i), Je = (t, e, n, r, i) => t.tr(e, n, r, i), xm = (t, e, n, r, i) => t.ts(e, n, r, i), xe = (t, e, n, r, i) => t.tt(e, n, r, i), An = "WORD", Bd = "UWORD", gD = "ASCIINUMERICAL", mD = "ALPHANUMERICAL", wo = "LOCALHOST", Id = "TLD", Md = "UTLD", Ea = "SCHEME", li = "SLASH_SCHEME", kh = "NUM", Wd = "WS", Fh = "NL", oo = "OPENBRACE", ao = "CLOSEBRACE", us = "OPENBRACKET", fs = "CLOSEBRACKET", ds = "OPENPAREN", hs = "CLOSEPAREN", ps = "OPENANGLEBRACKET", gs = "CLOSEANGLEBRACKET", ms = "FULLWIDTHLEFTPAREN", ys = "FULLWIDTHRIGHTPAREN", bs = "LEFTCORNERBRACKET", vs = "RIGHTCORNERBRACKET", Ds = "LEFTWHITECORNERBRACKET", xs = "RIGHTWHITECORNERBRACKET", ws = "FULLWIDTHLESSTHAN", _s = "FULLWIDTHGREATERTHAN", Ts = "AMPERSAND", Oh = "APOSTROPHE", Es = "ASTERISK", Zn = "AT", Cs = "BACKSLASH", Ss = "BACKTICK", As = "CARET", er = "COLON", Rh = "COMMA", Us = "DOLLAR", cn = "DOT", ks = "EQUALS", Nh = "EXCLAMATION", jt = "HYPHEN", so = "PERCENT", Fs = "PIPE", Os = "PLUS", Rs = "POUND", co = "QUERY", Bh = "QUOTE", yD = "FULLWIDTHMIDDLEDOT", Ih = "SEMI", ln = "SLASH", lo = "TILDE", Ns = "UNDERSCORE", bD = "EMOJI", Bs = "SYM";
var vD = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  WORD: An,
  UWORD: Bd,
  ASCIINUMERICAL: gD,
  ALPHANUMERICAL: mD,
  LOCALHOST: wo,
  TLD: Id,
  UTLD: Md,
  SCHEME: Ea,
  SLASH_SCHEME: li,
  NUM: kh,
  WS: Wd,
  NL: Fh,
  OPENBRACE: oo,
  CLOSEBRACE: ao,
  OPENBRACKET: us,
  CLOSEBRACKET: fs,
  OPENPAREN: ds,
  CLOSEPAREN: hs,
  OPENANGLEBRACKET: ps,
  CLOSEANGLEBRACKET: gs,
  FULLWIDTHLEFTPAREN: ms,
  FULLWIDTHRIGHTPAREN: ys,
  LEFTCORNERBRACKET: bs,
  RIGHTCORNERBRACKET: vs,
  LEFTWHITECORNERBRACKET: Ds,
  RIGHTWHITECORNERBRACKET: xs,
  FULLWIDTHLESSTHAN: ws,
  FULLWIDTHGREATERTHAN: _s,
  AMPERSAND: Ts,
  APOSTROPHE: Oh,
  ASTERISK: Es,
  AT: Zn,
  BACKSLASH: Cs,
  BACKTICK: Ss,
  CARET: As,
  COLON: er,
  COMMA: Rh,
  DOLLAR: Us,
  DOT: cn,
  EQUALS: ks,
  EXCLAMATION: Nh,
  HYPHEN: jt,
  PERCENT: so,
  PIPE: Fs,
  PLUS: Os,
  POUND: Rs,
  QUERY: co,
  QUOTE: Bh,
  FULLWIDTHMIDDLEDOT: yD,
  SEMI: Ih,
  SLASH: ln,
  TILDE: lo,
  UNDERSCORE: Ns,
  EMOJI: bD,
  SYM: Bs
});
const Tn = /[a-z]/, Bi = new RegExp("\\p{L}", "u"), Yc = new RegExp("\\p{Emoji}", "u"), En = /\d/, Qc = /\s/, wm = "\r", el = `
`, F5 = "️", O5 = "‍", tl = "￼";
let Xo = null, Go = null;
function R5(t = []) {
  const e = {};
  St.groups = e;
  const n = new St();
  Xo == null && (Xo = _m(E5)), Go == null && (Go = _m(C5)), xe(n, "'", Oh), xe(n, "{", oo), xe(n, "}", ao), xe(n, "[", us), xe(n, "]", fs), xe(n, "(", ds), xe(n, ")", hs), xe(n, "<", ps), xe(n, ">", gs), xe(n, "（", ms), xe(n, "）", ys), xe(n, "「", bs), xe(n, "」", vs), xe(n, "『", Ds), xe(n, "』", xs), xe(n, "＜", ws), xe(n, "＞", _s), xe(n, "&", Ts), xe(n, "*", Es), xe(n, "@", Zn), xe(n, "`", Ss), xe(n, "^", As), xe(n, ":", er), xe(n, ",", Rh), xe(n, "$", Us), xe(n, ".", cn), xe(n, "=", ks), xe(n, "!", Nh), xe(n, "-", jt), xe(n, "%", so), xe(n, "|", Fs), xe(n, "+", Os), xe(n, "#", Rs), xe(n, "?", co), xe(n, '"', Bh), xe(n, "/", ln), xe(n, ";", Ih), xe(n, "~", lo), xe(n, "_", Ns), xe(n, "\\", Cs), xe(n, "・", yD);
  const r = Je(n, En, kh, {
    [Fd]: !0
  });
  Je(r, En, r);
  const i = Je(r, Tn, gD, {
    [io]: !0
  }), o = Je(r, Bi, mD, {
    [Yi]: !0
  }), a = Je(n, Tn, An, {
    [Od]: !0
  });
  Je(a, En, i), Je(a, Tn, a), Je(i, En, i), Je(i, Tn, i);
  const s = Je(n, Bi, Bd, {
    [Rd]: !0
  });
  Je(s, Tn), Je(s, En, o), Je(s, Bi, s), Je(o, En, o), Je(o, Tn), Je(o, Bi, o);
  const c = xe(n, el, Fh, {
    [Zc]: !0
  }), l = xe(n, wm, Wd, {
    [Zc]: !0
  }), u = Je(n, Qc, Wd, {
    [Zc]: !0
  });
  xe(n, tl, u), xe(l, el, c), xe(l, tl, u), Je(l, Qc, u), xe(u, wm), xe(u, el), Je(u, Qc, u), xe(u, tl, u);
  const f = Je(n, Yc, bD, {
    [pD]: !0
  });
  xe(f, "#"), Je(f, Yc, f), xe(f, F5, f);
  const d = xe(f, O5);
  xe(d, "#"), Je(d, Yc, f);
  const h = [[Tn, a], [En, i]], p = [[Tn, null], [Bi, s], [En, o]];
  for (let m = 0; m < Xo.length; m++)
    Vn(n, Xo[m], Id, An, h);
  for (let m = 0; m < Go.length; m++)
    Vn(n, Go[m], Md, Bd, p);
  kr(Id, {
    tld: !0,
    ascii: !0
  }, e), kr(Md, {
    utld: !0,
    alpha: !0
  }, e), Vn(n, "file", Ea, An, h), Vn(n, "mailto", Ea, An, h), Vn(n, "http", li, An, h), Vn(n, "https", li, An, h), Vn(n, "ftp", li, An, h), Vn(n, "ftps", li, An, h), kr(Ea, {
    scheme: !0,
    ascii: !0
  }, e), kr(li, {
    slashscheme: !0,
    ascii: !0
  }, e), t = t.sort((m, g) => m[0] > g[0] ? 1 : -1);
  for (let m = 0; m < t.length; m++) {
    const g = t[m][0], b = t[m][1] ? {
      [S5]: !0
    } : {
      [A5]: !0
    };
    g.indexOf("-") >= 0 ? b[Nd] = !0 : Tn.test(g) ? En.test(g) ? b[io] = !0 : b[Od] = !0 : b[Fd] = !0, xm(n, g, g, b);
  }
  return xm(n, "localhost", wo, {
    ascii: !0
  }), n.jd = new St(Bs), {
    start: n,
    tokens: xi({
      groups: e
    }, vD)
  };
}
function DD(t, e) {
  const n = N5(e.replace(/[A-Z]/g, (s) => s.toLowerCase())), r = n.length, i = [];
  let o = 0, a = 0;
  for (; a < r; ) {
    let s = t, c = null, l = 0, u = null, f = -1, d = -1;
    for (; a < r && (c = s.go(n[a])); )
      s = c, s.accepts() ? (f = 0, d = 0, u = s) : f >= 0 && (f += n[a].length, d++), l += n[a].length, o += n[a].length, a++;
    o -= f, a -= d, l -= f, i.push({
      t: u.t,
      // token type/name
      v: e.slice(o - l, o),
      // string value
      s: o - l,
      // start index
      e: o
      // end index (excluding)
    });
  }
  return i;
}
function N5(t) {
  const e = [], n = t.length;
  let r = 0;
  for (; r < n; ) {
    let i = t.charCodeAt(r), o, a = i < 55296 || i > 56319 || r + 1 === n || (o = t.charCodeAt(r + 1)) < 56320 || o > 57343 ? t[r] : t.slice(r, r + 2);
    e.push(a), r += a.length;
  }
  return e;
}
function Vn(t, e, n, r, i) {
  let o;
  const a = e.length;
  for (let s = 0; s < a - 1; s++) {
    const c = e[s];
    t.j[c] ? o = t.j[c] : (o = new St(r), o.jr = i.slice(), t.j[c] = o), t = o;
  }
  return o = new St(n), o.jr = i.slice(), t.j[e[a - 1]] = o, o;
}
function _m(t) {
  const e = [], n = [];
  let r = 0, i = "0123456789";
  for (; r < t.length; ) {
    let o = 0;
    for (; i.indexOf(t[r + o]) >= 0; )
      o++;
    if (o > 0) {
      e.push(n.join(""));
      for (let a = parseInt(t.substring(r, r + o), 10); a > 0; a--)
        n.pop();
      r += o;
    } else
      n.push(t[r]), r++;
  }
  return e;
}
const _o = {
  defaultProtocol: "http",
  events: null,
  format: Tm,
  formatHref: Tm,
  nl2br: !1,
  tagName: "a",
  target: null,
  rel: null,
  validate: !0,
  truncate: 1 / 0,
  className: null,
  attributes: null,
  ignoreTags: [],
  render: null
};
function Mh(t, e = null) {
  let n = xi({}, _o);
  t && (n = xi(n, t instanceof Mh ? t.o : t));
  const r = n.ignoreTags, i = [];
  for (let o = 0; o < r.length; o++)
    i.push(r[o].toUpperCase());
  this.o = n, e && (this.defaultRender = e), this.ignoreTags = i;
}
Mh.prototype = {
  o: _o,
  /**
   * @type string[]
   */
  ignoreTags: [],
  /**
   * @param {IntermediateRepresentation} ir
   * @returns {any}
   */
  defaultRender(t) {
    return t;
  },
  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options.
   * @param {MultiToken} token
   * @returns {boolean}
   */
  check(t) {
    return this.get("validate", t.toString(), t);
  },
  // Private methods
  /**
   * Resolve an option's value based on the value of the option and the given
   * params. If operator and token are specified and the target option is
   * callable, automatically calls the function with the given argument.
   * @template {keyof Opts} K
   * @param {K} key Name of option to use
   * @param {string} [operator] will be passed to the target option if it's a
   * function. If not specified, RAW function value gets returned
   * @param {MultiToken} [token] The token from linkify.tokenize
   * @returns {Opts[K] | any}
   */
  get(t, e, n) {
    const r = e != null;
    let i = this.o[t];
    return i && (typeof i == "object" ? (i = n.t in i ? i[n.t] : _o[t], typeof i == "function" && r && (i = i(e, n))) : typeof i == "function" && r && (i = i(e, n.t, n)), i);
  },
  /**
   * @template {keyof Opts} L
   * @param {L} key Name of options object to use
   * @param {string} [operator]
   * @param {MultiToken} [token]
   * @returns {Opts[L] | any}
   */
  getObj(t, e, n) {
    let r = this.o[t];
    return typeof r == "function" && e != null && (r = r(e, n.t, n)), r;
  },
  /**
   * Convert the given token to a rendered element that may be added to the
   * calling-interface's DOM
   * @param {MultiToken} token Token to render to an HTML element
   * @returns {any} Render result; e.g., HTML string, DOM element, React
   *   Component, etc.
   */
  render(t) {
    const e = t.render(this);
    return (this.get("render", null, t) || this.defaultRender)(e, t.t, t);
  }
};
function Tm(t) {
  return t;
}
function xD(t, e) {
  this.t = "token", this.v = t, this.tk = e;
}
xD.prototype = {
  isLink: !1,
  /**
   * Return the string this token represents.
   * @return {string}
   */
  toString() {
    return this.v;
  },
  /**
   * What should the value for this token be in the `href` HTML attribute?
   * Returns the `.toString` value by default.
   * @param {string} [scheme]
   * @return {string}
   */
  toHref(t) {
    return this.toString();
  },
  /**
   * @param {Options} options Formatting options
   * @returns {string}
   */
  toFormattedString(t) {
    const e = this.toString(), n = t.get("truncate", e, this), r = t.get("format", e, this);
    return n && r.length > n ? r.substring(0, n) + "…" : r;
  },
  /**
   *
   * @param {Options} options
   * @returns {string}
   */
  toFormattedHref(t) {
    return t.get("formatHref", this.toHref(t.get("defaultProtocol")), this);
  },
  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex() {
    return this.tk[0].s;
  },
  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex() {
    return this.tk[this.tk.length - 1].e;
  },
  /**
  	Returns an object  of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  */
  toObject(t = _o.defaultProtocol) {
    return {
      type: this.t,
      value: this.toString(),
      isLink: this.isLink,
      href: this.toHref(t),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   *
   * @param {Options} options Formatting option
   */
  toFormattedObject(t) {
    return {
      type: this.t,
      value: this.toFormattedString(t),
      isLink: this.isLink,
      href: this.toFormattedHref(t),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   * Whether this token should be rendered as a link according to the given options
   * @param {Options} options
   * @returns {boolean}
   */
  validate(t) {
    return t.get("validate", this.toString(), this);
  },
  /**
   * Return an object that represents how this link should be rendered.
   * @param {Options} options Formattinng options
   */
  render(t) {
    const e = this, n = this.toHref(t.get("defaultProtocol")), r = t.get("formatHref", n, this), i = t.get("tagName", n, e), o = this.toFormattedString(t), a = {}, s = t.get("className", n, e), c = t.get("target", n, e), l = t.get("rel", n, e), u = t.getObj("attributes", n, e), f = t.getObj("events", n, e);
    return a.href = r, s && (a.class = s), c && (a.target = c), l && (a.rel = l), u && xi(a, u), {
      tagName: i,
      attributes: a,
      content: o,
      eventListeners: f
    };
  }
};
function Ys(t, e) {
  class n extends xD {
    constructor(i, o) {
      super(i, o), this.t = t;
    }
  }
  for (const r in e)
    n.prototype[r] = e[r];
  return n.t = t, n;
}
const Em = Ys("email", {
  isLink: !0,
  toHref() {
    return "mailto:" + this.toString();
  }
}), Cm = Ys("text"), B5 = Ys("nl"), Ko = Ys("url", {
  isLink: !0,
  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@param {string} [scheme] default scheme (e.g., 'https')
  	@return {string} the full href
  */
  toHref(t = _o.defaultProtocol) {
    return this.hasProtocol() ? this.v : `${t}://${this.v}`;
  },
  /**
   * Check whether this URL token has a protocol
   * @return {boolean}
   */
  hasProtocol() {
    const t = this.tk;
    return t.length >= 2 && t[0].t !== wo && t[1].t === er;
  }
}), Pt = (t) => new St(t);
function I5({
  groups: t
}) {
  const e = t.domain.concat([Ts, Es, Zn, Cs, Ss, As, Us, ks, jt, kh, so, Fs, Os, Rs, ln, Bs, lo, Ns]), n = [er, Rh, cn, Nh, so, co, Bh, Ih, ps, gs, oo, ao, fs, us, ds, hs, ms, ys, bs, vs, Ds, xs, ws, _s], r = [Ts, Oh, Es, Cs, Ss, As, Us, ks, jt, oo, ao, so, Fs, Os, Rs, co, ln, Bs, lo, Ns], i = Pt(), o = xe(i, lo);
  Ne(o, r, o), Ne(o, t.domain, o);
  const a = Pt(), s = Pt(), c = Pt();
  Ne(i, t.domain, a), Ne(i, t.scheme, s), Ne(i, t.slashscheme, c), Ne(a, r, o), Ne(a, t.domain, a);
  const l = xe(a, Zn);
  xe(o, Zn, l), xe(s, Zn, l), xe(c, Zn, l);
  const u = xe(o, cn);
  Ne(u, r, o), Ne(u, t.domain, o);
  const f = Pt();
  Ne(l, t.domain, f), Ne(f, t.domain, f);
  const d = xe(f, cn);
  Ne(d, t.domain, f);
  const h = Pt(Em);
  Ne(d, t.tld, h), Ne(d, t.utld, h), xe(l, wo, h);
  const p = xe(f, jt);
  xe(p, jt, p), Ne(p, t.domain, f), Ne(h, t.domain, f), xe(h, cn, d), xe(h, jt, p);
  const m = xe(h, er);
  Ne(m, t.numeric, Em);
  const g = xe(a, jt), y = xe(a, cn);
  xe(g, jt, g), Ne(g, t.domain, a), Ne(y, r, o), Ne(y, t.domain, a);
  const b = Pt(Ko);
  Ne(y, t.tld, b), Ne(y, t.utld, b), Ne(b, t.domain, a), Ne(b, r, o), xe(b, cn, y), xe(b, jt, g), xe(b, Zn, l);
  const v = xe(b, er), _ = Pt(Ko);
  Ne(v, t.numeric, _);
  const x = Pt(Ko), E = Pt();
  Ne(x, e, x), Ne(x, n, E), Ne(E, e, x), Ne(E, n, E), xe(b, ln, x), xe(_, ln, x);
  const S = xe(s, er), U = xe(c, er), C = xe(U, ln), R = xe(C, ln);
  Ne(s, t.domain, a), xe(s, cn, y), xe(s, jt, g), Ne(c, t.domain, a), xe(c, cn, y), xe(c, jt, g), Ne(S, t.domain, x), xe(S, ln, x), xe(S, co, x), Ne(R, t.domain, x), Ne(R, e, x), xe(R, ln, x);
  const j = [
    [oo, ao],
    // {}
    [us, fs],
    // []
    [ds, hs],
    // ()
    [ps, gs],
    // <>
    [ms, ys],
    // （）
    [bs, vs],
    // 「」
    [Ds, xs],
    // 『』
    [ws, _s]
    // ＜＞
  ];
  for (let T = 0; T < j.length; T++) {
    const [k, w] = j[T], $ = xe(x, k);
    xe(E, k, $), xe($, w, x);
    const N = Pt(Ko);
    Ne($, e, N);
    const M = Pt();
    Ne($, n), Ne(N, e, N), Ne(N, n, M), Ne(M, e, N), Ne(M, n, M), xe(N, w, x), xe(M, w, x);
  }
  return xe(i, wo, b), xe(i, Fh, B5), {
    start: i,
    tokens: vD
  };
}
function M5(t, e, n) {
  let r = n.length, i = 0, o = [], a = [];
  for (; i < r; ) {
    let s = t, c = null, l = null, u = 0, f = null, d = -1;
    for (; i < r && !(c = s.go(n[i].t)); )
      a.push(n[i++]);
    for (; i < r && (l = c || s.go(n[i].t)); )
      c = null, s = l, s.accepts() ? (d = 0, f = s) : d >= 0 && d++, i++, u++;
    if (d < 0)
      i -= u, i < r && (a.push(n[i]), i++);
    else {
      a.length > 0 && (o.push(nl(Cm, e, a)), a = []), i -= d, u -= d;
      const h = f.t, p = n.slice(i - u, i);
      o.push(nl(h, e, p));
    }
  }
  return a.length > 0 && o.push(nl(Cm, e, a)), o;
}
function nl(t, e, n) {
  const r = n[0].s, i = n[n.length - 1].e, o = e.slice(r, i);
  return new t(o, n);
}
const W5 = typeof console < "u" && console && console.warn || (() => {
}), L5 = "until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.", Ge = {
  scanner: null,
  parser: null,
  tokenQueue: [],
  pluginQueue: [],
  customSchemes: [],
  initialized: !1
};
function BR() {
  return St.groups = {}, Ge.scanner = null, Ge.parser = null, Ge.tokenQueue = [], Ge.pluginQueue = [], Ge.customSchemes = [], Ge.initialized = !1, Ge;
}
function IR(t, e = !1) {
  if (Ge.initialized && W5(`linkifyjs: already initialized - will not register custom scheme "${t}" ${L5}`), !/^[0-9a-z]+(-[0-9a-z]+)*$/.test(t))
    throw new Error(`linkifyjs: incorrect scheme format.
1. Must only contain digits, lowercase ASCII letters or "-"
2. Cannot start or end with "-"
3. "-" cannot repeat`);
  Ge.customSchemes.push([t, e]);
}
function P5() {
  Ge.scanner = R5(Ge.customSchemes);
  for (let t = 0; t < Ge.tokenQueue.length; t++)
    Ge.tokenQueue[t][1]({
      scanner: Ge.scanner
    });
  Ge.parser = I5(Ge.scanner.tokens);
  for (let t = 0; t < Ge.pluginQueue.length; t++)
    Ge.pluginQueue[t][1]({
      scanner: Ge.scanner,
      parser: Ge.parser
    });
  return Ge.initialized = !0, Ge;
}
function wD(t) {
  return Ge.initialized || P5(), M5(Ge.parser.start, t, DD(Ge.scanner.start, t));
}
wD.scan = DD;
function MR(t, e = null, n = null) {
  if (e && typeof e == "object") {
    if (n)
      throw Error(`linkifyjs: Invalid link type ${e}; must be a string`);
    n = e, e = null;
  }
  const r = new Mh(n), i = wD(t), o = [];
  for (let a = 0; a < i.length; a++) {
    const s = i[a];
    s.isLink && (!e || s.t === e) && r.check(s) && o.push(s.toFormattedObject(r));
  }
  return o;
}
var Is = 200, ot = function() {
};
ot.prototype.append = function(e) {
  return e.length ? (e = ot.from(e), !this.length && e || e.length < Is && this.leafAppend(e) || this.length < Is && e.leafPrepend(this) || this.appendInner(e)) : this;
};
ot.prototype.prepend = function(e) {
  return e.length ? ot.from(e).append(this) : this;
};
ot.prototype.appendInner = function(e) {
  return new q5(this, e);
};
ot.prototype.slice = function(e, n) {
  return e === void 0 && (e = 0), n === void 0 && (n = this.length), e >= n ? ot.empty : this.sliceInner(Math.max(0, e), Math.min(this.length, n));
};
ot.prototype.get = function(e) {
  if (!(e < 0 || e >= this.length))
    return this.getInner(e);
};
ot.prototype.forEach = function(e, n, r) {
  n === void 0 && (n = 0), r === void 0 && (r = this.length), n <= r ? this.forEachInner(e, n, r, 0) : this.forEachInvertedInner(e, n, r, 0);
};
ot.prototype.map = function(e, n, r) {
  n === void 0 && (n = 0), r === void 0 && (r = this.length);
  var i = [];
  return this.forEach(function(o, a) {
    return i.push(e(o, a));
  }, n, r), i;
};
ot.from = function(e) {
  return e instanceof ot ? e : e && e.length ? new _D(e) : ot.empty;
};
var _D = /* @__PURE__ */ function(t) {
  function e(r) {
    t.call(this), this.values = r;
  }
  t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e;
  var n = { length: { configurable: !0 }, depth: { configurable: !0 } };
  return e.prototype.flatten = function() {
    return this.values;
  }, e.prototype.sliceInner = function(i, o) {
    return i == 0 && o == this.length ? this : new e(this.values.slice(i, o));
  }, e.prototype.getInner = function(i) {
    return this.values[i];
  }, e.prototype.forEachInner = function(i, o, a, s) {
    for (var c = o; c < a; c++)
      if (i(this.values[c], s + c) === !1)
        return !1;
  }, e.prototype.forEachInvertedInner = function(i, o, a, s) {
    for (var c = o - 1; c >= a; c--)
      if (i(this.values[c], s + c) === !1)
        return !1;
  }, e.prototype.leafAppend = function(i) {
    if (this.length + i.length <= Is)
      return new e(this.values.concat(i.flatten()));
  }, e.prototype.leafPrepend = function(i) {
    if (this.length + i.length <= Is)
      return new e(i.flatten().concat(this.values));
  }, n.length.get = function() {
    return this.values.length;
  }, n.depth.get = function() {
    return 0;
  }, Object.defineProperties(e.prototype, n), e;
}(ot);
ot.empty = new _D([]);
var q5 = /* @__PURE__ */ function(t) {
  function e(n, r) {
    t.call(this), this.left = n, this.right = r, this.length = n.length + r.length, this.depth = Math.max(n.depth, r.depth) + 1;
  }
  return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flatten = function() {
    return this.left.flatten().concat(this.right.flatten());
  }, e.prototype.getInner = function(r) {
    return r < this.left.length ? this.left.get(r) : this.right.get(r - this.left.length);
  }, e.prototype.forEachInner = function(r, i, o, a) {
    var s = this.left.length;
    if (i < s && this.left.forEachInner(r, i, Math.min(o, s), a) === !1 || o > s && this.right.forEachInner(r, Math.max(i - s, 0), Math.min(this.length, o) - s, a + s) === !1)
      return !1;
  }, e.prototype.forEachInvertedInner = function(r, i, o, a) {
    var s = this.left.length;
    if (i > s && this.right.forEachInvertedInner(r, i - s, Math.max(o, s) - s, a + s) === !1 || o < s && this.left.forEachInvertedInner(r, Math.min(i, s), o, a) === !1)
      return !1;
  }, e.prototype.sliceInner = function(r, i) {
    if (r == 0 && i == this.length)
      return this;
    var o = this.left.length;
    return i <= o ? this.left.slice(r, i) : r >= o ? this.right.slice(r - o, i - o) : this.left.slice(r, o).append(this.right.slice(0, i - o));
  }, e.prototype.leafAppend = function(r) {
    var i = this.right.leafAppend(r);
    if (i)
      return new e(this.left, i);
  }, e.prototype.leafPrepend = function(r) {
    var i = this.left.leafPrepend(r);
    if (i)
      return new e(i, this.right);
  }, e.prototype.appendInner = function(r) {
    return this.left.depth >= Math.max(this.right.depth, r.depth) + 1 ? new e(this.left, new e(this.right, r)) : new e(this, r);
  }, e;
}(ot);
const z5 = 500;
class nn {
  constructor(e, n) {
    this.items = e, this.eventCount = n;
  }
  // Pop the latest event off the branch's history and apply it
  // to a document transform.
  popEvent(e, n) {
    if (this.eventCount == 0)
      return null;
    let r = this.items.length;
    for (; ; r--)
      if (this.items.get(r - 1).selection) {
        --r;
        break;
      }
    let i, o;
    n && (i = this.remapping(r, this.items.length), o = i.maps.length);
    let a = e.tr, s, c, l = [], u = [];
    return this.items.forEach((f, d) => {
      if (!f.step) {
        i || (i = this.remapping(r, d + 1), o = i.maps.length), o--, u.push(f);
        return;
      }
      if (i) {
        u.push(new un(f.map));
        let h = f.step.map(i.slice(o)), p;
        h && a.maybeStep(h).doc && (p = a.mapping.maps[a.mapping.maps.length - 1], l.push(new un(p, void 0, void 0, l.length + u.length))), o--, p && i.appendMap(p, o);
      } else
        a.maybeStep(f.step);
      if (f.selection)
        return s = i ? f.selection.map(i.slice(o)) : f.selection, c = new nn(this.items.slice(0, r).append(u.reverse().concat(l)), this.eventCount - 1), !1;
    }, this.items.length, 0), { remaining: c, transform: a, selection: s };
  }
  // Create a new branch with the given transform added.
  addTransform(e, n, r, i) {
    let o = [], a = this.eventCount, s = this.items, c = !i && s.length ? s.get(s.length - 1) : null;
    for (let u = 0; u < e.steps.length; u++) {
      let f = e.steps[u].invert(e.docs[u]), d = new un(e.mapping.maps[u], f, n), h;
      (h = c && c.merge(d)) && (d = h, u ? o.pop() : s = s.slice(0, s.length - 1)), o.push(d), n && (a++, n = void 0), i || (c = d);
    }
    let l = a - r.depth;
    return l > $5 && (s = j5(s, l), a -= l), new nn(s.append(o), a);
  }
  remapping(e, n) {
    let r = new ui();
    return this.items.forEach((i, o) => {
      let a = i.mirrorOffset != null && o - i.mirrorOffset >= e ? r.maps.length - i.mirrorOffset : void 0;
      r.appendMap(i.map, a);
    }, e, n), r;
  }
  addMaps(e) {
    return this.eventCount == 0 ? this : new nn(this.items.append(e.map((n) => new un(n))), this.eventCount);
  }
  // When the collab module receives remote changes, the history has
  // to know about those, so that it can adjust the steps that were
  // rebased on top of the remote changes, and include the position
  // maps for the remote changes in its array of items.
  rebased(e, n) {
    if (!this.eventCount)
      return this;
    let r = [], i = Math.max(0, this.items.length - n), o = e.mapping, a = e.steps.length, s = this.eventCount;
    this.items.forEach((d) => {
      d.selection && s--;
    }, i);
    let c = n;
    this.items.forEach((d) => {
      let h = o.getMirror(--c);
      if (h == null)
        return;
      a = Math.min(a, h);
      let p = o.maps[h];
      if (d.step) {
        let m = e.steps[h].invert(e.docs[h]), g = d.selection && d.selection.map(o.slice(c + 1, h));
        g && s++, r.push(new un(p, m, g));
      } else
        r.push(new un(p));
    }, i);
    let l = [];
    for (let d = n; d < a; d++)
      l.push(new un(o.maps[d]));
    let u = this.items.slice(0, i).append(l).append(r), f = new nn(u, s);
    return f.emptyItemCount() > z5 && (f = f.compress(this.items.length - r.length)), f;
  }
  emptyItemCount() {
    let e = 0;
    return this.items.forEach((n) => {
      n.step || e++;
    }), e;
  }
  // Compressing a branch means rewriting it to push the air (map-only
  // items) out. During collaboration, these naturally accumulate
  // because each remote change adds one. The `upto` argument is used
  // to ensure that only the items below a given level are compressed,
  // because `rebased` relies on a clean, untouched set of items in
  // order to associate old items with rebased steps.
  compress(e = this.items.length) {
    let n = this.remapping(0, e), r = n.maps.length, i = [], o = 0;
    return this.items.forEach((a, s) => {
      if (s >= e)
        i.push(a), a.selection && o++;
      else if (a.step) {
        let c = a.step.map(n.slice(r)), l = c && c.getMap();
        if (r--, l && n.appendMap(l, r), c) {
          let u = a.selection && a.selection.map(n.slice(r));
          u && o++;
          let f = new un(l.invert(), c, u), d, h = i.length - 1;
          (d = i.length && i[h].merge(f)) ? i[h] = d : i.push(f);
        }
      } else a.map && r--;
    }, this.items.length, 0), new nn(ot.from(i.reverse()), o);
  }
}
nn.empty = new nn(ot.empty, 0);
function j5(t, e) {
  let n;
  return t.forEach((r, i) => {
    if (r.selection && e-- == 0)
      return n = i, !1;
  }), t.slice(n);
}
class un {
  constructor(e, n, r, i) {
    this.map = e, this.step = n, this.selection = r, this.mirrorOffset = i;
  }
  merge(e) {
    if (this.step && e.step && !e.selection) {
      let n = e.step.merge(this.step);
      if (n)
        return new un(n.getMap().invert(), n, this.selection);
    }
  }
}
class Yn {
  constructor(e, n, r, i, o) {
    this.done = e, this.undone = n, this.prevRanges = r, this.prevTime = i, this.prevComposition = o;
  }
}
const $5 = 20;
function V5(t, e, n, r) {
  let i = n.getMeta(Br), o;
  if (i)
    return i.historyState;
  n.getMeta(G5) && (t = new Yn(t.done, t.undone, null, 0, -1));
  let a = n.getMeta("appendedTransaction");
  if (n.steps.length == 0)
    return t;
  if (a && a.getMeta(Br))
    return a.getMeta(Br).redo ? new Yn(t.done.addTransform(n, void 0, r, Ca(e)), t.undone, Sm(n.mapping.maps), t.prevTime, t.prevComposition) : new Yn(t.done, t.undone.addTransform(n, void 0, r, Ca(e)), null, t.prevTime, t.prevComposition);
  if (n.getMeta("addToHistory") !== !1 && !(a && a.getMeta("addToHistory") === !1)) {
    let s = n.getMeta("composition"), c = t.prevTime == 0 || !a && t.prevComposition != s && (t.prevTime < (n.time || 0) - r.newGroupDelay || !H5(n, t.prevRanges)), l = a ? rl(t.prevRanges, n.mapping) : Sm(n.mapping.maps);
    return new Yn(t.done.addTransform(n, c ? e.selection.getBookmark() : void 0, r, Ca(e)), nn.empty, l, n.time, s ?? t.prevComposition);
  } else return (o = n.getMeta("rebased")) ? new Yn(t.done.rebased(n, o), t.undone.rebased(n, o), rl(t.prevRanges, n.mapping), t.prevTime, t.prevComposition) : new Yn(t.done.addMaps(n.mapping.maps), t.undone.addMaps(n.mapping.maps), rl(t.prevRanges, n.mapping), t.prevTime, t.prevComposition);
}
function H5(t, e) {
  if (!e)
    return !1;
  if (!t.docChanged)
    return !0;
  let n = !1;
  return t.mapping.maps[0].forEach((r, i) => {
    for (let o = 0; o < e.length; o += 2)
      r <= e[o + 1] && i >= e[o] && (n = !0);
  }), n;
}
function Sm(t) {
  let e = [];
  for (let n = t.length - 1; n >= 0 && e.length == 0; n--)
    t[n].forEach((r, i, o, a) => e.push(o, a));
  return e;
}
function rl(t, e) {
  if (!t)
    return null;
  let n = [];
  for (let r = 0; r < t.length; r += 2) {
    let i = e.map(t[r], 1), o = e.map(t[r + 1], -1);
    i <= o && n.push(i, o);
  }
  return n;
}
function X5(t, e, n) {
  let r = Ca(e), i = Br.get(e).spec.config, o = (n ? t.undone : t.done).popEvent(e, r);
  if (!o)
    return null;
  let a = o.selection.resolve(o.transform.doc), s = (n ? t.done : t.undone).addTransform(o.transform, e.selection.getBookmark(), i, r), c = new Yn(n ? s : o.remaining, n ? o.remaining : s, null, 0, -1);
  return o.transform.setSelection(a).setMeta(Br, { redo: n, historyState: c });
}
let il = !1, Am = null;
function Ca(t) {
  let e = t.plugins;
  if (Am != e) {
    il = !1, Am = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].spec.historyPreserveItems) {
        il = !0;
        break;
      }
  }
  return il;
}
const Br = new No("history"), G5 = new No("closeHistory");
function WR(t = {}) {
  return t = {
    depth: t.depth || 100,
    newGroupDelay: t.newGroupDelay || 500
  }, new Ei({
    key: Br,
    state: {
      init() {
        return new Yn(nn.empty, nn.empty, null, 0, -1);
      },
      apply(e, n, r) {
        return V5(n, r, e, t);
      }
    },
    config: t,
    props: {
      handleDOMEvents: {
        beforeinput(e, n) {
          let r = n.inputType, i = r == "historyUndo" ? K5 : r == "historyRedo" ? J5 : null;
          return i ? (n.preventDefault(), i(e.state, e.dispatch)) : !1;
        }
      }
    }
  });
}
function TD(t, e) {
  return (n, r) => {
    let i = Br.getState(n);
    if (!i || (t ? i.undone : i.done).eventCount == 0)
      return !1;
    if (r) {
      let o = X5(i, n, t);
      o && r(e ? o.scrollIntoView() : o);
    }
    return !0;
  };
}
const K5 = TD(!1, !0), J5 = TD(!0, !0);
function LR(t = {}) {
  return new Ei({
    view(e) {
      return new Z5(e, t);
    }
  });
}
class Z5 {
  constructor(e, n) {
    var r;
    this.editorView = e, this.cursorPos = null, this.element = null, this.timeout = -1, this.width = (r = n.width) !== null && r !== void 0 ? r : 1, this.color = n.color === !1 ? void 0 : n.color || "black", this.class = n.class, this.handlers = ["dragover", "dragend", "drop", "dragleave"].map((i) => {
      let o = (a) => {
        this[i](a);
      };
      return e.dom.addEventListener(i, o), { name: i, handler: o };
    });
  }
  destroy() {
    this.handlers.forEach(({ name: e, handler: n }) => this.editorView.dom.removeEventListener(e, n));
  }
  update(e, n) {
    this.cursorPos != null && n.doc != e.state.doc && (this.cursorPos > e.state.doc.content.size ? this.setCursor(null) : this.updateOverlay());
  }
  setCursor(e) {
    e != this.cursorPos && (this.cursorPos = e, e == null ? (this.element.parentNode.removeChild(this.element), this.element = null) : this.updateOverlay());
  }
  updateOverlay() {
    let e = this.editorView.state.doc.resolve(this.cursorPos), n = !e.parent.inlineContent, r;
    if (n) {
      let s = e.nodeBefore, c = e.nodeAfter;
      if (s || c) {
        let l = this.editorView.nodeDOM(this.cursorPos - (s ? s.nodeSize : 0));
        if (l) {
          let u = l.getBoundingClientRect(), f = s ? u.bottom : u.top;
          s && c && (f = (f + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2), r = { left: u.left, right: u.right, top: f - this.width / 2, bottom: f + this.width / 2 };
        }
      }
    }
    if (!r) {
      let s = this.editorView.coordsAtPos(this.cursorPos);
      r = { left: s.left - this.width / 2, right: s.left + this.width / 2, top: s.top, bottom: s.bottom };
    }
    let i = this.editorView.dom.offsetParent;
    this.element || (this.element = i.appendChild(document.createElement("div")), this.class && (this.element.className = this.class), this.element.style.cssText = "position: absolute; z-index: 50; pointer-events: none;", this.color && (this.element.style.backgroundColor = this.color)), this.element.classList.toggle("prosemirror-dropcursor-block", n), this.element.classList.toggle("prosemirror-dropcursor-inline", !n);
    let o, a;
    if (!i || i == document.body && getComputedStyle(i).position == "static")
      o = -pageXOffset, a = -pageYOffset;
    else {
      let s = i.getBoundingClientRect();
      o = s.left - i.scrollLeft, a = s.top - i.scrollTop;
    }
    this.element.style.left = r.left - o + "px", this.element.style.top = r.top - a + "px", this.element.style.width = r.right - r.left + "px", this.element.style.height = r.bottom - r.top + "px";
  }
  scheduleRemoval(e) {
    clearTimeout(this.timeout), this.timeout = setTimeout(() => this.setCursor(null), e);
  }
  dragover(e) {
    if (!this.editorView.editable)
      return;
    let n = this.editorView.posAtCoords({ left: e.clientX, top: e.clientY }), r = n && n.inside >= 0 && this.editorView.state.doc.nodeAt(n.inside), i = r && r.type.spec.disableDropCursor, o = typeof i == "function" ? i(this.editorView, n, e) : i;
    if (n && !o) {
      let a = n.pos;
      if (this.editorView.dragging && this.editorView.dragging.slice) {
        let s = R0(this.editorView.state.doc, a, this.editorView.dragging.slice);
        s != null && (a = s);
      }
      this.setCursor(a), this.scheduleRemoval(5e3);
    }
  }
  dragend() {
    this.scheduleRemoval(20);
  }
  drop() {
    this.scheduleRemoval(20);
  }
  dragleave(e) {
    (e.target == this.editorView.dom || !this.editorView.dom.contains(e.relatedTarget)) && this.setCursor(null);
  }
}
class Ye extends Oe {
  /**
  Create a gap cursor.
  */
  constructor(e) {
    super(e, e);
  }
  map(e, n) {
    let r = e.resolve(n.map(this.head));
    return Ye.valid(r) ? new Ye(r) : Oe.near(r);
  }
  content() {
    return _e.empty;
  }
  eq(e) {
    return e instanceof Ye && e.head == this.head;
  }
  toJSON() {
    return { type: "gapcursor", pos: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for GapCursor.fromJSON");
    return new Ye(e.resolve(n.pos));
  }
  /**
  @internal
  */
  getBookmark() {
    return new Wh(this.anchor);
  }
  /**
  @internal
  */
  static valid(e) {
    let n = e.parent;
    if (n.isTextblock || !Y5(e) || !Q5(e))
      return !1;
    let r = n.type.spec.allowGapCursor;
    if (r != null)
      return r;
    let i = n.contentMatchAt(e.index()).defaultType;
    return i && i.isTextblock;
  }
  /**
  @internal
  */
  static findGapCursorFrom(e, n, r = !1) {
    e: for (; ; ) {
      if (!r && Ye.valid(e))
        return e;
      let i = e.pos, o = null;
      for (let a = e.depth; ; a--) {
        let s = e.node(a);
        if (n > 0 ? e.indexAfter(a) < s.childCount : e.index(a) > 0) {
          o = s.child(n > 0 ? e.indexAfter(a) : e.index(a) - 1);
          break;
        } else if (a == 0)
          return null;
        i += n;
        let c = e.doc.resolve(i);
        if (Ye.valid(c))
          return c;
      }
      for (; ; ) {
        let a = n > 0 ? o.firstChild : o.lastChild;
        if (!a) {
          if (o.isAtom && !o.isText && !Ue.isSelectable(o)) {
            e = e.doc.resolve(i + o.nodeSize * n), r = !1;
            continue e;
          }
          break;
        }
        o = a, i += n;
        let s = e.doc.resolve(i);
        if (Ye.valid(s))
          return s;
      }
      return null;
    }
  }
}
Ye.prototype.visible = !1;
Ye.findFrom = Ye.findGapCursorFrom;
Oe.jsonID("gapcursor", Ye);
class Wh {
  constructor(e) {
    this.pos = e;
  }
  map(e) {
    return new Wh(e.map(this.pos));
  }
  resolve(e) {
    let n = e.resolve(this.pos);
    return Ye.valid(n) ? new Ye(n) : Oe.near(n);
  }
}
function Y5(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.index(e), r = t.node(e);
    if (n == 0) {
      if (r.type.spec.isolating)
        return !0;
      continue;
    }
    for (let i = r.child(n - 1); ; i = i.lastChild) {
      if (i.childCount == 0 && !i.inlineContent || i.isAtom || i.type.spec.isolating)
        return !0;
      if (i.inlineContent)
        return !1;
    }
  }
  return !0;
}
function Q5(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.indexAfter(e), r = t.node(e);
    if (n == r.childCount) {
      if (r.type.spec.isolating)
        return !0;
      continue;
    }
    for (let i = r.child(n); ; i = i.firstChild) {
      if (i.childCount == 0 && !i.inlineContent || i.isAtom || i.type.spec.isolating)
        return !0;
      if (i.inlineContent)
        return !1;
    }
  }
  return !0;
}
function PR() {
  return new Ei({
    props: {
      decorations: r8,
      createSelectionBetween(t, e, n) {
        return e.pos == n.pos && Ye.valid(n) ? new Ye(n) : null;
      },
      handleClick: t8,
      handleKeyDown: e8,
      handleDOMEvents: { beforeinput: n8 }
    }
  });
}
const e8 = ph({
  ArrowLeft: Jo("horiz", -1),
  ArrowRight: Jo("horiz", 1),
  ArrowUp: Jo("vert", -1),
  ArrowDown: Jo("vert", 1)
});
function Jo(t, e) {
  const n = t == "vert" ? e > 0 ? "down" : "up" : e > 0 ? "right" : "left";
  return function(r, i, o) {
    let a = r.selection, s = e > 0 ? a.$to : a.$from, c = a.empty;
    if (a instanceof Be) {
      if (!o.endOfTextblock(n) || s.depth == 0)
        return !1;
      c = !1, s = r.doc.resolve(e > 0 ? s.after() : s.before());
    }
    let l = Ye.findGapCursorFrom(s, e, c);
    return l ? (i && i(r.tr.setSelection(new Ye(l))), !0) : !1;
  };
}
function t8(t, e, n) {
  if (!t || !t.editable)
    return !1;
  let r = t.state.doc.resolve(e);
  if (!Ye.valid(r))
    return !1;
  let i = t.posAtCoords({ left: n.clientX, top: n.clientY });
  return i && i.inside > -1 && Ue.isSelectable(t.state.doc.nodeAt(i.inside)) ? !1 : (t.dispatch(t.state.tr.setSelection(new Ye(r))), !0);
}
function n8(t, e) {
  if (e.inputType != "insertCompositionText" || !(t.state.selection instanceof Ye))
    return !1;
  let { $from: n } = t.state.selection, r = n.parent.contentMatchAt(n.index()).findWrapping(t.state.schema.nodes.text);
  if (!r)
    return !1;
  let i = ge.empty;
  for (let a = r.length - 1; a >= 0; a--)
    i = ge.from(r[a].createAndFill(null, i));
  let o = t.state.tr.replace(n.pos, n.pos, new _e(i, 0, 0));
  return o.setSelection(Be.near(o.doc.resolve(n.pos + 1))), t.dispatch(o), !1;
}
function r8(t) {
  if (!(t.selection instanceof Ye))
    return null;
  let e = document.createElement("div");
  return e.className = "ProseMirror-gapcursor", Ze.create(t.doc, [Dt.widget(t.selection.head, e, { key: "gapcursor" })]);
}
var Ld, Pd;
if (typeof WeakMap < "u") {
  let t = /* @__PURE__ */ new WeakMap();
  Ld = (e) => t.get(e), Pd = (e, n) => (t.set(e, n), n);
} else {
  const t = [];
  let n = 0;
  Ld = (r) => {
    for (let i = 0; i < t.length; i += 2)
      if (t[i] == r) return t[i + 1];
  }, Pd = (r, i) => (n == 10 && (n = 0), t[n++] = r, t[n++] = i);
}
var Qe = class {
  constructor(t, e, n, r) {
    this.width = t, this.height = e, this.map = n, this.problems = r;
  }
  // Find the dimensions of the cell at the given position.
  findCell(t) {
    for (let e = 0; e < this.map.length; e++) {
      const n = this.map[e];
      if (n != t) continue;
      const r = e % this.width, i = e / this.width | 0;
      let o = r + 1, a = i + 1;
      for (let s = 1; o < this.width && this.map[e + s] == n; s++)
        o++;
      for (let s = 1; a < this.height && this.map[e + this.width * s] == n; s++)
        a++;
      return { left: r, top: i, right: o, bottom: a };
    }
    throw new RangeError(`No cell with offset ${t} found`);
  }
  // Find the left side of the cell at the given position.
  colCount(t) {
    for (let e = 0; e < this.map.length; e++)
      if (this.map[e] == t)
        return e % this.width;
    throw new RangeError(`No cell with offset ${t} found`);
  }
  // Find the next cell in the given direction, starting from the cell
  // at `pos`, if any.
  nextCell(t, e, n) {
    const { left: r, right: i, top: o, bottom: a } = this.findCell(t);
    return e == "horiz" ? (n < 0 ? r == 0 : i == this.width) ? null : this.map[o * this.width + (n < 0 ? r - 1 : i)] : (n < 0 ? o == 0 : a == this.height) ? null : this.map[r + this.width * (n < 0 ? o - 1 : a)];
  }
  // Get the rectangle spanning the two given cells.
  rectBetween(t, e) {
    const {
      left: n,
      right: r,
      top: i,
      bottom: o
    } = this.findCell(t), {
      left: a,
      right: s,
      top: c,
      bottom: l
    } = this.findCell(e);
    return {
      left: Math.min(n, a),
      top: Math.min(i, c),
      right: Math.max(r, s),
      bottom: Math.max(o, l)
    };
  }
  // Return the position of all cells that have the top left corner in
  // the given rectangle.
  cellsInRect(t) {
    const e = [], n = {};
    for (let r = t.top; r < t.bottom; r++)
      for (let i = t.left; i < t.right; i++) {
        const o = r * this.width + i, a = this.map[o];
        n[a] || (n[a] = !0, !(i == t.left && i && this.map[o - 1] == a || r == t.top && r && this.map[o - this.width] == a) && e.push(a));
      }
    return e;
  }
  // Return the position at which the cell at the given row and column
  // starts, or would start, if a cell started there.
  positionAt(t, e, n) {
    for (let r = 0, i = 0; ; r++) {
      const o = i + n.child(r).nodeSize;
      if (r == t) {
        let a = e + t * this.width;
        const s = (t + 1) * this.width;
        for (; a < s && this.map[a] < i; ) a++;
        return a == s ? o - 1 : this.map[a];
      }
      i = o;
    }
  }
  // Find the table map for the given table node.
  static get(t) {
    return Ld(t) || Pd(t, i8(t));
  }
};
function i8(t) {
  if (t.type.spec.tableRole != "table")
    throw new RangeError("Not a table node: " + t.type.name);
  const e = o8(t), n = t.childCount, r = [];
  let i = 0, o = null;
  const a = [];
  for (let l = 0, u = e * n; l < u; l++) r[l] = 0;
  for (let l = 0, u = 0; l < n; l++) {
    const f = t.child(l);
    u++;
    for (let p = 0; ; p++) {
      for (; i < r.length && r[i] != 0; ) i++;
      if (p == f.childCount) break;
      const m = f.child(p), { colspan: g, rowspan: y, colwidth: b } = m.attrs;
      for (let v = 0; v < y; v++) {
        if (v + l >= n) {
          (o || (o = [])).push({
            type: "overlong_rowspan",
            pos: u,
            n: y - v
          });
          break;
        }
        const _ = i + v * e;
        for (let x = 0; x < g; x++) {
          r[_ + x] == 0 ? r[_ + x] = u : (o || (o = [])).push({
            type: "collision",
            row: l,
            pos: u,
            n: g - x
          });
          const E = b && b[x];
          if (E) {
            const S = (_ + x) % e * 2, U = a[S];
            U == null || U != E && a[S + 1] == 1 ? (a[S] = E, a[S + 1] = 1) : U == E && a[S + 1]++;
          }
        }
      }
      i += g, u += m.nodeSize;
    }
    const d = (l + 1) * e;
    let h = 0;
    for (; i < d; ) r[i++] == 0 && h++;
    h && (o || (o = [])).push({ type: "missing", row: l, n: h }), u++;
  }
  (e === 0 || n === 0) && (o || (o = [])).push({ type: "zero_sized" });
  const s = new Qe(e, n, r, o);
  let c = !1;
  for (let l = 0; !c && l < a.length; l += 2)
    a[l] != null && a[l + 1] < n && (c = !0);
  return c && a8(s, a, t), s;
}
function o8(t) {
  let e = -1, n = !1;
  for (let r = 0; r < t.childCount; r++) {
    const i = t.child(r);
    let o = 0;
    if (n)
      for (let a = 0; a < r; a++) {
        const s = t.child(a);
        for (let c = 0; c < s.childCount; c++) {
          const l = s.child(c);
          a + l.attrs.rowspan > r && (o += l.attrs.colspan);
        }
      }
    for (let a = 0; a < i.childCount; a++) {
      const s = i.child(a);
      o += s.attrs.colspan, s.attrs.rowspan > 1 && (n = !0);
    }
    e == -1 ? e = o : e != o && (e = Math.max(e, o));
  }
  return e;
}
function a8(t, e, n) {
  t.problems || (t.problems = []);
  const r = {};
  for (let i = 0; i < t.map.length; i++) {
    const o = t.map[i];
    if (r[o]) continue;
    r[o] = !0;
    const a = n.nodeAt(o);
    if (!a)
      throw new RangeError(`No cell with offset ${o} found`);
    let s = null;
    const c = a.attrs;
    for (let l = 0; l < c.colspan; l++) {
      const u = (i + l) % t.width, f = e[u * 2];
      f != null && (!c.colwidth || c.colwidth[l] != f) && ((s || (s = s8(c)))[l] = f);
    }
    s && t.problems.unshift({
      type: "colwidth mismatch",
      pos: o,
      colwidth: s
    });
  }
}
function s8(t) {
  if (t.colwidth) return t.colwidth.slice();
  const e = [];
  for (let n = 0; n < t.colspan; n++) e.push(0);
  return e;
}
function pt(t) {
  let e = t.cached.tableNodeTypes;
  if (!e) {
    e = t.cached.tableNodeTypes = {};
    for (const n in t.nodes) {
      const r = t.nodes[n], i = r.spec.tableRole;
      i && (e[i] = r);
    }
  }
  return e;
}
var tr = new No("selectingCells");
function Si(t) {
  for (let e = t.depth - 1; e > 0; e--)
    if (t.node(e).type.spec.tableRole == "row")
      return t.node(0).resolve(t.before(e + 1));
  return null;
}
function c8(t) {
  for (let e = t.depth; e > 0; e--) {
    const n = t.node(e).type.spec.tableRole;
    if (n === "cell" || n === "header_cell") return t.node(e);
  }
  return null;
}
function an(t) {
  const e = t.selection.$head;
  for (let n = e.depth; n > 0; n--)
    if (e.node(n).type.spec.tableRole == "row") return !0;
  return !1;
}
function Qs(t) {
  const e = t.selection;
  if ("$anchorCell" in e && e.$anchorCell)
    return e.$anchorCell.pos > e.$headCell.pos ? e.$anchorCell : e.$headCell;
  if ("node" in e && e.node && e.node.type.spec.tableRole == "cell")
    return e.$anchor;
  const n = Si(e.$head) || l8(e.$head);
  if (n)
    return n;
  throw new RangeError(`No cell found around position ${e.head}`);
}
function l8(t) {
  for (let e = t.nodeAfter, n = t.pos; e; e = e.firstChild, n++) {
    const r = e.type.spec.tableRole;
    if (r == "cell" || r == "header_cell") return t.doc.resolve(n);
  }
  for (let e = t.nodeBefore, n = t.pos; e; e = e.lastChild, n--) {
    const r = e.type.spec.tableRole;
    if (r == "cell" || r == "header_cell")
      return t.doc.resolve(n - e.nodeSize);
  }
}
function qd(t) {
  return t.parent.type.spec.tableRole == "row" && !!t.nodeAfter;
}
function u8(t) {
  return t.node(0).resolve(t.pos + t.nodeAfter.nodeSize);
}
function Lh(t, e) {
  return t.depth == e.depth && t.pos >= e.start(-1) && t.pos <= e.end(-1);
}
function ED(t, e, n) {
  const r = t.node(-1), i = Qe.get(r), o = t.start(-1), a = i.nextCell(t.pos - o, e, n);
  return a == null ? null : t.node(0).resolve(o + a);
}
function qr(t, e, n = 1) {
  const r = { ...t, colspan: t.colspan - n };
  return r.colwidth && (r.colwidth = r.colwidth.slice(), r.colwidth.splice(e, n), r.colwidth.some((i) => i > 0) || (r.colwidth = null)), r;
}
function CD(t, e, n = 1) {
  const r = { ...t, colspan: t.colspan + n };
  if (r.colwidth) {
    r.colwidth = r.colwidth.slice();
    for (let i = 0; i < n; i++) r.colwidth.splice(e, 0, 0);
  }
  return r;
}
function f8(t, e, n) {
  const r = pt(e.type.schema).header_cell;
  for (let i = 0; i < t.height; i++)
    if (e.nodeAt(t.map[n + i * t.width]).type != r)
      return !1;
  return !0;
}
var Ke = class Un extends Oe {
  // A table selection is identified by its anchor and head cells. The
  // positions given to this constructor should point _before_ two
  // cells in the same table. They may be the same, to select a single
  // cell.
  constructor(e, n = e) {
    const r = e.node(-1), i = Qe.get(r), o = e.start(-1), a = i.rectBetween(
      e.pos - o,
      n.pos - o
    ), s = e.node(0), c = i.cellsInRect(a).filter((u) => u != n.pos - o);
    c.unshift(n.pos - o);
    const l = c.map((u) => {
      const f = r.nodeAt(u);
      if (!f)
        throw RangeError(`No cell with offset ${u} found`);
      const d = o + u + 1;
      return new L0(
        s.resolve(d),
        s.resolve(d + f.content.size)
      );
    });
    super(l[0].$from, l[0].$to, l), this.$anchorCell = e, this.$headCell = n;
  }
  map(e, n) {
    const r = e.resolve(n.map(this.$anchorCell.pos)), i = e.resolve(n.map(this.$headCell.pos));
    if (qd(r) && qd(i) && Lh(r, i)) {
      const o = this.$anchorCell.node(-1) != r.node(-1);
      return o && this.isRowSelection() ? Un.rowSelection(r, i) : o && this.isColSelection() ? Un.colSelection(r, i) : new Un(r, i);
    }
    return Be.between(r, i);
  }
  // Returns a rectangular slice of table rows containing the selected
  // cells.
  content() {
    const e = this.$anchorCell.node(-1), n = Qe.get(e), r = this.$anchorCell.start(-1), i = n.rectBetween(
      this.$anchorCell.pos - r,
      this.$headCell.pos - r
    ), o = {}, a = [];
    for (let c = i.top; c < i.bottom; c++) {
      const l = [];
      for (let u = c * n.width + i.left, f = i.left; f < i.right; f++, u++) {
        const d = n.map[u];
        if (o[d]) continue;
        o[d] = !0;
        const h = n.findCell(d);
        let p = e.nodeAt(d);
        if (!p)
          throw RangeError(`No cell with offset ${d} found`);
        const m = i.left - h.left, g = h.right - i.right;
        if (m > 0 || g > 0) {
          let y = p.attrs;
          if (m > 0 && (y = qr(y, 0, m)), g > 0 && (y = qr(
            y,
            y.colspan - g,
            g
          )), h.left < i.left) {
            if (p = p.type.createAndFill(y), !p)
              throw RangeError(
                `Could not create cell with attrs ${JSON.stringify(y)}`
              );
          } else
            p = p.type.create(y, p.content);
        }
        if (h.top < i.top || h.bottom > i.bottom) {
          const y = {
            ...p.attrs,
            rowspan: Math.min(h.bottom, i.bottom) - Math.max(h.top, i.top)
          };
          h.top < i.top ? p = p.type.createAndFill(y) : p = p.type.create(y, p.content);
        }
        l.push(p);
      }
      a.push(e.child(c).copy(ge.from(l)));
    }
    const s = this.isColSelection() && this.isRowSelection() ? e : a;
    return new _e(ge.from(s), 1, 1);
  }
  replace(e, n = _e.empty) {
    const r = e.steps.length, i = this.ranges;
    for (let a = 0; a < i.length; a++) {
      const { $from: s, $to: c } = i[a], l = e.mapping.slice(r);
      e.replace(
        l.map(s.pos),
        l.map(c.pos),
        a ? _e.empty : n
      );
    }
    const o = Oe.findFrom(
      e.doc.resolve(e.mapping.slice(r).map(this.to)),
      -1
    );
    o && e.setSelection(o);
  }
  replaceWith(e, n) {
    this.replace(e, new _e(ge.from(n), 0, 0));
  }
  forEachCell(e) {
    const n = this.$anchorCell.node(-1), r = Qe.get(n), i = this.$anchorCell.start(-1), o = r.cellsInRect(
      r.rectBetween(
        this.$anchorCell.pos - i,
        this.$headCell.pos - i
      )
    );
    for (let a = 0; a < o.length; a++)
      e(n.nodeAt(o[a]), i + o[a]);
  }
  // True if this selection goes all the way from the top to the
  // bottom of the table.
  isColSelection() {
    const e = this.$anchorCell.index(-1), n = this.$headCell.index(-1);
    if (Math.min(e, n) > 0) return !1;
    const r = e + this.$anchorCell.nodeAfter.attrs.rowspan, i = n + this.$headCell.nodeAfter.attrs.rowspan;
    return Math.max(r, i) == this.$headCell.node(-1).childCount;
  }
  // Returns the smallest column selection that covers the given anchor
  // and head cell.
  static colSelection(e, n = e) {
    const r = e.node(-1), i = Qe.get(r), o = e.start(-1), a = i.findCell(e.pos - o), s = i.findCell(n.pos - o), c = e.node(0);
    return a.top <= s.top ? (a.top > 0 && (e = c.resolve(o + i.map[a.left])), s.bottom < i.height && (n = c.resolve(
      o + i.map[i.width * (i.height - 1) + s.right - 1]
    ))) : (s.top > 0 && (n = c.resolve(o + i.map[s.left])), a.bottom < i.height && (e = c.resolve(
      o + i.map[i.width * (i.height - 1) + a.right - 1]
    ))), new Un(e, n);
  }
  // True if this selection goes all the way from the left to the
  // right of the table.
  isRowSelection() {
    const e = this.$anchorCell.node(-1), n = Qe.get(e), r = this.$anchorCell.start(-1), i = n.colCount(this.$anchorCell.pos - r), o = n.colCount(this.$headCell.pos - r);
    if (Math.min(i, o) > 0) return !1;
    const a = i + this.$anchorCell.nodeAfter.attrs.colspan, s = o + this.$headCell.nodeAfter.attrs.colspan;
    return Math.max(a, s) == n.width;
  }
  eq(e) {
    return e instanceof Un && e.$anchorCell.pos == this.$anchorCell.pos && e.$headCell.pos == this.$headCell.pos;
  }
  // Returns the smallest row selection that covers the given anchor
  // and head cell.
  static rowSelection(e, n = e) {
    const r = e.node(-1), i = Qe.get(r), o = e.start(-1), a = i.findCell(e.pos - o), s = i.findCell(n.pos - o), c = e.node(0);
    return a.left <= s.left ? (a.left > 0 && (e = c.resolve(
      o + i.map[a.top * i.width]
    )), s.right < i.width && (n = c.resolve(
      o + i.map[i.width * (s.top + 1) - 1]
    ))) : (s.left > 0 && (n = c.resolve(o + i.map[s.top * i.width])), a.right < i.width && (e = c.resolve(
      o + i.map[i.width * (a.top + 1) - 1]
    ))), new Un(e, n);
  }
  toJSON() {
    return {
      type: "cell",
      anchor: this.$anchorCell.pos,
      head: this.$headCell.pos
    };
  }
  static fromJSON(e, n) {
    return new Un(e.resolve(n.anchor), e.resolve(n.head));
  }
  static create(e, n, r = n) {
    return new Un(e.resolve(n), e.resolve(r));
  }
  getBookmark() {
    return new d8(this.$anchorCell.pos, this.$headCell.pos);
  }
};
Ke.prototype.visible = !1;
Oe.jsonID("cell", Ke);
var d8 = class SD {
  constructor(e, n) {
    this.anchor = e, this.head = n;
  }
  map(e) {
    return new SD(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    const n = e.resolve(this.anchor), r = e.resolve(this.head);
    return n.parent.type.spec.tableRole == "row" && r.parent.type.spec.tableRole == "row" && n.index() < n.parent.childCount && r.index() < r.parent.childCount && Lh(n, r) ? new Ke(n, r) : Oe.near(r, 1);
  }
};
function h8(t) {
  if (!(t.selection instanceof Ke)) return null;
  const e = [];
  return t.selection.forEachCell((n, r) => {
    e.push(
      Dt.node(r, r + n.nodeSize, { class: "selectedCell" })
    );
  }), Ze.create(t.doc, e);
}
function p8({ $from: t, $to: e }) {
  if (t.pos == e.pos || t.pos < e.pos - 6) return !1;
  let n = t.pos, r = e.pos, i = t.depth;
  for (; i >= 0 && !(t.after(i + 1) < t.end(i)); i--, n++)
    ;
  for (let o = e.depth; o >= 0 && !(e.before(o + 1) > e.start(o)); o--, r--)
    ;
  return n == r && /row|table/.test(t.node(i).type.spec.tableRole);
}
function g8({ $from: t, $to: e }) {
  let n, r;
  for (let i = t.depth; i > 0; i--) {
    const o = t.node(i);
    if (o.type.spec.tableRole === "cell" || o.type.spec.tableRole === "header_cell") {
      n = o;
      break;
    }
  }
  for (let i = e.depth; i > 0; i--) {
    const o = e.node(i);
    if (o.type.spec.tableRole === "cell" || o.type.spec.tableRole === "header_cell") {
      r = o;
      break;
    }
  }
  return n !== r && e.parentOffset === 0;
}
function m8(t, e, n) {
  const r = (e || t).selection, i = (e || t).doc;
  let o, a;
  if (r instanceof Ue && (a = r.node.type.spec.tableRole)) {
    if (a == "cell" || a == "header_cell")
      o = Ke.create(i, r.from);
    else if (a == "row") {
      const s = i.resolve(r.from + 1);
      o = Ke.rowSelection(s, s);
    } else if (!n) {
      const s = Qe.get(r.node), c = r.from + 1, l = c + s.map[s.width * s.height - 1];
      o = Ke.create(i, c + 1, l);
    }
  } else r instanceof Be && p8(r) ? o = Be.create(i, r.from) : r instanceof Be && g8(r) && (o = Be.create(i, r.$from.start(), r.$from.end()));
  return o && (e || (e = t.tr)).setSelection(o), e;
}
var y8 = new No("fix-tables");
function AD(t, e, n, r) {
  const i = t.childCount, o = e.childCount;
  e: for (let a = 0, s = 0; a < o; a++) {
    const c = e.child(a);
    for (let l = s, u = Math.min(i, a + 3); l < u; l++)
      if (t.child(l) == c) {
        s = l + 1, n += c.nodeSize;
        continue e;
      }
    r(c, n), s < i && t.child(s).sameMarkup(c) ? AD(t.child(s), c, n + 1, r) : c.nodesBetween(0, c.content.size, r, n + 1), n += c.nodeSize;
  }
}
function b8(t, e) {
  let n;
  const r = (i, o) => {
    i.type.spec.tableRole == "table" && (n = v8(t, i, o, n));
  };
  return e ? e.doc != t.doc && AD(e.doc, t.doc, 0, r) : t.doc.descendants(r), n;
}
function v8(t, e, n, r) {
  const i = Qe.get(e);
  if (!i.problems) return r;
  r || (r = t.tr);
  const o = [];
  for (let c = 0; c < i.height; c++) o.push(0);
  for (let c = 0; c < i.problems.length; c++) {
    const l = i.problems[c];
    if (l.type == "collision") {
      const u = e.nodeAt(l.pos);
      if (!u) continue;
      const f = u.attrs;
      for (let d = 0; d < f.rowspan; d++) o[l.row + d] += l.n;
      r.setNodeMarkup(
        r.mapping.map(n + 1 + l.pos),
        null,
        qr(f, f.colspan - l.n, l.n)
      );
    } else if (l.type == "missing")
      o[l.row] += l.n;
    else if (l.type == "overlong_rowspan") {
      const u = e.nodeAt(l.pos);
      if (!u) continue;
      r.setNodeMarkup(r.mapping.map(n + 1 + l.pos), null, {
        ...u.attrs,
        rowspan: u.attrs.rowspan - l.n
      });
    } else if (l.type == "colwidth mismatch") {
      const u = e.nodeAt(l.pos);
      if (!u) continue;
      r.setNodeMarkup(r.mapping.map(n + 1 + l.pos), null, {
        ...u.attrs,
        colwidth: l.colwidth
      });
    } else if (l.type == "zero_sized") {
      const u = r.mapping.map(n);
      r.delete(u, u + e.nodeSize);
    }
  }
  let a, s;
  for (let c = 0; c < o.length; c++)
    o[c] && (a == null && (a = c), s = c);
  for (let c = 0, l = n + 1; c < i.height; c++) {
    const u = e.child(c), f = l + u.nodeSize, d = o[c];
    if (d > 0) {
      let h = "cell";
      u.firstChild && (h = u.firstChild.type.spec.tableRole);
      const p = [];
      for (let g = 0; g < d; g++) {
        const y = pt(t.schema)[h].createAndFill();
        y && p.push(y);
      }
      const m = (c == 0 || a == c - 1) && s == c ? l + 1 : f - 1;
      r.insert(r.mapping.map(m), p);
    }
    l = f;
  }
  return r.setMeta(y8, { fixTables: !0 });
}
function Dn(t) {
  const e = t.selection, n = Qs(t), r = n.node(-1), i = n.start(-1), o = Qe.get(r);
  return { ...e instanceof Ke ? o.rectBetween(
    e.$anchorCell.pos - i,
    e.$headCell.pos - i
  ) : o.findCell(n.pos - i), tableStart: i, map: o, table: r };
}
function UD(t, { map: e, tableStart: n, table: r }, i) {
  let o = i > 0 ? -1 : 0;
  f8(e, r, i + o) && (o = i == 0 || i == e.width ? null : 0);
  for (let a = 0; a < e.height; a++) {
    const s = a * e.width + i;
    if (i > 0 && i < e.width && e.map[s - 1] == e.map[s]) {
      const c = e.map[s], l = r.nodeAt(c);
      t.setNodeMarkup(
        t.mapping.map(n + c),
        null,
        CD(l.attrs, i - e.colCount(c))
      ), a += l.attrs.rowspan - 1;
    } else {
      const c = o == null ? pt(r.type.schema).cell : r.nodeAt(e.map[s + o]).type, l = e.positionAt(a, i, r);
      t.insert(t.mapping.map(n + l), c.createAndFill());
    }
  }
  return t;
}
function qR(t, e) {
  if (!an(t)) return !1;
  if (e) {
    const n = Dn(t);
    e(UD(t.tr, n, n.left));
  }
  return !0;
}
function zR(t, e) {
  if (!an(t)) return !1;
  if (e) {
    const n = Dn(t);
    e(UD(t.tr, n, n.right));
  }
  return !0;
}
function D8(t, { map: e, table: n, tableStart: r }, i) {
  const o = t.mapping.maps.length;
  for (let a = 0; a < e.height; ) {
    const s = a * e.width + i, c = e.map[s], l = n.nodeAt(c), u = l.attrs;
    if (i > 0 && e.map[s - 1] == c || i < e.width - 1 && e.map[s + 1] == c)
      t.setNodeMarkup(
        t.mapping.slice(o).map(r + c),
        null,
        qr(u, i - e.colCount(c))
      );
    else {
      const f = t.mapping.slice(o).map(r + c);
      t.delete(f, f + l.nodeSize);
    }
    a += u.rowspan;
  }
}
function jR(t, e) {
  if (!an(t)) return !1;
  if (e) {
    const n = Dn(t), r = t.tr;
    if (n.left == 0 && n.right == n.map.width) return !1;
    for (let i = n.right - 1; D8(r, n, i), i != n.left; i--) {
      const o = n.tableStart ? r.doc.nodeAt(n.tableStart - 1) : r.doc;
      if (!o)
        throw RangeError("No table found");
      n.table = o, n.map = Qe.get(o);
    }
    e(r);
  }
  return !0;
}
function x8(t, e, n) {
  var r;
  const i = pt(e.type.schema).header_cell;
  for (let o = 0; o < t.width; o++)
    if (((r = e.nodeAt(t.map[o + n * t.width])) == null ? void 0 : r.type) != i)
      return !1;
  return !0;
}
function kD(t, { map: e, tableStart: n, table: r }, i) {
  var o;
  let a = n;
  for (let l = 0; l < i; l++) a += r.child(l).nodeSize;
  const s = [];
  let c = i > 0 ? -1 : 0;
  x8(e, r, i + c) && (c = i == 0 || i == e.height ? null : 0);
  for (let l = 0, u = e.width * i; l < e.width; l++, u++)
    if (i > 0 && i < e.height && e.map[u] == e.map[u - e.width]) {
      const f = e.map[u], d = r.nodeAt(f).attrs;
      t.setNodeMarkup(n + f, null, {
        ...d,
        rowspan: d.rowspan + 1
      }), l += d.colspan - 1;
    } else {
      const f = c == null ? pt(r.type.schema).cell : (o = r.nodeAt(e.map[u + c * e.width])) == null ? void 0 : o.type, d = f == null ? void 0 : f.createAndFill();
      d && s.push(d);
    }
  return t.insert(a, pt(r.type.schema).row.create(null, s)), t;
}
function $R(t, e) {
  if (!an(t)) return !1;
  if (e) {
    const n = Dn(t);
    e(kD(t.tr, n, n.top));
  }
  return !0;
}
function VR(t, e) {
  if (!an(t)) return !1;
  if (e) {
    const n = Dn(t);
    e(kD(t.tr, n, n.bottom));
  }
  return !0;
}
function w8(t, { map: e, table: n, tableStart: r }, i) {
  let o = 0;
  for (let l = 0; l < i; l++) o += n.child(l).nodeSize;
  const a = o + n.child(i).nodeSize, s = t.mapping.maps.length;
  t.delete(o + r, a + r);
  const c = /* @__PURE__ */ new Set();
  for (let l = 0, u = i * e.width; l < e.width; l++, u++) {
    const f = e.map[u];
    if (!c.has(f)) {
      if (c.add(f), i > 0 && f == e.map[u - e.width]) {
        const d = n.nodeAt(f).attrs;
        t.setNodeMarkup(t.mapping.slice(s).map(f + r), null, {
          ...d,
          rowspan: d.rowspan - 1
        }), l += d.colspan - 1;
      } else if (i < e.height && f == e.map[u + e.width]) {
        const d = n.nodeAt(f), h = d.attrs, p = d.type.create(
          { ...h, rowspan: d.attrs.rowspan - 1 },
          d.content
        ), m = e.positionAt(i + 1, l, n);
        t.insert(t.mapping.slice(s).map(r + m), p), l += h.colspan - 1;
      }
    }
  }
}
function HR(t, e) {
  if (!an(t)) return !1;
  if (e) {
    const n = Dn(t), r = t.tr;
    if (n.top == 0 && n.bottom == n.map.height) return !1;
    for (let i = n.bottom - 1; w8(r, n, i), i != n.top; i--) {
      const o = n.tableStart ? r.doc.nodeAt(n.tableStart - 1) : r.doc;
      if (!o)
        throw RangeError("No table found");
      n.table = o, n.map = Qe.get(n.table);
    }
    e(r);
  }
  return !0;
}
function Um(t) {
  const e = t.content;
  return e.childCount == 1 && e.child(0).isTextblock && e.child(0).childCount == 0;
}
function _8({ width: t, height: e, map: n }, r) {
  let i = r.top * t + r.left, o = i, a = (r.bottom - 1) * t + r.left, s = i + (r.right - r.left - 1);
  for (let c = r.top; c < r.bottom; c++) {
    if (r.left > 0 && n[o] == n[o - 1] || r.right < t && n[s] == n[s + 1])
      return !0;
    o += t, s += t;
  }
  for (let c = r.left; c < r.right; c++) {
    if (r.top > 0 && n[i] == n[i - t] || r.bottom < e && n[a] == n[a + t])
      return !0;
    i++, a++;
  }
  return !1;
}
function XR(t, e) {
  const n = t.selection;
  if (!(n instanceof Ke) || n.$anchorCell.pos == n.$headCell.pos)
    return !1;
  const r = Dn(t), { map: i } = r;
  if (_8(i, r)) return !1;
  if (e) {
    const o = t.tr, a = {};
    let s = ge.empty, c, l;
    for (let u = r.top; u < r.bottom; u++)
      for (let f = r.left; f < r.right; f++) {
        const d = i.map[u * i.width + f], h = r.table.nodeAt(d);
        if (!(a[d] || !h))
          if (a[d] = !0, c == null)
            c = d, l = h;
          else {
            Um(h) || (s = s.append(h.content));
            const p = o.mapping.map(d + r.tableStart);
            o.delete(p, p + h.nodeSize);
          }
      }
    if (c == null || l == null)
      return !0;
    if (o.setNodeMarkup(c + r.tableStart, null, {
      ...CD(
        l.attrs,
        l.attrs.colspan,
        r.right - r.left - l.attrs.colspan
      ),
      rowspan: r.bottom - r.top
    }), s.size) {
      const u = c + 1 + l.content.size, f = Um(l) ? c + 1 : u;
      o.replaceWith(f + r.tableStart, u + r.tableStart, s);
    }
    o.setSelection(
      new Ke(o.doc.resolve(c + r.tableStart))
    ), e(o);
  }
  return !0;
}
function GR(t, e) {
  const n = pt(t.schema);
  return T8(({ node: r }) => n[r.type.spec.tableRole])(t, e);
}
function T8(t) {
  return (e, n) => {
    var r;
    const i = e.selection;
    let o, a;
    if (i instanceof Ke) {
      if (i.$anchorCell.pos != i.$headCell.pos) return !1;
      o = i.$anchorCell.nodeAfter, a = i.$anchorCell.pos;
    } else {
      if (o = c8(i.$from), !o) return !1;
      a = (r = Si(i.$from)) == null ? void 0 : r.pos;
    }
    if (o == null || a == null || o.attrs.colspan == 1 && o.attrs.rowspan == 1)
      return !1;
    if (n) {
      let s = o.attrs;
      const c = [], l = s.colwidth;
      s.rowspan > 1 && (s = { ...s, rowspan: 1 }), s.colspan > 1 && (s = { ...s, colspan: 1 });
      const u = Dn(e), f = e.tr;
      for (let h = 0; h < u.right - u.left; h++)
        c.push(
          l ? {
            ...s,
            colwidth: l && l[h] ? [l[h]] : null
          } : s
        );
      let d;
      for (let h = u.top; h < u.bottom; h++) {
        let p = u.map.positionAt(h, u.left, u.table);
        h == u.top && (p += o.nodeSize);
        for (let m = u.left, g = 0; m < u.right; m++, g++)
          m == u.left && h == u.top || f.insert(
            d = f.mapping.map(p + u.tableStart, 1),
            t({ node: o, row: h, col: m }).createAndFill(c[g])
          );
      }
      f.setNodeMarkup(
        a,
        t({ node: o, row: u.top, col: u.left }),
        c[0]
      ), i instanceof Ke && f.setSelection(
        new Ke(
          f.doc.resolve(i.$anchorCell.pos),
          d ? f.doc.resolve(d) : void 0
        )
      ), n(f);
    }
    return !0;
  };
}
function KR(t, e) {
  return function(n, r) {
    if (!an(n)) return !1;
    const i = Qs(n);
    if (i.nodeAfter.attrs[t] === e) return !1;
    if (r) {
      const o = n.tr;
      n.selection instanceof Ke ? n.selection.forEachCell((a, s) => {
        a.attrs[t] !== e && o.setNodeMarkup(s, null, {
          ...a.attrs,
          [t]: e
        });
      }) : o.setNodeMarkup(i.pos, null, {
        ...i.nodeAfter.attrs,
        [t]: e
      }), r(o);
    }
    return !0;
  };
}
function E8(t) {
  return function(e, n) {
    if (!an(e)) return !1;
    if (n) {
      const r = pt(e.schema), i = Dn(e), o = e.tr, a = i.map.cellsInRect(
        t == "column" ? {
          left: i.left,
          top: 0,
          right: i.right,
          bottom: i.map.height
        } : t == "row" ? {
          left: 0,
          top: i.top,
          right: i.map.width,
          bottom: i.bottom
        } : i
      ), s = a.map((c) => i.table.nodeAt(c));
      for (let c = 0; c < a.length; c++)
        s[c].type == r.header_cell && o.setNodeMarkup(
          i.tableStart + a[c],
          r.cell,
          s[c].attrs
        );
      if (o.steps.length == 0)
        for (let c = 0; c < a.length; c++)
          o.setNodeMarkup(
            i.tableStart + a[c],
            r.header_cell,
            s[c].attrs
          );
      n(o);
    }
    return !0;
  };
}
function km(t, e, n) {
  const r = e.map.cellsInRect({
    left: 0,
    top: 0,
    right: t == "row" ? e.map.width : 1,
    bottom: t == "column" ? e.map.height : 1
  });
  for (let i = 0; i < r.length; i++) {
    const o = e.table.nodeAt(r[i]);
    if (o && o.type !== n.header_cell)
      return !1;
  }
  return !0;
}
function Ph(t, e) {
  return e = e || { useDeprecatedLogic: !1 }, e.useDeprecatedLogic ? E8(t) : function(n, r) {
    if (!an(n)) return !1;
    if (r) {
      const i = pt(n.schema), o = Dn(n), a = n.tr, s = km("row", o, i), c = km(
        "column",
        o,
        i
      ), u = (t === "column" ? s : t === "row" ? c : !1) ? 1 : 0, f = t == "column" ? {
        left: 0,
        top: u,
        right: 1,
        bottom: o.map.height
      } : t == "row" ? {
        left: u,
        top: 0,
        right: o.map.width,
        bottom: 1
      } : o, d = t == "column" ? c ? i.cell : i.header_cell : t == "row" ? s ? i.cell : i.header_cell : i.cell;
      o.map.cellsInRect(f).forEach((h) => {
        const p = h + o.tableStart, m = a.doc.nodeAt(p);
        m && a.setNodeMarkup(p, d, m.attrs);
      }), r(a);
    }
    return !0;
  };
}
Ph("row", {
  useDeprecatedLogic: !0
});
Ph("column", {
  useDeprecatedLogic: !0
});
var JR = Ph("cell", {
  useDeprecatedLogic: !0
});
function C8(t, e) {
  if (e < 0) {
    const n = t.nodeBefore;
    if (n) return t.pos - n.nodeSize;
    for (let r = t.index(-1) - 1, i = t.before(); r >= 0; r--) {
      const o = t.node(-1).child(r), a = o.lastChild;
      if (a)
        return i - 1 - a.nodeSize;
      i -= o.nodeSize;
    }
  } else {
    if (t.index() < t.parent.childCount - 1)
      return t.pos + t.nodeAfter.nodeSize;
    const n = t.node(-1);
    for (let r = t.indexAfter(-1), i = t.after(); r < n.childCount; r++) {
      const o = n.child(r);
      if (o.childCount) return i + 1;
      i += o.nodeSize;
    }
  }
  return null;
}
function ZR(t) {
  return function(e, n) {
    if (!an(e)) return !1;
    const r = C8(Qs(e), t);
    if (r == null) return !1;
    if (n) {
      const i = e.doc.resolve(r);
      n(
        e.tr.setSelection(Be.between(i, u8(i))).scrollIntoView()
      );
    }
    return !0;
  };
}
function YR(t, e) {
  const n = t.selection.$anchor;
  for (let r = n.depth; r > 0; r--)
    if (n.node(r).type.spec.tableRole == "table")
      return e && e(
        t.tr.delete(n.before(r), n.after(r)).scrollIntoView()
      ), !0;
  return !1;
}
function Zo(t, e) {
  const n = t.selection;
  if (!(n instanceof Ke)) return !1;
  if (e) {
    const r = t.tr, i = pt(t.schema).cell.createAndFill().content;
    n.forEachCell((o, a) => {
      o.content.eq(i) || r.replace(
        r.mapping.map(a + 1),
        r.mapping.map(a + o.nodeSize - 1),
        new _e(i, 0, 0)
      );
    }), r.docChanged && e(r);
  }
  return !0;
}
function S8(t) {
  if (!t.size) return null;
  let { content: e, openStart: n, openEnd: r } = t;
  for (; e.childCount == 1 && (n > 0 && r > 0 || e.child(0).type.spec.tableRole == "table"); )
    n--, r--, e = e.child(0).content;
  const i = e.child(0), o = i.type.spec.tableRole, a = i.type.schema, s = [];
  if (o == "row")
    for (let c = 0; c < e.childCount; c++) {
      let l = e.child(c).content;
      const u = c ? 0 : Math.max(0, n - 1), f = c < e.childCount - 1 ? 0 : Math.max(0, r - 1);
      (u || f) && (l = zd(
        pt(a).row,
        new _e(l, u, f)
      ).content), s.push(l);
    }
  else if (o == "cell" || o == "header_cell")
    s.push(
      n || r ? zd(
        pt(a).row,
        new _e(e, n, r)
      ).content : e
    );
  else
    return null;
  return A8(a, s);
}
function A8(t, e) {
  const n = [];
  for (let i = 0; i < e.length; i++) {
    const o = e[i];
    for (let a = o.childCount - 1; a >= 0; a--) {
      const { rowspan: s, colspan: c } = o.child(a).attrs;
      for (let l = i; l < i + s; l++)
        n[l] = (n[l] || 0) + c;
    }
  }
  let r = 0;
  for (let i = 0; i < n.length; i++) r = Math.max(r, n[i]);
  for (let i = 0; i < n.length; i++)
    if (i >= e.length && e.push(ge.empty), n[i] < r) {
      const o = pt(t).cell.createAndFill(), a = [];
      for (let s = n[i]; s < r; s++)
        a.push(o);
      e[i] = e[i].append(ge.from(a));
    }
  return { height: e.length, width: r, rows: e };
}
function zd(t, e) {
  const n = t.createAndFill();
  return new W0(n).replace(0, n.content.size, e).doc;
}
function U8({ width: t, height: e, rows: n }, r, i) {
  if (t != r) {
    const o = [], a = [];
    for (let s = 0; s < n.length; s++) {
      const c = n[s], l = [];
      for (let u = o[s] || 0, f = 0; u < r; f++) {
        let d = c.child(f % c.childCount);
        u + d.attrs.colspan > r && (d = d.type.createChecked(
          qr(
            d.attrs,
            d.attrs.colspan,
            u + d.attrs.colspan - r
          ),
          d.content
        )), l.push(d), u += d.attrs.colspan;
        for (let h = 1; h < d.attrs.rowspan; h++)
          o[s + h] = (o[s + h] || 0) + d.attrs.colspan;
      }
      a.push(ge.from(l));
    }
    n = a, t = r;
  }
  if (e != i) {
    const o = [];
    for (let a = 0, s = 0; a < i; a++, s++) {
      const c = [], l = n[s % e];
      for (let u = 0; u < l.childCount; u++) {
        let f = l.child(u);
        a + f.attrs.rowspan > i && (f = f.type.create(
          {
            ...f.attrs,
            rowspan: Math.max(1, i - f.attrs.rowspan)
          },
          f.content
        )), c.push(f);
      }
      o.push(ge.from(c));
    }
    n = o, e = i;
  }
  return { width: t, height: e, rows: n };
}
function k8(t, e, n, r, i, o, a) {
  const s = t.doc.type.schema, c = pt(s);
  let l, u;
  if (i > e.width)
    for (let f = 0, d = 0; f < e.height; f++) {
      const h = n.child(f);
      d += h.nodeSize;
      const p = [];
      let m;
      h.lastChild == null || h.lastChild.type == c.cell ? m = l || (l = c.cell.createAndFill()) : m = u || (u = c.header_cell.createAndFill());
      for (let g = e.width; g < i; g++) p.push(m);
      t.insert(t.mapping.slice(a).map(d - 1 + r), p);
    }
  if (o > e.height) {
    const f = [];
    for (let p = 0, m = (e.height - 1) * e.width; p < Math.max(e.width, i); p++) {
      const g = p >= e.width ? !1 : n.nodeAt(e.map[m + p]).type == c.header_cell;
      f.push(
        g ? u || (u = c.header_cell.createAndFill()) : l || (l = c.cell.createAndFill())
      );
    }
    const d = c.row.create(null, ge.from(f)), h = [];
    for (let p = e.height; p < o; p++) h.push(d);
    t.insert(t.mapping.slice(a).map(r + n.nodeSize - 2), h);
  }
  return !!(l || u);
}
function Fm(t, e, n, r, i, o, a, s) {
  if (a == 0 || a == e.height) return !1;
  let c = !1;
  for (let l = i; l < o; l++) {
    const u = a * e.width + l, f = e.map[u];
    if (e.map[u - e.width] == f) {
      c = !0;
      const d = n.nodeAt(f), { top: h, left: p } = e.findCell(f);
      t.setNodeMarkup(t.mapping.slice(s).map(f + r), null, {
        ...d.attrs,
        rowspan: a - h
      }), t.insert(
        t.mapping.slice(s).map(e.positionAt(a, p, n)),
        d.type.createAndFill({
          ...d.attrs,
          rowspan: h + d.attrs.rowspan - a
        })
      ), l += d.attrs.colspan - 1;
    }
  }
  return c;
}
function Om(t, e, n, r, i, o, a, s) {
  if (a == 0 || a == e.width) return !1;
  let c = !1;
  for (let l = i; l < o; l++) {
    const u = l * e.width + a, f = e.map[u];
    if (e.map[u - 1] == f) {
      c = !0;
      const d = n.nodeAt(f), h = e.colCount(f), p = t.mapping.slice(s).map(f + r);
      t.setNodeMarkup(
        p,
        null,
        qr(
          d.attrs,
          a - h,
          d.attrs.colspan - (a - h)
        )
      ), t.insert(
        p + d.nodeSize,
        d.type.createAndFill(
          qr(d.attrs, 0, a - h)
        )
      ), l += d.attrs.rowspan - 1;
    }
  }
  return c;
}
function Rm(t, e, n, r, i) {
  let o = n ? t.doc.nodeAt(n - 1) : t.doc;
  if (!o)
    throw new Error("No table found");
  let a = Qe.get(o);
  const { top: s, left: c } = r, l = c + i.width, u = s + i.height, f = t.tr;
  let d = 0;
  function h() {
    if (o = n ? f.doc.nodeAt(n - 1) : f.doc, !o)
      throw new Error("No table found");
    a = Qe.get(o), d = f.mapping.maps.length;
  }
  k8(f, a, o, n, l, u, d) && h(), Fm(f, a, o, n, c, l, s, d) && h(), Fm(f, a, o, n, c, l, u, d) && h(), Om(f, a, o, n, s, u, c, d) && h(), Om(f, a, o, n, s, u, l, d) && h();
  for (let p = s; p < u; p++) {
    const m = a.positionAt(p, c, o), g = a.positionAt(p, l, o);
    f.replace(
      f.mapping.slice(d).map(m + n),
      f.mapping.slice(d).map(g + n),
      new _e(i.rows[p - s], 0, 0)
    );
  }
  h(), f.setSelection(
    new Ke(
      f.doc.resolve(n + a.positionAt(s, c, o)),
      f.doc.resolve(n + a.positionAt(u - 1, l - 1, o))
    )
  ), e(f);
}
var F8 = ph({
  ArrowLeft: Yo("horiz", -1),
  ArrowRight: Yo("horiz", 1),
  ArrowUp: Yo("vert", -1),
  ArrowDown: Yo("vert", 1),
  "Shift-ArrowLeft": Qo("horiz", -1),
  "Shift-ArrowRight": Qo("horiz", 1),
  "Shift-ArrowUp": Qo("vert", -1),
  "Shift-ArrowDown": Qo("vert", 1),
  Backspace: Zo,
  "Mod-Backspace": Zo,
  Delete: Zo,
  "Mod-Delete": Zo
});
function Sa(t, e, n) {
  return n.eq(t.selection) ? !1 : (e && e(t.tr.setSelection(n).scrollIntoView()), !0);
}
function Yo(t, e) {
  return (n, r, i) => {
    if (!i) return !1;
    const o = n.selection;
    if (o instanceof Ke)
      return Sa(
        n,
        r,
        Oe.near(o.$headCell, e)
      );
    if (t != "horiz" && !o.empty) return !1;
    const a = FD(i, t, e);
    if (a == null) return !1;
    if (t == "horiz")
      return Sa(
        n,
        r,
        Oe.near(n.doc.resolve(o.head + e), e)
      );
    {
      const s = n.doc.resolve(a), c = ED(s, t, e);
      let l;
      return c ? l = Oe.near(c, 1) : e < 0 ? l = Oe.near(n.doc.resolve(s.before(-1)), -1) : l = Oe.near(n.doc.resolve(s.after(-1)), 1), Sa(n, r, l);
    }
  };
}
function Qo(t, e) {
  return (n, r, i) => {
    if (!i) return !1;
    const o = n.selection;
    let a;
    if (o instanceof Ke)
      a = o;
    else {
      const c = FD(i, t, e);
      if (c == null) return !1;
      a = new Ke(n.doc.resolve(c));
    }
    const s = ED(a.$headCell, t, e);
    return s ? Sa(
      n,
      r,
      new Ke(a.$anchorCell, s)
    ) : !1;
  };
}
function O8(t, e) {
  const n = t.state.doc, r = Si(n.resolve(e));
  return r ? (t.dispatch(t.state.tr.setSelection(new Ke(r))), !0) : !1;
}
function R8(t, e, n) {
  if (!an(t.state)) return !1;
  let r = S8(n);
  const i = t.state.selection;
  if (i instanceof Ke) {
    r || (r = {
      width: 1,
      height: 1,
      rows: [
        ge.from(
          zd(pt(t.state.schema).cell, n)
        )
      ]
    });
    const o = i.$anchorCell.node(-1), a = i.$anchorCell.start(-1), s = Qe.get(o).rectBetween(
      i.$anchorCell.pos - a,
      i.$headCell.pos - a
    );
    return r = U8(r, s.right - s.left, s.bottom - s.top), Rm(t.state, t.dispatch, a, s, r), !0;
  } else if (r) {
    const o = Qs(t.state), a = o.start(-1);
    return Rm(
      t.state,
      t.dispatch,
      a,
      Qe.get(o.node(-1)).findCell(o.pos - a),
      r
    ), !0;
  } else
    return !1;
}
function N8(t, e) {
  var n;
  if (e.ctrlKey || e.metaKey) return;
  const r = Nm(t, e.target);
  let i;
  if (e.shiftKey && t.state.selection instanceof Ke)
    o(t.state.selection.$anchorCell, e), e.preventDefault();
  else if (e.shiftKey && r && (i = Si(t.state.selection.$anchor)) != null && ((n = ol(t, e)) == null ? void 0 : n.pos) != i.pos)
    o(i, e), e.preventDefault();
  else if (!r)
    return;
  function o(c, l) {
    let u = ol(t, l);
    const f = tr.getState(t.state) == null;
    if (!u || !Lh(c, u))
      if (f) u = c;
      else return;
    const d = new Ke(c, u);
    if (f || !t.state.selection.eq(d)) {
      const h = t.state.tr.setSelection(d);
      f && h.setMeta(tr, c.pos), t.dispatch(h);
    }
  }
  function a() {
    t.root.removeEventListener("mouseup", a), t.root.removeEventListener("dragstart", a), t.root.removeEventListener("mousemove", s), tr.getState(t.state) != null && t.dispatch(t.state.tr.setMeta(tr, -1));
  }
  function s(c) {
    const l = c, u = tr.getState(t.state);
    let f;
    if (u != null)
      f = t.state.doc.resolve(u);
    else if (Nm(t, l.target) != r && (f = ol(t, e), !f))
      return a();
    f && o(f, l);
  }
  t.root.addEventListener("mouseup", a), t.root.addEventListener("dragstart", a), t.root.addEventListener("mousemove", s);
}
function FD(t, e, n) {
  if (!(t.state.selection instanceof Be)) return null;
  const { $head: r } = t.state.selection;
  for (let i = r.depth - 1; i >= 0; i--) {
    const o = r.node(i);
    if ((n < 0 ? r.index(i) : r.indexAfter(i)) != (n < 0 ? 0 : o.childCount)) return null;
    if (o.type.spec.tableRole == "cell" || o.type.spec.tableRole == "header_cell") {
      const s = r.before(i), c = e == "vert" ? n > 0 ? "down" : "up" : n > 0 ? "right" : "left";
      return t.endOfTextblock(c) ? s : null;
    }
  }
  return null;
}
function Nm(t, e) {
  for (; e && e != t.dom; e = e.parentNode)
    if (e.nodeName == "TD" || e.nodeName == "TH")
      return e;
  return null;
}
function ol(t, e) {
  const n = t.posAtCoords({
    left: e.clientX,
    top: e.clientY
  });
  return n && n ? Si(t.state.doc.resolve(n.pos)) : null;
}
var B8 = class {
  constructor(t, e) {
    this.node = t, this.defaultCellMinWidth = e, this.dom = document.createElement("div"), this.dom.className = "tableWrapper", this.table = this.dom.appendChild(document.createElement("table")), this.table.style.setProperty(
      "--default-cell-min-width",
      `${e}px`
    ), this.colgroup = this.table.appendChild(document.createElement("colgroup")), jd(t, this.colgroup, this.table, e), this.contentDOM = this.table.appendChild(document.createElement("tbody"));
  }
  update(t) {
    return t.type != this.node.type ? !1 : (this.node = t, jd(
      t,
      this.colgroup,
      this.table,
      this.defaultCellMinWidth
    ), !0);
  }
  ignoreMutation(t) {
    return t.type == "attributes" && (t.target == this.table || this.colgroup.contains(t.target));
  }
};
function jd(t, e, n, r, i, o) {
  var a;
  let s = 0, c = !0, l = e.firstChild;
  const u = t.firstChild;
  if (u) {
    for (let f = 0, d = 0; f < u.childCount; f++) {
      const { colspan: h, colwidth: p } = u.child(f).attrs;
      for (let m = 0; m < h; m++, d++) {
        const g = i == d ? o : p && p[m], y = g ? g + "px" : "";
        if (s += g || r, g || (c = !1), l)
          l.style.width != y && (l.style.width = y), l = l.nextSibling;
        else {
          const b = document.createElement("col");
          b.style.width = y, e.appendChild(b);
        }
      }
    }
    for (; l; ) {
      const f = l.nextSibling;
      (a = l.parentNode) == null || a.removeChild(l), l = f;
    }
    c ? (n.style.width = s + "px", n.style.minWidth = "") : (n.style.width = "", n.style.minWidth = s + "px");
  }
}
var Bt = new No(
  "tableColumnResizing"
);
function QR({
  handleWidth: t = 5,
  cellMinWidth: e = 25,
  defaultCellMinWidth: n = 100,
  View: r = B8,
  lastColumnResizable: i = !0
} = {}) {
  const o = new Ei({
    key: Bt,
    state: {
      init(a, s) {
        var c, l;
        const u = (l = (c = o.spec) == null ? void 0 : c.props) == null ? void 0 : l.nodeViews, f = pt(s.schema).table.name;
        return r && u && (u[f] = (d, h) => new r(d, n, h)), new I8(-1, !1);
      },
      apply(a, s) {
        return s.apply(a);
      }
    },
    props: {
      attributes: (a) => {
        const s = Bt.getState(a);
        return s && s.activeHandle > -1 ? { class: "resize-cursor" } : {};
      },
      handleDOMEvents: {
        mousemove: (a, s) => {
          M8(a, s, t, i);
        },
        mouseleave: (a) => {
          W8(a);
        },
        mousedown: (a, s) => {
          L8(a, s, e, n);
        }
      },
      decorations: (a) => {
        const s = Bt.getState(a);
        if (s && s.activeHandle > -1)
          return $8(a, s.activeHandle);
      },
      nodeViews: {}
    }
  });
  return o;
}
var I8 = class Aa {
  constructor(e, n) {
    this.activeHandle = e, this.dragging = n;
  }
  apply(e) {
    const n = this, r = e.getMeta(Bt);
    if (r && r.setHandle != null)
      return new Aa(r.setHandle, !1);
    if (r && r.setDragging !== void 0)
      return new Aa(n.activeHandle, r.setDragging);
    if (n.activeHandle > -1 && e.docChanged) {
      let i = e.mapping.map(n.activeHandle, -1);
      return qd(e.doc.resolve(i)) || (i = -1), new Aa(i, n.dragging);
    }
    return n;
  }
};
function M8(t, e, n, r) {
  if (!t.editable) return;
  const i = Bt.getState(t.state);
  if (i && !i.dragging) {
    const o = q8(e.target);
    let a = -1;
    if (o) {
      const { left: s, right: c } = o.getBoundingClientRect();
      e.clientX - s <= n ? a = Bm(t, e, "left", n) : c - e.clientX <= n && (a = Bm(t, e, "right", n));
    }
    if (a != i.activeHandle) {
      if (!r && a !== -1) {
        const s = t.state.doc.resolve(a), c = s.node(-1), l = Qe.get(c), u = s.start(-1);
        if (l.colCount(s.pos - u) + s.nodeAfter.attrs.colspan - 1 == l.width - 1)
          return;
      }
      OD(t, a);
    }
  }
}
function W8(t) {
  if (!t.editable) return;
  const e = Bt.getState(t.state);
  e && e.activeHandle > -1 && !e.dragging && OD(t, -1);
}
function L8(t, e, n, r) {
  var i;
  if (!t.editable) return !1;
  const o = (i = t.dom.ownerDocument.defaultView) != null ? i : window, a = Bt.getState(t.state);
  if (!a || a.activeHandle == -1 || a.dragging)
    return !1;
  const s = t.state.doc.nodeAt(a.activeHandle), c = P8(t, a.activeHandle, s.attrs);
  t.dispatch(
    t.state.tr.setMeta(Bt, {
      setDragging: { startX: e.clientX, startWidth: c }
    })
  );
  function l(f) {
    o.removeEventListener("mouseup", l), o.removeEventListener("mousemove", u);
    const d = Bt.getState(t.state);
    d != null && d.dragging && (z8(
      t,
      d.activeHandle,
      Im(d.dragging, f, n)
    ), t.dispatch(
      t.state.tr.setMeta(Bt, { setDragging: null })
    ));
  }
  function u(f) {
    if (!f.which) return l(f);
    const d = Bt.getState(t.state);
    if (d && d.dragging) {
      const h = Im(d.dragging, f, n);
      Mm(
        t,
        d.activeHandle,
        h,
        r
      );
    }
  }
  return Mm(
    t,
    a.activeHandle,
    c,
    r
  ), o.addEventListener("mouseup", l), o.addEventListener("mousemove", u), e.preventDefault(), !0;
}
function P8(t, e, { colspan: n, colwidth: r }) {
  const i = r && r[r.length - 1];
  if (i) return i;
  const o = t.domAtPos(e);
  let s = o.node.childNodes[o.offset].offsetWidth, c = n;
  if (r)
    for (let l = 0; l < n; l++)
      r[l] && (s -= r[l], c--);
  return s / c;
}
function q8(t) {
  for (; t && t.nodeName != "TD" && t.nodeName != "TH"; )
    t = t.classList && t.classList.contains("ProseMirror") ? null : t.parentNode;
  return t;
}
function Bm(t, e, n, r) {
  const i = n == "right" ? -r : r, o = t.posAtCoords({
    left: e.clientX + i,
    top: e.clientY
  });
  if (!o) return -1;
  const { pos: a } = o, s = Si(t.state.doc.resolve(a));
  if (!s) return -1;
  if (n == "right") return s.pos;
  const c = Qe.get(s.node(-1)), l = s.start(-1), u = c.map.indexOf(s.pos - l);
  return u % c.width == 0 ? -1 : l + c.map[u - 1];
}
function Im(t, e, n) {
  const r = e.clientX - t.startX;
  return Math.max(n, t.startWidth + r);
}
function OD(t, e) {
  t.dispatch(
    t.state.tr.setMeta(Bt, { setHandle: e })
  );
}
function z8(t, e, n) {
  const r = t.state.doc.resolve(e), i = r.node(-1), o = Qe.get(i), a = r.start(-1), s = o.colCount(r.pos - a) + r.nodeAfter.attrs.colspan - 1, c = t.state.tr;
  for (let l = 0; l < o.height; l++) {
    const u = l * o.width + s;
    if (l && o.map[u] == o.map[u - o.width]) continue;
    const f = o.map[u], d = i.nodeAt(f).attrs, h = d.colspan == 1 ? 0 : s - o.colCount(f);
    if (d.colwidth && d.colwidth[h] == n) continue;
    const p = d.colwidth ? d.colwidth.slice() : j8(d.colspan);
    p[h] = n, c.setNodeMarkup(a + f, null, { ...d, colwidth: p });
  }
  c.docChanged && t.dispatch(c);
}
function Mm(t, e, n, r) {
  const i = t.state.doc.resolve(e), o = i.node(-1), a = i.start(-1), s = Qe.get(o).colCount(i.pos - a) + i.nodeAfter.attrs.colspan - 1;
  let c = t.domAtPos(i.start(-1)).node;
  for (; c && c.nodeName != "TABLE"; )
    c = c.parentNode;
  c && jd(
    o,
    c.firstChild,
    c,
    r,
    s,
    n
  );
}
function j8(t) {
  return Array(t).fill(0);
}
function $8(t, e) {
  var n;
  const r = [], i = t.doc.resolve(e), o = i.node(-1);
  if (!o)
    return Ze.empty;
  const a = Qe.get(o), s = i.start(-1), c = a.colCount(i.pos - s) + i.nodeAfter.attrs.colspan - 1;
  for (let l = 0; l < a.height; l++) {
    const u = c + l * a.width;
    if ((c == a.width - 1 || a.map[u] != a.map[u + 1]) && (l == 0 || a.map[u] != a.map[u - a.width])) {
      const f = a.map[u], d = s + f + o.nodeAt(f).nodeSize - 1, h = document.createElement("div");
      h.className = "column-resize-handle", (n = Bt.getState(t)) != null && n.dragging && r.push(
        Dt.node(
          s + f,
          s + f + o.nodeAt(f).nodeSize,
          {
            class: "column-resize-dragging"
          }
        )
      ), r.push(Dt.widget(d, h));
    }
  }
  return Ze.create(t.doc, r);
}
function eN({
  allowTableNodeSelection: t = !1
} = {}) {
  return new Ei({
    key: tr,
    // This piece of state is used to remember when a mouse-drag
    // cell-selection is happening, so that it can continue even as
    // transactions (which might move its anchor cell) come in.
    state: {
      init() {
        return null;
      },
      apply(e, n) {
        const r = e.getMeta(tr);
        if (r != null) return r == -1 ? null : r;
        if (n == null || !e.docChanged) return n;
        const { deleted: i, pos: o } = e.mapping.mapResult(n);
        return i ? null : o;
      }
    },
    props: {
      decorations: h8,
      handleDOMEvents: {
        mousedown: N8
      },
      createSelectionBetween(e) {
        return tr.getState(e.state) != null ? e.state.selection : null;
      },
      handleTripleClick: O8,
      handleKeyDown: F8,
      handlePaste: R8
    },
    appendTransaction(e, n, r) {
      return m8(
        r,
        b8(r, n),
        t
      );
    }
  });
}
var Ht = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function RD(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
function ND(t) {
  if (Object.prototype.hasOwnProperty.call(t, "__esModule")) return t;
  var e = t.default;
  if (typeof e == "function") {
    var n = function r() {
      return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    n.prototype = e.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(t).forEach(function(r) {
    var i = Object.getOwnPropertyDescriptor(t, r);
    Object.defineProperty(n, r, i.get ? i : {
      enumerable: !0,
      get: function() {
        return t[r];
      }
    });
  }), n;
}
var al, Wm;
function BD() {
  if (Wm) return al;
  Wm = 1;
  var t = Object.prototype.toString;
  return al = function(n) {
    var r = t.call(n), i = r === "[object Arguments]";
    return i || (i = r !== "[object Array]" && n !== null && typeof n == "object" && typeof n.length == "number" && n.length >= 0 && t.call(n.callee) === "[object Function]"), i;
  }, al;
}
var sl, Lm;
function V8() {
  if (Lm) return sl;
  Lm = 1;
  var t;
  if (!Object.keys) {
    var e = Object.prototype.hasOwnProperty, n = Object.prototype.toString, r = BD(), i = Object.prototype.propertyIsEnumerable, o = !i.call({ toString: null }, "toString"), a = i.call(function() {
    }, "prototype"), s = [
      "toString",
      "toLocaleString",
      "valueOf",
      "hasOwnProperty",
      "isPrototypeOf",
      "propertyIsEnumerable",
      "constructor"
    ], c = function(d) {
      var h = d.constructor;
      return h && h.prototype === d;
    }, l = {
      $applicationCache: !0,
      $console: !0,
      $external: !0,
      $frame: !0,
      $frameElement: !0,
      $frames: !0,
      $innerHeight: !0,
      $innerWidth: !0,
      $onmozfullscreenchange: !0,
      $onmozfullscreenerror: !0,
      $outerHeight: !0,
      $outerWidth: !0,
      $pageXOffset: !0,
      $pageYOffset: !0,
      $parent: !0,
      $scrollLeft: !0,
      $scrollTop: !0,
      $scrollX: !0,
      $scrollY: !0,
      $self: !0,
      $webkitIndexedDB: !0,
      $webkitStorageInfo: !0,
      $window: !0
    }, u = function() {
      if (typeof window > "u")
        return !1;
      for (var d in window)
        try {
          if (!l["$" + d] && e.call(window, d) && window[d] !== null && typeof window[d] == "object")
            try {
              c(window[d]);
            } catch {
              return !0;
            }
        } catch {
          return !0;
        }
      return !1;
    }(), f = function(d) {
      if (typeof window > "u" || !u)
        return c(d);
      try {
        return c(d);
      } catch {
        return !1;
      }
    };
    t = function(h) {
      var p = h !== null && typeof h == "object", m = n.call(h) === "[object Function]", g = r(h), y = p && n.call(h) === "[object String]", b = [];
      if (!p && !m && !g)
        throw new TypeError("Object.keys called on a non-object");
      var v = a && m;
      if (y && h.length > 0 && !e.call(h, 0))
        for (var _ = 0; _ < h.length; ++_)
          b.push(String(_));
      if (g && h.length > 0)
        for (var x = 0; x < h.length; ++x)
          b.push(String(x));
      else
        for (var E in h)
          !(v && E === "prototype") && e.call(h, E) && b.push(String(E));
      if (o)
        for (var S = f(h), U = 0; U < s.length; ++U)
          !(S && s[U] === "constructor") && e.call(h, s[U]) && b.push(s[U]);
      return b;
    };
  }
  return sl = t, sl;
}
var cl, Pm;
function qh() {
  if (Pm) return cl;
  Pm = 1;
  var t = Array.prototype.slice, e = BD(), n = Object.keys, r = n ? function(a) {
    return n(a);
  } : V8(), i = Object.keys;
  return r.shim = function() {
    if (Object.keys) {
      var a = function() {
        var s = Object.keys(arguments);
        return s && s.length === arguments.length;
      }(1, 2);
      a || (Object.keys = function(c) {
        return e(c) ? i(t.call(c)) : i(c);
      });
    } else
      Object.keys = r;
    return Object.keys || r;
  }, cl = r, cl;
}
var ll, qm;
function ec() {
  if (qm) return ll;
  qm = 1;
  var t = Object.defineProperty || !1;
  if (t)
    try {
      t({}, "a", { value: 1 });
    } catch {
      t = !1;
    }
  return ll = t, ll;
}
var ul, zm;
function zh() {
  return zm || (zm = 1, ul = SyntaxError), ul;
}
var fl, jm;
function Jt() {
  return jm || (jm = 1, fl = TypeError), fl;
}
var dl, $m;
function H8() {
  return $m || ($m = 1, dl = Object.getOwnPropertyDescriptor), dl;
}
var hl, Vm;
function Vr() {
  if (Vm) return hl;
  Vm = 1;
  var t = /* @__PURE__ */ H8();
  if (t)
    try {
      t([], "length");
    } catch {
      t = null;
    }
  return hl = t, hl;
}
var pl, Hm;
function jh() {
  if (Hm) return pl;
  Hm = 1;
  var t = /* @__PURE__ */ ec(), e = /* @__PURE__ */ zh(), n = /* @__PURE__ */ Jt(), r = /* @__PURE__ */ Vr();
  return pl = function(o, a, s) {
    if (!o || typeof o != "object" && typeof o != "function")
      throw new n("`obj` must be an object or a function`");
    if (typeof a != "string" && typeof a != "symbol")
      throw new n("`property` must be a string or a symbol`");
    if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
      throw new n("`nonEnumerable`, if provided, must be a boolean or null");
    if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
      throw new n("`nonWritable`, if provided, must be a boolean or null");
    if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
      throw new n("`nonConfigurable`, if provided, must be a boolean or null");
    if (arguments.length > 6 && typeof arguments[6] != "boolean")
      throw new n("`loose`, if provided, must be a boolean");
    var c = arguments.length > 3 ? arguments[3] : null, l = arguments.length > 4 ? arguments[4] : null, u = arguments.length > 5 ? arguments[5] : null, f = arguments.length > 6 ? arguments[6] : !1, d = !!r && r(o, a);
    if (t)
      t(o, a, {
        configurable: u === null && d ? d.configurable : !u,
        enumerable: c === null && d ? d.enumerable : !c,
        value: s,
        writable: l === null && d ? d.writable : !l
      });
    else if (f || !c && !l && !u)
      o[a] = s;
    else
      throw new e("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
  }, pl;
}
var gl, Xm;
function $h() {
  if (Xm) return gl;
  Xm = 1;
  var t = /* @__PURE__ */ ec(), e = function() {
    return !!t;
  };
  return e.hasArrayLengthDefineBug = function() {
    if (!t)
      return null;
    try {
      return t([], "length", { value: 1 }).length !== 1;
    } catch {
      return !0;
    }
  }, gl = e, gl;
}
var ml, Gm;
function Hr() {
  if (Gm) return ml;
  Gm = 1;
  var t = qh(), e = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", n = Object.prototype.toString, r = Array.prototype.concat, i = /* @__PURE__ */ jh(), o = function(l) {
    return typeof l == "function" && n.call(l) === "[object Function]";
  }, a = /* @__PURE__ */ $h()(), s = function(l, u, f, d) {
    if (u in l) {
      if (d === !0) {
        if (l[u] === f)
          return;
      } else if (!o(d) || !d())
        return;
    }
    a ? i(l, u, f, !0) : i(l, u, f);
  }, c = function(l, u) {
    var f = arguments.length > 2 ? arguments[2] : {}, d = t(u);
    e && (d = r.call(d, Object.getOwnPropertySymbols(u)));
    for (var h = 0; h < d.length; h += 1)
      s(l, d[h], u[d[h]], f[d[h]]);
  };
  return c.supportsDescriptors = !!a, ml = c, ml;
}
var yl = { exports: {} }, bl, Km;
function Vh() {
  return Km || (Km = 1, bl = Object), bl;
}
var vl, Jm;
function ID() {
  return Jm || (Jm = 1, vl = Error), vl;
}
var Dl, Zm;
function X8() {
  return Zm || (Zm = 1, Dl = EvalError), Dl;
}
var xl, Ym;
function G8() {
  return Ym || (Ym = 1, xl = RangeError), xl;
}
var wl, Qm;
function K8() {
  return Qm || (Qm = 1, wl = ReferenceError), wl;
}
var _l, ey;
function J8() {
  return ey || (ey = 1, _l = URIError), _l;
}
var Tl, ty;
function Z8() {
  return ty || (ty = 1, Tl = Math.abs), Tl;
}
var El, ny;
function Y8() {
  return ny || (ny = 1, El = Math.floor), El;
}
var Cl, ry;
function Q8() {
  return ry || (ry = 1, Cl = Math.max), Cl;
}
var Sl, iy;
function e4() {
  return iy || (iy = 1, Sl = Math.min), Sl;
}
var Al, oy;
function t4() {
  return oy || (oy = 1, Al = Math.pow), Al;
}
var Ul, ay;
function n4() {
  return ay || (ay = 1, Ul = Math.round), Ul;
}
var kl, sy;
function r4() {
  return sy || (sy = 1, kl = Number.isNaN || function(e) {
    return e !== e;
  }), kl;
}
var Fl, cy;
function i4() {
  if (cy) return Fl;
  cy = 1;
  var t = /* @__PURE__ */ r4();
  return Fl = function(n) {
    return t(n) || n === 0 ? n : n < 0 ? -1 : 1;
  }, Fl;
}
var Ol, ly;
function tc() {
  return ly || (ly = 1, Ol = function() {
    if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
      return !1;
    if (typeof Symbol.iterator == "symbol")
      return !0;
    var e = {}, n = Symbol("test"), r = Object(n);
    if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]")
      return !1;
    var i = 42;
    e[n] = i;
    for (var o in e)
      return !1;
    if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0)
      return !1;
    var a = Object.getOwnPropertySymbols(e);
    if (a.length !== 1 || a[0] !== n || !Object.prototype.propertyIsEnumerable.call(e, n))
      return !1;
    if (typeof Object.getOwnPropertyDescriptor == "function") {
      var s = (
        /** @type {PropertyDescriptor} */
        Object.getOwnPropertyDescriptor(e, n)
      );
      if (s.value !== i || s.enumerable !== !0)
        return !1;
    }
    return !0;
  }), Ol;
}
var Rl, uy;
function Hh() {
  if (uy) return Rl;
  uy = 1;
  var t = typeof Symbol < "u" && Symbol, e = tc();
  return Rl = function() {
    return typeof t != "function" || typeof Symbol != "function" || typeof t("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : e();
  }, Rl;
}
var Nl, fy;
function MD() {
  return fy || (fy = 1, Nl = typeof Reflect < "u" && Reflect.getPrototypeOf || null), Nl;
}
var Bl, dy;
function WD() {
  if (dy) return Bl;
  dy = 1;
  var t = /* @__PURE__ */ Vh();
  return Bl = t.getPrototypeOf || null, Bl;
}
var Il, hy;
function o4() {
  if (hy) return Il;
  hy = 1;
  var t = "Function.prototype.bind called on incompatible ", e = Object.prototype.toString, n = Math.max, r = "[object Function]", i = function(c, l) {
    for (var u = [], f = 0; f < c.length; f += 1)
      u[f] = c[f];
    for (var d = 0; d < l.length; d += 1)
      u[d + c.length] = l[d];
    return u;
  }, o = function(c, l) {
    for (var u = [], f = l, d = 0; f < c.length; f += 1, d += 1)
      u[d] = c[f];
    return u;
  }, a = function(s, c) {
    for (var l = "", u = 0; u < s.length; u += 1)
      l += s[u], u + 1 < s.length && (l += c);
    return l;
  };
  return Il = function(c) {
    var l = this;
    if (typeof l != "function" || e.apply(l) !== r)
      throw new TypeError(t + l);
    for (var u = o(arguments, 1), f, d = function() {
      if (this instanceof f) {
        var y = l.apply(
          this,
          i(u, arguments)
        );
        return Object(y) === y ? y : this;
      }
      return l.apply(
        c,
        i(u, arguments)
      );
    }, h = n(0, l.length - u.length), p = [], m = 0; m < h; m++)
      p[m] = "$" + m;
    if (f = Function("binder", "return function (" + a(p, ",") + "){ return binder.apply(this,arguments); }")(d), l.prototype) {
      var g = function() {
      };
      g.prototype = l.prototype, f.prototype = new g(), g.prototype = null;
    }
    return f;
  }, Il;
}
var Ml, py;
function Wo() {
  if (py) return Ml;
  py = 1;
  var t = o4();
  return Ml = Function.prototype.bind || t, Ml;
}
var Wl, gy;
function Xh() {
  return gy || (gy = 1, Wl = Function.prototype.call), Wl;
}
var Ll, my;
function Gh() {
  return my || (my = 1, Ll = Function.prototype.apply), Ll;
}
var Pl, yy;
function a4() {
  return yy || (yy = 1, Pl = typeof Reflect < "u" && Reflect && Reflect.apply), Pl;
}
var ql, by;
function LD() {
  if (by) return ql;
  by = 1;
  var t = Wo(), e = Gh(), n = Xh(), r = a4();
  return ql = r || t.call(n, e), ql;
}
var zl, vy;
function Kh() {
  if (vy) return zl;
  vy = 1;
  var t = Wo(), e = /* @__PURE__ */ Jt(), n = Xh(), r = LD();
  return zl = function(o) {
    if (o.length < 1 || typeof o[0] != "function")
      throw new e("a function is required");
    return r(t, n, o);
  }, zl;
}
var jl, Dy;
function s4() {
  if (Dy) return jl;
  Dy = 1;
  var t = Kh(), e = /* @__PURE__ */ Vr(), n;
  try {
    n = /** @type {{ __proto__?: typeof Array.prototype }} */
    [].__proto__ === Array.prototype;
  } catch (a) {
    if (!a || typeof a != "object" || !("code" in a) || a.code !== "ERR_PROTO_ACCESS")
      throw a;
  }
  var r = !!n && e && e(
    Object.prototype,
    /** @type {keyof typeof Object.prototype} */
    "__proto__"
  ), i = Object, o = i.getPrototypeOf;
  return jl = r && typeof r.get == "function" ? t([r.get]) : typeof o == "function" ? (
    /** @type {import('./get')} */
    function(s) {
      return o(s == null ? s : i(s));
    }
  ) : !1, jl;
}
var $l, xy;
function PD() {
  if (xy) return $l;
  xy = 1;
  var t = MD(), e = WD(), n = /* @__PURE__ */ s4();
  return $l = t ? function(i) {
    return t(i);
  } : e ? function(i) {
    if (!i || typeof i != "object" && typeof i != "function")
      throw new TypeError("getProto: not an object");
    return e(i);
  } : n ? function(i) {
    return n(i);
  } : null, $l;
}
var Vl, wy;
function Jh() {
  if (wy) return Vl;
  wy = 1;
  var t = Function.prototype.call, e = Object.prototype.hasOwnProperty, n = Wo();
  return Vl = n.call(t, e), Vl;
}
var Hl, _y;
function qn() {
  if (_y) return Hl;
  _y = 1;
  var t, e = /* @__PURE__ */ Vh(), n = /* @__PURE__ */ ID(), r = /* @__PURE__ */ X8(), i = /* @__PURE__ */ G8(), o = /* @__PURE__ */ K8(), a = /* @__PURE__ */ zh(), s = /* @__PURE__ */ Jt(), c = /* @__PURE__ */ J8(), l = /* @__PURE__ */ Z8(), u = /* @__PURE__ */ Y8(), f = /* @__PURE__ */ Q8(), d = /* @__PURE__ */ e4(), h = /* @__PURE__ */ t4(), p = /* @__PURE__ */ n4(), m = /* @__PURE__ */ i4(), g = Function, y = function(me) {
    try {
      return g('"use strict"; return (' + me + ").constructor;")();
    } catch {
    }
  }, b = /* @__PURE__ */ Vr(), v = /* @__PURE__ */ ec(), _ = function() {
    throw new s();
  }, x = b ? function() {
    try {
      return arguments.callee, _;
    } catch {
      try {
        return b(arguments, "callee").get;
      } catch {
        return _;
      }
    }
  }() : _, E = Hh()(), S = PD(), U = WD(), C = MD(), R = Gh(), j = Xh(), T = {}, k = typeof Uint8Array > "u" || !S ? t : S(Uint8Array), w = {
    __proto__: null,
    "%AggregateError%": typeof AggregateError > "u" ? t : AggregateError,
    "%Array%": Array,
    "%ArrayBuffer%": typeof ArrayBuffer > "u" ? t : ArrayBuffer,
    "%ArrayIteratorPrototype%": E && S ? S([][Symbol.iterator]()) : t,
    "%AsyncFromSyncIteratorPrototype%": t,
    "%AsyncFunction%": T,
    "%AsyncGenerator%": T,
    "%AsyncGeneratorFunction%": T,
    "%AsyncIteratorPrototype%": T,
    "%Atomics%": typeof Atomics > "u" ? t : Atomics,
    "%BigInt%": typeof BigInt > "u" ? t : BigInt,
    "%BigInt64Array%": typeof BigInt64Array > "u" ? t : BigInt64Array,
    "%BigUint64Array%": typeof BigUint64Array > "u" ? t : BigUint64Array,
    "%Boolean%": Boolean,
    "%DataView%": typeof DataView > "u" ? t : DataView,
    "%Date%": Date,
    "%decodeURI%": decodeURI,
    "%decodeURIComponent%": decodeURIComponent,
    "%encodeURI%": encodeURI,
    "%encodeURIComponent%": encodeURIComponent,
    "%Error%": n,
    "%eval%": eval,
    // eslint-disable-line no-eval
    "%EvalError%": r,
    "%Float32Array%": typeof Float32Array > "u" ? t : Float32Array,
    "%Float64Array%": typeof Float64Array > "u" ? t : Float64Array,
    "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? t : FinalizationRegistry,
    "%Function%": g,
    "%GeneratorFunction%": T,
    "%Int8Array%": typeof Int8Array > "u" ? t : Int8Array,
    "%Int16Array%": typeof Int16Array > "u" ? t : Int16Array,
    "%Int32Array%": typeof Int32Array > "u" ? t : Int32Array,
    "%isFinite%": isFinite,
    "%isNaN%": isNaN,
    "%IteratorPrototype%": E && S ? S(S([][Symbol.iterator]())) : t,
    "%JSON%": typeof JSON == "object" ? JSON : t,
    "%Map%": typeof Map > "u" ? t : Map,
    "%MapIteratorPrototype%": typeof Map > "u" || !E || !S ? t : S((/* @__PURE__ */ new Map())[Symbol.iterator]()),
    "%Math%": Math,
    "%Number%": Number,
    "%Object%": e,
    "%Object.getOwnPropertyDescriptor%": b,
    "%parseFloat%": parseFloat,
    "%parseInt%": parseInt,
    "%Promise%": typeof Promise > "u" ? t : Promise,
    "%Proxy%": typeof Proxy > "u" ? t : Proxy,
    "%RangeError%": i,
    "%ReferenceError%": o,
    "%Reflect%": typeof Reflect > "u" ? t : Reflect,
    "%RegExp%": RegExp,
    "%Set%": typeof Set > "u" ? t : Set,
    "%SetIteratorPrototype%": typeof Set > "u" || !E || !S ? t : S((/* @__PURE__ */ new Set())[Symbol.iterator]()),
    "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? t : SharedArrayBuffer,
    "%String%": String,
    "%StringIteratorPrototype%": E && S ? S(""[Symbol.iterator]()) : t,
    "%Symbol%": E ? Symbol : t,
    "%SyntaxError%": a,
    "%ThrowTypeError%": x,
    "%TypedArray%": k,
    "%TypeError%": s,
    "%Uint8Array%": typeof Uint8Array > "u" ? t : Uint8Array,
    "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? t : Uint8ClampedArray,
    "%Uint16Array%": typeof Uint16Array > "u" ? t : Uint16Array,
    "%Uint32Array%": typeof Uint32Array > "u" ? t : Uint32Array,
    "%URIError%": c,
    "%WeakMap%": typeof WeakMap > "u" ? t : WeakMap,
    "%WeakRef%": typeof WeakRef > "u" ? t : WeakRef,
    "%WeakSet%": typeof WeakSet > "u" ? t : WeakSet,
    "%Function.prototype.call%": j,
    "%Function.prototype.apply%": R,
    "%Object.defineProperty%": v,
    "%Object.getPrototypeOf%": U,
    "%Math.abs%": l,
    "%Math.floor%": u,
    "%Math.max%": f,
    "%Math.min%": d,
    "%Math.pow%": h,
    "%Math.round%": p,
    "%Math.sign%": m,
    "%Reflect.getPrototypeOf%": C
  };
  if (S)
    try {
      null.error;
    } catch (me) {
      var $ = S(S(me));
      w["%Error.prototype%"] = $;
    }
  var N = function me(de) {
    var pe;
    if (de === "%AsyncFunction%")
      pe = y("async function () {}");
    else if (de === "%GeneratorFunction%")
      pe = y("function* () {}");
    else if (de === "%AsyncGeneratorFunction%")
      pe = y("async function* () {}");
    else if (de === "%AsyncGenerator%") {
      var ye = me("%AsyncGeneratorFunction%");
      ye && (pe = ye.prototype);
    } else if (de === "%AsyncIteratorPrototype%") {
      var be = me("%AsyncGenerator%");
      be && S && (pe = S(be.prototype));
    }
    return w[de] = pe, pe;
  }, M = {
    __proto__: null,
    "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
    "%ArrayPrototype%": ["Array", "prototype"],
    "%ArrayProto_entries%": ["Array", "prototype", "entries"],
    "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
    "%ArrayProto_keys%": ["Array", "prototype", "keys"],
    "%ArrayProto_values%": ["Array", "prototype", "values"],
    "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
    "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
    "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
    "%BooleanPrototype%": ["Boolean", "prototype"],
    "%DataViewPrototype%": ["DataView", "prototype"],
    "%DatePrototype%": ["Date", "prototype"],
    "%ErrorPrototype%": ["Error", "prototype"],
    "%EvalErrorPrototype%": ["EvalError", "prototype"],
    "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
    "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
    "%FunctionPrototype%": ["Function", "prototype"],
    "%Generator%": ["GeneratorFunction", "prototype"],
    "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
    "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
    "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
    "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
    "%JSONParse%": ["JSON", "parse"],
    "%JSONStringify%": ["JSON", "stringify"],
    "%MapPrototype%": ["Map", "prototype"],
    "%NumberPrototype%": ["Number", "prototype"],
    "%ObjectPrototype%": ["Object", "prototype"],
    "%ObjProto_toString%": ["Object", "prototype", "toString"],
    "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
    "%PromisePrototype%": ["Promise", "prototype"],
    "%PromiseProto_then%": ["Promise", "prototype", "then"],
    "%Promise_all%": ["Promise", "all"],
    "%Promise_reject%": ["Promise", "reject"],
    "%Promise_resolve%": ["Promise", "resolve"],
    "%RangeErrorPrototype%": ["RangeError", "prototype"],
    "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
    "%RegExpPrototype%": ["RegExp", "prototype"],
    "%SetPrototype%": ["Set", "prototype"],
    "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
    "%StringPrototype%": ["String", "prototype"],
    "%SymbolPrototype%": ["Symbol", "prototype"],
    "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
    "%TypedArrayPrototype%": ["TypedArray", "prototype"],
    "%TypeErrorPrototype%": ["TypeError", "prototype"],
    "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
    "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
    "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
    "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
    "%URIErrorPrototype%": ["URIError", "prototype"],
    "%WeakMapPrototype%": ["WeakMap", "prototype"],
    "%WeakSetPrototype%": ["WeakSet", "prototype"]
  }, K = Wo(), P = /* @__PURE__ */ Jh(), te = K.call(j, Array.prototype.concat), W = K.call(R, Array.prototype.splice), B = K.call(j, String.prototype.replace), se = K.call(j, String.prototype.slice), G = K.call(j, RegExp.prototype.exec), J = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, ce = /\\(\\)?/g, he = function(de) {
    var pe = se(de, 0, 1), ye = se(de, -1);
    if (pe === "%" && ye !== "%")
      throw new a("invalid intrinsic syntax, expected closing `%`");
    if (ye === "%" && pe !== "%")
      throw new a("invalid intrinsic syntax, expected opening `%`");
    var be = [];
    return B(de, J, function(D, V, q, I) {
      be[be.length] = q ? B(I, ce, "$1") : V || D;
    }), be;
  }, fe = function(de, pe) {
    var ye = de, be;
    if (P(M, ye) && (be = M[ye], ye = "%" + be[0] + "%"), P(w, ye)) {
      var D = w[ye];
      if (D === T && (D = N(ye)), typeof D > "u" && !pe)
        throw new s("intrinsic " + de + " exists, but is not available. Please file an issue!");
      return {
        alias: be,
        name: ye,
        value: D
      };
    }
    throw new a("intrinsic " + de + " does not exist!");
  };
  return Hl = function(de, pe) {
    if (typeof de != "string" || de.length === 0)
      throw new s("intrinsic name must be a non-empty string");
    if (arguments.length > 1 && typeof pe != "boolean")
      throw new s('"allowMissing" argument must be a boolean');
    if (G(/^%?[^%]*%?$/, de) === null)
      throw new a("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
    var ye = he(de), be = ye.length > 0 ? ye[0] : "", D = fe("%" + be + "%", pe), V = D.name, q = D.value, I = !1, O = D.alias;
    O && (be = O[0], W(ye, te([0, 1], O)));
    for (var z = 1, ie = !0; z < ye.length; z += 1) {
      var ne = ye[z], Z = se(ne, 0, 1), L = se(ne, -1);
      if ((Z === '"' || Z === "'" || Z === "`" || L === '"' || L === "'" || L === "`") && Z !== L)
        throw new a("property names with quotes must have matching quotes");
      if ((ne === "constructor" || !ie) && (I = !0), be += "." + ne, V = "%" + be + "%", P(w, V))
        q = w[V];
      else if (q != null) {
        if (!(ne in q)) {
          if (!pe)
            throw new s("base intrinsic for " + de + " exists, but the property is not available.");
          return;
        }
        if (b && z + 1 >= ye.length) {
          var X = b(q, ne);
          ie = !!X, ie && "get" in X && !("originalValue" in X.get) ? q = X.get : q = q[ne];
        } else
          ie = P(q, ne), q = q[ne];
        ie && !I && (w[V] = q);
      }
    }
    return q;
  }, Hl;
}
var Xl, Ty;
function c4() {
  if (Ty) return Xl;
  Ty = 1;
  var t = /* @__PURE__ */ qn(), e = /* @__PURE__ */ jh(), n = /* @__PURE__ */ $h()(), r = /* @__PURE__ */ Vr(), i = /* @__PURE__ */ Jt(), o = t("%Math.floor%");
  return Xl = function(s, c) {
    if (typeof s != "function")
      throw new i("`fn` is not a function");
    if (typeof c != "number" || c < 0 || c > 4294967295 || o(c) !== c)
      throw new i("`length` must be a positive 32-bit integer");
    var l = arguments.length > 2 && !!arguments[2], u = !0, f = !0;
    if ("length" in s && r) {
      var d = r(s, "length");
      d && !d.configurable && (u = !1), d && !d.writable && (f = !1);
    }
    return (u || f || !l) && (n ? e(
      /** @type {Parameters<define>[0]} */
      s,
      "length",
      c,
      !0,
      !0
    ) : e(
      /** @type {Parameters<define>[0]} */
      s,
      "length",
      c
    )), s;
  }, Xl;
}
var Gl, Ey;
function l4() {
  if (Ey) return Gl;
  Ey = 1;
  var t = Wo(), e = Gh(), n = LD();
  return Gl = function() {
    return n(t, e, arguments);
  }, Gl;
}
var Cy;
function Ai() {
  return Cy || (Cy = 1, function(t) {
    var e = /* @__PURE__ */ c4(), n = /* @__PURE__ */ ec(), r = Kh(), i = l4();
    t.exports = function(a) {
      var s = r(arguments), c = a.length - (arguments.length - 1);
      return e(
        s,
        1 + (c > 0 ? c : 0),
        !0
      );
    }, n ? n(t.exports, "apply", { value: i }) : t.exports.apply = i;
  }(yl)), yl.exports;
}
var Kl, Sy;
function yt() {
  if (Sy) return Kl;
  Sy = 1;
  var t = /* @__PURE__ */ qn(), e = Kh(), n = e([t("%String.prototype.indexOf%")]);
  return Kl = function(i, o) {
    var a = (
      /** @type {Parameters<typeof callBindBasic>[0][0]} */
      t(i, !!o)
    );
    return typeof a == "function" && n(i, ".prototype.") > -1 ? e([a]) : a;
  }, Kl;
}
var Jl, Ay;
function qD() {
  if (Ay) return Jl;
  Ay = 1;
  var t = qh(), e = tc()(), n = /* @__PURE__ */ yt(), r = /* @__PURE__ */ Vh(), i = n("Array.prototype.push"), o = n("Object.prototype.propertyIsEnumerable"), a = e ? r.getOwnPropertySymbols : null;
  return Jl = function(c, l) {
    if (c == null)
      throw new TypeError("target must be an object");
    var u = r(c);
    if (arguments.length === 1)
      return u;
    for (var f = 1; f < arguments.length; ++f) {
      var d = r(arguments[f]), h = t(d), p = e && (r.getOwnPropertySymbols || a);
      if (p)
        for (var m = p(d), g = 0; g < m.length; ++g) {
          var y = m[g];
          o(d, y) && i(h, y);
        }
      for (var b = 0; b < h.length; ++b) {
        var v = h[b];
        if (o(d, v)) {
          var _ = d[v];
          u[v] = _;
        }
      }
    }
    return u;
  }, Jl;
}
var Zl, Uy;
function zD() {
  if (Uy) return Zl;
  Uy = 1;
  var t = qD(), e = function() {
    if (!Object.assign)
      return !1;
    for (var r = "abcdefghijklmnopqrst", i = r.split(""), o = {}, a = 0; a < i.length; ++a)
      o[i[a]] = i[a];
    var s = Object.assign({}, o), c = "";
    for (var l in s)
      c += l;
    return r !== c;
  }, n = function() {
    if (!Object.assign || !Object.preventExtensions)
      return !1;
    var r = Object.preventExtensions({ 1: 2 });
    try {
      Object.assign(r, "xy");
    } catch {
      return r[1] === "y";
    }
    return !1;
  };
  return Zl = function() {
    return !Object.assign || e() || n() ? t : Object.assign;
  }, Zl;
}
var Yl, ky;
function u4() {
  if (ky) return Yl;
  ky = 1;
  var t = Hr(), e = zD();
  return Yl = function() {
    var r = e();
    return t(
      Object,
      { assign: r },
      { assign: function() {
        return Object.assign !== r;
      } }
    ), r;
  }, Yl;
}
var Ql, Fy;
function f4() {
  if (Fy) return Ql;
  Fy = 1;
  var t = Hr(), e = Ai(), n = qD(), r = zD(), i = u4(), o = e.apply(r()), a = function(c, l) {
    return o(Object, arguments);
  };
  return t(a, {
    getPolyfill: r,
    implementation: n,
    shim: i
  }), Ql = a, Ql;
}
var eu, Oy;
function jD() {
  if (Oy) return eu;
  Oy = 1;
  var t = /* @__PURE__ */ qn(), e = Ai(), n = e(t("String.prototype.indexOf"));
  return eu = function(i, o) {
    var a = t(i, !!o);
    return typeof a == "function" && n(i, ".prototype.") > -1 ? e(a) : a;
  }, eu;
}
var tu, Ry;
function d4() {
  if (Ry) return tu;
  Ry = 1;
  var t = function() {
    return typeof (function() {
    }).name == "string";
  }, e = Object.getOwnPropertyDescriptor;
  if (e)
    try {
      e([], "length");
    } catch {
      e = null;
    }
  t.functionsHaveConfigurableNames = function() {
    if (!t() || !e)
      return !1;
    var i = e(function() {
    }, "name");
    return !!i && !!i.configurable;
  };
  var n = Function.prototype.bind;
  return t.boundFunctionsHaveNames = function() {
    return t() && typeof n == "function" && (function() {
    }).bind().name !== "";
  }, tu = t, tu;
}
var nu, Ny;
function h4() {
  if (Ny) return nu;
  Ny = 1;
  var t = /* @__PURE__ */ jh(), e = /* @__PURE__ */ $h()(), n = d4().functionsHaveConfigurableNames(), r = /* @__PURE__ */ Jt();
  return nu = function(o, a) {
    if (typeof o != "function")
      throw new r("`fn` is not a function");
    var s = arguments.length > 2 && !!arguments[2];
    return (!s || n) && (e ? t(
      /** @type {Parameters<define>[0]} */
      o,
      "name",
      a,
      !0,
      !0
    ) : t(
      /** @type {Parameters<define>[0]} */
      o,
      "name",
      a
    )), o;
  }, nu;
}
var ru, By;
function $D() {
  if (By) return ru;
  By = 1;
  var t = h4(), e = /* @__PURE__ */ Jt(), n = Object;
  return ru = t(function() {
    if (this == null || this !== n(this))
      throw new e("RegExp.prototype.flags getter called on non-object");
    var i = "";
    return this.hasIndices && (i += "d"), this.global && (i += "g"), this.ignoreCase && (i += "i"), this.multiline && (i += "m"), this.dotAll && (i += "s"), this.unicode && (i += "u"), this.unicodeSets && (i += "v"), this.sticky && (i += "y"), i;
  }, "get flags", !0), ru;
}
var iu, Iy;
function VD() {
  if (Iy) return iu;
  Iy = 1;
  var t = $D(), e = Hr().supportsDescriptors, n = Object.getOwnPropertyDescriptor;
  return iu = function() {
    if (e && /a/mig.flags === "gim") {
      var i = n(RegExp.prototype, "flags");
      if (i && typeof i.get == "function" && "dotAll" in RegExp.prototype && "hasIndices" in RegExp.prototype) {
        var o = "", a = {};
        if (Object.defineProperty(a, "hasIndices", {
          get: function() {
            o += "d";
          }
        }), Object.defineProperty(a, "sticky", {
          get: function() {
            o += "y";
          }
        }), i.get.call(a), o === "dy")
          return i.get;
      }
    }
    return t;
  }, iu;
}
var ou, My;
function p4() {
  if (My) return ou;
  My = 1;
  var t = Hr().supportsDescriptors, e = VD(), n = /* @__PURE__ */ Vr(), r = Object.defineProperty, i = /* @__PURE__ */ ID(), o = PD(), a = /a/;
  return ou = function() {
    if (!t || !o)
      throw new i("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");
    var c = e(), l = o(a), u = n(l, "flags");
    return (!u || u.get !== c) && r(l, "flags", {
      configurable: !0,
      enumerable: !1,
      get: c
    }), c;
  }, ou;
}
var au, Wy;
function g4() {
  if (Wy) return au;
  Wy = 1;
  var t = Hr(), e = Ai(), n = $D(), r = VD(), i = p4(), o = e(r());
  return t(o, {
    getPolyfill: r,
    implementation: n,
    shim: i
  }), au = o, au;
}
var Ii = { exports: {} }, su, Ly;
function Xr() {
  if (Ly) return su;
  Ly = 1;
  var t = tc();
  return su = function() {
    return t() && !!Symbol.toStringTag;
  }, su;
}
var cu, Py;
function HD() {
  if (Py) return cu;
  Py = 1;
  var t = Xr()(), e = /* @__PURE__ */ yt(), n = e("Object.prototype.toString"), r = function(s) {
    return t && s && typeof s == "object" && Symbol.toStringTag in s ? !1 : n(s) === "[object Arguments]";
  }, i = function(s) {
    return r(s) ? !0 : s !== null && typeof s == "object" && "length" in s && typeof s.length == "number" && s.length >= 0 && n(s) !== "[object Array]" && "callee" in s && n(s.callee) === "[object Function]";
  }, o = function() {
    return r(arguments);
  }();
  return r.isLegacyArguments = i, cu = o ? r : i, cu;
}
const m4 = {}, y4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: m4
}, Symbol.toStringTag, { value: "Module" })), b4 = /* @__PURE__ */ ND(y4);
var lu, qy;
function nc() {
  if (qy) return lu;
  qy = 1;
  var t = typeof Map == "function" && Map.prototype, e = Object.getOwnPropertyDescriptor && t ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, n = t && e && typeof e.get == "function" ? e.get : null, r = t && Map.prototype.forEach, i = typeof Set == "function" && Set.prototype, o = Object.getOwnPropertyDescriptor && i ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, a = i && o && typeof o.get == "function" ? o.get : null, s = i && Set.prototype.forEach, c = typeof WeakMap == "function" && WeakMap.prototype, l = c ? WeakMap.prototype.has : null, u = typeof WeakSet == "function" && WeakSet.prototype, f = u ? WeakSet.prototype.has : null, d = typeof WeakRef == "function" && WeakRef.prototype, h = d ? WeakRef.prototype.deref : null, p = Boolean.prototype.valueOf, m = Object.prototype.toString, g = Function.prototype.toString, y = String.prototype.match, b = String.prototype.slice, v = String.prototype.replace, _ = String.prototype.toUpperCase, x = String.prototype.toLowerCase, E = RegExp.prototype.test, S = Array.prototype.concat, U = Array.prototype.join, C = Array.prototype.slice, R = Math.floor, j = typeof BigInt == "function" ? BigInt.prototype.valueOf : null, T = Object.getOwnPropertySymbols, k = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null, w = typeof Symbol == "function" && typeof Symbol.iterator == "object", $ = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === w || !0) ? Symbol.toStringTag : null, N = Object.prototype.propertyIsEnumerable, M = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(Q) {
    return Q.__proto__;
  } : null);
  function K(Q, re) {
    if (Q === 1 / 0 || Q === -1 / 0 || Q !== Q || Q && Q > -1e3 && Q < 1e3 || E.call(/e/, re))
      return re;
    var Fe = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof Q == "number") {
      var Ie = Q < 0 ? -R(-Q) : R(Q);
      if (Ie !== Q) {
        var Pe = String(Ie), A = b.call(re, Pe.length + 1);
        return v.call(Pe, Fe, "$&_") + "." + v.call(v.call(A, /([0-9]{3})/g, "$&_"), /_$/, "");
      }
    }
    return v.call(re, Fe, "$&_");
  }
  var P = b4, te = P.custom, W = D(te) ? te : null, B = {
    __proto__: null,
    double: '"',
    single: "'"
  }, se = {
    __proto__: null,
    double: /(["\\])/g,
    single: /(['\\])/g
  };
  lu = function Q(re, Fe, Ie, Pe) {
    var A = Fe || {};
    if (I(A, "quoteStyle") && !I(B, A.quoteStyle))
      throw new TypeError('option "quoteStyle" must be "single" or "double"');
    if (I(A, "maxStringLength") && (typeof A.maxStringLength == "number" ? A.maxStringLength < 0 && A.maxStringLength !== 1 / 0 : A.maxStringLength !== null))
      throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    var F = I(A, "customInspect") ? A.customInspect : !0;
    if (typeof F != "boolean" && F !== "symbol")
      throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
    if (I(A, "indent") && A.indent !== null && A.indent !== "	" && !(parseInt(A.indent, 10) === A.indent && A.indent > 0))
      throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
    if (I(A, "numericSeparator") && typeof A.numericSeparator != "boolean")
      throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
    var H = A.numericSeparator;
    if (typeof re > "u")
      return "undefined";
    if (re === null)
      return "null";
    if (typeof re == "boolean")
      return re ? "true" : "false";
    if (typeof re == "string")
      return De(re, A);
    if (typeof re == "number") {
      if (re === 0)
        return 1 / 0 / re > 0 ? "0" : "-0";
      var ae = String(re);
      return H ? K(re, ae) : ae;
    }
    if (typeof re == "bigint") {
      var we = String(re) + "n";
      return H ? K(re, we) : we;
    }
    var Ae = typeof A.depth > "u" ? 5 : A.depth;
    if (typeof Ie > "u" && (Ie = 0), Ie >= Ae && Ae > 0 && typeof re == "object")
      return he(re) ? "[Array]" : "[Object]";
    var We = ve(A, Ie);
    if (typeof Pe > "u")
      Pe = [];
    else if (ie(Pe, re) >= 0)
      return "[Circular]";
    function $e(ei, jo, r_) {
      if (jo && (Pe = C.call(Pe), Pe.push(jo)), r_) {
        var Vp = {
          depth: A.depth
        };
        return I(A, "quoteStyle") && (Vp.quoteStyle = A.quoteStyle), Q(ei, Vp, Ie + 1, Pe);
      }
      return Q(ei, A, Ie + 1, Pe);
    }
    if (typeof re == "function" && !me(re)) {
      var Mt = z(re), Zt = ke(re, $e);
      return "[Function" + (Mt ? ": " + Mt : " (anonymous)") + "]" + (Zt.length > 0 ? " { " + U.call(Zt, ", ") + " }" : "");
    }
    if (D(re)) {
      var Wt = w ? v.call(String(re), /^(Symbol\(.*\))_[^)]*$/, "$1") : k.call(re);
      return typeof re == "object" && !w ? Se(Wt) : Wt;
    }
    if (oe(re)) {
      for (var Ot = "<" + x.call(String(re.nodeName)), Yt = re.attributes || [], Lt = 0; Lt < Yt.length; Lt++)
        Ot += " " + Yt[Lt].name + "=" + G(J(Yt[Lt].value), "double", A);
      return Ot += ">", re.childNodes && re.childNodes.length && (Ot += "..."), Ot += "</" + x.call(String(re.nodeName)) + ">", Ot;
    }
    if (he(re)) {
      if (re.length === 0)
        return "[]";
      var Et = ke(re, $e);
      return We && !ue(Et) ? "[" + Ee(Et, We) + "]" : "[ " + U.call(Et, ", ") + " ]";
    }
    if (de(re)) {
      var Qt = ke(re, $e);
      return !("cause" in Error.prototype) && "cause" in re && !N.call(re, "cause") ? "{ [" + String(re) + "] " + U.call(S.call("[cause]: " + $e(re.cause), Qt), ", ") + " }" : Qt.length === 0 ? "[" + String(re) + "]" : "{ [" + String(re) + "] " + U.call(Qt, ", ") + " }";
    }
    if (typeof re == "object" && F) {
      if (W && typeof re[W] == "function" && P)
        return P(re, { depth: Ae - Ie });
      if (F !== "symbol" && typeof re.inspect == "function")
        return re.inspect();
    }
    if (ne(re)) {
      var zn = [];
      return r && r.call(re, function(ei, jo) {
        zn.push($e(jo, re, !0) + " => " + $e(ei, re));
      }), ee("Map", n.call(re), zn, We);
    }
    if (X(re)) {
      var nt = [];
      return s && s.call(re, function(ei) {
        nt.push($e(ei, re));
      }), ee("Set", a.call(re), nt, We);
    }
    if (Z(re))
      return Ce("WeakMap");
    if (Y(re))
      return Ce("WeakSet");
    if (L(re))
      return Ce("WeakRef");
    if (ye(re))
      return Se($e(Number(re)));
    if (V(re))
      return Se($e(j.call(re)));
    if (be(re))
      return Se(p.call(re));
    if (pe(re))
      return Se($e(String(re)));
    if (typeof window < "u" && re === window)
      return "{ [object Window] }";
    if (typeof globalThis < "u" && re === globalThis || typeof Ht < "u" && re === Ht)
      return "{ [object globalThis] }";
    if (!fe(re) && !me(re)) {
      var Yr = ke(re, $e), xn = M ? M(re) === Object.prototype : re instanceof Object || re.constructor === Object, Qr = re instanceof Object ? "" : "null prototype", $p = !xn && $ && Object(re) === re && $ in re ? b.call(O(re), 8, -1) : Qr ? "Object" : "", n_ = xn || typeof re.constructor != "function" ? "" : re.constructor.name ? re.constructor.name + " " : "", Ac = n_ + ($p || Qr ? "[" + U.call(S.call([], $p || [], Qr || []), ": ") + "] " : "");
      return Yr.length === 0 ? Ac + "{}" : We ? Ac + "{" + Ee(Yr, We) + "}" : Ac + "{ " + U.call(Yr, ", ") + " }";
    }
    return String(re);
  };
  function G(Q, re, Fe) {
    var Ie = Fe.quoteStyle || re, Pe = B[Ie];
    return Pe + Q + Pe;
  }
  function J(Q) {
    return v.call(String(Q), /"/g, "&quot;");
  }
  function ce(Q) {
    return !$ || !(typeof Q == "object" && ($ in Q || typeof Q[$] < "u"));
  }
  function he(Q) {
    return O(Q) === "[object Array]" && ce(Q);
  }
  function fe(Q) {
    return O(Q) === "[object Date]" && ce(Q);
  }
  function me(Q) {
    return O(Q) === "[object RegExp]" && ce(Q);
  }
  function de(Q) {
    return O(Q) === "[object Error]" && ce(Q);
  }
  function pe(Q) {
    return O(Q) === "[object String]" && ce(Q);
  }
  function ye(Q) {
    return O(Q) === "[object Number]" && ce(Q);
  }
  function be(Q) {
    return O(Q) === "[object Boolean]" && ce(Q);
  }
  function D(Q) {
    if (w)
      return Q && typeof Q == "object" && Q instanceof Symbol;
    if (typeof Q == "symbol")
      return !0;
    if (!Q || typeof Q != "object" || !k)
      return !1;
    try {
      return k.call(Q), !0;
    } catch {
    }
    return !1;
  }
  function V(Q) {
    if (!Q || typeof Q != "object" || !j)
      return !1;
    try {
      return j.call(Q), !0;
    } catch {
    }
    return !1;
  }
  var q = Object.prototype.hasOwnProperty || function(Q) {
    return Q in this;
  };
  function I(Q, re) {
    return q.call(Q, re);
  }
  function O(Q) {
    return m.call(Q);
  }
  function z(Q) {
    if (Q.name)
      return Q.name;
    var re = y.call(g.call(Q), /^function\s*([\w$]+)/);
    return re ? re[1] : null;
  }
  function ie(Q, re) {
    if (Q.indexOf)
      return Q.indexOf(re);
    for (var Fe = 0, Ie = Q.length; Fe < Ie; Fe++)
      if (Q[Fe] === re)
        return Fe;
    return -1;
  }
  function ne(Q) {
    if (!n || !Q || typeof Q != "object")
      return !1;
    try {
      n.call(Q);
      try {
        a.call(Q);
      } catch {
        return !0;
      }
      return Q instanceof Map;
    } catch {
    }
    return !1;
  }
  function Z(Q) {
    if (!l || !Q || typeof Q != "object")
      return !1;
    try {
      l.call(Q, l);
      try {
        f.call(Q, f);
      } catch {
        return !0;
      }
      return Q instanceof WeakMap;
    } catch {
    }
    return !1;
  }
  function L(Q) {
    if (!h || !Q || typeof Q != "object")
      return !1;
    try {
      return h.call(Q), !0;
    } catch {
    }
    return !1;
  }
  function X(Q) {
    if (!a || !Q || typeof Q != "object")
      return !1;
    try {
      a.call(Q);
      try {
        n.call(Q);
      } catch {
        return !0;
      }
      return Q instanceof Set;
    } catch {
    }
    return !1;
  }
  function Y(Q) {
    if (!f || !Q || typeof Q != "object")
      return !1;
    try {
      f.call(Q, f);
      try {
        l.call(Q, l);
      } catch {
        return !0;
      }
      return Q instanceof WeakSet;
    } catch {
    }
    return !1;
  }
  function oe(Q) {
    return !Q || typeof Q != "object" ? !1 : typeof HTMLElement < "u" && Q instanceof HTMLElement ? !0 : typeof Q.nodeName == "string" && typeof Q.getAttribute == "function";
  }
  function De(Q, re) {
    if (Q.length > re.maxStringLength) {
      var Fe = Q.length - re.maxStringLength, Ie = "... " + Fe + " more character" + (Fe > 1 ? "s" : "");
      return De(b.call(Q, 0, re.maxStringLength), re) + Ie;
    }
    var Pe = se[re.quoteStyle || "single"];
    Pe.lastIndex = 0;
    var A = v.call(v.call(Q, Pe, "\\$1"), /[\x00-\x1f]/g, Te);
    return G(A, "single", re);
  }
  function Te(Q) {
    var re = Q.charCodeAt(0), Fe = {
      8: "b",
      9: "t",
      10: "n",
      12: "f",
      13: "r"
    }[re];
    return Fe ? "\\" + Fe : "\\x" + (re < 16 ? "0" : "") + _.call(re.toString(16));
  }
  function Se(Q) {
    return "Object(" + Q + ")";
  }
  function Ce(Q) {
    return Q + " { ? }";
  }
  function ee(Q, re, Fe, Ie) {
    var Pe = Ie ? Ee(Fe, Ie) : U.call(Fe, ", ");
    return Q + " (" + re + ") {" + Pe + "}";
  }
  function ue(Q) {
    for (var re = 0; re < Q.length; re++)
      if (ie(Q[re], `
`) >= 0)
        return !1;
    return !0;
  }
  function ve(Q, re) {
    var Fe;
    if (Q.indent === "	")
      Fe = "	";
    else if (typeof Q.indent == "number" && Q.indent > 0)
      Fe = U.call(Array(Q.indent + 1), " ");
    else
      return null;
    return {
      base: Fe,
      prev: U.call(Array(re + 1), Fe)
    };
  }
  function Ee(Q, re) {
    if (Q.length === 0)
      return "";
    var Fe = `
` + re.prev + re.base;
    return Fe + U.call(Q, "," + Fe) + `
` + re.prev;
  }
  function ke(Q, re) {
    var Fe = he(Q), Ie = [];
    if (Fe) {
      Ie.length = Q.length;
      for (var Pe = 0; Pe < Q.length; Pe++)
        Ie[Pe] = I(Q, Pe) ? re(Q[Pe], Q) : "";
    }
    var A = typeof T == "function" ? T(Q) : [], F;
    if (w) {
      F = {};
      for (var H = 0; H < A.length; H++)
        F["$" + A[H]] = A[H];
    }
    for (var ae in Q)
      I(Q, ae) && (Fe && String(Number(ae)) === ae && ae < Q.length || w && F["$" + ae] instanceof Symbol || (E.call(/[^\w$]/, ae) ? Ie.push(re(ae, Q) + ": " + re(Q[ae], Q)) : Ie.push(ae + ": " + re(Q[ae], Q))));
    if (typeof T == "function")
      for (var we = 0; we < A.length; we++)
        N.call(Q, A[we]) && Ie.push("[" + re(A[we]) + "]: " + re(Q[A[we]], Q));
    return Ie;
  }
  return lu;
}
var uu, zy;
function v4() {
  if (zy) return uu;
  zy = 1;
  var t = /* @__PURE__ */ nc(), e = /* @__PURE__ */ Jt(), n = function(s, c, l) {
    for (var u = s, f; (f = u.next) != null; u = f)
      if (f.key === c)
        return u.next = f.next, l || (f.next = /** @type {NonNullable<typeof list.next>} */
        s.next, s.next = f), f;
  }, r = function(s, c) {
    if (s) {
      var l = n(s, c);
      return l && l.value;
    }
  }, i = function(s, c, l) {
    var u = n(s, c);
    u ? u.value = l : s.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */
    {
      // eslint-disable-line no-param-reassign, no-extra-parens
      key: c,
      next: s.next,
      value: l
    };
  }, o = function(s, c) {
    return s ? !!n(s, c) : !1;
  }, a = function(s, c) {
    if (s)
      return n(s, c, !0);
  };
  return uu = function() {
    var c, l = {
      assert: function(u) {
        if (!l.has(u))
          throw new e("Side channel does not contain " + t(u));
      },
      delete: function(u) {
        var f = c && c.next, d = a(c, u);
        return d && f && f === d && (c = void 0), !!d;
      },
      get: function(u) {
        return r(c, u);
      },
      has: function(u) {
        return o(c, u);
      },
      set: function(u, f) {
        c || (c = {
          next: void 0
        }), i(
          /** @type {NonNullable<typeof $o>} */
          c,
          u,
          f
        );
      }
    };
    return l;
  }, uu;
}
var fu, jy;
function XD() {
  if (jy) return fu;
  jy = 1;
  var t = /* @__PURE__ */ qn(), e = /* @__PURE__ */ yt(), n = /* @__PURE__ */ nc(), r = /* @__PURE__ */ Jt(), i = t("%Map%", !0), o = e("Map.prototype.get", !0), a = e("Map.prototype.set", !0), s = e("Map.prototype.has", !0), c = e("Map.prototype.delete", !0), l = e("Map.prototype.size", !0);
  return fu = !!i && /** @type {Exclude<import('.'), false>} */
  function() {
    var f, d = {
      assert: function(h) {
        if (!d.has(h))
          throw new r("Side channel does not contain " + n(h));
      },
      delete: function(h) {
        if (f) {
          var p = c(f, h);
          return l(f) === 0 && (f = void 0), p;
        }
        return !1;
      },
      get: function(h) {
        if (f)
          return o(f, h);
      },
      has: function(h) {
        return f ? s(f, h) : !1;
      },
      set: function(h, p) {
        f || (f = new i()), a(f, h, p);
      }
    };
    return d;
  }, fu;
}
var du, $y;
function D4() {
  if ($y) return du;
  $y = 1;
  var t = /* @__PURE__ */ qn(), e = /* @__PURE__ */ yt(), n = /* @__PURE__ */ nc(), r = XD(), i = /* @__PURE__ */ Jt(), o = t("%WeakMap%", !0), a = e("WeakMap.prototype.get", !0), s = e("WeakMap.prototype.set", !0), c = e("WeakMap.prototype.has", !0), l = e("WeakMap.prototype.delete", !0);
  return du = o ? (
    /** @type {Exclude<import('.'), false>} */
    function() {
      var f, d, h = {
        assert: function(p) {
          if (!h.has(p))
            throw new i("Side channel does not contain " + n(p));
        },
        delete: function(p) {
          if (o && p && (typeof p == "object" || typeof p == "function")) {
            if (f)
              return l(f, p);
          } else if (r && d)
            return d.delete(p);
          return !1;
        },
        get: function(p) {
          return o && p && (typeof p == "object" || typeof p == "function") && f ? a(f, p) : d && d.get(p);
        },
        has: function(p) {
          return o && p && (typeof p == "object" || typeof p == "function") && f ? c(f, p) : !!d && d.has(p);
        },
        set: function(p, m) {
          o && p && (typeof p == "object" || typeof p == "function") ? (f || (f = new o()), s(f, p, m)) : r && (d || (d = r()), d.set(p, m));
        }
      };
      return h;
    }
  ) : r, du;
}
var hu, Vy;
function GD() {
  if (Vy) return hu;
  Vy = 1;
  var t = /* @__PURE__ */ Jt(), e = /* @__PURE__ */ nc(), n = v4(), r = XD(), i = D4(), o = i || r || n;
  return hu = function() {
    var s, c = {
      assert: function(l) {
        if (!c.has(l))
          throw new t("Side channel does not contain " + e(l));
      },
      delete: function(l) {
        return !!s && s.delete(l);
      },
      get: function(l) {
        return s && s.get(l);
      },
      has: function(l) {
        return !!s && s.has(l);
      },
      set: function(l, u) {
        s || (s = o()), s.set(l, u);
      }
    };
    return c;
  }, hu;
}
var pu, Hy;
function x4() {
  if (Hy) return pu;
  Hy = 1;
  var t = /* @__PURE__ */ Jh(), e = GD()(), n = /* @__PURE__ */ Jt(), r = {
    assert: function(i, o) {
      if (!i || typeof i != "object" && typeof i != "function")
        throw new n("`O` is not an object");
      if (typeof o != "string")
        throw new n("`slot` must be a string");
      if (e.assert(i), !r.has(i, o))
        throw new n("`" + o + "` is not present on `O`");
    },
    get: function(i, o) {
      if (!i || typeof i != "object" && typeof i != "function")
        throw new n("`O` is not an object");
      if (typeof o != "string")
        throw new n("`slot` must be a string");
      var a = e.get(i);
      return a && a[
        /** @type {SaltedInternalSlot} */
        "$" + o
      ];
    },
    has: function(i, o) {
      if (!i || typeof i != "object" && typeof i != "function")
        throw new n("`O` is not an object");
      if (typeof o != "string")
        throw new n("`slot` must be a string");
      var a = e.get(i);
      return !!a && t(
        a,
        /** @type {SaltedInternalSlot} */
        "$" + o
      );
    },
    set: function(i, o, a) {
      if (!i || typeof i != "object" && typeof i != "function")
        throw new n("`O` is not an object");
      if (typeof o != "string")
        throw new n("`slot` must be a string");
      var s = e.get(i);
      s || (s = {}, e.set(i, s)), s[
        /** @type {SaltedInternalSlot} */
        "$" + o
      ] = a;
    }
  };
  return Object.freeze && Object.freeze(r), pu = r, pu;
}
var gu, Xy;
function w4() {
  if (Xy) return gu;
  Xy = 1;
  var t = x4(), e = /* @__PURE__ */ zh(), n = typeof StopIteration == "object" ? StopIteration : null;
  return gu = function(i) {
    if (!n)
      throw new e("this environment lacks StopIteration");
    t.set(i, "[[Done]]", !1);
    var o = {
      next: (
        /** @type {() => IteratorResult<T>} */
        function() {
          var s = (
            /** @type {typeof origIterator} */
            t.get(this, "[[Iterator]]")
          ), c = !!t.get(s, "[[Done]]");
          try {
            return {
              done: c,
              // eslint-disable-next-line no-extra-parens
              value: c ? void 0 : (
                /** @type {T} */
                s.next()
              )
            };
          } catch (l) {
            if (t.set(s, "[[Done]]", !0), l !== n)
              throw l;
            return {
              done: !0,
              value: void 0
            };
          }
        }
      )
    };
    return t.set(o, "[[Iterator]]", i), o;
  }, gu;
}
var mu, Gy;
function KD() {
  if (Gy) return mu;
  Gy = 1;
  var t = {}.toString;
  return mu = Array.isArray || function(e) {
    return t.call(e) == "[object Array]";
  }, mu;
}
var yu, Ky;
function JD() {
  if (Ky) return yu;
  Ky = 1;
  var t = /* @__PURE__ */ yt(), e = t("String.prototype.valueOf"), n = function(s) {
    try {
      return e(s), !0;
    } catch {
      return !1;
    }
  }, r = t("Object.prototype.toString"), i = "[object String]", o = Xr()();
  return yu = function(s) {
    return typeof s == "string" ? !0 : !s || typeof s != "object" ? !1 : o ? n(s) : r(s) === i;
  }, yu;
}
var bu, Jy;
function ZD() {
  if (Jy) return bu;
  Jy = 1;
  var t = typeof Map == "function" && Map.prototype ? Map : null, e = typeof Set == "function" && Set.prototype ? Set : null, n;
  t || (n = function(a) {
    return !1;
  });
  var r = t ? Map.prototype.has : null, i = e ? Set.prototype.has : null;
  return !n && !r && (n = function(a) {
    return !1;
  }), bu = n || function(a) {
    if (!a || typeof a != "object")
      return !1;
    try {
      if (r.call(a), i)
        try {
          i.call(a);
        } catch {
          return !0;
        }
      return a instanceof t;
    } catch {
    }
    return !1;
  }, bu;
}
var vu, Zy;
function YD() {
  if (Zy) return vu;
  Zy = 1;
  var t = typeof Map == "function" && Map.prototype ? Map : null, e = typeof Set == "function" && Set.prototype ? Set : null, n;
  e || (n = function(a) {
    return !1;
  });
  var r = t ? Map.prototype.has : null, i = e ? Set.prototype.has : null;
  return !n && !i && (n = function(a) {
    return !1;
  }), vu = n || function(a) {
    if (!a || typeof a != "object")
      return !1;
    try {
      if (i.call(a), r)
        try {
          r.call(a);
        } catch {
          return !0;
        }
      return a instanceof e;
    } catch {
    }
    return !1;
  }, vu;
}
var Yy;
function _4() {
  if (Yy) return Ii.exports;
  Yy = 1;
  var t = /* @__PURE__ */ HD(), e = /* @__PURE__ */ w4();
  if (Hh()() || tc()()) {
    var n = Symbol.iterator;
    Ii.exports = function(C) {
      if (C != null && typeof C[n] < "u")
        return C[n]();
      if (t(C))
        return Array.prototype[n].call(C);
    };
  } else {
    var r = KD(), i = JD(), o = /* @__PURE__ */ qn(), a = o("%Map%", !0), s = o("%Set%", !0), c = jD(), l = c("Array.prototype.push"), u = c("String.prototype.charCodeAt"), f = c("String.prototype.slice"), d = function(C, R) {
      var j = C.length;
      if (R + 1 >= j)
        return R + 1;
      var T = u(C, R);
      if (T < 55296 || T > 56319)
        return R + 1;
      var k = u(C, R + 1);
      return k < 56320 || k > 57343 ? R + 1 : R + 2;
    }, h = function(C) {
      var R = 0;
      return {
        next: function() {
          var T = R >= C.length, k;
          return T || (k = C[R], R += 1), {
            done: T,
            value: k
          };
        }
      };
    }, p = function(C, R) {
      if (r(C) || t(C))
        return h(C);
      if (i(C)) {
        var j = 0;
        return {
          next: function() {
            var k = d(C, j), w = f(C, j, k);
            return j = k, {
              done: k > C.length,
              value: w
            };
          }
        };
      }
      if (R && typeof C["_es6-shim iterator_"] < "u")
        return C["_es6-shim iterator_"]();
    };
    if (!a && !s)
      Ii.exports = function(C) {
        if (C != null)
          return p(C, !0);
      };
    else {
      var m = /* @__PURE__ */ ZD(), g = /* @__PURE__ */ YD(), y = c("Map.prototype.forEach", !0), b = c("Set.prototype.forEach", !0);
      if (typeof process > "u" || !process.versions || !process.versions.node)
        var v = c("Map.prototype.iterator", !0), _ = c("Set.prototype.iterator", !0);
      var x = c("Map.prototype.@@iterator", !0) || c("Map.prototype._es6-shim iterator_", !0), E = c("Set.prototype.@@iterator", !0) || c("Set.prototype._es6-shim iterator_", !0), S = function(C) {
        if (m(C)) {
          if (v)
            return e(v(C));
          if (x)
            return x(C);
          if (y) {
            var R = [];
            return y(C, function(T, k) {
              l(R, [k, T]);
            }), h(R);
          }
        }
        if (g(C)) {
          if (_)
            return e(_(C));
          if (E)
            return E(C);
          if (b) {
            var j = [];
            return b(C, function(T) {
              l(j, T);
            }), h(j);
          }
        }
      };
      Ii.exports = function(C) {
        return S(C) || p(C);
      };
    }
  }
  return Ii.exports;
}
var Du, Qy;
function QD() {
  if (Qy) return Du;
  Qy = 1;
  var t = function(e) {
    return e !== e;
  };
  return Du = function(n, r) {
    return n === 0 && r === 0 ? 1 / n === 1 / r : !!(n === r || t(n) && t(r));
  }, Du;
}
var xu, e1;
function ex() {
  if (e1) return xu;
  e1 = 1;
  var t = QD();
  return xu = function() {
    return typeof Object.is == "function" ? Object.is : t;
  }, xu;
}
var wu, t1;
function T4() {
  if (t1) return wu;
  t1 = 1;
  var t = ex(), e = Hr();
  return wu = function() {
    var r = t();
    return e(Object, { is: r }, {
      is: function() {
        return Object.is !== r;
      }
    }), r;
  }, wu;
}
var _u, n1;
function E4() {
  if (n1) return _u;
  n1 = 1;
  var t = Hr(), e = Ai(), n = QD(), r = ex(), i = T4(), o = e(r(), Object);
  return t(o, {
    getPolyfill: r,
    implementation: n,
    shim: i
  }), _u = o, _u;
}
var Tu, r1;
function tx() {
  if (r1) return Tu;
  r1 = 1;
  var t = Ai(), e = /* @__PURE__ */ yt(), n = /* @__PURE__ */ qn(), r = n("%ArrayBuffer%", !0), i = e("ArrayBuffer.prototype.byteLength", !0), o = e("Object.prototype.toString"), a = !!r && !i && new r(0).slice, s = !!a && t(a);
  return Tu = i || s ? function(l) {
    if (!l || typeof l != "object")
      return !1;
    try {
      return i ? i(l) : s(l, 0), !0;
    } catch {
      return !1;
    }
  } : r ? function(l) {
    return o(l) === "[object ArrayBuffer]";
  } : function(l) {
    return !1;
  }, Tu;
}
var Eu, i1;
function C4() {
  if (i1) return Eu;
  i1 = 1;
  var t = /* @__PURE__ */ yt(), e = t("Date.prototype.getDay"), n = function(s) {
    try {
      return e(s), !0;
    } catch {
      return !1;
    }
  }, r = t("Object.prototype.toString"), i = "[object Date]", o = Xr()();
  return Eu = function(s) {
    return typeof s != "object" || s === null ? !1 : o ? n(s) : r(s) === i;
  }, Eu;
}
var Cu, o1;
function nx() {
  if (o1) return Cu;
  o1 = 1;
  var t = /* @__PURE__ */ yt(), e = Xr()(), n = /* @__PURE__ */ Jh(), r = /* @__PURE__ */ Vr(), i;
  if (e) {
    var o = t("RegExp.prototype.exec"), a = {}, s = function() {
      throw a;
    }, c = {
      toString: s,
      valueOf: s
    };
    typeof Symbol.toPrimitive == "symbol" && (c[Symbol.toPrimitive] = s), i = function(d) {
      if (!d || typeof d != "object")
        return !1;
      var h = (
        /** @type {NonNullable<typeof gOPD>} */
        r(
          /** @type {{ lastIndex?: unknown }} */
          d,
          "lastIndex"
        )
      ), p = h && n(h, "value");
      if (!p)
        return !1;
      try {
        o(
          d,
          /** @type {string} */
          /** @type {unknown} */
          c
        );
      } catch (m) {
        return m === a;
      }
    };
  } else {
    var l = t("Object.prototype.toString"), u = "[object RegExp]";
    i = function(d) {
      return !d || typeof d != "object" && typeof d != "function" ? !1 : l(d) === u;
    };
  }
  return Cu = i, Cu;
}
var Su, a1;
function S4() {
  if (a1) return Su;
  a1 = 1;
  var t = /* @__PURE__ */ yt(), e = t("SharedArrayBuffer.prototype.byteLength", !0);
  return Su = e ? function(r) {
    if (!r || typeof r != "object")
      return !1;
    try {
      return e(r), !0;
    } catch {
      return !1;
    }
  } : function(r) {
    return !1;
  }, Su;
}
var Au, s1;
function A4() {
  if (s1) return Au;
  s1 = 1;
  var t = /* @__PURE__ */ yt(), e = t("Number.prototype.toString"), n = function(s) {
    try {
      return e(s), !0;
    } catch {
      return !1;
    }
  }, r = t("Object.prototype.toString"), i = "[object Number]", o = Xr()();
  return Au = function(s) {
    return typeof s == "number" ? !0 : !s || typeof s != "object" ? !1 : o ? n(s) : r(s) === i;
  }, Au;
}
var Uu, c1;
function U4() {
  if (c1) return Uu;
  c1 = 1;
  var t = /* @__PURE__ */ yt(), e = t("Boolean.prototype.toString"), n = t("Object.prototype.toString"), r = function(s) {
    try {
      return e(s), !0;
    } catch {
      return !1;
    }
  }, i = "[object Boolean]", o = Xr()();
  return Uu = function(s) {
    return typeof s == "boolean" ? !0 : s === null || typeof s != "object" ? !1 : o ? r(s) : n(s) === i;
  }, Uu;
}
var ea = { exports: {} }, ku, l1;
function k4() {
  if (l1) return ku;
  l1 = 1;
  var t = /* @__PURE__ */ yt(), e = nx(), n = t("RegExp.prototype.exec"), r = /* @__PURE__ */ Jt();
  return ku = function(o) {
    if (!e(o))
      throw new r("`regex` must be a RegExp");
    return function(s) {
      return n(o, s) !== null;
    };
  }, ku;
}
var u1;
function F4() {
  if (u1) return ea.exports;
  u1 = 1;
  var t = /* @__PURE__ */ yt(), e = t("Object.prototype.toString"), n = Hh()(), r = /* @__PURE__ */ k4();
  if (n) {
    var i = t("Symbol.prototype.toString"), o = r(/^Symbol\(.*\)$/), a = function(c) {
      return typeof c.valueOf() != "symbol" ? !1 : o(i(c));
    };
    ea.exports = function(c) {
      if (typeof c == "symbol")
        return !0;
      if (!c || typeof c != "object" || e(c) !== "[object Symbol]")
        return !1;
      try {
        return a(c);
      } catch {
        return !1;
      }
    };
  } else
    ea.exports = function(c) {
      return !1;
    };
  return ea.exports;
}
var ta = { exports: {} }, Fu, f1;
function O4() {
  if (f1) return Fu;
  f1 = 1;
  var t = typeof BigInt < "u" && BigInt;
  return Fu = function() {
    return typeof t == "function" && typeof BigInt == "function" && typeof t(42) == "bigint" && typeof BigInt(42) == "bigint";
  }, Fu;
}
var d1;
function R4() {
  if (d1) return ta.exports;
  d1 = 1;
  var t = O4()();
  if (t) {
    var e = BigInt.prototype.valueOf, n = function(i) {
      try {
        return e.call(i), !0;
      } catch {
      }
      return !1;
    };
    ta.exports = function(i) {
      return i === null || typeof i > "u" || typeof i == "boolean" || typeof i == "string" || typeof i == "number" || typeof i == "symbol" || typeof i == "function" ? !1 : typeof i == "bigint" ? !0 : n(i);
    };
  } else
    ta.exports = function(i) {
      return !1;
    };
  return ta.exports;
}
var Ou, h1;
function N4() {
  if (h1) return Ou;
  h1 = 1;
  var t = JD(), e = A4(), n = U4(), r = F4(), i = R4();
  return Ou = function(a) {
    if (a == null || typeof a != "object" && typeof a != "function")
      return null;
    if (t(a))
      return "String";
    if (e(a))
      return "Number";
    if (n(a))
      return "Boolean";
    if (r(a))
      return "Symbol";
    if (i(a))
      return "BigInt";
  }, Ou;
}
var Ru, p1;
function B4() {
  if (p1) return Ru;
  p1 = 1;
  var t = typeof WeakMap == "function" && WeakMap.prototype ? WeakMap : null, e = typeof WeakSet == "function" && WeakSet.prototype ? WeakSet : null, n;
  t || (n = function(a) {
    return !1;
  });
  var r = t ? t.prototype.has : null, i = e ? e.prototype.has : null;
  return !n && !r && (n = function(a) {
    return !1;
  }), Ru = n || function(a) {
    if (!a || typeof a != "object")
      return !1;
    try {
      if (r.call(a, r), i)
        try {
          i.call(a, i);
        } catch {
          return !0;
        }
      return a instanceof t;
    } catch {
    }
    return !1;
  }, Ru;
}
var na = { exports: {} }, g1;
function I4() {
  if (g1) return na.exports;
  g1 = 1;
  var t = /* @__PURE__ */ qn(), e = /* @__PURE__ */ yt(), n = t("%WeakSet%", !0), r = e("WeakSet.prototype.has", !0);
  if (r) {
    var i = e("WeakMap.prototype.has", !0);
    na.exports = function(a) {
      if (!a || typeof a != "object")
        return !1;
      try {
        if (r(a, r), i)
          try {
            i(a, i);
          } catch {
            return !0;
          }
        return a instanceof n;
      } catch {
      }
      return !1;
    };
  } else
    na.exports = function(a) {
      return !1;
    };
  return na.exports;
}
var Nu, m1;
function M4() {
  if (m1) return Nu;
  m1 = 1;
  var t = /* @__PURE__ */ ZD(), e = /* @__PURE__ */ YD(), n = B4(), r = /* @__PURE__ */ I4();
  return Nu = function(o) {
    if (o && typeof o == "object") {
      if (t(o))
        return "Map";
      if (e(o))
        return "Set";
      if (n(o))
        return "WeakMap";
      if (r(o))
        return "WeakSet";
    }
    return !1;
  }, Nu;
}
var Bu, y1;
function W4() {
  if (y1) return Bu;
  y1 = 1;
  var t = Function.prototype.toString, e = typeof Reflect == "object" && Reflect !== null && Reflect.apply, n, r;
  if (typeof e == "function" && typeof Object.defineProperty == "function")
    try {
      n = Object.defineProperty({}, "length", {
        get: function() {
          throw r;
        }
      }), r = {}, e(function() {
        throw 42;
      }, null, n);
    } catch (b) {
      b !== r && (e = null);
    }
  else
    e = null;
  var i = /^\s*class\b/, o = function(v) {
    try {
      var _ = t.call(v);
      return i.test(_);
    } catch {
      return !1;
    }
  }, a = function(v) {
    try {
      return o(v) ? !1 : (t.call(v), !0);
    } catch {
      return !1;
    }
  }, s = Object.prototype.toString, c = "[object Object]", l = "[object Function]", u = "[object GeneratorFunction]", f = "[object HTMLAllCollection]", d = "[object HTML document.all class]", h = "[object HTMLCollection]", p = typeof Symbol == "function" && !!Symbol.toStringTag, m = !(0 in [,]), g = function() {
    return !1;
  };
  if (typeof document == "object") {
    var y = document.all;
    s.call(y) === s.call(document.all) && (g = function(v) {
      if ((m || !v) && (typeof v > "u" || typeof v == "object"))
        try {
          var _ = s.call(v);
          return (_ === f || _ === d || _ === h || _ === c) && v("") == null;
        } catch {
        }
      return !1;
    });
  }
  return Bu = e ? function(v) {
    if (g(v))
      return !0;
    if (!v || typeof v != "function" && typeof v != "object")
      return !1;
    try {
      e(v, null, n);
    } catch (_) {
      if (_ !== r)
        return !1;
    }
    return !o(v) && a(v);
  } : function(v) {
    if (g(v))
      return !0;
    if (!v || typeof v != "function" && typeof v != "object")
      return !1;
    if (p)
      return a(v);
    if (o(v))
      return !1;
    var _ = s.call(v);
    return _ !== l && _ !== u && !/^\[object HTML/.test(_) ? !1 : a(v);
  }, Bu;
}
var Iu, b1;
function L4() {
  if (b1) return Iu;
  b1 = 1;
  var t = W4(), e = Object.prototype.toString, n = Object.prototype.hasOwnProperty, r = function(c, l, u) {
    for (var f = 0, d = c.length; f < d; f++)
      n.call(c, f) && (u == null ? l(c[f], f, c) : l.call(u, c[f], f, c));
  }, i = function(c, l, u) {
    for (var f = 0, d = c.length; f < d; f++)
      u == null ? l(c.charAt(f), f, c) : l.call(u, c.charAt(f), f, c);
  }, o = function(c, l, u) {
    for (var f in c)
      n.call(c, f) && (u == null ? l(c[f], f, c) : l.call(u, c[f], f, c));
  };
  function a(s) {
    return e.call(s) === "[object Array]";
  }
  return Iu = function(c, l, u) {
    if (!t(l))
      throw new TypeError("iterator must be a function");
    var f;
    arguments.length >= 3 && (f = u), a(c) ? r(c, l, f) : typeof c == "string" ? i(c, l, f) : o(c, l, f);
  }, Iu;
}
var Mu, v1;
function P4() {
  return v1 || (v1 = 1, Mu = [
    "Float16Array",
    "Float32Array",
    "Float64Array",
    "Int8Array",
    "Int16Array",
    "Int32Array",
    "Uint8Array",
    "Uint8ClampedArray",
    "Uint16Array",
    "Uint32Array",
    "BigInt64Array",
    "BigUint64Array"
  ]), Mu;
}
var Wu, D1;
function q4() {
  if (D1) return Wu;
  D1 = 1;
  var t = /* @__PURE__ */ P4(), e = typeof globalThis > "u" ? Ht : globalThis;
  return Wu = function() {
    for (var r = [], i = 0; i < t.length; i++)
      typeof e[t[i]] == "function" && (r[r.length] = t[i]);
    return r;
  }, Wu;
}
var Lu, x1;
function z4() {
  if (x1) return Lu;
  x1 = 1;
  var t = L4(), e = /* @__PURE__ */ q4(), n = Ai(), r = /* @__PURE__ */ yt(), i = /* @__PURE__ */ Vr(), o = r("Object.prototype.toString"), a = Xr()(), s = typeof globalThis > "u" ? Ht : globalThis, c = e(), l = r("String.prototype.slice"), u = Object.getPrototypeOf, f = r("Array.prototype.indexOf", !0) || function(g, y) {
    for (var b = 0; b < g.length; b += 1)
      if (g[b] === y)
        return b;
    return -1;
  }, d = { __proto__: null };
  a && i && u ? t(c, function(m) {
    var g = new s[m]();
    if (Symbol.toStringTag in g) {
      var y = u(g), b = i(y, Symbol.toStringTag);
      if (!b) {
        var v = u(y);
        b = i(v, Symbol.toStringTag);
      }
      d["$" + m] = n(b.get);
    }
  }) : t(c, function(m) {
    var g = new s[m](), y = g.slice || g.set;
    y && (d["$" + m] = n(y));
  });
  var h = function(g) {
    var y = !1;
    return t(
      // eslint-disable-next-line no-extra-parens
      /** @type {Record<`\$${TypedArrayName}`, Getter>} */
      /** @type {any} */
      d,
      /** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */
      function(b, v) {
        if (!y)
          try {
            "$" + b(g) === v && (y = l(v, 1));
          } catch {
          }
      }
    ), y;
  }, p = function(g) {
    var y = !1;
    return t(
      // eslint-disable-next-line no-extra-parens
      /** @type {Record<`\$${TypedArrayName}`, Getter>} */
      /** @type {any} */
      d,
      /** @type {(getter: typeof cache, name: `\$${import('.').TypedArrayName}`) => void} */
      function(b, v) {
        if (!y)
          try {
            b(g), y = l(v, 1);
          } catch {
          }
      }
    ), y;
  };
  return Lu = function(g) {
    if (!g || typeof g != "object")
      return !1;
    if (!a) {
      var y = l(o(g), 8, -1);
      return f(c, y) > -1 ? y : y !== "Object" ? !1 : p(g);
    }
    return i ? h(g) : null;
  }, Lu;
}
var Pu, w1;
function j4() {
  if (w1) return Pu;
  w1 = 1;
  var t = /* @__PURE__ */ yt(), e = t("ArrayBuffer.prototype.byteLength", !0), n = /* @__PURE__ */ tx();
  return Pu = function(i) {
    return n(i) ? e ? e(i) : i.byteLength : NaN;
  }, Pu;
}
var qu, _1;
function $4() {
  if (_1) return qu;
  _1 = 1;
  var t = f4(), e = jD(), n = g4(), r = /* @__PURE__ */ qn(), i = _4(), o = GD(), a = E4(), s = /* @__PURE__ */ HD(), c = KD(), l = /* @__PURE__ */ tx(), u = /* @__PURE__ */ C4(), f = nx(), d = /* @__PURE__ */ S4(), h = qh(), p = N4(), m = /* @__PURE__ */ M4(), g = /* @__PURE__ */ z4(), y = /* @__PURE__ */ j4(), b = e("SharedArrayBuffer.prototype.byteLength", !0), v = e("Date.prototype.getTime"), _ = Object.getPrototypeOf, x = e("Object.prototype.toString"), E = r("%Set%", !0), S = e("Map.prototype.has", !0), U = e("Map.prototype.get", !0), C = e("Map.prototype.size", !0), R = e("Set.prototype.add", !0), j = e("Set.prototype.delete", !0), T = e("Set.prototype.has", !0), k = e("Set.prototype.size", !0);
  function w(G, J, ce, he) {
    for (var fe = i(G), me; (me = fe.next()) && !me.done; )
      if (P(J, me.value, ce, he))
        return j(G, me.value), !0;
    return !1;
  }
  function $(G) {
    if (typeof G > "u")
      return null;
    if (typeof G != "object")
      return typeof G == "symbol" ? !1 : typeof G == "string" || typeof G == "number" ? +G == +G : !0;
  }
  function N(G, J, ce, he, fe, me) {
    var de = $(ce);
    if (de != null)
      return de;
    var pe = U(J, de), ye = t({}, fe, { strict: !1 });
    return typeof pe > "u" && !S(J, de) || !P(he, pe, ye, me) ? !1 : !S(G, de) && P(he, pe, ye, me);
  }
  function M(G, J, ce) {
    var he = $(ce);
    return he ?? (T(J, he) && !T(G, he));
  }
  function K(G, J, ce, he, fe, me) {
    for (var de = i(G), pe, ye; (pe = de.next()) && !pe.done; )
      if (ye = pe.value, // eslint-disable-next-line no-use-before-define
      P(ce, ye, fe, me) && P(he, U(J, ye), fe, me))
        return j(G, ye), !0;
    return !1;
  }
  function P(G, J, ce, he) {
    var fe = ce || {};
    if (fe.strict ? a(G, J) : G === J)
      return !0;
    var me = p(G), de = p(J);
    if (me !== de)
      return !1;
    if (!G || !J || typeof G != "object" && typeof J != "object")
      return fe.strict ? a(G, J) : G == J;
    var pe = he.has(G), ye = he.has(J), be;
    if (pe && ye) {
      if (he.get(G) === he.get(J))
        return !0;
    } else
      be = {};
    return pe || he.set(G, be), ye || he.set(J, be), se(G, J, fe, he);
  }
  function te(G) {
    return !G || typeof G != "object" || typeof G.length != "number" || typeof G.copy != "function" || typeof G.slice != "function" || G.length > 0 && typeof G[0] != "number" ? !1 : !!(G.constructor && G.constructor.isBuffer && G.constructor.isBuffer(G));
  }
  function W(G, J, ce, he) {
    if (k(G) !== k(J))
      return !1;
    for (var fe = i(G), me = i(J), de, pe, ye; (de = fe.next()) && !de.done; )
      if (de.value && typeof de.value == "object")
        ye || (ye = new E()), R(ye, de.value);
      else if (!T(J, de.value)) {
        if (ce.strict || !M(G, J, de.value))
          return !1;
        ye || (ye = new E()), R(ye, de.value);
      }
    if (ye) {
      for (; (pe = me.next()) && !pe.done; )
        if (pe.value && typeof pe.value == "object") {
          if (!w(ye, pe.value, ce.strict, he))
            return !1;
        } else if (!ce.strict && !T(G, pe.value) && !w(ye, pe.value, ce.strict, he))
          return !1;
      return k(ye) === 0;
    }
    return !0;
  }
  function B(G, J, ce, he) {
    if (C(G) !== C(J))
      return !1;
    for (var fe = i(G), me = i(J), de, pe, ye, be, D, V; (de = fe.next()) && !de.done; )
      if (be = de.value[0], D = de.value[1], be && typeof be == "object")
        ye || (ye = new E()), R(ye, be);
      else if (V = U(J, be), typeof V > "u" && !S(J, be) || !P(D, V, ce, he)) {
        if (ce.strict || !N(G, J, be, D, ce, he))
          return !1;
        ye || (ye = new E()), R(ye, be);
      }
    if (ye) {
      for (; (pe = me.next()) && !pe.done; )
        if (be = pe.value[0], V = pe.value[1], be && typeof be == "object") {
          if (!K(ye, G, be, V, ce, he))
            return !1;
        } else if (!ce.strict && (!G.has(be) || !P(U(G, be), V, ce, he)) && !K(ye, G, be, V, t({}, ce, { strict: !1 }), he))
          return !1;
      return k(ye) === 0;
    }
    return !0;
  }
  function se(G, J, ce, he) {
    var fe, me;
    if (typeof G != typeof J || G == null || J == null || x(G) !== x(J) || s(G) !== s(J))
      return !1;
    var de = c(G), pe = c(J);
    if (de !== pe)
      return !1;
    var ye = G instanceof Error, be = J instanceof Error;
    if (ye !== be || (ye || be) && (G.name !== J.name || G.message !== J.message))
      return !1;
    var D = f(G), V = f(J);
    if (D !== V || (D || V) && (G.source !== J.source || n(G) !== n(J)))
      return !1;
    var q = u(G), I = u(J);
    if (q !== I || (q || I) && v(G) !== v(J) || ce.strict && _ && _(G) !== _(J))
      return !1;
    var O = g(G), z = g(J);
    if (O !== z)
      return !1;
    if (O || z) {
      if (G.length !== J.length)
        return !1;
      for (fe = 0; fe < G.length; fe++)
        if (G[fe] !== J[fe])
          return !1;
      return !0;
    }
    var ie = te(G), ne = te(J);
    if (ie !== ne)
      return !1;
    if (ie || ne) {
      if (G.length !== J.length)
        return !1;
      for (fe = 0; fe < G.length; fe++)
        if (G[fe] !== J[fe])
          return !1;
      return !0;
    }
    var Z = l(G), L = l(J);
    if (Z !== L)
      return !1;
    if (Z || L)
      return y(G) !== y(J) ? !1 : typeof Uint8Array == "function" && P(new Uint8Array(G), new Uint8Array(J), ce, he);
    var X = d(G), Y = d(J);
    if (X !== Y)
      return !1;
    if (X || Y)
      return b(G) !== b(J) ? !1 : typeof Uint8Array == "function" && P(new Uint8Array(G), new Uint8Array(J), ce, he);
    if (typeof G != typeof J)
      return !1;
    var oe = h(G), De = h(J);
    if (oe.length !== De.length)
      return !1;
    for (oe.sort(), De.sort(), fe = oe.length - 1; fe >= 0; fe--)
      if (oe[fe] != De[fe])
        return !1;
    for (fe = oe.length - 1; fe >= 0; fe--)
      if (me = oe[fe], !P(G[me], J[me], ce, he))
        return !1;
    var Te = m(G), Se = m(J);
    return Te !== Se ? !1 : Te === "Set" || Se === "Set" ? W(G, J, ce, he) : Te === "Map" ? B(G, J, ce, he) : !0;
  }
  return qu = function(J, ce, he) {
    return P(J, ce, he, o());
  }, qu;
}
var V4 = $4();
const tN = /* @__PURE__ */ RD(V4);
var qt = {}, Zh = "1.13.7", T1 = typeof self == "object" && self.self === self && self || typeof global == "object" && global.global === global && global || Function("return this")() || {}, rc = Array.prototype, Yh = Object.prototype, E1 = typeof Symbol < "u" ? Symbol.prototype : null, H4 = rc.push, Lo = rc.slice, To = Yh.toString, X4 = Yh.hasOwnProperty, rx = typeof ArrayBuffer < "u", G4 = typeof DataView < "u", K4 = Array.isArray, C1 = Object.keys, S1 = Object.create, A1 = rx && ArrayBuffer.isView, J4 = isNaN, Z4 = isFinite, ix = !{ toString: null }.propertyIsEnumerable("toString"), U1 = [
  "valueOf",
  "isPrototypeOf",
  "toString",
  "propertyIsEnumerable",
  "hasOwnProperty",
  "toLocaleString"
], Y4 = Math.pow(2, 53) - 1;
function Tt(t, e) {
  return e = e == null ? t.length - 1 : +e, function() {
    for (var n = Math.max(arguments.length - e, 0), r = Array(n), i = 0; i < n; i++)
      r[i] = arguments[i + e];
    switch (e) {
      case 0:
        return t.call(this, r);
      case 1:
        return t.call(this, arguments[0], r);
      case 2:
        return t.call(this, arguments[0], arguments[1], r);
    }
    var o = Array(e + 1);
    for (i = 0; i < e; i++)
      o[i] = arguments[i];
    return o[e] = r, t.apply(this, o);
  };
}
function mr(t) {
  var e = typeof t;
  return e === "function" || e === "object" && !!t;
}
function ox(t) {
  return t === null;
}
function Qh(t) {
  return t === void 0;
}
function ep(t) {
  return t === !0 || t === !1 || To.call(t) === "[object Boolean]";
}
function ax(t) {
  return !!(t && t.nodeType === 1);
}
function bt(t) {
  var e = "[object " + t + "]";
  return function(n) {
    return To.call(n) === e;
  };
}
const ic = bt("String"), tp = bt("Number"), sx = bt("Date"), cx = bt("RegExp"), lx = bt("Error"), np = bt("Symbol"), rp = bt("ArrayBuffer");
var ux = bt("Function"), Q4 = T1.document && T1.document.childNodes;
typeof /./ != "function" && typeof Int8Array != "object" && typeof Q4 != "function" && (ux = function(t) {
  return typeof t == "function" || !1;
});
const gt = ux, fx = bt("Object");
var dx = G4 && (!/\[native code\]/.test(String(DataView)) || fx(new DataView(new ArrayBuffer(8)))), ip = typeof Map < "u" && fx(/* @__PURE__ */ new Map()), ek = bt("DataView");
function tk(t) {
  return t != null && gt(t.getInt8) && rp(t.buffer);
}
const Eo = dx ? tk : ek, yr = K4 || bt("Array");
function br(t, e) {
  return t != null && X4.call(t, e);
}
var $d = bt("Arguments");
(function() {
  $d(arguments) || ($d = function(t) {
    return br(t, "callee");
  });
})();
const oc = $d;
function hx(t) {
  return !np(t) && Z4(t) && !isNaN(parseFloat(t));
}
function op(t) {
  return tp(t) && J4(t);
}
function ap(t) {
  return function() {
    return t;
  };
}
function px(t) {
  return function(e) {
    var n = t(e);
    return typeof n == "number" && n >= 0 && n <= Y4;
  };
}
function gx(t) {
  return function(e) {
    return e == null ? void 0 : e[t];
  };
}
const Ms = gx("byteLength"), nk = px(Ms);
var rk = /\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;
function ik(t) {
  return A1 ? A1(t) && !Eo(t) : nk(t) && rk.test(To.call(t));
}
const sp = rx ? ik : ap(!1), Ut = gx("length");
function ok(t) {
  for (var e = {}, n = t.length, r = 0; r < n; ++r) e[t[r]] = !0;
  return {
    contains: function(i) {
      return e[i] === !0;
    },
    push: function(i) {
      return e[i] = !0, t.push(i);
    }
  };
}
function mx(t, e) {
  e = ok(e);
  var n = U1.length, r = t.constructor, i = gt(r) && r.prototype || Yh, o = "constructor";
  for (br(t, o) && !e.contains(o) && e.push(o); n--; )
    o = U1[n], o in t && t[o] !== i[o] && !e.contains(o) && e.push(o);
}
function rt(t) {
  if (!mr(t)) return [];
  if (C1) return C1(t);
  var e = [];
  for (var n in t) br(t, n) && e.push(n);
  return ix && mx(t, e), e;
}
function yx(t) {
  if (t == null) return !0;
  var e = Ut(t);
  return typeof e == "number" && (yr(t) || ic(t) || oc(t)) ? e === 0 : Ut(rt(t)) === 0;
}
function cp(t, e) {
  var n = rt(e), r = n.length;
  if (t == null) return !r;
  for (var i = Object(t), o = 0; o < r; o++) {
    var a = n[o];
    if (e[a] !== i[a] || !(a in i)) return !1;
  }
  return !0;
}
function ze(t) {
  if (t instanceof ze) return t;
  if (!(this instanceof ze)) return new ze(t);
  this._wrapped = t;
}
ze.VERSION = Zh;
ze.prototype.value = function() {
  return this._wrapped;
};
ze.prototype.valueOf = ze.prototype.toJSON = ze.prototype.value;
ze.prototype.toString = function() {
  return String(this._wrapped);
};
function k1(t) {
  return new Uint8Array(
    t.buffer || t,
    t.byteOffset || 0,
    Ms(t)
  );
}
var F1 = "[object DataView]";
function Vd(t, e, n, r) {
  if (t === e) return t !== 0 || 1 / t === 1 / e;
  if (t == null || e == null) return !1;
  if (t !== t) return e !== e;
  var i = typeof t;
  return i !== "function" && i !== "object" && typeof e != "object" ? !1 : bx(t, e, n, r);
}
function bx(t, e, n, r) {
  t instanceof ze && (t = t._wrapped), e instanceof ze && (e = e._wrapped);
  var i = To.call(t);
  if (i !== To.call(e)) return !1;
  if (dx && i == "[object Object]" && Eo(t)) {
    if (!Eo(e)) return !1;
    i = F1;
  }
  switch (i) {
    // These types are compared by value.
    case "[object RegExp]":
    // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
    case "[object String]":
      return "" + t == "" + e;
    case "[object Number]":
      return +t != +t ? +e != +e : +t == 0 ? 1 / +t === 1 / e : +t == +e;
    case "[object Date]":
    case "[object Boolean]":
      return +t == +e;
    case "[object Symbol]":
      return E1.valueOf.call(t) === E1.valueOf.call(e);
    case "[object ArrayBuffer]":
    case F1:
      return bx(k1(t), k1(e), n, r);
  }
  var o = i === "[object Array]";
  if (!o && sp(t)) {
    var a = Ms(t);
    if (a !== Ms(e)) return !1;
    if (t.buffer === e.buffer && t.byteOffset === e.byteOffset) return !0;
    o = !0;
  }
  if (!o) {
    if (typeof t != "object" || typeof e != "object") return !1;
    var s = t.constructor, c = e.constructor;
    if (s !== c && !(gt(s) && s instanceof s && gt(c) && c instanceof c) && "constructor" in t && "constructor" in e)
      return !1;
  }
  n = n || [], r = r || [];
  for (var l = n.length; l--; )
    if (n[l] === t) return r[l] === e;
  if (n.push(t), r.push(e), o) {
    if (l = t.length, l !== e.length) return !1;
    for (; l--; )
      if (!Vd(t[l], e[l], n, r)) return !1;
  } else {
    var u = rt(t), f;
    if (l = u.length, rt(e).length !== l) return !1;
    for (; l--; )
      if (f = u[l], !(br(e, f) && Vd(t[f], e[f], n, r))) return !1;
  }
  return n.pop(), r.pop(), !0;
}
function vx(t, e) {
  return Vd(t, e);
}
function Ui(t) {
  if (!mr(t)) return [];
  var e = [];
  for (var n in t) e.push(n);
  return ix && mx(t, e), e;
}
function lp(t) {
  var e = Ut(t);
  return function(n) {
    if (n == null) return !1;
    var r = Ui(n);
    if (Ut(r)) return !1;
    for (var i = 0; i < e; i++)
      if (!gt(n[t[i]])) return !1;
    return t !== wx || !gt(n[up]);
  };
}
var up = "forEach", Dx = "has", fp = ["clear", "delete"], xx = ["get", Dx, "set"], ak = fp.concat(up, xx), wx = fp.concat(xx), sk = ["add"].concat(fp, up, Dx);
const _x = ip ? lp(ak) : bt("Map"), Tx = ip ? lp(wx) : bt("WeakMap"), Ex = ip ? lp(sk) : bt("Set"), Cx = bt("WeakSet");
function Gr(t) {
  for (var e = rt(t), n = e.length, r = Array(n), i = 0; i < n; i++)
    r[i] = t[e[i]];
  return r;
}
function Sx(t) {
  for (var e = rt(t), n = e.length, r = Array(n), i = 0; i < n; i++)
    r[i] = [e[i], t[e[i]]];
  return r;
}
function dp(t) {
  for (var e = {}, n = rt(t), r = 0, i = n.length; r < i; r++)
    e[t[n[r]]] = n[r];
  return e;
}
function Co(t) {
  var e = [];
  for (var n in t)
    gt(t[n]) && e.push(n);
  return e.sort();
}
function hp(t, e) {
  return function(n) {
    var r = arguments.length;
    if (e && (n = Object(n)), r < 2 || n == null) return n;
    for (var i = 1; i < r; i++)
      for (var o = arguments[i], a = t(o), s = a.length, c = 0; c < s; c++) {
        var l = a[c];
        (!e || n[l] === void 0) && (n[l] = o[l]);
      }
    return n;
  };
}
const pp = hp(Ui), wi = hp(rt), gp = hp(Ui, !0);
function ck() {
  return function() {
  };
}
function Ax(t) {
  if (!mr(t)) return {};
  if (S1) return S1(t);
  var e = ck();
  e.prototype = t;
  var n = new e();
  return e.prototype = null, n;
}
function Ux(t, e) {
  var n = Ax(t);
  return e && wi(n, e), n;
}
function kx(t) {
  return mr(t) ? yr(t) ? t.slice() : pp({}, t) : t;
}
function Fx(t, e) {
  return e(t), t;
}
function mp(t) {
  return yr(t) ? t : [t];
}
ze.toPath = mp;
function Po(t) {
  return ze.toPath(t);
}
function yp(t, e) {
  for (var n = e.length, r = 0; r < n; r++) {
    if (t == null) return;
    t = t[e[r]];
  }
  return n ? t : void 0;
}
function bp(t, e, n) {
  var r = yp(t, Po(e));
  return Qh(r) ? n : r;
}
function Ox(t, e) {
  e = Po(e);
  for (var n = e.length, r = 0; r < n; r++) {
    var i = e[r];
    if (!br(t, i)) return !1;
    t = t[i];
  }
  return !!n;
}
function ac(t) {
  return t;
}
function zr(t) {
  return t = wi({}, t), function(e) {
    return cp(e, t);
  };
}
function sc(t) {
  return t = Po(t), function(e) {
    return yp(e, t);
  };
}
function qo(t, e, n) {
  if (e === void 0) return t;
  switch (n ?? 3) {
    case 1:
      return function(r) {
        return t.call(e, r);
      };
    // The 2-argument case is omitted because we’re not using it.
    case 3:
      return function(r, i, o) {
        return t.call(e, r, i, o);
      };
    case 4:
      return function(r, i, o, a) {
        return t.call(e, r, i, o, a);
      };
  }
  return function() {
    return t.apply(e, arguments);
  };
}
function Rx(t, e, n) {
  return t == null ? ac : gt(t) ? qo(t, e, n) : mr(t) && !yr(t) ? zr(t) : sc(t);
}
function cc(t, e) {
  return Rx(t, e, 1 / 0);
}
ze.iteratee = cc;
function kt(t, e, n) {
  return ze.iteratee !== cc ? ze.iteratee(t, e) : Rx(t, e, n);
}
function Nx(t, e, n) {
  e = kt(e, n);
  for (var r = rt(t), i = r.length, o = {}, a = 0; a < i; a++) {
    var s = r[a];
    o[s] = e(t[s], s, t);
  }
  return o;
}
function vp() {
}
function Bx(t) {
  return t == null ? vp : function(e) {
    return bp(t, e);
  };
}
function Ix(t, e, n) {
  var r = Array(Math.max(0, t));
  e = qo(e, n, 1);
  for (var i = 0; i < t; i++) r[i] = e(i);
  return r;
}
function Ws(t, e) {
  return e == null && (e = t, t = 0), t + Math.floor(Math.random() * (e - t + 1));
}
const _i = Date.now || function() {
  return (/* @__PURE__ */ new Date()).getTime();
};
function Mx(t) {
  var e = function(o) {
    return t[o];
  }, n = "(?:" + rt(t).join("|") + ")", r = RegExp(n), i = RegExp(n, "g");
  return function(o) {
    return o = o == null ? "" : "" + o, r.test(o) ? o.replace(i, e) : o;
  };
}
const Wx = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#x27;",
  "`": "&#x60;"
}, Lx = Mx(Wx), lk = dp(Wx), Px = Mx(lk), qx = ze.templateSettings = {
  evaluate: /<%([\s\S]+?)%>/g,
  interpolate: /<%=([\s\S]+?)%>/g,
  escape: /<%-([\s\S]+?)%>/g
};
var zu = /(.)^/, uk = {
  "'": "'",
  "\\": "\\",
  "\r": "r",
  "\n": "n",
  "\u2028": "u2028",
  "\u2029": "u2029"
}, fk = /\\|'|\r|\n|\u2028|\u2029/g;
function dk(t) {
  return "\\" + uk[t];
}
var hk = /^\s*(\w|\$)+\s*$/;
function zx(t, e, n) {
  !e && n && (e = n), e = gp({}, e, ze.templateSettings);
  var r = RegExp([
    (e.escape || zu).source,
    (e.interpolate || zu).source,
    (e.evaluate || zu).source
  ].join("|") + "|$", "g"), i = 0, o = "__p+='";
  t.replace(r, function(l, u, f, d, h) {
    return o += t.slice(i, h).replace(fk, dk), i = h + l.length, u ? o += `'+
((__t=(` + u + `))==null?'':_.escape(__t))+
'` : f ? o += `'+
((__t=(` + f + `))==null?'':__t)+
'` : d && (o += `';
` + d + `
__p+='`), l;
  }), o += `';
`;
  var a = e.variable;
  if (a) {
    if (!hk.test(a)) throw new Error(
      "variable is not a bare identifier: " + a
    );
  } else
    o = `with(obj||{}){
` + o + `}
`, a = "obj";
  o = `var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};
` + o + `return __p;
`;
  var s;
  try {
    s = new Function(a, "_", o);
  } catch (l) {
    throw l.source = o, l;
  }
  var c = function(l) {
    return s.call(this, l, ze);
  };
  return c.source = "function(" + a + `){
` + o + "}", c;
}
function jx(t, e, n) {
  e = Po(e);
  var r = e.length;
  if (!r)
    return gt(n) ? n.call(t) : n;
  for (var i = 0; i < r; i++) {
    var o = t == null ? void 0 : t[e[i]];
    o === void 0 && (o = n, i = r), t = gt(o) ? o.call(t) : o;
  }
  return t;
}
var pk = 0;
function $x(t) {
  var e = ++pk + "";
  return t ? t + e : e;
}
function Vx(t) {
  var e = ze(t);
  return e._chain = !0, e;
}
function Hx(t, e, n, r, i) {
  if (!(r instanceof e)) return t.apply(n, i);
  var o = Ax(t.prototype), a = t.apply(o, i);
  return mr(a) ? a : o;
}
var Kr = Tt(function(t, e) {
  var n = Kr.placeholder, r = function() {
    for (var i = 0, o = e.length, a = Array(o), s = 0; s < o; s++)
      a[s] = e[s] === n ? arguments[i++] : e[s];
    for (; i < arguments.length; ) a.push(arguments[i++]);
    return Hx(t, r, this, this, a);
  };
  return r;
});
Kr.placeholder = ze;
const Dp = Tt(function(t, e, n) {
  if (!gt(t)) throw new TypeError("Bind must be called on a function");
  var r = Tt(function(i) {
    return Hx(t, r, e, this, n.concat(i));
  });
  return r;
}), It = px(Ut);
function Jr(t, e, n, r) {
  if (r = r || [], !e && e !== 0)
    e = 1 / 0;
  else if (e <= 0)
    return r.concat(t);
  for (var i = r.length, o = 0, a = Ut(t); o < a; o++) {
    var s = t[o];
    if (It(s) && (yr(s) || oc(s)))
      if (e > 1)
        Jr(s, e - 1, n, r), i = r.length;
      else
        for (var c = 0, l = s.length; c < l; ) r[i++] = s[c++];
    else n || (r[i++] = s);
  }
  return r;
}
const Xx = Tt(function(t, e) {
  e = Jr(e, !1, !1);
  var n = e.length;
  if (n < 1) throw new Error("bindAll must be passed function names");
  for (; n--; ) {
    var r = e[n];
    t[r] = Dp(t[r], t);
  }
  return t;
});
function Gx(t, e) {
  var n = function(r) {
    var i = n.cache, o = "" + (e ? e.apply(this, arguments) : r);
    return br(i, o) || (i[o] = t.apply(this, arguments)), i[o];
  };
  return n.cache = {}, n;
}
const xp = Tt(function(t, e, n) {
  return setTimeout(function() {
    return t.apply(null, n);
  }, e);
}), Kx = Kr(xp, ze, 1);
function Jx(t, e, n) {
  var r, i, o, a, s = 0;
  n || (n = {});
  var c = function() {
    s = n.leading === !1 ? 0 : _i(), r = null, a = t.apply(i, o), r || (i = o = null);
  }, l = function() {
    var u = _i();
    !s && n.leading === !1 && (s = u);
    var f = e - (u - s);
    return i = this, o = arguments, f <= 0 || f > e ? (r && (clearTimeout(r), r = null), s = u, a = t.apply(i, o), r || (i = o = null)) : !r && n.trailing !== !1 && (r = setTimeout(c, f)), a;
  };
  return l.cancel = function() {
    clearTimeout(r), s = 0, r = i = o = null;
  }, l;
}
function Zx(t, e, n) {
  var r, i, o, a, s, c = function() {
    var u = _i() - i;
    e > u ? r = setTimeout(c, e - u) : (r = null, n || (a = t.apply(s, o)), r || (o = s = null));
  }, l = Tt(function(u) {
    return s = this, o = u, i = _i(), r || (r = setTimeout(c, e), n && (a = t.apply(s, o))), a;
  });
  return l.cancel = function() {
    clearTimeout(r), r = o = s = null;
  }, l;
}
function Yx(t, e) {
  return Kr(e, t);
}
function lc(t) {
  return function() {
    return !t.apply(this, arguments);
  };
}
function Qx() {
  var t = arguments, e = t.length - 1;
  return function() {
    for (var n = e, r = t[e].apply(this, arguments); n--; ) r = t[n].call(this, r);
    return r;
  };
}
function ew(t, e) {
  return function() {
    if (--t < 1)
      return e.apply(this, arguments);
  };
}
function wp(t, e) {
  var n;
  return function() {
    return --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = null), n;
  };
}
const tw = Kr(wp, 2);
function _p(t, e, n) {
  e = kt(e, n);
  for (var r = rt(t), i, o = 0, a = r.length; o < a; o++)
    if (i = r[o], e(t[i], i, t)) return i;
}
function nw(t) {
  return function(e, n, r) {
    n = kt(n, r);
    for (var i = Ut(e), o = t > 0 ? 0 : i - 1; o >= 0 && o < i; o += t)
      if (n(e[o], o, e)) return o;
    return -1;
  };
}
const uc = nw(1), Tp = nw(-1);
function Ep(t, e, n, r) {
  n = kt(n, r, 1);
  for (var i = n(e), o = 0, a = Ut(t); o < a; ) {
    var s = Math.floor((o + a) / 2);
    n(t[s]) < i ? o = s + 1 : a = s;
  }
  return o;
}
function rw(t, e, n) {
  return function(r, i, o) {
    var a = 0, s = Ut(r);
    if (typeof o == "number")
      t > 0 ? a = o >= 0 ? o : Math.max(o + s, a) : s = o >= 0 ? Math.min(o + 1, s) : o + s + 1;
    else if (n && o && s)
      return o = n(r, i), r[o] === i ? o : -1;
    if (i !== i)
      return o = e(Lo.call(r, a, s), op), o >= 0 ? o + a : -1;
    for (o = t > 0 ? a : s - 1; o >= 0 && o < s; o += t)
      if (r[o] === i) return o;
    return -1;
  };
}
const Cp = rw(1, uc, Ep), iw = rw(-1, Tp);
function So(t, e, n) {
  var r = It(t) ? uc : _p, i = r(t, e, n);
  if (i !== void 0 && i !== -1) return t[i];
}
function ow(t, e) {
  return So(t, zr(e));
}
function on(t, e, n) {
  e = qo(e, n);
  var r, i;
  if (It(t))
    for (r = 0, i = t.length; r < i; r++)
      e(t[r], r, t);
  else {
    var o = rt(t);
    for (r = 0, i = o.length; r < i; r++)
      e(t[o[r]], o[r], t);
  }
  return t;
}
function Mn(t, e, n) {
  e = kt(e, n);
  for (var r = !It(t) && rt(t), i = (r || t).length, o = Array(i), a = 0; a < i; a++) {
    var s = r ? r[a] : a;
    o[a] = e(t[s], s, t);
  }
  return o;
}
function aw(t) {
  var e = function(n, r, i, o) {
    var a = !It(n) && rt(n), s = (a || n).length, c = t > 0 ? 0 : s - 1;
    for (o || (i = n[a ? a[c] : c], c += t); c >= 0 && c < s; c += t) {
      var l = a ? a[c] : c;
      i = r(i, n[l], l, n);
    }
    return i;
  };
  return function(n, r, i, o) {
    var a = arguments.length >= 3;
    return e(n, qo(r, o, 4), i, a);
  };
}
const gi = aw(1), Ls = aw(-1);
function fr(t, e, n) {
  var r = [];
  return e = kt(e, n), on(t, function(i, o, a) {
    e(i, o, a) && r.push(i);
  }), r;
}
function sw(t, e, n) {
  return fr(t, lc(kt(e)), n);
}
function Ps(t, e, n) {
  e = kt(e, n);
  for (var r = !It(t) && rt(t), i = (r || t).length, o = 0; o < i; o++) {
    var a = r ? r[o] : o;
    if (!e(t[a], a, t)) return !1;
  }
  return !0;
}
function qs(t, e, n) {
  e = kt(e, n);
  for (var r = !It(t) && rt(t), i = (r || t).length, o = 0; o < i; o++) {
    var a = r ? r[o] : o;
    if (e(t[a], a, t)) return !0;
  }
  return !1;
}
function Kt(t, e, n, r) {
  return It(t) || (t = Gr(t)), (typeof n != "number" || r) && (n = 0), Cp(t, e, n) >= 0;
}
const cw = Tt(function(t, e, n) {
  var r, i;
  return gt(e) ? i = e : (e = Po(e), r = e.slice(0, -1), e = e[e.length - 1]), Mn(t, function(o) {
    var a = i;
    if (!a) {
      if (r && r.length && (o = yp(o, r)), o == null) return;
      a = o[e];
    }
    return a == null ? a : a.apply(o, n);
  });
});
function fc(t, e) {
  return Mn(t, sc(e));
}
function lw(t, e) {
  return fr(t, zr(e));
}
function Sp(t, e, n) {
  var r = -1 / 0, i = -1 / 0, o, a;
  if (e == null || typeof e == "number" && typeof t[0] != "object" && t != null) {
    t = It(t) ? t : Gr(t);
    for (var s = 0, c = t.length; s < c; s++)
      o = t[s], o != null && o > r && (r = o);
  } else
    e = kt(e, n), on(t, function(l, u, f) {
      a = e(l, u, f), (a > i || a === -1 / 0 && r === -1 / 0) && (r = l, i = a);
    });
  return r;
}
function uw(t, e, n) {
  var r = 1 / 0, i = 1 / 0, o, a;
  if (e == null || typeof e == "number" && typeof t[0] != "object" && t != null) {
    t = It(t) ? t : Gr(t);
    for (var s = 0, c = t.length; s < c; s++)
      o = t[s], o != null && o < r && (r = o);
  } else
    e = kt(e, n), on(t, function(l, u, f) {
      a = e(l, u, f), (a < i || a === 1 / 0 && r === 1 / 0) && (r = l, i = a);
    });
  return r;
}
var gk = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
function Ap(t) {
  return t ? yr(t) ? Lo.call(t) : ic(t) ? t.match(gk) : It(t) ? Mn(t, ac) : Gr(t) : [];
}
function Up(t, e, n) {
  if (e == null || n)
    return It(t) || (t = Gr(t)), t[Ws(t.length - 1)];
  var r = Ap(t), i = Ut(r);
  e = Math.max(Math.min(e, i), 0);
  for (var o = i - 1, a = 0; a < e; a++) {
    var s = Ws(a, o), c = r[a];
    r[a] = r[s], r[s] = c;
  }
  return r.slice(0, e);
}
function fw(t) {
  return Up(t, 1 / 0);
}
function dw(t, e, n) {
  var r = 0;
  return e = kt(e, n), fc(Mn(t, function(i, o, a) {
    return {
      value: i,
      index: r++,
      criteria: e(i, o, a)
    };
  }).sort(function(i, o) {
    var a = i.criteria, s = o.criteria;
    if (a !== s) {
      if (a > s || a === void 0) return 1;
      if (a < s || s === void 0) return -1;
    }
    return i.index - o.index;
  }), "value");
}
function dc(t, e) {
  return function(n, r, i) {
    var o = e ? [[], []] : {};
    return r = kt(r, i), on(n, function(a, s) {
      var c = r(a, s, n);
      t(o, a, c);
    }), o;
  };
}
const hw = dc(function(t, e, n) {
  br(t, n) ? t[n].push(e) : t[n] = [e];
}), pw = dc(function(t, e, n) {
  t[n] = e;
}), gw = dc(function(t, e, n) {
  br(t, n) ? t[n]++ : t[n] = 1;
}), mw = dc(function(t, e, n) {
  t[n ? 0 : 1].push(e);
}, !0);
function yw(t) {
  return t == null ? 0 : It(t) ? t.length : rt(t).length;
}
function mk(t, e, n) {
  return e in n;
}
const kp = Tt(function(t, e) {
  var n = {}, r = e[0];
  if (t == null) return n;
  gt(r) ? (e.length > 1 && (r = qo(r, e[1])), e = Ui(t)) : (r = mk, e = Jr(e, !1, !1), t = Object(t));
  for (var i = 0, o = e.length; i < o; i++) {
    var a = e[i], s = t[a];
    r(s, a, t) && (n[a] = s);
  }
  return n;
}), bw = Tt(function(t, e) {
  var n = e[0], r;
  return gt(n) ? (n = lc(n), e.length > 1 && (r = e[1])) : (e = Mn(Jr(e, !1, !1), String), n = function(i, o) {
    return !Kt(e, o);
  }), kp(t, n, r);
});
function Fp(t, e, n) {
  return Lo.call(t, 0, Math.max(0, t.length - (e == null || n ? 1 : e)));
}
function mi(t, e, n) {
  return t == null || t.length < 1 ? e == null || n ? void 0 : [] : e == null || n ? t[0] : Fp(t, t.length - e);
}
function Ir(t, e, n) {
  return Lo.call(t, e == null || n ? 1 : e);
}
function vw(t, e, n) {
  return t == null || t.length < 1 ? e == null || n ? void 0 : [] : e == null || n ? t[t.length - 1] : Ir(t, Math.max(0, t.length - e));
}
function Dw(t) {
  return fr(t, Boolean);
}
function xw(t, e) {
  return Jr(t, e, !1);
}
const Op = Tt(function(t, e) {
  return e = Jr(e, !0, !0), fr(t, function(n) {
    return !Kt(e, n);
  });
}), ww = Tt(function(t, e) {
  return Op(t, e);
});
function Ao(t, e, n, r) {
  ep(e) || (r = n, n = e, e = !1), n != null && (n = kt(n, r));
  for (var i = [], o = [], a = 0, s = Ut(t); a < s; a++) {
    var c = t[a], l = n ? n(c, a, t) : c;
    e && !n ? ((!a || o !== l) && i.push(c), o = l) : n ? Kt(o, l) || (o.push(l), i.push(c)) : Kt(i, c) || i.push(c);
  }
  return i;
}
const _w = Tt(function(t) {
  return Ao(Jr(t, !0, !0));
});
function Tw(t) {
  for (var e = [], n = arguments.length, r = 0, i = Ut(t); r < i; r++) {
    var o = t[r];
    if (!Kt(e, o)) {
      var a;
      for (a = 1; a < n && Kt(arguments[a], o); a++)
        ;
      a === n && e.push(o);
    }
  }
  return e;
}
function Uo(t) {
  for (var e = t && Sp(t, Ut).length || 0, n = Array(e), r = 0; r < e; r++)
    n[r] = fc(t, r);
  return n;
}
const Ew = Tt(Uo);
function Cw(t, e) {
  for (var n = {}, r = 0, i = Ut(t); r < i; r++)
    e ? n[t[r]] = e[r] : n[t[r][0]] = t[r][1];
  return n;
}
function Sw(t, e, n) {
  e == null && (e = t || 0, t = 0), n || (n = e < t ? -1 : 1);
  for (var r = Math.max(Math.ceil((e - t) / n), 0), i = Array(r), o = 0; o < r; o++, t += n)
    i[o] = t;
  return i;
}
function Aw(t, e) {
  if (e == null || e < 1) return [];
  for (var n = [], r = 0, i = t.length; r < i; )
    n.push(Lo.call(t, r, r += e));
  return n;
}
function Rp(t, e) {
  return t._chain ? ze(e).chain() : e;
}
function Np(t) {
  return on(Co(t), function(e) {
    var n = ze[e] = t[e];
    ze.prototype[e] = function() {
      var r = [this._wrapped];
      return H4.apply(r, arguments), Rp(this, n.apply(ze, r));
    };
  }), ze;
}
on(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(t) {
  var e = rc[t];
  ze.prototype[t] = function() {
    var n = this._wrapped;
    return n != null && (e.apply(n, arguments), (t === "shift" || t === "splice") && n.length === 0 && delete n[0]), Rp(this, n);
  };
});
on(["concat", "join", "slice"], function(t) {
  var e = rc[t];
  ze.prototype[t] = function() {
    var n = this._wrapped;
    return n != null && (n = e.apply(n, arguments)), Rp(this, n);
  };
});
const yk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  VERSION: Zh,
  after: ew,
  all: Ps,
  allKeys: Ui,
  any: qs,
  assign: wi,
  before: wp,
  bind: Dp,
  bindAll: Xx,
  chain: Vx,
  chunk: Aw,
  clone: kx,
  collect: Mn,
  compact: Dw,
  compose: Qx,
  constant: ap,
  contains: Kt,
  countBy: gw,
  create: Ux,
  debounce: Zx,
  default: ze,
  defaults: gp,
  defer: Kx,
  delay: xp,
  detect: So,
  difference: Op,
  drop: Ir,
  each: on,
  escape: Lx,
  every: Ps,
  extend: pp,
  extendOwn: wi,
  filter: fr,
  find: So,
  findIndex: uc,
  findKey: _p,
  findLastIndex: Tp,
  findWhere: ow,
  first: mi,
  flatten: xw,
  foldl: gi,
  foldr: Ls,
  forEach: on,
  functions: Co,
  get: bp,
  groupBy: hw,
  has: Ox,
  head: mi,
  identity: ac,
  include: Kt,
  includes: Kt,
  indexBy: pw,
  indexOf: Cp,
  initial: Fp,
  inject: gi,
  intersection: Tw,
  invert: dp,
  invoke: cw,
  isArguments: oc,
  isArray: yr,
  isArrayBuffer: rp,
  isBoolean: ep,
  isDataView: Eo,
  isDate: sx,
  isElement: ax,
  isEmpty: yx,
  isEqual: vx,
  isError: lx,
  isFinite: hx,
  isFunction: gt,
  isMap: _x,
  isMatch: cp,
  isNaN: op,
  isNull: ox,
  isNumber: tp,
  isObject: mr,
  isRegExp: cx,
  isSet: Ex,
  isString: ic,
  isSymbol: np,
  isTypedArray: sp,
  isUndefined: Qh,
  isWeakMap: Tx,
  isWeakSet: Cx,
  iteratee: cc,
  keys: rt,
  last: vw,
  lastIndexOf: iw,
  map: Mn,
  mapObject: Nx,
  matcher: zr,
  matches: zr,
  max: Sp,
  memoize: Gx,
  methods: Co,
  min: uw,
  mixin: Np,
  negate: lc,
  noop: vp,
  now: _i,
  object: Cw,
  omit: bw,
  once: tw,
  pairs: Sx,
  partial: Kr,
  partition: mw,
  pick: kp,
  pluck: fc,
  property: sc,
  propertyOf: Bx,
  random: Ws,
  range: Sw,
  reduce: gi,
  reduceRight: Ls,
  reject: sw,
  rest: Ir,
  restArguments: Tt,
  result: jx,
  sample: Up,
  select: fr,
  shuffle: fw,
  size: yw,
  some: qs,
  sortBy: dw,
  sortedIndex: Ep,
  tail: Ir,
  take: mi,
  tap: Fx,
  template: zx,
  templateSettings: qx,
  throttle: Jx,
  times: Ix,
  toArray: Ap,
  toPath: mp,
  transpose: Uo,
  unescape: Px,
  union: _w,
  uniq: Ao,
  unique: Ao,
  uniqueId: $x,
  unzip: Uo,
  values: Gr,
  where: lw,
  without: ww,
  wrap: Yx,
  zip: Ew
}, Symbol.toStringTag, { value: "Module" }));
var Hd = Np(yk);
Hd._ = Hd;
const bk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  VERSION: Zh,
  after: ew,
  all: Ps,
  allKeys: Ui,
  any: qs,
  assign: wi,
  before: wp,
  bind: Dp,
  bindAll: Xx,
  chain: Vx,
  chunk: Aw,
  clone: kx,
  collect: Mn,
  compact: Dw,
  compose: Qx,
  constant: ap,
  contains: Kt,
  countBy: gw,
  create: Ux,
  debounce: Zx,
  default: Hd,
  defaults: gp,
  defer: Kx,
  delay: xp,
  detect: So,
  difference: Op,
  drop: Ir,
  each: on,
  escape: Lx,
  every: Ps,
  extend: pp,
  extendOwn: wi,
  filter: fr,
  find: So,
  findIndex: uc,
  findKey: _p,
  findLastIndex: Tp,
  findWhere: ow,
  first: mi,
  flatten: xw,
  foldl: gi,
  foldr: Ls,
  forEach: on,
  functions: Co,
  get: bp,
  groupBy: hw,
  has: Ox,
  head: mi,
  identity: ac,
  include: Kt,
  includes: Kt,
  indexBy: pw,
  indexOf: Cp,
  initial: Fp,
  inject: gi,
  intersection: Tw,
  invert: dp,
  invoke: cw,
  isArguments: oc,
  isArray: yr,
  isArrayBuffer: rp,
  isBoolean: ep,
  isDataView: Eo,
  isDate: sx,
  isElement: ax,
  isEmpty: yx,
  isEqual: vx,
  isError: lx,
  isFinite: hx,
  isFunction: gt,
  isMap: _x,
  isMatch: cp,
  isNaN: op,
  isNull: ox,
  isNumber: tp,
  isObject: mr,
  isRegExp: cx,
  isSet: Ex,
  isString: ic,
  isSymbol: np,
  isTypedArray: sp,
  isUndefined: Qh,
  isWeakMap: Tx,
  isWeakSet: Cx,
  iteratee: cc,
  keys: rt,
  last: vw,
  lastIndexOf: iw,
  map: Mn,
  mapObject: Nx,
  matcher: zr,
  matches: zr,
  max: Sp,
  memoize: Gx,
  methods: Co,
  min: uw,
  mixin: Np,
  negate: lc,
  noop: vp,
  now: _i,
  object: Cw,
  omit: bw,
  once: tw,
  pairs: Sx,
  partial: Kr,
  partition: mw,
  pick: kp,
  pluck: fc,
  property: sc,
  propertyOf: Bx,
  random: Ws,
  range: Sw,
  reduce: gi,
  reduceRight: Ls,
  reject: sw,
  rest: Ir,
  restArguments: Tt,
  result: jx,
  sample: Up,
  select: fr,
  shuffle: fw,
  size: yw,
  some: qs,
  sortBy: dw,
  sortedIndex: Ep,
  tail: Ir,
  take: mi,
  tap: Fx,
  template: zx,
  templateSettings: qx,
  throttle: Jx,
  times: Ix,
  toArray: Ap,
  toPath: mp,
  transpose: Uo,
  unescape: Px,
  union: _w,
  uniq: Ao,
  unique: Ao,
  uniqueId: $x,
  unzip: Uo,
  values: Gr,
  where: lw,
  without: ww,
  wrap: Yx,
  zip: Ew
}, Symbol.toStringTag, { value: "Module" })), et = /* @__PURE__ */ ND(bk);
var ra = {}, zt = {}, ju = { exports: {} }, ia = { exports: {} }, O1;
function ki() {
  if (O1) return ia.exports;
  O1 = 1;
  var t = /* @__PURE__ */ function() {
    return this === void 0;
  }();
  if (t)
    ia.exports = {
      freeze: Object.freeze,
      defineProperty: Object.defineProperty,
      getDescriptor: Object.getOwnPropertyDescriptor,
      keys: Object.keys,
      names: Object.getOwnPropertyNames,
      getPrototypeOf: Object.getPrototypeOf,
      isArray: Array.isArray,
      isES5: t,
      propertyIsWritable: function(u, f) {
        var d = Object.getOwnPropertyDescriptor(u, f);
        return !!(!d || d.writable || d.set);
      }
    };
  else {
    var e = {}.hasOwnProperty, n = {}.toString, r = {}.constructor.prototype, i = function(u) {
      var f = [];
      for (var d in u)
        e.call(u, d) && f.push(d);
      return f;
    }, o = function(u, f) {
      return { value: u[f] };
    }, a = function(u, f, d) {
      return u[f] = d.value, u;
    }, s = function(u) {
      return u;
    }, c = function(u) {
      try {
        return Object(u).constructor.prototype;
      } catch {
        return r;
      }
    }, l = function(u) {
      try {
        return n.call(u) === "[object Array]";
      } catch {
        return !1;
      }
    };
    ia.exports = {
      isArray: l,
      keys: i,
      names: i,
      defineProperty: a,
      getDescriptor: o,
      freeze: s,
      getPrototypeOf: c,
      isES5: t,
      propertyIsWritable: function() {
        return !0;
      }
    };
  }
  return ia.exports;
}
var Mi, R1;
function Ve() {
  if (R1) return Mi;
  R1 = 1;
  var t = ki(), e = typeof navigator > "u", n = { e: {} }, r, i = typeof self < "u" ? self : typeof window < "u" ? window : typeof Ht < "u" ? Ht : Mi !== void 0 ? Mi : null;
  function o() {
    try {
      var B = r;
      return r = null, B.apply(this, arguments);
    } catch (se) {
      return n.e = se, n;
    }
  }
  function a(B) {
    return r = B, o;
  }
  var s = function(B, se) {
    var G = {}.hasOwnProperty;
    function J() {
      this.constructor = B, this.constructor$ = se;
      for (var ce in se.prototype)
        G.call(se.prototype, ce) && ce.charAt(ce.length - 1) !== "$" && (this[ce + "$"] = se.prototype[ce]);
    }
    return J.prototype = se.prototype, B.prototype = new J(), B.prototype;
  };
  function c(B) {
    return B == null || B === !0 || B === !1 || typeof B == "string" || typeof B == "number";
  }
  function l(B) {
    return typeof B == "function" || typeof B == "object" && B !== null;
  }
  function u(B) {
    return c(B) ? new Error(E(B)) : B;
  }
  function f(B, se) {
    var G = B.length, J = new Array(G + 1), ce;
    for (ce = 0; ce < G; ++ce)
      J[ce] = B[ce];
    return J[ce] = se, J;
  }
  function d(B, se, G) {
    if (t.isES5) {
      var J = Object.getOwnPropertyDescriptor(B, se);
      if (J != null)
        return J.get == null && J.set == null ? J.value : G;
    } else
      return {}.hasOwnProperty.call(B, se) ? B[se] : void 0;
  }
  function h(B, se, G) {
    if (c(B)) return B;
    var J = {
      value: G,
      configurable: !0,
      enumerable: !1,
      writable: !0
    };
    return t.defineProperty(B, se, J), B;
  }
  function p(B) {
    throw B;
  }
  var m = function() {
    var B = [
      Array.prototype,
      Object.prototype,
      Function.prototype
    ], se = function(ce) {
      for (var he = 0; he < B.length; ++he)
        if (B[he] === ce)
          return !0;
      return !1;
    };
    if (t.isES5) {
      var G = Object.getOwnPropertyNames;
      return function(ce) {
        for (var he = [], fe = /* @__PURE__ */ Object.create(null); ce != null && !se(ce); ) {
          var me;
          try {
            me = G(ce);
          } catch {
            return he;
          }
          for (var de = 0; de < me.length; ++de) {
            var pe = me[de];
            if (!fe[pe]) {
              fe[pe] = !0;
              var ye = Object.getOwnPropertyDescriptor(ce, pe);
              ye != null && ye.get == null && ye.set == null && he.push(pe);
            }
          }
          ce = t.getPrototypeOf(ce);
        }
        return he;
      };
    } else {
      var J = {}.hasOwnProperty;
      return function(ce) {
        if (se(ce)) return [];
        var he = [];
        e: for (var fe in ce)
          if (J.call(ce, fe))
            he.push(fe);
          else {
            for (var me = 0; me < B.length; ++me)
              if (J.call(B[me], fe))
                continue e;
            he.push(fe);
          }
        return he;
      };
    }
  }(), g = /this\s*\.\s*\S+\s*=/;
  function y(B) {
    try {
      if (typeof B == "function") {
        var se = t.names(B.prototype), G = t.isES5 && se.length > 1, J = se.length > 0 && !(se.length === 1 && se[0] === "constructor"), ce = g.test(B + "") && t.names(B).length > 0;
        if (G || J || ce)
          return !0;
      }
      return !1;
    } catch {
      return !1;
    }
  }
  function b(B) {
    return B;
  }
  var v = /^[a-z$_][a-z$_0-9]*$/i;
  function _(B) {
    return v.test(B);
  }
  function x(B, se, G) {
    for (var J = new Array(B), ce = 0; ce < B; ++ce)
      J[ce] = se + ce + G;
    return J;
  }
  function E(B) {
    try {
      return B + "";
    } catch {
      return "[no string representation]";
    }
  }
  function S(B) {
    return B !== null && typeof B == "object" && typeof B.message == "string" && typeof B.name == "string";
  }
  function U(B) {
    try {
      h(B, "isOperational", !0);
    } catch {
    }
  }
  function C(B) {
    return B == null ? !1 : B instanceof Error.__BluebirdErrorTypes__.OperationalError || B.isOperational === !0;
  }
  function R(B) {
    return S(B) && t.propertyIsWritable(B, "stack");
  }
  var j = function() {
    return "stack" in new Error() ? function(B) {
      return R(B) ? B : new Error(E(B));
    } : function(B) {
      if (R(B)) return B;
      try {
        throw new Error(E(B));
      } catch (se) {
        return se;
      }
    };
  }();
  function T(B) {
    return {}.toString.call(B);
  }
  function k(B, se, G) {
    for (var J = t.names(B), ce = 0; ce < J.length; ++ce) {
      var he = J[ce];
      if (G(he))
        try {
          t.defineProperty(se, he, t.getDescriptor(B, he));
        } catch {
        }
    }
  }
  var w = function(B) {
    return t.isArray(B) ? B : null;
  };
  if (typeof Symbol < "u" && Symbol.iterator) {
    var $ = typeof Array.from == "function" ? function(B) {
      return Array.from(B);
    } : function(B) {
      for (var se = [], G = B[Symbol.iterator](), J; !(J = G.next()).done; )
        se.push(J.value);
      return se;
    };
    w = function(B) {
      return t.isArray(B) ? B : B != null && typeof B[Symbol.iterator] == "function" ? $(B) : null;
    };
  }
  var N = typeof process < "u" && T(process).toLowerCase() === "[object process]", M = typeof process < "u" && typeof process.env < "u";
  function K(B) {
    return M ? process.env[B] : void 0;
  }
  function P() {
    if (typeof Promise == "function")
      try {
        var B = new Promise(function() {
        });
        if ({}.toString.call(B) === "[object Promise]")
          return Promise;
      } catch {
      }
  }
  function te(B, se) {
    return B.bind(se);
  }
  var W = {
    isClass: y,
    isIdentifier: _,
    inheritedDataKeys: m,
    getDataPropertyOrDefault: d,
    thrower: p,
    isArray: t.isArray,
    asArray: w,
    notEnumerableProp: h,
    isPrimitive: c,
    isObject: l,
    isError: S,
    canEvaluate: e,
    errorObj: n,
    tryCatch: a,
    inherits: s,
    withAppended: f,
    maybeWrapAsError: u,
    toFastProperties: b,
    filledRange: x,
    toString: E,
    canAttachTrace: R,
    ensureErrorObject: j,
    originatesFromRejection: C,
    markAsOriginatingFromRejection: U,
    classString: T,
    copyDescriptors: k,
    hasDevTools: typeof chrome < "u" && chrome && typeof chrome.loadTimes == "function",
    isNode: N,
    hasEnvVariables: M,
    env: K,
    global: i,
    getNativePromise: P,
    domainBind: te
  };
  W.isRecentNode = W.isNode && function() {
    var B = process.versions.node.split(".").map(Number);
    return B[0] === 0 && B[1] > 10 || B[0] > 0;
  }(), W.isNode && W.toFastProperties(process);
  try {
    throw new Error();
  } catch (B) {
    W.lastLineError = B;
  }
  return Mi = W, Mi;
}
var oa = { exports: {} }, $u, N1;
function vk() {
  if (N1) return $u;
  N1 = 1;
  var t = Ve(), e, n = function() {
    throw new Error(`No async scheduler available

    See http://goo.gl/MqrFmX
`);
  }, r = t.getNativePromise();
  if (t.isNode && typeof MutationObserver > "u") {
    var i = Ht.setImmediate, o = process.nextTick;
    e = t.isRecentNode ? function(s) {
      i.call(Ht, s);
    } : function(s) {
      o.call(process, s);
    };
  } else if (typeof r == "function" && typeof r.resolve == "function") {
    var a = r.resolve();
    e = function(s) {
      a.then(s);
    };
  } else typeof MutationObserver < "u" && !(typeof window < "u" && window.navigator && (window.navigator.standalone || window.cordova)) ? e = function() {
    var s = document.createElement("div"), c = { attributes: !0 }, l = !1, u = document.createElement("div"), f = new MutationObserver(function() {
      s.classList.toggle("foo"), l = !1;
    });
    f.observe(u, c);
    var d = function() {
      l || (l = !0, u.classList.toggle("foo"));
    };
    return function(p) {
      var m = new MutationObserver(function() {
        m.disconnect(), p();
      });
      m.observe(s, c), d();
    };
  }() : typeof setImmediate < "u" ? e = function(s) {
    setImmediate(s);
  } : typeof setTimeout < "u" ? e = function(s) {
    setTimeout(s, 0);
  } : e = n;
  return $u = e, $u;
}
var Vu, B1;
function Dk() {
  if (B1) return Vu;
  B1 = 1;
  function t(n, r, i, o, a) {
    for (var s = 0; s < a; ++s)
      i[s + o] = n[s + r], n[s + r] = void 0;
  }
  function e(n) {
    this._capacity = n, this._length = 0, this._front = 0;
  }
  return e.prototype._willBeOverCapacity = function(n) {
    return this._capacity < n;
  }, e.prototype._pushOne = function(n) {
    var r = this.length();
    this._checkCapacity(r + 1);
    var i = this._front + r & this._capacity - 1;
    this[i] = n, this._length = r + 1;
  }, e.prototype.push = function(n, r, i) {
    var o = this.length() + 3;
    if (this._willBeOverCapacity(o)) {
      this._pushOne(n), this._pushOne(r), this._pushOne(i);
      return;
    }
    var a = this._front + o - 3;
    this._checkCapacity(o);
    var s = this._capacity - 1;
    this[a + 0 & s] = n, this[a + 1 & s] = r, this[a + 2 & s] = i, this._length = o;
  }, e.prototype.shift = function() {
    var n = this._front, r = this[n];
    return this[n] = void 0, this._front = n + 1 & this._capacity - 1, this._length--, r;
  }, e.prototype.length = function() {
    return this._length;
  }, e.prototype._checkCapacity = function(n) {
    this._capacity < n && this._resizeTo(this._capacity << 1);
  }, e.prototype._resizeTo = function(n) {
    var r = this._capacity;
    this._capacity = n;
    var i = this._front, o = this._length, a = i + o & r - 1;
    t(this, 0, this, r, a);
  }, Vu = e, Vu;
}
var I1;
function xk() {
  if (I1) return oa.exports;
  I1 = 1;
  var t;
  try {
    throw new Error();
  } catch (c) {
    t = c;
  }
  var e = vk(), n = Dk(), r = Ve();
  function i() {
    this._customScheduler = !1, this._isTickUsed = !1, this._lateQueue = new n(16), this._normalQueue = new n(16), this._haveDrainedQueues = !1, this._trampolineEnabled = !0;
    var c = this;
    this.drainQueues = function() {
      c._drainQueues();
    }, this._schedule = e;
  }
  i.prototype.setScheduler = function(c) {
    var l = this._schedule;
    return this._schedule = c, this._customScheduler = !0, l;
  }, i.prototype.hasCustomScheduler = function() {
    return this._customScheduler;
  }, i.prototype.enableTrampoline = function() {
    this._trampolineEnabled = !0;
  }, i.prototype.disableTrampolineIfNecessary = function() {
    r.hasDevTools && (this._trampolineEnabled = !1);
  }, i.prototype.haveItemsQueued = function() {
    return this._isTickUsed || this._haveDrainedQueues;
  }, i.prototype.fatalError = function(c, l) {
    l ? (process.stderr.write("Fatal " + (c instanceof Error ? c.stack : c) + `
`), process.exit(2)) : this.throwLater(c);
  }, i.prototype.throwLater = function(c, l) {
    if (arguments.length === 1 && (l = c, c = function() {
      throw l;
    }), typeof setTimeout < "u")
      setTimeout(function() {
        c(l);
      }, 0);
    else try {
      this._schedule(function() {
        c(l);
      });
    } catch {
      throw new Error(`No async scheduler available

    See http://goo.gl/MqrFmX
`);
    }
  };
  function o(c, l, u) {
    this._lateQueue.push(c, l, u), this._queueTick();
  }
  function a(c, l, u) {
    this._normalQueue.push(c, l, u), this._queueTick();
  }
  function s(c) {
    this._normalQueue._pushOne(c), this._queueTick();
  }
  return r.hasDevTools ? (i.prototype.invokeLater = function(c, l, u) {
    this._trampolineEnabled ? o.call(this, c, l, u) : this._schedule(function() {
      setTimeout(function() {
        c.call(l, u);
      }, 100);
    });
  }, i.prototype.invoke = function(c, l, u) {
    this._trampolineEnabled ? a.call(this, c, l, u) : this._schedule(function() {
      c.call(l, u);
    });
  }, i.prototype.settlePromises = function(c) {
    this._trampolineEnabled ? s.call(this, c) : this._schedule(function() {
      c._settlePromises();
    });
  }) : (i.prototype.invokeLater = o, i.prototype.invoke = a, i.prototype.settlePromises = s), i.prototype._drainQueue = function(c) {
    for (; c.length() > 0; ) {
      var l = c.shift();
      if (typeof l != "function") {
        l._settlePromises();
        continue;
      }
      var u = c.shift(), f = c.shift();
      l.call(u, f);
    }
  }, i.prototype._drainQueues = function() {
    this._drainQueue(this._normalQueue), this._reset(), this._haveDrainedQueues = !0, this._drainQueue(this._lateQueue);
  }, i.prototype._queueTick = function() {
    this._isTickUsed || (this._isTickUsed = !0, this._schedule(this.drainQueues));
  }, i.prototype._reset = function() {
    this._isTickUsed = !1;
  }, oa.exports = i, oa.exports.firstLineError = t, oa.exports;
}
var Hu, M1;
function dr() {
  if (M1) return Hu;
  M1 = 1;
  var t = ki(), e = t.freeze, n = Ve(), r = n.inherits, i = n.notEnumerableProp;
  function o(y, b) {
    function v(_) {
      if (!(this instanceof v)) return new v(_);
      i(
        this,
        "message",
        typeof _ == "string" ? _ : b
      ), i(this, "name", y), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : Error.call(this);
    }
    return r(v, Error), v;
  }
  var a, s, c = o("Warning", "warning"), l = o("CancellationError", "cancellation error"), u = o("TimeoutError", "timeout error"), f = o("AggregateError", "aggregate error");
  try {
    a = TypeError, s = RangeError;
  } catch {
    a = o("TypeError", "type error"), s = o("RangeError", "range error");
  }
  for (var d = "join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "), h = 0; h < d.length; ++h)
    typeof Array.prototype[d[h]] == "function" && (f.prototype[d[h]] = Array.prototype[d[h]]);
  t.defineProperty(f.prototype, "length", {
    value: 0,
    configurable: !1,
    writable: !0,
    enumerable: !0
  }), f.prototype.isOperational = !0;
  var p = 0;
  f.prototype.toString = function() {
    var y = Array(p * 4 + 1).join(" "), b = `
` + y + `AggregateError of:
`;
    p++, y = Array(p * 4 + 1).join(" ");
    for (var v = 0; v < this.length; ++v) {
      for (var _ = this[v] === this ? "[Circular AggregateError]" : this[v] + "", x = _.split(`
`), E = 0; E < x.length; ++E)
        x[E] = y + x[E];
      _ = x.join(`
`), b += _ + `
`;
    }
    return p--, b;
  };
  function m(y) {
    if (!(this instanceof m))
      return new m(y);
    i(this, "name", "OperationalError"), i(this, "message", y), this.cause = y, this.isOperational = !0, y instanceof Error ? (i(this, "message", y.message), i(this, "stack", y.stack)) : Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
  }
  r(m, Error);
  var g = Error.__BluebirdErrorTypes__;
  return g || (g = e({
    CancellationError: l,
    TimeoutError: u,
    OperationalError: m,
    RejectionError: m,
    AggregateError: f
  }), t.defineProperty(Error, "__BluebirdErrorTypes__", {
    value: g,
    writable: !1,
    enumerable: !1,
    configurable: !1
  })), Hu = {
    Error,
    TypeError: a,
    RangeError: s,
    CancellationError: g.CancellationError,
    OperationalError: g.OperationalError,
    TimeoutError: g.TimeoutError,
    AggregateError: g.AggregateError,
    Warning: c
  }, Hu;
}
var Xu, W1;
function wk() {
  return W1 || (W1 = 1, Xu = function(t, e) {
    var n = Ve(), r = n.errorObj, i = n.isObject;
    function o(f, d) {
      if (i(f)) {
        if (f instanceof t) return f;
        var h = s(f);
        if (h === r) {
          d && d._pushContext();
          var p = t.reject(h.e);
          return d && d._popContext(), p;
        } else if (typeof h == "function") {
          if (l(f)) {
            var p = new t(e);
            return f._then(
              p._fulfill,
              p._reject,
              void 0,
              p,
              null
            ), p;
          }
          return u(f, h, d);
        }
      }
      return f;
    }
    function a(f) {
      return f.then;
    }
    function s(f) {
      try {
        return a(f);
      } catch (d) {
        return r.e = d, r;
      }
    }
    var c = {}.hasOwnProperty;
    function l(f) {
      try {
        return c.call(f, "_promise0");
      } catch {
        return !1;
      }
    }
    function u(f, d, h) {
      var p = new t(e), m = p;
      h && h._pushContext(), p._captureStackTrace(), h && h._popContext();
      var g = !0, y = n.tryCatch(d).call(f, b, v);
      g = !1, p && y === r && (p._rejectCallback(y.e, !0, !0), p = null);
      function b(_) {
        p && (p._resolveCallback(_), p = null);
      }
      function v(_) {
        p && (p._rejectCallback(_, g, !0), p = null);
      }
      return m;
    }
    return o;
  }), Xu;
}
var Gu, L1;
function _k() {
  return L1 || (L1 = 1, Gu = function(t, e, n, r, i) {
    var o = Ve();
    o.isArray;
    function a(c) {
      switch (c) {
        case -2:
          return [];
        case -3:
          return {};
      }
    }
    function s(c) {
      var l = this._promise = new t(e);
      c instanceof t && l._propagateFrom(c, 3), l._setOnCancel(this), this._values = c, this._length = 0, this._totalResolved = 0, this._init(void 0, -2);
    }
    return o.inherits(s, i), s.prototype.length = function() {
      return this._length;
    }, s.prototype.promise = function() {
      return this._promise;
    }, s.prototype._init = function c(l, u) {
      var f = n(this._values, this._promise);
      if (f instanceof t) {
        f = f._target();
        var d = f._bitField;
        if (this._values = f, (d & 50397184) === 0)
          return this._promise._setAsyncGuaranteed(), f._then(
            c,
            this._reject,
            void 0,
            this,
            u
          );
        if ((d & 33554432) !== 0)
          f = f._value();
        else return (d & 16777216) !== 0 ? this._reject(f._reason()) : this._cancel();
      }
      if (f = o.asArray(f), f === null) {
        var h = r(
          "expecting an array or an iterable object but got " + o.classString(f)
        ).reason();
        this._promise._rejectCallback(h, !1);
        return;
      }
      if (f.length === 0) {
        u === -5 ? this._resolveEmptyArray() : this._resolve(a(u));
        return;
      }
      this._iterate(f);
    }, s.prototype._iterate = function(c) {
      var l = this.getActualLength(c.length);
      this._length = l, this._values = this.shouldCopyValues() ? new Array(l) : this._values;
      for (var u = this._promise, f = !1, d = null, h = 0; h < l; ++h) {
        var p = n(c[h], u);
        p instanceof t ? (p = p._target(), d = p._bitField) : d = null, f ? d !== null && p.suppressUnhandledRejections() : d !== null ? (d & 50397184) === 0 ? (p._proxy(this, h), this._values[h] = p) : (d & 33554432) !== 0 ? f = this._promiseFulfilled(p._value(), h) : (d & 16777216) !== 0 ? f = this._promiseRejected(p._reason(), h) : f = this._promiseCancelled(h) : f = this._promiseFulfilled(p, h);
      }
      f || u._setAsyncGuaranteed();
    }, s.prototype._isResolved = function() {
      return this._values === null;
    }, s.prototype._resolve = function(c) {
      this._values = null, this._promise._fulfill(c);
    }, s.prototype._cancel = function() {
      this._isResolved() || !this._promise._isCancellable() || (this._values = null, this._promise._cancel());
    }, s.prototype._reject = function(c) {
      this._values = null, this._promise._rejectCallback(c, !1);
    }, s.prototype._promiseFulfilled = function(c, l) {
      this._values[l] = c;
      var u = ++this._totalResolved;
      return u >= this._length ? (this._resolve(this._values), !0) : !1;
    }, s.prototype._promiseCancelled = function() {
      return this._cancel(), !0;
    }, s.prototype._promiseRejected = function(c) {
      return this._totalResolved++, this._reject(c), !0;
    }, s.prototype._resultCancelled = function() {
      if (!this._isResolved()) {
        var c = this._values;
        if (this._cancel(), c instanceof t)
          c.cancel();
        else
          for (var l = 0; l < c.length; ++l)
            c[l] instanceof t && c[l].cancel();
      }
    }, s.prototype.shouldCopyValues = function() {
      return !0;
    }, s.prototype.getActualLength = function(c) {
      return c;
    }, s;
  }), Gu;
}
var Ku, P1;
function Tk() {
  return P1 || (P1 = 1, Ku = function(t) {
    var e = !1, n = [];
    t.prototype._promiseCreated = function() {
    }, t.prototype._pushContext = function() {
    }, t.prototype._popContext = function() {
      return null;
    }, t._peekContext = t.prototype._peekContext = function() {
    };
    function r() {
      this._trace = new r.CapturedTrace(o());
    }
    r.prototype._pushContext = function() {
      this._trace !== void 0 && (this._trace._promiseCreated = null, n.push(this._trace));
    }, r.prototype._popContext = function() {
      if (this._trace !== void 0) {
        var a = n.pop(), s = a._promiseCreated;
        return a._promiseCreated = null, s;
      }
      return null;
    };
    function i() {
      if (e) return new r();
    }
    function o() {
      var a = n.length - 1;
      if (a >= 0)
        return n[a];
    }
    return r.CapturedTrace = null, r.create = i, r.deactivateLongStackTraces = function() {
    }, r.activateLongStackTraces = function() {
      var a = t.prototype._pushContext, s = t.prototype._popContext, c = t._peekContext, l = t.prototype._peekContext, u = t.prototype._promiseCreated;
      r.deactivateLongStackTraces = function() {
        t.prototype._pushContext = a, t.prototype._popContext = s, t._peekContext = c, t.prototype._peekContext = l, t.prototype._promiseCreated = u, e = !1;
      }, e = !0, t.prototype._pushContext = r.prototype._pushContext, t.prototype._popContext = r.prototype._popContext, t._peekContext = t.prototype._peekContext = o, t.prototype._promiseCreated = function() {
        var f = this._peekContext();
        f && f._promiseCreated == null && (f._promiseCreated = this);
      };
    }, r;
  }), Ku;
}
var Ju, q1;
function Ek() {
  return q1 || (q1 = 1, Ju = function(t, e) {
    var n = t._getDomain, r = t._async, i = dr().Warning, o = Ve(), a = o.canAttachTrace, s, c, l = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/, u = /\((?:timers\.js):\d+:\d+\)/, f = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/, d = null, h = null, p = !1, m, g = !!(o.env("BLUEBIRD_DEBUG") != 0 && (o.env("BLUEBIRD_DEBUG") || o.env("NODE_ENV") === "development")), y = !!(o.env("BLUEBIRD_WARNINGS") != 0 && (g || o.env("BLUEBIRD_WARNINGS"))), b = !!(o.env("BLUEBIRD_LONG_STACK_TRACES") != 0 && (g || o.env("BLUEBIRD_LONG_STACK_TRACES"))), v = o.env("BLUEBIRD_W_FORGOTTEN_RETURN") != 0 && (y || !!o.env("BLUEBIRD_W_FORGOTTEN_RETURN"));
    t.prototype.suppressUnhandledRejections = function() {
      var L = this._target();
      L._bitField = L._bitField & -1048577 | 524288;
    }, t.prototype._ensurePossibleRejectionHandled = function() {
      (this._bitField & 524288) === 0 && (this._setRejectionIsUnhandled(), r.invokeLater(this._notifyUnhandledRejection, this, void 0));
    }, t.prototype._notifyUnhandledRejectionIsHandled = function() {
      ye(
        "rejectionHandled",
        s,
        void 0,
        this
      );
    }, t.prototype._setReturnedNonUndefined = function() {
      this._bitField = this._bitField | 268435456;
    }, t.prototype._returnedNonUndefined = function() {
      return (this._bitField & 268435456) !== 0;
    }, t.prototype._notifyUnhandledRejection = function() {
      if (this._isRejectionUnhandled()) {
        var L = this._settledValue();
        this._setUnhandledRejectionIsNotified(), ye(
          "unhandledRejection",
          c,
          L,
          this
        );
      }
    }, t.prototype._setUnhandledRejectionIsNotified = function() {
      this._bitField = this._bitField | 262144;
    }, t.prototype._unsetUnhandledRejectionIsNotified = function() {
      this._bitField = this._bitField & -262145;
    }, t.prototype._isUnhandledRejectionNotified = function() {
      return (this._bitField & 262144) > 0;
    }, t.prototype._setRejectionIsUnhandled = function() {
      this._bitField = this._bitField | 1048576;
    }, t.prototype._unsetRejectionIsUnhandled = function() {
      this._bitField = this._bitField & -1048577, this._isUnhandledRejectionNotified() && (this._unsetUnhandledRejectionIsNotified(), this._notifyUnhandledRejectionIsHandled());
    }, t.prototype._isRejectionUnhandled = function() {
      return (this._bitField & 1048576) > 0;
    }, t.prototype._warn = function(L, X, Y) {
      return G(L, X, Y || this);
    }, t.onPossiblyUnhandledRejection = function(L) {
      var X = n();
      c = typeof L == "function" ? X === null ? L : o.domainBind(X, L) : void 0;
    }, t.onUnhandledRejectionHandled = function(L) {
      var X = n();
      s = typeof L == "function" ? X === null ? L : o.domainBind(X, L) : void 0;
    };
    var _ = function() {
    };
    t.longStackTraces = function() {
      if (r.haveItemsQueued() && !Z.longStackTraces)
        throw new Error(`cannot enable long stack traces after promises have been created

    See http://goo.gl/MqrFmX
`);
      if (!Z.longStackTraces && V()) {
        var L = t.prototype._captureStackTrace, X = t.prototype._attachExtraTrace;
        Z.longStackTraces = !0, _ = function() {
          if (r.haveItemsQueued() && !Z.longStackTraces)
            throw new Error(`cannot enable long stack traces after promises have been created

    See http://goo.gl/MqrFmX
`);
          t.prototype._captureStackTrace = L, t.prototype._attachExtraTrace = X, e.deactivateLongStackTraces(), r.enableTrampoline(), Z.longStackTraces = !1;
        }, t.prototype._captureStackTrace = te, t.prototype._attachExtraTrace = W, e.activateLongStackTraces(), r.disableTrampolineIfNecessary();
      }
    }, t.hasLongStackTraces = function() {
      return Z.longStackTraces && V();
    };
    var x = function() {
      try {
        if (typeof CustomEvent == "function") {
          var L = new CustomEvent("CustomEvent");
          return o.global.dispatchEvent(L), function(X, Y) {
            var oe = new CustomEvent(X.toLowerCase(), {
              detail: Y,
              cancelable: !0
            });
            return !o.global.dispatchEvent(oe);
          };
        } else if (typeof Event == "function") {
          var L = new Event("CustomEvent");
          return o.global.dispatchEvent(L), function(Y, oe) {
            var De = new Event(Y.toLowerCase(), {
              cancelable: !0
            });
            return De.detail = oe, !o.global.dispatchEvent(De);
          };
        } else {
          var L = document.createEvent("CustomEvent");
          return L.initCustomEvent("testingtheevent", !1, !0, {}), o.global.dispatchEvent(L), function(Y, oe) {
            var De = document.createEvent("CustomEvent");
            return De.initCustomEvent(
              Y.toLowerCase(),
              !1,
              !0,
              oe
            ), !o.global.dispatchEvent(De);
          };
        }
      } catch {
      }
      return function() {
        return !1;
      };
    }(), E = function() {
      return o.isNode ? function() {
        return process.emit.apply(process, arguments);
      } : o.global ? function(L) {
        var X = "on" + L.toLowerCase(), Y = o.global[X];
        return Y ? (Y.apply(o.global, [].slice.call(arguments, 1)), !0) : !1;
      } : function() {
        return !1;
      };
    }();
    function S(L, X) {
      return { promise: X };
    }
    var U = {
      promiseCreated: S,
      promiseFulfilled: S,
      promiseRejected: S,
      promiseResolved: S,
      promiseCancelled: S,
      promiseChained: function(L, X, Y) {
        return { promise: X, child: Y };
      },
      warning: function(L, X) {
        return { warning: X };
      },
      unhandledRejection: function(L, X, Y) {
        return { reason: X, promise: Y };
      },
      rejectionHandled: S
    }, C = function(L) {
      var X = !1;
      try {
        X = E.apply(null, arguments);
      } catch (oe) {
        r.throwLater(oe), X = !0;
      }
      var Y = !1;
      try {
        Y = x(
          L,
          U[L].apply(null, arguments)
        );
      } catch (oe) {
        r.throwLater(oe), Y = !0;
      }
      return Y || X;
    };
    t.config = function(L) {
      if (L = Object(L), "longStackTraces" in L && (L.longStackTraces ? t.longStackTraces() : !L.longStackTraces && t.hasLongStackTraces() && _()), "warnings" in L) {
        var X = L.warnings;
        Z.warnings = !!X, v = Z.warnings, o.isObject(X) && "wForgottenReturn" in X && (v = !!X.wForgottenReturn);
      }
      if ("cancellation" in L && L.cancellation && !Z.cancellation) {
        if (r.haveItemsQueued())
          throw new Error(
            "cannot enable cancellation after promises are in use"
          );
        t.prototype._clearCancellationData = $, t.prototype._propagateFrom = N, t.prototype._onCancel = k, t.prototype._setOnCancel = w, t.prototype._attachCancellationCallback = T, t.prototype._execute = j, K = N, Z.cancellation = !0;
      }
      return "monitoring" in L && (L.monitoring && !Z.monitoring ? (Z.monitoring = !0, t.prototype._fireEvent = C) : !L.monitoring && Z.monitoring && (Z.monitoring = !1, t.prototype._fireEvent = R)), t;
    };
    function R() {
      return !1;
    }
    t.prototype._fireEvent = R, t.prototype._execute = function(L, X, Y) {
      try {
        L(X, Y);
      } catch (oe) {
        return oe;
      }
    }, t.prototype._onCancel = function() {
    }, t.prototype._setOnCancel = function(L) {
    }, t.prototype._attachCancellationCallback = function(L) {
    }, t.prototype._captureStackTrace = function() {
    }, t.prototype._attachExtraTrace = function() {
    }, t.prototype._clearCancellationData = function() {
    }, t.prototype._propagateFrom = function(L, X) {
    };
    function j(L, X, Y) {
      var oe = this;
      try {
        L(X, Y, function(De) {
          if (typeof De != "function")
            throw new TypeError("onCancel must be a function, got: " + o.toString(De));
          oe._attachCancellationCallback(De);
        });
      } catch (De) {
        return De;
      }
    }
    function T(L) {
      if (!this._isCancellable()) return this;
      var X = this._onCancel();
      X !== void 0 ? o.isArray(X) ? X.push(L) : this._setOnCancel([X, L]) : this._setOnCancel(L);
    }
    function k() {
      return this._onCancelField;
    }
    function w(L) {
      this._onCancelField = L;
    }
    function $() {
      this._cancellationParent = void 0, this._onCancelField = void 0;
    }
    function N(L, X) {
      if ((X & 1) !== 0) {
        this._cancellationParent = L;
        var Y = L._branchesRemainingToCancel;
        Y === void 0 && (Y = 0), L._branchesRemainingToCancel = Y + 1;
      }
      (X & 2) !== 0 && L._isBound() && this._setBoundTo(L._boundTo);
    }
    function M(L, X) {
      (X & 2) !== 0 && L._isBound() && this._setBoundTo(L._boundTo);
    }
    var K = M;
    function P() {
      var L = this._boundTo;
      return L !== void 0 && L instanceof t ? L.isFulfilled() ? L.value() : void 0 : L;
    }
    function te() {
      this._trace = new ie(this._peekContext());
    }
    function W(L, X) {
      if (a(L)) {
        var Y = this._trace;
        if (Y !== void 0 && X && (Y = Y._parent), Y !== void 0)
          Y.attachExtraTrace(L);
        else if (!L.__stackCleaned__) {
          var oe = de(L);
          o.notEnumerableProp(
            L,
            "stack",
            oe.message + `
` + oe.stack.join(`
`)
          ), o.notEnumerableProp(L, "__stackCleaned__", !0);
        }
      }
    }
    function B(L, X, Y, oe, De) {
      if (L === void 0 && X !== null && v) {
        if (De !== void 0 && De._returnedNonUndefined() || (oe._bitField & 65535) === 0) return;
        Y && (Y = Y + " ");
        var Te = "", Se = "";
        if (X._trace) {
          for (var Ce = X._trace.stack.split(`
`), ee = fe(Ce), ue = ee.length - 1; ue >= 0; --ue) {
            var ve = ee[ue];
            if (!u.test(ve)) {
              var Ee = ve.match(f);
              Ee && (Te = "at " + Ee[1] + ":" + Ee[2] + ":" + Ee[3] + " ");
              break;
            }
          }
          if (ee.length > 0) {
            for (var ke = ee[0], ue = 0; ue < Ce.length; ++ue)
              if (Ce[ue] === ke) {
                ue > 0 && (Se = `
` + Ce[ue - 1]);
                break;
              }
          }
        }
        var Q = "a promise was created in a " + Y + "handler " + Te + "but was not returned from it, see http://goo.gl/rRqMUw" + Se;
        oe._warn(Q, !0, X);
      }
    }
    function se(L, X) {
      var Y = L + " is deprecated and will be removed in a future version.";
      return X && (Y += " Use " + X + " instead."), G(Y);
    }
    function G(L, X, Y) {
      if (Z.warnings) {
        var oe = new i(L), De;
        if (X)
          Y._attachExtraTrace(oe);
        else if (Z.longStackTraces && (De = t._peekContext()))
          De.attachExtraTrace(oe);
        else {
          var Te = de(oe);
          oe.stack = Te.message + `
` + Te.stack.join(`
`);
        }
        C("warning", oe) || pe(oe, "", !0);
      }
    }
    function J(L, X) {
      for (var Y = 0; Y < X.length - 1; ++Y)
        X[Y].push("From previous event:"), X[Y] = X[Y].join(`
`);
      return Y < X.length && (X[Y] = X[Y].join(`
`)), L + `
` + X.join(`
`);
    }
    function ce(L) {
      for (var X = 0; X < L.length; ++X)
        (L[X].length === 0 || X + 1 < L.length && L[X][0] === L[X + 1][0]) && (L.splice(X, 1), X--);
    }
    function he(L) {
      for (var X = L[0], Y = 1; Y < L.length; ++Y) {
        for (var oe = L[Y], De = X.length - 1, Te = X[De], Se = -1, Ce = oe.length - 1; Ce >= 0; --Ce)
          if (oe[Ce] === Te) {
            Se = Ce;
            break;
          }
        for (var Ce = Se; Ce >= 0; --Ce) {
          var ee = oe[Ce];
          if (X[De] === ee)
            X.pop(), De--;
          else
            break;
        }
        X = oe;
      }
    }
    function fe(L) {
      for (var X = [], Y = 0; Y < L.length; ++Y) {
        var oe = L[Y], De = oe === "    (No stack trace)" || d.test(oe), Te = De && q(oe);
        De && !Te && (p && oe.charAt(0) !== " " && (oe = "    " + oe), X.push(oe));
      }
      return X;
    }
    function me(L) {
      for (var X = L.stack.replace(/\s+$/g, "").split(`
`), Y = 0; Y < X.length; ++Y) {
        var oe = X[Y];
        if (oe === "    (No stack trace)" || d.test(oe))
          break;
      }
      return Y > 0 && L.name != "SyntaxError" && (X = X.slice(Y)), X;
    }
    function de(L) {
      var X = L.stack, Y = L.toString();
      return X = typeof X == "string" && X.length > 0 ? me(L) : ["    (No stack trace)"], {
        message: Y,
        stack: L.name == "SyntaxError" ? X : fe(X)
      };
    }
    function pe(L, X, Y) {
      if (typeof console < "u") {
        var oe;
        if (o.isObject(L)) {
          var De = L.stack;
          oe = X + h(De, L);
        } else
          oe = X + String(L);
        typeof m == "function" ? m(oe, Y) : (typeof console.log == "function" || typeof console.log == "object") && console.log(oe);
      }
    }
    function ye(L, X, Y, oe) {
      var De = !1;
      try {
        typeof X == "function" && (De = !0, L === "rejectionHandled" ? X(oe) : X(Y, oe));
      } catch (Te) {
        r.throwLater(Te);
      }
      L === "unhandledRejection" ? !C(L, Y, oe) && !De && pe(Y, "Unhandled rejection ") : C(L, oe);
    }
    function be(L) {
      var X;
      if (typeof L == "function")
        X = "[function " + (L.name || "anonymous") + "]";
      else {
        X = L && typeof L.toString == "function" ? L.toString() : o.toString(L);
        var Y = /\[object [a-zA-Z0-9$_]+\]/;
        if (Y.test(X))
          try {
            var oe = JSON.stringify(L);
            X = oe;
          } catch {
          }
        X.length === 0 && (X = "(empty array)");
      }
      return "(<" + D(X) + ">, no stack trace)";
    }
    function D(L) {
      var X = 41;
      return L.length < X ? L : L.substr(0, X - 3) + "...";
    }
    function V() {
      return typeof ne == "function";
    }
    var q = function() {
      return !1;
    }, I = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
    function O(L) {
      var X = L.match(I);
      if (X)
        return {
          fileName: X[1],
          line: parseInt(X[2], 10)
        };
    }
    function z(L, X) {
      if (V()) {
        for (var Y = L.stack.split(`
`), oe = X.stack.split(`
`), De = -1, Te = -1, Se, Ce, ee = 0; ee < Y.length; ++ee) {
          var ue = O(Y[ee]);
          if (ue) {
            Se = ue.fileName, De = ue.line;
            break;
          }
        }
        for (var ee = 0; ee < oe.length; ++ee) {
          var ue = O(oe[ee]);
          if (ue) {
            Ce = ue.fileName, Te = ue.line;
            break;
          }
        }
        De < 0 || Te < 0 || !Se || !Ce || Se !== Ce || De >= Te || (q = function(ve) {
          if (l.test(ve)) return !0;
          var Ee = O(ve);
          return !!(Ee && Ee.fileName === Se && De <= Ee.line && Ee.line <= Te);
        });
      }
    }
    function ie(L) {
      this._parent = L, this._promisesCreated = 0;
      var X = this._length = 1 + (L === void 0 ? 0 : L._length);
      ne(this, ie), X > 32 && this.uncycle();
    }
    o.inherits(ie, Error), e.CapturedTrace = ie, ie.prototype.uncycle = function() {
      var L = this._length;
      if (!(L < 2)) {
        for (var X = [], Y = {}, oe = 0, De = this; De !== void 0; ++oe)
          X.push(De), De = De._parent;
        L = this._length = oe;
        for (var oe = L - 1; oe >= 0; --oe) {
          var Te = X[oe].stack;
          Y[Te] === void 0 && (Y[Te] = oe);
        }
        for (var oe = 0; oe < L; ++oe) {
          var Se = X[oe].stack, Ce = Y[Se];
          if (Ce !== void 0 && Ce !== oe) {
            Ce > 0 && (X[Ce - 1]._parent = void 0, X[Ce - 1]._length = 1), X[oe]._parent = void 0, X[oe]._length = 1;
            var ee = oe > 0 ? X[oe - 1] : this;
            Ce < L - 1 ? (ee._parent = X[Ce + 1], ee._parent.uncycle(), ee._length = ee._parent._length + 1) : (ee._parent = void 0, ee._length = 1);
            for (var ue = ee._length + 1, ve = oe - 2; ve >= 0; --ve)
              X[ve]._length = ue, ue++;
            return;
          }
        }
      }
    }, ie.prototype.attachExtraTrace = function(L) {
      if (!L.__stackCleaned__) {
        this.uncycle();
        for (var X = de(L), Y = X.message, oe = [X.stack], De = this; De !== void 0; )
          oe.push(fe(De.stack.split(`
`))), De = De._parent;
        he(oe), ce(oe), o.notEnumerableProp(L, "stack", J(Y, oe)), o.notEnumerableProp(L, "__stackCleaned__", !0);
      }
    };
    var ne = function() {
      var X = /^\s*at\s*/, Y = function(Se, Ce) {
        return typeof Se == "string" ? Se : Ce.name !== void 0 && Ce.message !== void 0 ? Ce.toString() : be(Ce);
      };
      if (typeof Error.stackTraceLimit == "number" && typeof Error.captureStackTrace == "function") {
        Error.stackTraceLimit += 6, d = X, h = Y;
        var oe = Error.captureStackTrace;
        return q = function(Se) {
          return l.test(Se);
        }, function(Se, Ce) {
          Error.stackTraceLimit += 6, oe(Se, Ce), Error.stackTraceLimit -= 6;
        };
      }
      var De = new Error();
      if (typeof De.stack == "string" && De.stack.split(`
`)[0].indexOf("stackDetection@") >= 0)
        return d = /@/, h = Y, p = !0, function(Ce) {
          Ce.stack = new Error().stack;
        };
      var Te;
      try {
        throw new Error();
      } catch (Se) {
        Te = "stack" in Se;
      }
      return !("stack" in De) && Te && typeof Error.stackTraceLimit == "number" ? (d = X, h = Y, function(Ce) {
        Error.stackTraceLimit += 6;
        try {
          throw new Error();
        } catch (ee) {
          Ce.stack = ee.stack;
        }
        Error.stackTraceLimit -= 6;
      }) : (h = function(Se, Ce) {
        return typeof Se == "string" ? Se : (typeof Ce == "object" || typeof Ce == "function") && Ce.name !== void 0 && Ce.message !== void 0 ? Ce.toString() : be(Ce);
      }, null);
    }();
    typeof console < "u" && typeof console.warn < "u" && (m = function(L) {
      console.warn(L);
    }, o.isNode && process.stderr.isTTY ? m = function(L, X) {
      var Y = X ? "\x1B[33m" : "\x1B[31m";
      console.warn(Y + L + `\x1B[0m
`);
    } : !o.isNode && typeof new Error().stack == "string" && (m = function(L, X) {
      console.warn(
        "%c" + L,
        X ? "color: darkorange" : "color: red"
      );
    }));
    var Z = {
      warnings: y,
      longStackTraces: !1,
      cancellation: !1,
      monitoring: !1
    };
    return b && t.longStackTraces(), {
      longStackTraces: function() {
        return Z.longStackTraces;
      },
      warnings: function() {
        return Z.warnings;
      },
      cancellation: function() {
        return Z.cancellation;
      },
      monitoring: function() {
        return Z.monitoring;
      },
      propagateFromFunction: function() {
        return K;
      },
      boundValueFunction: function() {
        return P;
      },
      checkForgottenReturns: B,
      setBounds: z,
      warn: G,
      deprecated: se,
      CapturedTrace: ie,
      fireDomEvent: x,
      fireGlobalEvent: E
    };
  }), Ju;
}
var Zu, z1;
function Ck() {
  return z1 || (z1 = 1, Zu = function(t, e) {
    var n = Ve(), r = t.CancellationError, i = n.errorObj;
    function o(f, d, h) {
      this.promise = f, this.type = d, this.handler = h, this.called = !1, this.cancelPromise = null;
    }
    o.prototype.isFinallyHandler = function() {
      return this.type === 0;
    };
    function a(f) {
      this.finallyHandler = f;
    }
    a.prototype._resultCancelled = function() {
      s(this.finallyHandler);
    };
    function s(f, d) {
      return f.cancelPromise != null ? (arguments.length > 1 ? f.cancelPromise._reject(d) : f.cancelPromise._cancel(), f.cancelPromise = null, !0) : !1;
    }
    function c() {
      return u.call(this, this.promise._target()._settledValue());
    }
    function l(f) {
      if (!s(this, f))
        return i.e = f, i;
    }
    function u(f) {
      var d = this.promise, h = this.handler;
      if (!this.called) {
        this.called = !0;
        var p = this.isFinallyHandler() ? h.call(d._boundValue()) : h.call(d._boundValue(), f);
        if (p !== void 0) {
          d._setReturnedNonUndefined();
          var m = e(p, d);
          if (m instanceof t) {
            if (this.cancelPromise != null)
              if (m._isCancelled()) {
                var g = new r("late cancellation observer");
                return d._attachExtraTrace(g), i.e = g, i;
              } else m.isPending() && m._attachCancellationCallback(
                new a(this)
              );
            return m._then(
              c,
              l,
              void 0,
              this,
              void 0
            );
          }
        }
      }
      return d.isRejected() ? (s(this), i.e = f, i) : (s(this), f);
    }
    return t.prototype._passThrough = function(f, d, h, p) {
      return typeof f != "function" ? this.then() : this._then(
        h,
        p,
        void 0,
        new o(this, d, f),
        void 0
      );
    }, t.prototype.lastly = t.prototype.finally = function(f) {
      return this._passThrough(
        f,
        0,
        u,
        u
      );
    }, t.prototype.tap = function(f) {
      return this._passThrough(f, 1, u);
    }, o;
  }), Zu;
}
var Yu, j1;
function Sk() {
  return j1 || (j1 = 1, Yu = function(t) {
    var e = Ve(), n = ki().keys, r = e.tryCatch, i = e.errorObj;
    function o(a, s, c) {
      return function(l) {
        var u = c._boundValue();
        e: for (var f = 0; f < a.length; ++f) {
          var d = a[f];
          if (d === Error || d != null && d.prototype instanceof Error) {
            if (l instanceof d)
              return r(s).call(u, l);
          } else if (typeof d == "function") {
            var h = r(d).call(u, l);
            if (h === i)
              return h;
            if (h)
              return r(s).call(u, l);
          } else if (e.isObject(l)) {
            for (var p = n(d), m = 0; m < p.length; ++m) {
              var g = p[m];
              if (d[g] != l[g])
                continue e;
            }
            return r(s).call(u, l);
          }
        }
        return t;
      };
    }
    return o;
  }), Yu;
}
var Qu, $1;
function Uw() {
  if ($1) return Qu;
  $1 = 1;
  var t = Ve(), e = t.maybeWrapAsError, n = dr(), r = n.OperationalError, i = ki();
  function o(l) {
    return l instanceof Error && i.getPrototypeOf(l) === Error.prototype;
  }
  var a = /^(?:name|message|stack|cause)$/;
  function s(l) {
    var u;
    if (o(l)) {
      u = new r(l), u.name = l.name, u.message = l.message, u.stack = l.stack;
      for (var f = i.keys(l), d = 0; d < f.length; ++d) {
        var h = f[d];
        a.test(h) || (u[h] = l[h]);
      }
      return u;
    }
    return t.markAsOriginatingFromRejection(l), l;
  }
  function c(l, u) {
    return function(f, d) {
      if (l !== null) {
        if (f) {
          var h = s(e(f));
          l._attachExtraTrace(h), l._reject(h);
        } else if (!u)
          l._fulfill(d);
        else {
          for (var p = arguments.length, m = new Array(Math.max(p - 1, 0)), g = 1; g < p; ++g)
            m[g - 1] = arguments[g];
          l._fulfill(m);
        }
        l = null;
      }
    };
  }
  return Qu = c, Qu;
}
var ef, V1;
function Ak() {
  return V1 || (V1 = 1, ef = function(t, e, n, r, i) {
    var o = Ve(), a = o.tryCatch;
    t.method = function(s) {
      if (typeof s != "function")
        throw new t.TypeError("expecting a function but got " + o.classString(s));
      return function() {
        var c = new t(e);
        c._captureStackTrace(), c._pushContext();
        var l = a(s).apply(this, arguments), u = c._popContext();
        return i.checkForgottenReturns(
          l,
          u,
          "Promise.method",
          c
        ), c._resolveFromSyncValue(l), c;
      };
    }, t.attempt = t.try = function(s) {
      if (typeof s != "function")
        return r("expecting a function but got " + o.classString(s));
      var c = new t(e);
      c._captureStackTrace(), c._pushContext();
      var l;
      if (arguments.length > 1) {
        i.deprecated("calling Promise.try with more than 1 argument");
        var u = arguments[1], f = arguments[2];
        l = o.isArray(u) ? a(s).apply(f, u) : a(s).call(f, u);
      } else
        l = a(s)();
      var d = c._popContext();
      return i.checkForgottenReturns(
        l,
        d,
        "Promise.try",
        c
      ), c._resolveFromSyncValue(l), c;
    }, t.prototype._resolveFromSyncValue = function(s) {
      s === o.errorObj ? this._rejectCallback(s.e, !1) : this._resolveCallback(s, !0);
    };
  }), ef;
}
var tf, H1;
function Uk() {
  return H1 || (H1 = 1, tf = function(t, e, n, r) {
    var i = !1, o = function(l, u) {
      this._reject(u);
    }, a = function(l, u) {
      u.promiseRejectionQueued = !0, u.bindingPromise._then(o, o, null, this, l);
    }, s = function(l, u) {
      (this._bitField & 50397184) === 0 && this._resolveCallback(u.target);
    }, c = function(l, u) {
      u.promiseRejectionQueued || this._reject(l);
    };
    t.prototype.bind = function(l) {
      i || (i = !0, t.prototype._propagateFrom = r.propagateFromFunction(), t.prototype._boundValue = r.boundValueFunction());
      var u = n(l), f = new t(e);
      f._propagateFrom(this, 1);
      var d = this._target();
      if (f._setBoundTo(u), u instanceof t) {
        var h = {
          promiseRejectionQueued: !1,
          promise: f,
          target: d,
          bindingPromise: u
        };
        d._then(e, a, void 0, f, h), u._then(
          s,
          c,
          void 0,
          f,
          h
        ), f._setOnCancel(u);
      } else
        f._resolveCallback(d);
      return f;
    }, t.prototype._setBoundTo = function(l) {
      l !== void 0 ? (this._bitField = this._bitField | 2097152, this._boundTo = l) : this._bitField = this._bitField & -2097153;
    }, t.prototype._isBound = function() {
      return (this._bitField & 2097152) === 2097152;
    }, t.bind = function(l, u) {
      return t.resolve(u).bind(l);
    };
  }), tf;
}
var nf, X1;
function kk() {
  return X1 || (X1 = 1, nf = function(t, e, n, r) {
    var i = Ve(), o = i.tryCatch, a = i.errorObj, s = t._async;
    t.prototype.break = t.prototype.cancel = function() {
      if (!r.cancellation()) return this._warn("cancellation is disabled");
      for (var c = this, l = c; c._isCancellable(); ) {
        if (!c._cancelBy(l)) {
          l._isFollowing() ? l._followee().cancel() : l._cancelBranched();
          break;
        }
        var u = c._cancellationParent;
        if (u == null || !u._isCancellable()) {
          c._isFollowing() ? c._followee().cancel() : c._cancelBranched();
          break;
        } else
          c._isFollowing() && c._followee().cancel(), c._setWillBeCancelled(), l = c, c = u;
      }
    }, t.prototype._branchHasCancelled = function() {
      this._branchesRemainingToCancel--;
    }, t.prototype._enoughBranchesHaveCancelled = function() {
      return this._branchesRemainingToCancel === void 0 || this._branchesRemainingToCancel <= 0;
    }, t.prototype._cancelBy = function(c) {
      return c === this ? (this._branchesRemainingToCancel = 0, this._invokeOnCancel(), !0) : (this._branchHasCancelled(), this._enoughBranchesHaveCancelled() ? (this._invokeOnCancel(), !0) : !1);
    }, t.prototype._cancelBranched = function() {
      this._enoughBranchesHaveCancelled() && this._cancel();
    }, t.prototype._cancel = function() {
      this._isCancellable() && (this._setCancelled(), s.invoke(this._cancelPromises, this, void 0));
    }, t.prototype._cancelPromises = function() {
      this._length() > 0 && this._settlePromises();
    }, t.prototype._unsetOnCancel = function() {
      this._onCancelField = void 0;
    }, t.prototype._isCancellable = function() {
      return this.isPending() && !this._isCancelled();
    }, t.prototype.isCancellable = function() {
      return this.isPending() && !this.isCancelled();
    }, t.prototype._doInvokeOnCancel = function(c, l) {
      if (i.isArray(c))
        for (var u = 0; u < c.length; ++u)
          this._doInvokeOnCancel(c[u], l);
      else if (c !== void 0)
        if (typeof c == "function") {
          if (!l) {
            var f = o(c).call(this._boundValue());
            f === a && (this._attachExtraTrace(f.e), s.throwLater(f.e));
          }
        } else
          c._resultCancelled(this);
    }, t.prototype._invokeOnCancel = function() {
      var c = this._onCancel();
      this._unsetOnCancel(), s.invoke(this._doInvokeOnCancel, this, c);
    }, t.prototype._invokeInternalOnCancel = function() {
      this._isCancellable() && (this._doInvokeOnCancel(this._onCancel(), !0), this._unsetOnCancel());
    }, t.prototype._resultCancelled = function() {
      this.cancel();
    };
  }), nf;
}
var rf, G1;
function Fk() {
  return G1 || (G1 = 1, rf = function(t) {
    function e() {
      return this.value;
    }
    function n() {
      throw this.reason;
    }
    t.prototype.return = t.prototype.thenReturn = function(r) {
      return r instanceof t && r.suppressUnhandledRejections(), this._then(
        e,
        void 0,
        void 0,
        { value: r },
        void 0
      );
    }, t.prototype.throw = t.prototype.thenThrow = function(r) {
      return this._then(
        n,
        void 0,
        void 0,
        { reason: r },
        void 0
      );
    }, t.prototype.catchThrow = function(r) {
      if (arguments.length <= 1)
        return this._then(
          void 0,
          n,
          void 0,
          { reason: r },
          void 0
        );
      var i = arguments[1], o = function() {
        throw i;
      };
      return this.caught(r, o);
    }, t.prototype.catchReturn = function(r) {
      if (arguments.length <= 1)
        return r instanceof t && r.suppressUnhandledRejections(), this._then(
          void 0,
          e,
          void 0,
          { value: r },
          void 0
        );
      var i = arguments[1];
      i instanceof t && i.suppressUnhandledRejections();
      var o = function() {
        return i;
      };
      return this.caught(r, o);
    };
  }), rf;
}
var of, K1;
function Ok() {
  return K1 || (K1 = 1, of = function(t) {
    function e(c) {
      c !== void 0 ? (c = c._target(), this._bitField = c._bitField, this._settledValueField = c._isFateSealed() ? c._settledValue() : void 0) : (this._bitField = 0, this._settledValueField = void 0);
    }
    e.prototype._settledValue = function() {
      return this._settledValueField;
    };
    var n = e.prototype.value = function() {
      if (!this.isFulfilled())
        throw new TypeError(`cannot get fulfillment value of a non-fulfilled promise

    See http://goo.gl/MqrFmX
`);
      return this._settledValue();
    }, r = e.prototype.error = e.prototype.reason = function() {
      if (!this.isRejected())
        throw new TypeError(`cannot get rejection reason of a non-rejected promise

    See http://goo.gl/MqrFmX
`);
      return this._settledValue();
    }, i = e.prototype.isFulfilled = function() {
      return (this._bitField & 33554432) !== 0;
    }, o = e.prototype.isRejected = function() {
      return (this._bitField & 16777216) !== 0;
    }, a = e.prototype.isPending = function() {
      return (this._bitField & 50397184) === 0;
    }, s = e.prototype.isResolved = function() {
      return (this._bitField & 50331648) !== 0;
    };
    e.prototype.isCancelled = function() {
      return (this._bitField & 8454144) !== 0;
    }, t.prototype.__isCancelled = function() {
      return (this._bitField & 65536) === 65536;
    }, t.prototype._isCancelled = function() {
      return this._target().__isCancelled();
    }, t.prototype.isCancelled = function() {
      return (this._target()._bitField & 8454144) !== 0;
    }, t.prototype.isPending = function() {
      return a.call(this._target());
    }, t.prototype.isRejected = function() {
      return o.call(this._target());
    }, t.prototype.isFulfilled = function() {
      return i.call(this._target());
    }, t.prototype.isResolved = function() {
      return s.call(this._target());
    }, t.prototype.value = function() {
      return n.call(this._target());
    }, t.prototype.reason = function() {
      var c = this._target();
      return c._unsetRejectionIsUnhandled(), r.call(c);
    }, t.prototype._value = function() {
      return this._settledValue();
    }, t.prototype._reason = function() {
      return this._unsetRejectionIsUnhandled(), this._settledValue();
    }, t.PromiseInspection = e;
  }), of;
}
var af, J1;
function Rk() {
  return J1 || (J1 = 1, af = function(t, e, n, r, i, o) {
    var a = Ve(), s = a.canEvaluate, c = a.tryCatch, l = a.errorObj, u;
    if (s) {
      for (var f = function(b) {
        return new Function("value", "holder", `                             
	            'use strict';                                                    
	            holder.pIndex = value;                                           
	            holder.checkFulfillment(this);                                   
	            `.replace(/Index/g, b));
      }, d = function(b) {
        return new Function("promise", "holder", `                           
	            'use strict';                                                    
	            holder.pIndex = promise;                                         
	            `.replace(/Index/g, b));
      }, h = function(b) {
        for (var v = new Array(b), _ = 0; _ < v.length; ++_)
          v[_] = "this.p" + (_ + 1);
        var x = v.join(" = ") + " = null;", E = `var promise;
` + v.map(function(R) {
          return `                                                         
	                promise = ` + R + `;                                      
	                if (promise instanceof Promise) {                            
	                    promise.cancel();                                        
	                }                                                            
	            `;
        }).join(`
`), S = v.join(", "), U = "Holder$" + b, C = `return function(tryCatch, errorObj, Promise, async) {    
	            'use strict';                                                    
	            function [TheName](fn) {                                         
	                [TheProperties]                                              
	                this.fn = fn;                                                
	                this.asyncNeeded = true;                                     
	                this.now = 0;                                                
	            }                                                                
	                                                                             
	            [TheName].prototype._callFunction = function(promise) {          
	                promise._pushContext();                                      
	                var ret = tryCatch(this.fn)([ThePassedArguments]);           
	                promise._popContext();                                       
	                if (ret === errorObj) {                                      
	                    promise._rejectCallback(ret.e, false);                   
	                } else {                                                     
	                    promise._resolveCallback(ret);                           
	                }                                                            
	            };                                                               
	                                                                             
	            [TheName].prototype.checkFulfillment = function(promise) {       
	                var now = ++this.now;                                        
	                if (now === [TheTotal]) {                                    
	                    if (this.asyncNeeded) {                                  
	                        async.invoke(this._callFunction, this, promise);     
	                    } else {                                                 
	                        this._callFunction(promise);                         
	                    }                                                        
	                                                                             
	                }                                                            
	            };                                                               
	                                                                             
	            [TheName].prototype._resultCancelled = function() {              
	                [CancellationCode]                                           
	            };                                                               
	                                                                             
	            return [TheName];                                                
	        }(tryCatch, errorObj, Promise, async);                               
	        `;
        return C = C.replace(/\[TheName\]/g, U).replace(/\[TheTotal\]/g, b).replace(/\[ThePassedArguments\]/g, S).replace(/\[TheProperties\]/g, x).replace(/\[CancellationCode\]/g, E), new Function("tryCatch", "errorObj", "Promise", "async", C)(c, l, t, i);
      }, p = [], m = [], g = [], y = 0; y < 8; ++y)
        p.push(h(y + 1)), m.push(f(y + 1)), g.push(d(y + 1));
      u = function(b) {
        this._reject(b);
      };
    }
    t.join = function() {
      var b = arguments.length - 1, v;
      if (b > 0 && typeof arguments[b] == "function" && (v = arguments[b], b <= 8 && s)) {
        var w = new t(r);
        w._captureStackTrace();
        for (var _ = p[b - 1], x = new _(v), E = m, S = 0; S < b; ++S) {
          var U = n(arguments[S], w);
          if (U instanceof t) {
            U = U._target();
            var C = U._bitField;
            (C & 50397184) === 0 ? (U._then(
              E[S],
              u,
              void 0,
              w,
              x
            ), g[S](U, x), x.asyncNeeded = !1) : (C & 33554432) !== 0 ? E[S].call(
              w,
              U._value(),
              x
            ) : (C & 16777216) !== 0 ? w._reject(U._reason()) : w._cancel();
          } else
            E[S].call(w, U, x);
        }
        if (!w._isFateSealed()) {
          if (x.asyncNeeded) {
            var R = o();
            R !== null && (x.fn = a.domainBind(R, x.fn));
          }
          w._setAsyncGuaranteed(), w._setOnCancel(x);
        }
        return w;
      }
      for (var j = arguments.length, T = new Array(j), k = 0; k < j; ++k)
        T[k] = arguments[k];
      v && T.pop();
      var w = new e(T).promise();
      return v !== void 0 ? w.spread(v) : w;
    };
  }), af;
}
var sf, Z1;
function Nk() {
  return Z1 || (Z1 = 1, sf = function(t, e, n, r, i, o) {
    var a = t._getDomain, s = Ve(), c = s.tryCatch, l = s.errorObj, u = t._async;
    function f(h, p, m, g) {
      this.constructor$(h), this._promise._captureStackTrace();
      var y = a();
      this._callback = y === null ? p : s.domainBind(y, p), this._preservedValues = g === i ? new Array(this.length()) : null, this._limit = m, this._inFlight = 0, this._queue = [], u.invoke(this._asyncInit, this, void 0);
    }
    s.inherits(f, e), f.prototype._asyncInit = function() {
      this._init$(void 0, -2);
    }, f.prototype._init = function() {
    }, f.prototype._promiseFulfilled = function(h, p) {
      var m = this._values, g = this.length(), y = this._preservedValues, b = this._limit;
      if (p < 0) {
        if (p = p * -1 - 1, m[p] = h, b >= 1 && (this._inFlight--, this._drainQueue(), this._isResolved()))
          return !0;
      } else {
        if (b >= 1 && this._inFlight >= b)
          return m[p] = h, this._queue.push(p), !1;
        y !== null && (y[p] = h);
        var v = this._promise, _ = this._callback, x = v._boundValue();
        v._pushContext();
        var E = c(_).call(x, h, p, g), S = v._popContext();
        if (o.checkForgottenReturns(
          E,
          S,
          y !== null ? "Promise.filter" : "Promise.map",
          v
        ), E === l)
          return this._reject(E.e), !0;
        var U = r(E, this._promise);
        if (U instanceof t) {
          U = U._target();
          var C = U._bitField;
          if ((C & 50397184) === 0)
            return b >= 1 && this._inFlight++, m[p] = U, U._proxy(this, (p + 1) * -1), !1;
          if ((C & 33554432) !== 0)
            E = U._value();
          else return (C & 16777216) !== 0 ? (this._reject(U._reason()), !0) : (this._cancel(), !0);
        }
        m[p] = E;
      }
      var R = ++this._totalResolved;
      return R >= g ? (y !== null ? this._filter(m, y) : this._resolve(m), !0) : !1;
    }, f.prototype._drainQueue = function() {
      for (var h = this._queue, p = this._limit, m = this._values; h.length > 0 && this._inFlight < p; ) {
        if (this._isResolved()) return;
        var g = h.pop();
        this._promiseFulfilled(m[g], g);
      }
    }, f.prototype._filter = function(h, p) {
      for (var m = p.length, g = new Array(m), y = 0, b = 0; b < m; ++b)
        h[b] && (g[y++] = p[b]);
      g.length = y, this._resolve(g);
    }, f.prototype.preservedValues = function() {
      return this._preservedValues;
    };
    function d(h, p, m, g) {
      if (typeof p != "function")
        return n("expecting a function but got " + s.classString(p));
      var y = 0;
      if (m !== void 0)
        if (typeof m == "object" && m !== null) {
          if (typeof m.concurrency != "number")
            return t.reject(
              new TypeError("'concurrency' must be a number but it is " + s.classString(m.concurrency))
            );
          y = m.concurrency;
        } else
          return t.reject(new TypeError(
            "options argument must be an object but it is " + s.classString(m)
          ));
      return y = typeof y == "number" && isFinite(y) && y >= 1 ? y : 0, new f(h, p, y, g).promise();
    }
    t.prototype.map = function(h, p) {
      return d(this, h, p, null);
    }, t.map = function(h, p, m, g) {
      return d(h, p, m, g);
    };
  }), sf;
}
var cf, Y1;
function Bk() {
  if (Y1) return cf;
  Y1 = 1;
  var t = Object.create;
  if (t) {
    var e = t(null), n = t(null);
    e[" size"] = n[" size"] = 0;
  }
  return cf = function(r) {
    var i = Ve(), o = i.canEvaluate, a = i.isIdentifier, s, c;
    {
      var l = function(g) {
        return new Function("ensureMethod", `                                    
	        return function(obj) {                                               
	            'use strict'                                                     
	            var len = this.length;                                           
	            ensureMethod(obj, 'methodName');                                 
	            switch(len) {                                                    
	                case 1: return obj.methodName(this[0]);                      
	                case 2: return obj.methodName(this[0], this[1]);             
	                case 3: return obj.methodName(this[0], this[1], this[2]);    
	                case 0: return obj.methodName();                             
	                default:                                                     
	                    return obj.methodName.apply(obj, this);                  
	            }                                                                
	        };                                                                   
	        `.replace(/methodName/g, g))(d);
      }, u = function(g) {
        return new Function("obj", `                                             
	        'use strict';                                                        
	        return obj.propertyName;                                             
	        `.replace("propertyName", g));
      }, f = function(g, y, b) {
        var v = b[g];
        if (typeof v != "function") {
          if (!a(g))
            return null;
          if (v = y(g), b[g] = v, b[" size"]++, b[" size"] > 512) {
            for (var _ = Object.keys(b), x = 0; x < 256; ++x) delete b[_[x]];
            b[" size"] = _.length - 256;
          }
        }
        return v;
      };
      s = function(g) {
        return f(g, l, e);
      }, c = function(g) {
        return f(g, u, n);
      };
    }
    function d(g, y) {
      var b;
      if (g != null && (b = g[y]), typeof b != "function") {
        var v = "Object " + i.classString(g) + " has no method '" + i.toString(y) + "'";
        throw new r.TypeError(v);
      }
      return b;
    }
    function h(g) {
      var y = this.pop(), b = d(g, y);
      return b.apply(g, this);
    }
    r.prototype.call = function(g) {
      for (var y = arguments.length, b = new Array(Math.max(y - 1, 0)), v = 1; v < y; ++v)
        b[v - 1] = arguments[v];
      if (o) {
        var _ = s(g);
        if (_ !== null)
          return this._then(
            _,
            void 0,
            void 0,
            b,
            void 0
          );
      }
      return b.push(g), this._then(h, void 0, void 0, b, void 0);
    };
    function p(g) {
      return g[this];
    }
    function m(g) {
      var y = +this;
      return y < 0 && (y = Math.max(0, y + g.length)), g[y];
    }
    r.prototype.get = function(g) {
      var y = typeof g == "number", b;
      if (y)
        b = m;
      else if (o) {
        var v = c(g);
        b = v !== null ? v : p;
      } else
        b = p;
      return this._then(b, void 0, void 0, g, void 0);
    };
  }, cf;
}
var lf, Q1;
function Ik() {
  return Q1 || (Q1 = 1, lf = function(t, e, n, r, i, o) {
    var a = Ve(), s = dr().TypeError, c = Ve().inherits, l = a.errorObj, u = a.tryCatch, f = {};
    function d(v) {
      setTimeout(function() {
        throw v;
      }, 0);
    }
    function h(v) {
      var _ = n(v);
      return _ !== v && typeof v._isDisposable == "function" && typeof v._getDisposer == "function" && v._isDisposable() && _._setDisposable(v._getDisposer()), _;
    }
    function p(v, _) {
      var x = 0, E = v.length, S = new t(i);
      function U() {
        if (x >= E) return S._fulfill();
        var C = h(v[x++]);
        if (C instanceof t && C._isDisposable()) {
          try {
            C = n(
              C._getDisposer().tryDispose(_),
              v.promise
            );
          } catch (R) {
            return d(R);
          }
          if (C instanceof t)
            return C._then(
              U,
              d,
              null,
              null,
              null
            );
        }
        U();
      }
      return U(), S;
    }
    function m(v, _, x) {
      this._data = v, this._promise = _, this._context = x;
    }
    m.prototype.data = function() {
      return this._data;
    }, m.prototype.promise = function() {
      return this._promise;
    }, m.prototype.resource = function() {
      return this.promise().isFulfilled() ? this.promise().value() : f;
    }, m.prototype.tryDispose = function(v) {
      var _ = this.resource(), x = this._context;
      x !== void 0 && x._pushContext();
      var E = _ !== f ? this.doDispose(_, v) : null;
      return x !== void 0 && x._popContext(), this._promise._unsetDisposable(), this._data = null, E;
    }, m.isDisposer = function(v) {
      return v != null && typeof v.resource == "function" && typeof v.tryDispose == "function";
    };
    function g(v, _, x) {
      this.constructor$(v, _, x);
    }
    c(g, m), g.prototype.doDispose = function(v, _) {
      var x = this.data();
      return x.call(v, v, _);
    };
    function y(v) {
      return m.isDisposer(v) ? (this.resources[this.index]._setDisposable(v), v.promise()) : v;
    }
    function b(v) {
      this.length = v, this.promise = null, this[v - 1] = null;
    }
    b.prototype._resultCancelled = function() {
      for (var v = this.length, _ = 0; _ < v; ++_) {
        var x = this[_];
        x instanceof t && x.cancel();
      }
    }, t.using = function() {
      var v = arguments.length;
      if (v < 2) return e(
        "you must pass at least 2 arguments to Promise.using"
      );
      var _ = arguments[v - 1];
      if (typeof _ != "function")
        return e("expecting a function but got " + a.classString(_));
      var x, E = !0;
      v === 2 && Array.isArray(arguments[0]) ? (x = arguments[0], v = x.length, E = !1) : (x = arguments, v--);
      for (var S = new b(v), U = 0; U < v; ++U) {
        var C = x[U];
        if (m.isDisposer(C)) {
          var R = C;
          C = C.promise(), C._setDisposable(R);
        } else {
          var j = n(C);
          j instanceof t && (C = j._then(y, null, null, {
            resources: S,
            index: U
          }, void 0));
        }
        S[U] = C;
      }
      for (var T = new Array(S.length), U = 0; U < T.length; ++U)
        T[U] = t.resolve(S[U]).reflect();
      var k = t.all(T).then(function($) {
        for (var N = 0; N < $.length; ++N) {
          var M = $[N];
          if (M.isRejected())
            return l.e = M.error(), l;
          if (!M.isFulfilled()) {
            k.cancel();
            return;
          }
          $[N] = M.value();
        }
        w._pushContext(), _ = u(_);
        var K = E ? _.apply(void 0, $) : _($), P = w._popContext();
        return o.checkForgottenReturns(
          K,
          P,
          "Promise.using",
          w
        ), K;
      }), w = k.lastly(function() {
        var $ = new t.PromiseInspection(k);
        return p(S, $);
      });
      return S.promise = w, w._setOnCancel(S), w;
    }, t.prototype._setDisposable = function(v) {
      this._bitField = this._bitField | 131072, this._disposer = v;
    }, t.prototype._isDisposable = function() {
      return (this._bitField & 131072) > 0;
    }, t.prototype._getDisposer = function() {
      return this._disposer;
    }, t.prototype._unsetDisposable = function() {
      this._bitField = this._bitField & -131073, this._disposer = void 0;
    }, t.prototype.disposer = function(v) {
      if (typeof v == "function")
        return new g(v, this, r());
      throw new s();
    };
  }), lf;
}
var uf, eb;
function Mk() {
  return eb || (eb = 1, uf = function(t, e, n) {
    var r = Ve(), i = t.TimeoutError;
    function o(f) {
      this.handle = f;
    }
    o.prototype._resultCancelled = function() {
      clearTimeout(this.handle);
    };
    var a = function(f) {
      return s(+this).thenReturn(f);
    }, s = t.delay = function(f, d) {
      var h, p;
      return d !== void 0 ? (h = t.resolve(d)._then(a, null, null, f, void 0), n.cancellation() && d instanceof t && h._setOnCancel(d)) : (h = new t(e), p = setTimeout(function() {
        h._fulfill();
      }, +f), n.cancellation() && h._setOnCancel(new o(p)), h._captureStackTrace()), h._setAsyncGuaranteed(), h;
    };
    t.prototype.delay = function(f) {
      return s(f, this);
    };
    var c = function(f, d, h) {
      var p;
      typeof d != "string" ? d instanceof Error ? p = d : p = new i("operation timed out") : p = new i(d), r.markAsOriginatingFromRejection(p), f._attachExtraTrace(p), f._reject(p), h != null && h.cancel();
    };
    function l(f) {
      return clearTimeout(this.handle), f;
    }
    function u(f) {
      throw clearTimeout(this.handle), f;
    }
    t.prototype.timeout = function(f, d) {
      f = +f;
      var h, p, m = new o(setTimeout(function() {
        h.isPending() && c(h, d, p);
      }, f));
      return n.cancellation() ? (p = this.then(), h = p._then(
        l,
        u,
        void 0,
        m,
        void 0
      ), h._setOnCancel(m)) : h = this._then(
        l,
        u,
        void 0,
        m,
        void 0
      ), h;
    };
  }), uf;
}
var ff, tb;
function Wk() {
  return tb || (tb = 1, ff = function(t, e, n, r, i, o) {
    var a = dr(), s = a.TypeError, c = Ve(), l = c.errorObj, u = c.tryCatch, f = [];
    function d(p, m, g) {
      for (var y = 0; y < m.length; ++y) {
        g._pushContext();
        var b = u(m[y])(p);
        if (g._popContext(), b === l) {
          g._pushContext();
          var v = t.reject(l.e);
          return g._popContext(), v;
        }
        var _ = r(b, g);
        if (_ instanceof t) return _;
      }
      return null;
    }
    function h(p, m, g, y) {
      if (o.cancellation()) {
        var b = new t(n), v = this._finallyPromise = new t(n);
        this._promise = b.lastly(function() {
          return v;
        }), b._captureStackTrace(), b._setOnCancel(this);
      } else {
        var _ = this._promise = new t(n);
        _._captureStackTrace();
      }
      this._stack = y, this._generatorFunction = p, this._receiver = m, this._generator = void 0, this._yieldHandlers = typeof g == "function" ? [g].concat(f) : f, this._yieldedPromise = null, this._cancellationPhase = !1;
    }
    c.inherits(h, i), h.prototype._isResolved = function() {
      return this._promise === null;
    }, h.prototype._cleanup = function() {
      this._promise = this._generator = null, o.cancellation() && this._finallyPromise !== null && (this._finallyPromise._fulfill(), this._finallyPromise = null);
    }, h.prototype._promiseCancelled = function() {
      if (!this._isResolved()) {
        var p = typeof this._generator.return < "u", m;
        if (p)
          this._promise._pushContext(), m = u(this._generator.return).call(
            this._generator,
            void 0
          ), this._promise._popContext();
        else {
          var g = new t.CancellationError(
            "generator .return() sentinel"
          );
          t.coroutine.returnSentinel = g, this._promise._attachExtraTrace(g), this._promise._pushContext(), m = u(this._generator.throw).call(
            this._generator,
            g
          ), this._promise._popContext();
        }
        this._cancellationPhase = !0, this._yieldedPromise = null, this._continue(m);
      }
    }, h.prototype._promiseFulfilled = function(p) {
      this._yieldedPromise = null, this._promise._pushContext();
      var m = u(this._generator.next).call(this._generator, p);
      this._promise._popContext(), this._continue(m);
    }, h.prototype._promiseRejected = function(p) {
      this._yieldedPromise = null, this._promise._attachExtraTrace(p), this._promise._pushContext();
      var m = u(this._generator.throw).call(this._generator, p);
      this._promise._popContext(), this._continue(m);
    }, h.prototype._resultCancelled = function() {
      if (this._yieldedPromise instanceof t) {
        var p = this._yieldedPromise;
        this._yieldedPromise = null, p.cancel();
      }
    }, h.prototype.promise = function() {
      return this._promise;
    }, h.prototype._run = function() {
      this._generator = this._generatorFunction.call(this._receiver), this._receiver = this._generatorFunction = void 0, this._promiseFulfilled(void 0);
    }, h.prototype._continue = function(p) {
      var m = this._promise;
      if (p === l)
        return this._cleanup(), this._cancellationPhase ? m.cancel() : m._rejectCallback(p.e, !1);
      var g = p.value;
      if (p.done === !0)
        return this._cleanup(), this._cancellationPhase ? m.cancel() : m._resolveCallback(g);
      var y = r(g, this._promise);
      if (!(y instanceof t) && (y = d(
        y,
        this._yieldHandlers,
        this._promise
      ), y === null)) {
        this._promiseRejected(
          new s(
            `A value %s was yielded that could not be treated as a promise

    See http://goo.gl/MqrFmX

`.replace("%s", g) + `From coroutine:
` + this._stack.split(`
`).slice(1, -7).join(`
`)
          )
        );
        return;
      }
      y = y._target();
      var b = y._bitField;
      (b & 50397184) === 0 ? (this._yieldedPromise = y, y._proxy(this, null)) : (b & 33554432) !== 0 ? t._async.invoke(
        this._promiseFulfilled,
        this,
        y._value()
      ) : (b & 16777216) !== 0 ? t._async.invoke(
        this._promiseRejected,
        this,
        y._reason()
      ) : this._promiseCancelled();
    }, t.coroutine = function(p, m) {
      if (typeof p != "function")
        throw new s(`generatorFunction must be a function

    See http://goo.gl/MqrFmX
`);
      var g = Object(m).yieldHandler, y = h, b = new Error().stack;
      return function() {
        var v = p.apply(this, arguments), _ = new y(
          void 0,
          void 0,
          g,
          b
        ), x = _.promise();
        return _._generator = v, _._promiseFulfilled(void 0), x;
      };
    }, t.coroutine.addYieldHandler = function(p) {
      if (typeof p != "function")
        throw new s("expecting a function but got " + c.classString(p));
      f.push(p);
    }, t.spawn = function(p) {
      if (o.deprecated("Promise.spawn()", "Promise.coroutine()"), typeof p != "function")
        return e(`generatorFunction must be a function

    See http://goo.gl/MqrFmX
`);
      var m = new h(p, this), g = m.promise();
      return m._run(t.spawn), g;
    };
  }), ff;
}
var df, nb;
function Lk() {
  return nb || (nb = 1, df = function(t) {
    var e = Ve(), n = t._async, r = e.tryCatch, i = e.errorObj;
    function o(c, l) {
      var u = this;
      if (!e.isArray(c)) return a.call(u, c, l);
      var f = r(l).apply(u._boundValue(), [null].concat(c));
      f === i && n.throwLater(f.e);
    }
    function a(c, l) {
      var u = this, f = u._boundValue(), d = c === void 0 ? r(l).call(f, null) : r(l).call(f, null, c);
      d === i && n.throwLater(d.e);
    }
    function s(c, l) {
      var u = this;
      if (!c) {
        var f = new Error(c + "");
        f.cause = c, c = f;
      }
      var d = r(l).call(u._boundValue(), c);
      d === i && n.throwLater(d.e);
    }
    t.prototype.asCallback = t.prototype.nodeify = function(c, l) {
      if (typeof c == "function") {
        var u = a;
        l !== void 0 && Object(l).spread && (u = o), this._then(
          u,
          s,
          void 0,
          this,
          c
        );
      }
      return this;
    };
  }), df;
}
var hf, rb;
function Pk() {
  return rb || (rb = 1, hf = function(t, e) {
    var n = {}, r = Ve(), i = Uw(), o = r.withAppended, a = r.maybeWrapAsError, s = r.canEvaluate, c = dr().TypeError, l = "Async", u = { __isPromisified__: !0 }, f = [
      "arity",
      "length",
      "name",
      "arguments",
      "caller",
      "callee",
      "prototype",
      "__isPromisified__"
    ], d = new RegExp("^(?:" + f.join("|") + ")$"), h = function(k) {
      return r.isIdentifier(k) && k.charAt(0) !== "_" && k !== "constructor";
    };
    function p(k) {
      return !d.test(k);
    }
    function m(k) {
      try {
        return k.__isPromisified__ === !0;
      } catch {
        return !1;
      }
    }
    function g(k, w, $) {
      var N = r.getDataPropertyOrDefault(
        k,
        w + $,
        u
      );
      return N ? m(N) : !1;
    }
    function y(k, w, $) {
      for (var N = 0; N < k.length; N += 2) {
        var M = k[N];
        if ($.test(M)) {
          for (var K = M.replace($, ""), P = 0; P < k.length; P += 2)
            if (k[P] === K)
              throw new c(`Cannot promisify an API that has normal methods with '%s'-suffix

    See http://goo.gl/MqrFmX
`.replace("%s", w));
        }
      }
    }
    function b(k, w, $, N) {
      for (var M = r.inheritedDataKeys(k), K = [], P = 0; P < M.length; ++P) {
        var te = M[P], W = k[te], B = N === h ? !0 : h(te);
        typeof W == "function" && !m(W) && !g(k, te, w) && N(te, W, k, B) && K.push(te, W);
      }
      return y(K, w, $), K;
    }
    var v = function(k) {
      return k.replace(/([$])/, "\\$");
    }, _;
    {
      var x = function(k) {
        for (var w = [k], $ = Math.max(0, k - 1 - 3), N = k - 1; N >= $; --N)
          w.push(N);
        for (var N = k + 1; N <= 3; ++N)
          w.push(N);
        return w;
      }, E = function(k) {
        return r.filledRange(k, "_arg", "");
      }, S = function(k) {
        return r.filledRange(
          Math.max(k, 3),
          "_arg",
          ""
        );
      }, U = function(k) {
        return typeof k.length == "number" ? Math.max(Math.min(k.length, 1024), 0) : 0;
      };
      _ = function(k, w, $, N, M, K) {
        var P = Math.max(0, U(N) - 1), te = x(P), W = typeof k == "string" || w === n;
        function B(ce) {
          var he = E(ce).join(", "), fe = ce > 0 ? ", " : "", me;
          return W ? me = `ret = callback.call(this, {{args}}, nodeback); break;
` : me = w === void 0 ? `ret = callback({{args}}, nodeback); break;
` : `ret = callback.call(receiver, {{args}}, nodeback); break;
`, me.replace("{{args}}", he).replace(", ", fe);
        }
        function se() {
          for (var ce = "", he = 0; he < te.length; ++he)
            ce += "case " + te[he] + ":" + B(te[he]);
          return ce += `                                                             
	        default:                                                             
	            var args = new Array(len + 1);                                   
	            var i = 0;                                                       
	            for (var i = 0; i < len; ++i) {                                  
	               args[i] = arguments[i];                                       
	            }                                                                
	            args[i] = nodeback;                                              
	            [CodeForCall]                                                    
	            break;                                                           
	        `.replace("[CodeForCall]", W ? `ret = callback.apply(this, args);
` : `ret = callback.apply(receiver, args);
`), ce;
        }
        var G = typeof k == "string" ? "this != null ? this['" + k + "'] : fn" : "fn", J = `'use strict';                                                
	        var ret = function (Parameters) {                                    
	            'use strict';                                                    
	            var len = arguments.length;                                      
	            var promise = new Promise(INTERNAL);                             
	            promise._captureStackTrace();                                    
	            var nodeback = nodebackForPromise(promise, ` + K + `);   
	            var ret;                                                         
	            var callback = tryCatch([GetFunctionCode]);                      
	            switch(len) {                                                    
	                [CodeForSwitchCase]                                          
	            }                                                                
	            if (ret === errorObj) {                                          
	                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);
	            }                                                                
	            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     
	            return promise;                                                  
	        };                                                                   
	        notEnumerableProp(ret, '__isPromisified__', true);                   
	        return ret;                                                          
	    `.replace("[CodeForSwitchCase]", se()).replace("[GetFunctionCode]", G);
        return J = J.replace("Parameters", S(P)), new Function(
          "Promise",
          "fn",
          "receiver",
          "withAppended",
          "maybeWrapAsError",
          "nodebackForPromise",
          "tryCatch",
          "errorObj",
          "notEnumerableProp",
          "INTERNAL",
          J
        )(
          t,
          N,
          w,
          o,
          a,
          i,
          r.tryCatch,
          r.errorObj,
          r.notEnumerableProp,
          e
        );
      };
    }
    function C(k, w, $, N, M, K) {
      var P = /* @__PURE__ */ function() {
        return this;
      }(), te = k;
      typeof te == "string" && (k = N);
      function W() {
        var B = w;
        w === n && (B = this);
        var se = new t(e);
        se._captureStackTrace();
        var G = typeof te == "string" && this !== P ? this[te] : k, J = i(se, K);
        try {
          G.apply(B, o(arguments, J));
        } catch (ce) {
          se._rejectCallback(a(ce), !0, !0);
        }
        return se._isFateSealed() || se._setAsyncGuaranteed(), se;
      }
      return r.notEnumerableProp(W, "__isPromisified__", !0), W;
    }
    var R = s ? _ : C;
    function j(k, w, $, N, M) {
      for (var K = new RegExp(v(w) + "$"), P = b(k, w, K, $), te = 0, W = P.length; te < W; te += 2) {
        var B = P[te], se = P[te + 1], G = B + w;
        if (N === R)
          k[G] = R(B, n, B, se, w, M);
        else {
          var J = N(se, function() {
            return R(
              B,
              n,
              B,
              se,
              w,
              M
            );
          });
          r.notEnumerableProp(J, "__isPromisified__", !0), k[G] = J;
        }
      }
      return r.toFastProperties(k), k;
    }
    function T(k, w, $) {
      return R(
        k,
        w,
        void 0,
        k,
        null,
        $
      );
    }
    t.promisify = function(k, w) {
      if (typeof k != "function")
        throw new c("expecting a function but got " + r.classString(k));
      if (m(k))
        return k;
      w = Object(w);
      var $ = w.context === void 0 ? n : w.context, N = !!w.multiArgs, M = T(k, $, N);
      return r.copyDescriptors(k, M, p), M;
    }, t.promisifyAll = function(k, w) {
      if (typeof k != "function" && typeof k != "object")
        throw new c(`the target of promisifyAll must be an object or a function

    See http://goo.gl/MqrFmX
`);
      w = Object(w);
      var $ = !!w.multiArgs, N = w.suffix;
      typeof N != "string" && (N = l);
      var M = w.filter;
      typeof M != "function" && (M = h);
      var K = w.promisifier;
      if (typeof K != "function" && (K = R), !r.isIdentifier(N))
        throw new RangeError(`suffix must be a valid identifier

    See http://goo.gl/MqrFmX
`);
      for (var P = r.inheritedDataKeys(k), te = 0; te < P.length; ++te) {
        var W = k[P[te]];
        P[te] !== "constructor" && r.isClass(W) && (j(
          W.prototype,
          N,
          M,
          K,
          $
        ), j(W, N, M, K, $));
      }
      return j(k, N, M, K, $);
    };
  }), hf;
}
var pf, ib;
function qk() {
  return ib || (ib = 1, pf = function(t, e, n, r) {
    var i = Ve(), o = i.isObject, a = ki(), s;
    typeof Map == "function" && (s = Map);
    var c = /* @__PURE__ */ function() {
      var d = 0, h = 0;
      function p(m, g) {
        this[d] = m, this[d + h] = g, d++;
      }
      return function(g) {
        h = g.size, d = 0;
        var y = new Array(g.size * 2);
        return g.forEach(p, y), y;
      };
    }(), l = function(d) {
      for (var h = new s(), p = d.length / 2 | 0, m = 0; m < p; ++m) {
        var g = d[p + m], y = d[m];
        h.set(g, y);
      }
      return h;
    };
    function u(d) {
      var h = !1, p;
      if (s !== void 0 && d instanceof s)
        p = c(d), h = !0;
      else {
        var m = a.keys(d), g = m.length;
        p = new Array(g * 2);
        for (var y = 0; y < g; ++y) {
          var b = m[y];
          p[y] = d[b], p[y + g] = b;
        }
      }
      this.constructor$(p), this._isMap = h, this._init$(void 0, -3);
    }
    i.inherits(u, e), u.prototype._init = function() {
    }, u.prototype._promiseFulfilled = function(d, h) {
      this._values[h] = d;
      var p = ++this._totalResolved;
      if (p >= this._length) {
        var m;
        if (this._isMap)
          m = l(this._values);
        else {
          m = {};
          for (var g = this.length(), y = 0, b = this.length(); y < b; ++y)
            m[this._values[y + g]] = this._values[y];
        }
        return this._resolve(m), !0;
      }
      return !1;
    }, u.prototype.shouldCopyValues = function() {
      return !1;
    }, u.prototype.getActualLength = function(d) {
      return d >> 1;
    };
    function f(d) {
      var h, p = n(d);
      if (o(p))
        p instanceof t ? h = p._then(
          t.props,
          void 0,
          void 0,
          void 0,
          void 0
        ) : h = new u(p).promise();
      else return r(`cannot await properties of a non-object

    See http://goo.gl/MqrFmX
`);
      return p instanceof t && h._propagateFrom(p, 2), h;
    }
    t.prototype.props = function() {
      return f(this);
    }, t.props = function(d) {
      return f(d);
    };
  }), pf;
}
var gf, ob;
function zk() {
  return ob || (ob = 1, gf = function(t, e, n, r) {
    var i = Ve(), o = function(s) {
      return s.then(function(c) {
        return a(c, s);
      });
    };
    function a(s, c) {
      var l = n(s);
      if (l instanceof t)
        return o(l);
      if (s = i.asArray(s), s === null)
        return r("expecting an array or an iterable object but got " + i.classString(s));
      var u = new t(e);
      c !== void 0 && u._propagateFrom(c, 3);
      for (var f = u._fulfill, d = u._reject, h = 0, p = s.length; h < p; ++h) {
        var m = s[h];
        m === void 0 && !(h in s) || t.cast(m)._then(f, d, void 0, u, null);
      }
      return u;
    }
    t.race = function(s) {
      return a(s, void 0);
    }, t.prototype.race = function() {
      return a(this, void 0);
    };
  }), gf;
}
var mf, ab;
function jk() {
  return ab || (ab = 1, mf = function(t, e, n, r, i, o) {
    var a = t._getDomain, s = Ve(), c = s.tryCatch;
    function l(p, m, g, y) {
      this.constructor$(p);
      var b = a();
      this._fn = b === null ? m : s.domainBind(b, m), g !== void 0 && (g = t.resolve(g), g._attachCancellationCallback(this)), this._initialValue = g, this._currentCancellable = null, y === i ? this._eachValues = Array(this._length) : y === 0 ? this._eachValues = null : this._eachValues = void 0, this._promise._captureStackTrace(), this._init$(void 0, -5);
    }
    s.inherits(l, e), l.prototype._gotAccum = function(p) {
      this._eachValues !== void 0 && this._eachValues !== null && p !== i && this._eachValues.push(p);
    }, l.prototype._eachComplete = function(p) {
      return this._eachValues !== null && this._eachValues.push(p), this._eachValues;
    }, l.prototype._init = function() {
    }, l.prototype._resolveEmptyArray = function() {
      this._resolve(this._eachValues !== void 0 ? this._eachValues : this._initialValue);
    }, l.prototype.shouldCopyValues = function() {
      return !1;
    }, l.prototype._resolve = function(p) {
      this._promise._resolveCallback(p), this._values = null;
    }, l.prototype._resultCancelled = function(p) {
      if (p === this._initialValue) return this._cancel();
      this._isResolved() || (this._resultCancelled$(), this._currentCancellable instanceof t && this._currentCancellable.cancel(), this._initialValue instanceof t && this._initialValue.cancel());
    }, l.prototype._iterate = function(p) {
      this._values = p;
      var m, g, y = p.length;
      if (this._initialValue !== void 0 ? (m = this._initialValue, g = 0) : (m = t.resolve(p[0]), g = 1), this._currentCancellable = m, !m.isRejected())
        for (; g < y; ++g) {
          var b = {
            accum: null,
            value: p[g],
            index: g,
            length: y,
            array: this
          };
          m = m._then(d, void 0, void 0, b, void 0);
        }
      this._eachValues !== void 0 && (m = m._then(this._eachComplete, void 0, void 0, this, void 0)), m._then(u, u, void 0, m, this);
    }, t.prototype.reduce = function(p, m) {
      return f(this, p, m, null);
    }, t.reduce = function(p, m, g, y) {
      return f(p, m, g, y);
    };
    function u(p, m) {
      this.isFulfilled() ? m._resolve(p) : m._reject(p);
    }
    function f(p, m, g, y) {
      if (typeof m != "function")
        return n("expecting a function but got " + s.classString(m));
      var b = new l(p, m, g, y);
      return b.promise();
    }
    function d(p) {
      this.accum = p, this.array._gotAccum(p);
      var m = r(this.value, this.array._promise);
      return m instanceof t ? (this.array._currentCancellable = m, m._then(h, void 0, void 0, this, void 0)) : h.call(this, m);
    }
    function h(p) {
      var m = this.array, g = m._promise, y = c(m._fn);
      g._pushContext();
      var b;
      m._eachValues !== void 0 ? b = y.call(g._boundValue(), p, this.index, this.length) : b = y.call(
        g._boundValue(),
        this.accum,
        p,
        this.index,
        this.length
      ), b instanceof t && (m._currentCancellable = b);
      var v = g._popContext();
      return o.checkForgottenReturns(
        b,
        v,
        m._eachValues !== void 0 ? "Promise.each" : "Promise.reduce",
        g
      ), b;
    }
  }), mf;
}
var yf, sb;
function $k() {
  return sb || (sb = 1, yf = function(t, e, n) {
    var r = t.PromiseInspection, i = Ve();
    function o(a) {
      this.constructor$(a);
    }
    i.inherits(o, e), o.prototype._promiseResolved = function(a, s) {
      this._values[a] = s;
      var c = ++this._totalResolved;
      return c >= this._length ? (this._resolve(this._values), !0) : !1;
    }, o.prototype._promiseFulfilled = function(a, s) {
      var c = new r();
      return c._bitField = 33554432, c._settledValueField = a, this._promiseResolved(s, c);
    }, o.prototype._promiseRejected = function(a, s) {
      var c = new r();
      return c._bitField = 16777216, c._settledValueField = a, this._promiseResolved(s, c);
    }, t.settle = function(a) {
      return n.deprecated(".settle()", ".reflect()"), new o(a).promise();
    }, t.prototype.settle = function() {
      return t.settle(this);
    };
  }), yf;
}
var bf, cb;
function Vk() {
  return cb || (cb = 1, bf = function(t, e, n) {
    var r = Ve(), i = dr().RangeError, o = dr().AggregateError, a = r.isArray, s = {};
    function c(u) {
      this.constructor$(u), this._howMany = 0, this._unwrap = !1, this._initialized = !1;
    }
    r.inherits(c, e), c.prototype._init = function() {
      if (this._initialized) {
        if (this._howMany === 0) {
          this._resolve([]);
          return;
        }
        this._init$(void 0, -5);
        var u = a(this._values);
        !this._isResolved() && u && this._howMany > this._canPossiblyFulfill() && this._reject(this._getRangeError(this.length()));
      }
    }, c.prototype.init = function() {
      this._initialized = !0, this._init();
    }, c.prototype.setUnwrap = function() {
      this._unwrap = !0;
    }, c.prototype.howMany = function() {
      return this._howMany;
    }, c.prototype.setHowMany = function(u) {
      this._howMany = u;
    }, c.prototype._promiseFulfilled = function(u) {
      return this._addFulfilled(u), this._fulfilled() === this.howMany() ? (this._values.length = this.howMany(), this.howMany() === 1 && this._unwrap ? this._resolve(this._values[0]) : this._resolve(this._values), !0) : !1;
    }, c.prototype._promiseRejected = function(u) {
      return this._addRejected(u), this._checkOutcome();
    }, c.prototype._promiseCancelled = function() {
      return this._values instanceof t || this._values == null ? this._cancel() : (this._addRejected(s), this._checkOutcome());
    }, c.prototype._checkOutcome = function() {
      if (this.howMany() > this._canPossiblyFulfill()) {
        for (var u = new o(), f = this.length(); f < this._values.length; ++f)
          this._values[f] !== s && u.push(this._values[f]);
        return u.length > 0 ? this._reject(u) : this._cancel(), !0;
      }
      return !1;
    }, c.prototype._fulfilled = function() {
      return this._totalResolved;
    }, c.prototype._rejected = function() {
      return this._values.length - this.length();
    }, c.prototype._addRejected = function(u) {
      this._values.push(u);
    }, c.prototype._addFulfilled = function(u) {
      this._values[this._totalResolved++] = u;
    }, c.prototype._canPossiblyFulfill = function() {
      return this.length() - this._rejected();
    }, c.prototype._getRangeError = function(u) {
      var f = "Input array must contain at least " + this._howMany + " items but contains only " + u + " items";
      return new i(f);
    }, c.prototype._resolveEmptyArray = function() {
      this._reject(this._getRangeError(0));
    };
    function l(u, f) {
      if ((f | 0) !== f || f < 0)
        return n(`expecting a positive integer

    See http://goo.gl/MqrFmX
`);
      var d = new c(u), h = d.promise();
      return d.setHowMany(f), d.init(), h;
    }
    t.some = function(u, f) {
      return l(u, f);
    }, t.prototype.some = function(u) {
      return l(this, u);
    }, t._SomePromiseArray = c;
  }), bf;
}
var vf, lb;
function Hk() {
  return lb || (lb = 1, vf = function(t, e) {
    var n = t.map;
    t.prototype.filter = function(r, i) {
      return n(this, r, i, e);
    }, t.filter = function(r, i, o) {
      return n(r, i, o, e);
    };
  }), vf;
}
var Df, ub;
function Xk() {
  return ub || (ub = 1, Df = function(t, e) {
    var n = t.reduce, r = t.all;
    function i() {
      return r(this);
    }
    function o(a, s) {
      return n(a, s, e, e);
    }
    t.prototype.each = function(a) {
      return n(this, a, e, 0)._then(i, void 0, void 0, this, void 0);
    }, t.prototype.mapSeries = function(a) {
      return n(this, a, e, e);
    }, t.each = function(a, s) {
      return n(a, s, e, 0)._then(i, void 0, void 0, a, void 0);
    }, t.mapSeries = o;
  }), Df;
}
var xf, fb;
function Gk() {
  return fb || (fb = 1, xf = function(t) {
    var e = t._SomePromiseArray;
    function n(r) {
      var i = new e(r), o = i.promise();
      return i.setHowMany(1), i.setUnwrap(), i.init(), o;
    }
    t.any = function(r) {
      return n(r);
    }, t.prototype.any = function() {
      return n(this);
    };
  }), xf;
}
var db;
function Kk() {
  return db || (db = 1, function(t) {
    t.exports = function() {
      var e = function() {
        return new d(`circular promise resolution chain

    See http://goo.gl/MqrFmX
`);
      }, n = function() {
        return new T.PromiseInspection(this._target());
      }, r = function(N) {
        return T.reject(new d(N));
      };
      function i() {
      }
      var o = {}, a = Ve(), s;
      a.isNode ? s = function() {
        var N = process.domain;
        return N === void 0 && (N = null), N;
      } : s = function() {
        return null;
      }, a.notEnumerableProp(T, "_getDomain", s);
      var c = ki(), l = xk(), u = new l();
      c.defineProperty(T, "_async", { value: u });
      var f = dr(), d = T.TypeError = f.TypeError;
      T.RangeError = f.RangeError;
      var h = T.CancellationError = f.CancellationError;
      T.TimeoutError = f.TimeoutError, T.OperationalError = f.OperationalError, T.RejectionError = f.OperationalError, T.AggregateError = f.AggregateError;
      var p = function() {
      }, m = {}, g = {}, y = wk()(T, p), b = _k()(
        T,
        p,
        y,
        r,
        i
      ), v = Tk()(T), _ = v.create, x = Ek()(T, v);
      x.CapturedTrace;
      var E = Ck()(T, y), S = Sk()(g), U = Uw(), C = a.errorObj, R = a.tryCatch;
      function j(N, M) {
        if (typeof M != "function")
          throw new d("expecting a function but got " + a.classString(M));
        if (N.constructor !== T)
          throw new d(`the promise constructor cannot be invoked directly

    See http://goo.gl/MqrFmX
`);
      }
      function T(N) {
        this._bitField = 0, this._fulfillmentHandler0 = void 0, this._rejectionHandler0 = void 0, this._promise0 = void 0, this._receiver0 = void 0, N !== p && (j(this, N), this._resolveFromExecutor(N)), this._promiseCreated(), this._fireEvent("promiseCreated", this);
      }
      T.prototype.toString = function() {
        return "[object Promise]";
      }, T.prototype.caught = T.prototype.catch = function(N) {
        var M = arguments.length;
        if (M > 1) {
          var K = new Array(M - 1), P = 0, te;
          for (te = 0; te < M - 1; ++te) {
            var W = arguments[te];
            if (a.isObject(W))
              K[P++] = W;
            else
              return r("expecting an object but got A catch statement predicate " + a.classString(W));
          }
          return K.length = P, N = arguments[te], this.then(void 0, S(K, N, this));
        }
        return this.then(void 0, N);
      }, T.prototype.reflect = function() {
        return this._then(
          n,
          n,
          void 0,
          this,
          void 0
        );
      }, T.prototype.then = function(N, M) {
        if (x.warnings() && arguments.length > 0 && typeof N != "function" && typeof M != "function") {
          var K = ".then() only accepts functions but was passed: " + a.classString(N);
          arguments.length > 1 && (K += ", " + a.classString(M)), this._warn(K);
        }
        return this._then(N, M, void 0, void 0, void 0);
      }, T.prototype.done = function(N, M) {
        var K = this._then(N, M, void 0, void 0, void 0);
        K._setIsFinal();
      }, T.prototype.spread = function(N) {
        return typeof N != "function" ? r("expecting a function but got " + a.classString(N)) : this.all()._then(N, void 0, void 0, m, void 0);
      }, T.prototype.toJSON = function() {
        var N = {
          isFulfilled: !1,
          isRejected: !1,
          fulfillmentValue: void 0,
          rejectionReason: void 0
        };
        return this.isFulfilled() ? (N.fulfillmentValue = this.value(), N.isFulfilled = !0) : this.isRejected() && (N.rejectionReason = this.reason(), N.isRejected = !0), N;
      }, T.prototype.all = function() {
        return arguments.length > 0 && this._warn(".all() was passed arguments but it does not take any"), new b(this).promise();
      }, T.prototype.error = function(N) {
        return this.caught(a.originatesFromRejection, N);
      }, T.getNewLibraryCopy = t.exports, T.is = function(N) {
        return N instanceof T;
      }, T.fromNode = T.fromCallback = function(N) {
        var M = new T(p);
        M._captureStackTrace();
        var K = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : !1, P = R(N)(U(M, K));
        return P === C && M._rejectCallback(P.e, !0), M._isFateSealed() || M._setAsyncGuaranteed(), M;
      }, T.all = function(N) {
        return new b(N).promise();
      }, T.cast = function(N) {
        var M = y(N);
        return M instanceof T || (M = new T(p), M._captureStackTrace(), M._setFulfilled(), M._rejectionHandler0 = N), M;
      }, T.resolve = T.fulfilled = T.cast, T.reject = T.rejected = function(N) {
        var M = new T(p);
        return M._captureStackTrace(), M._rejectCallback(N, !0), M;
      }, T.setScheduler = function(N) {
        if (typeof N != "function")
          throw new d("expecting a function but got " + a.classString(N));
        return u.setScheduler(N);
      }, T.prototype._then = function(N, M, K, P, te) {
        var W = te !== void 0, B = W ? te : new T(p), se = this._target(), G = se._bitField;
        W || (B._propagateFrom(this, 3), B._captureStackTrace(), P === void 0 && (this._bitField & 2097152) !== 0 && ((G & 50397184) !== 0 ? P = this._boundValue() : P = se === this ? void 0 : this._boundTo), this._fireEvent("promiseChained", this, B));
        var J = s();
        if ((G & 50397184) !== 0) {
          var ce, he, fe = se._settlePromiseCtx;
          (G & 33554432) !== 0 ? (he = se._rejectionHandler0, ce = N) : (G & 16777216) !== 0 ? (he = se._fulfillmentHandler0, ce = M, se._unsetRejectionIsUnhandled()) : (fe = se._settlePromiseLateCancellationObserver, he = new h("late cancellation observer"), se._attachExtraTrace(he), ce = M), u.invoke(fe, se, {
            handler: J === null ? ce : typeof ce == "function" && a.domainBind(J, ce),
            promise: B,
            receiver: P,
            value: he
          });
        } else
          se._addCallbacks(N, M, B, P, J);
        return B;
      }, T.prototype._length = function() {
        return this._bitField & 65535;
      }, T.prototype._isFateSealed = function() {
        return (this._bitField & 117506048) !== 0;
      }, T.prototype._isFollowing = function() {
        return (this._bitField & 67108864) === 67108864;
      }, T.prototype._setLength = function(N) {
        this._bitField = this._bitField & -65536 | N & 65535;
      }, T.prototype._setFulfilled = function() {
        this._bitField = this._bitField | 33554432, this._fireEvent("promiseFulfilled", this);
      }, T.prototype._setRejected = function() {
        this._bitField = this._bitField | 16777216, this._fireEvent("promiseRejected", this);
      }, T.prototype._setFollowing = function() {
        this._bitField = this._bitField | 67108864, this._fireEvent("promiseResolved", this);
      }, T.prototype._setIsFinal = function() {
        this._bitField = this._bitField | 4194304;
      }, T.prototype._isFinal = function() {
        return (this._bitField & 4194304) > 0;
      }, T.prototype._unsetCancelled = function() {
        this._bitField = this._bitField & -65537;
      }, T.prototype._setCancelled = function() {
        this._bitField = this._bitField | 65536, this._fireEvent("promiseCancelled", this);
      }, T.prototype._setWillBeCancelled = function() {
        this._bitField = this._bitField | 8388608;
      }, T.prototype._setAsyncGuaranteed = function() {
        u.hasCustomScheduler() || (this._bitField = this._bitField | 134217728);
      }, T.prototype._receiverAt = function(N) {
        var M = N === 0 ? this._receiver0 : this[N * 4 - 4 + 3];
        if (M !== o)
          return M === void 0 && this._isBound() ? this._boundValue() : M;
      }, T.prototype._promiseAt = function(N) {
        return this[N * 4 - 4 + 2];
      }, T.prototype._fulfillmentHandlerAt = function(N) {
        return this[N * 4 - 4 + 0];
      }, T.prototype._rejectionHandlerAt = function(N) {
        return this[N * 4 - 4 + 1];
      }, T.prototype._boundValue = function() {
      }, T.prototype._migrateCallback0 = function(N) {
        N._bitField;
        var M = N._fulfillmentHandler0, K = N._rejectionHandler0, P = N._promise0, te = N._receiverAt(0);
        te === void 0 && (te = o), this._addCallbacks(M, K, P, te, null);
      }, T.prototype._migrateCallbackAt = function(N, M) {
        var K = N._fulfillmentHandlerAt(M), P = N._rejectionHandlerAt(M), te = N._promiseAt(M), W = N._receiverAt(M);
        W === void 0 && (W = o), this._addCallbacks(K, P, te, W, null);
      }, T.prototype._addCallbacks = function(N, M, K, P, te) {
        var W = this._length();
        if (W >= 65531 && (W = 0, this._setLength(0)), W === 0)
          this._promise0 = K, this._receiver0 = P, typeof N == "function" && (this._fulfillmentHandler0 = te === null ? N : a.domainBind(te, N)), typeof M == "function" && (this._rejectionHandler0 = te === null ? M : a.domainBind(te, M));
        else {
          var B = W * 4 - 4;
          this[B + 2] = K, this[B + 3] = P, typeof N == "function" && (this[B + 0] = te === null ? N : a.domainBind(te, N)), typeof M == "function" && (this[B + 1] = te === null ? M : a.domainBind(te, M));
        }
        return this._setLength(W + 1), W;
      }, T.prototype._proxy = function(N, M) {
        this._addCallbacks(void 0, void 0, M, N, null);
      }, T.prototype._resolveCallback = function(N, M) {
        if ((this._bitField & 117506048) === 0) {
          if (N === this)
            return this._rejectCallback(e(), !1);
          var K = y(N, this);
          if (!(K instanceof T)) return this._fulfill(N);
          M && this._propagateFrom(K, 2);
          var P = K._target();
          if (P === this) {
            this._reject(e());
            return;
          }
          var te = P._bitField;
          if ((te & 50397184) === 0) {
            var W = this._length();
            W > 0 && P._migrateCallback0(this);
            for (var B = 1; B < W; ++B)
              P._migrateCallbackAt(this, B);
            this._setFollowing(), this._setLength(0), this._setFollowee(P);
          } else if ((te & 33554432) !== 0)
            this._fulfill(P._value());
          else if ((te & 16777216) !== 0)
            this._reject(P._reason());
          else {
            var se = new h("late cancellation observer");
            P._attachExtraTrace(se), this._reject(se);
          }
        }
      }, T.prototype._rejectCallback = function(N, M, K) {
        var P = a.ensureErrorObject(N), te = P === N;
        if (!te && !K && x.warnings()) {
          var W = "a promise was rejected with a non-error: " + a.classString(N);
          this._warn(W, !0);
        }
        this._attachExtraTrace(P, M ? te : !1), this._reject(N);
      }, T.prototype._resolveFromExecutor = function(N) {
        var M = this;
        this._captureStackTrace(), this._pushContext();
        var K = !0, P = this._execute(N, function(te) {
          M._resolveCallback(te);
        }, function(te) {
          M._rejectCallback(te, K);
        });
        K = !1, this._popContext(), P !== void 0 && M._rejectCallback(P, !0);
      }, T.prototype._settlePromiseFromHandler = function(N, M, K, P) {
        var te = P._bitField;
        if ((te & 65536) === 0) {
          P._pushContext();
          var W;
          M === m ? !K || typeof K.length != "number" ? (W = C, W.e = new d("cannot .spread() a non-array: " + a.classString(K))) : W = R(N).apply(this._boundValue(), K) : W = R(N).call(M, K);
          var B = P._popContext();
          te = P._bitField, (te & 65536) === 0 && (W === g ? P._reject(K) : W === C ? P._rejectCallback(W.e, !1) : (x.checkForgottenReturns(W, B, "", P, this), P._resolveCallback(W)));
        }
      }, T.prototype._target = function() {
        for (var N = this; N._isFollowing(); ) N = N._followee();
        return N;
      }, T.prototype._followee = function() {
        return this._rejectionHandler0;
      }, T.prototype._setFollowee = function(N) {
        this._rejectionHandler0 = N;
      }, T.prototype._settlePromise = function(N, M, K, P) {
        var te = N instanceof T, W = this._bitField, B = (W & 134217728) !== 0;
        (W & 65536) !== 0 ? (te && N._invokeInternalOnCancel(), K instanceof E && K.isFinallyHandler() ? (K.cancelPromise = N, R(M).call(K, P) === C && N._reject(C.e)) : M === n ? N._fulfill(n.call(K)) : K instanceof i ? K._promiseCancelled(N) : te || N instanceof b ? N._cancel() : K.cancel()) : typeof M == "function" ? te ? (B && N._setAsyncGuaranteed(), this._settlePromiseFromHandler(M, K, P, N)) : M.call(K, P, N) : K instanceof i ? K._isResolved() || ((W & 33554432) !== 0 ? K._promiseFulfilled(P, N) : K._promiseRejected(P, N)) : te && (B && N._setAsyncGuaranteed(), (W & 33554432) !== 0 ? N._fulfill(P) : N._reject(P));
      }, T.prototype._settlePromiseLateCancellationObserver = function(N) {
        var M = N.handler, K = N.promise, P = N.receiver, te = N.value;
        typeof M == "function" ? K instanceof T ? this._settlePromiseFromHandler(M, P, te, K) : M.call(P, te, K) : K instanceof T && K._reject(te);
      }, T.prototype._settlePromiseCtx = function(N) {
        this._settlePromise(N.promise, N.handler, N.receiver, N.value);
      }, T.prototype._settlePromise0 = function(N, M, K) {
        var P = this._promise0, te = this._receiverAt(0);
        this._promise0 = void 0, this._receiver0 = void 0, this._settlePromise(P, N, te, M);
      }, T.prototype._clearCallbackDataAtIndex = function(N) {
        var M = N * 4 - 4;
        this[M + 2] = this[M + 3] = this[M + 0] = this[M + 1] = void 0;
      }, T.prototype._fulfill = function(N) {
        var M = this._bitField;
        if (!((M & 117506048) >>> 16)) {
          if (N === this) {
            var K = e();
            return this._attachExtraTrace(K), this._reject(K);
          }
          this._setFulfilled(), this._rejectionHandler0 = N, (M & 65535) > 0 && ((M & 134217728) !== 0 ? this._settlePromises() : u.settlePromises(this));
        }
      }, T.prototype._reject = function(N) {
        var M = this._bitField;
        if (!((M & 117506048) >>> 16)) {
          if (this._setRejected(), this._fulfillmentHandler0 = N, this._isFinal())
            return u.fatalError(N, a.isNode);
          (M & 65535) > 0 ? u.settlePromises(this) : this._ensurePossibleRejectionHandled();
        }
      }, T.prototype._fulfillPromises = function(N, M) {
        for (var K = 1; K < N; K++) {
          var P = this._fulfillmentHandlerAt(K), te = this._promiseAt(K), W = this._receiverAt(K);
          this._clearCallbackDataAtIndex(K), this._settlePromise(te, P, W, M);
        }
      }, T.prototype._rejectPromises = function(N, M) {
        for (var K = 1; K < N; K++) {
          var P = this._rejectionHandlerAt(K), te = this._promiseAt(K), W = this._receiverAt(K);
          this._clearCallbackDataAtIndex(K), this._settlePromise(te, P, W, M);
        }
      }, T.prototype._settlePromises = function() {
        var N = this._bitField, M = N & 65535;
        if (M > 0) {
          if ((N & 16842752) !== 0) {
            var K = this._fulfillmentHandler0;
            this._settlePromise0(this._rejectionHandler0, K, N), this._rejectPromises(M, K);
          } else {
            var P = this._rejectionHandler0;
            this._settlePromise0(this._fulfillmentHandler0, P, N), this._fulfillPromises(M, P);
          }
          this._setLength(0);
        }
        this._clearCancellationData();
      }, T.prototype._settledValue = function() {
        var N = this._bitField;
        if ((N & 33554432) !== 0)
          return this._rejectionHandler0;
        if ((N & 16777216) !== 0)
          return this._fulfillmentHandler0;
      };
      function k(N) {
        this.promise._resolveCallback(N);
      }
      function w(N) {
        this.promise._rejectCallback(N, !1);
      }
      T.defer = T.pending = function() {
        x.deprecated("Promise.defer", "new Promise");
        var N = new T(p);
        return {
          promise: N,
          resolve: k,
          reject: w
        };
      }, a.notEnumerableProp(
        T,
        "_makeSelfResolutionError",
        e
      ), Ak()(
        T,
        p,
        y,
        r,
        x
      ), Uk()(T, p, y, x), kk()(T, b, r, x), Fk()(T), Ok()(T), Rk()(
        T,
        b,
        y,
        p,
        u,
        s
      ), T.Promise = T, T.version = "3.4.7", Nk()(T, b, r, y, p, x), Bk()(T), Ik()(T, r, y, _, p, x), Mk()(T, p, x), Wk()(T, r, p, y, i, x), Lk()(T), Pk()(T, p), qk()(T, b, y, r), zk()(T, p, y, r), jk()(T, b, r, y, p, x), $k()(T, b, x), Vk()(T, b, r), Hk()(T, p), Xk()(T, p), Gk()(T), a.toFastProperties(T), a.toFastProperties(T.prototype);
      function $(N) {
        var M = new T(p);
        M._fulfillmentHandler0 = N, M._rejectionHandler0 = N, M._promise0 = N, M._receiver0 = N;
      }
      return $({ a: 1 }), $({ b: 2 }), $({ c: 3 }), $(1), $(function() {
      }), $(void 0), $(!1), $(new T(p)), x.setBounds(l.firstLineError, a.lastLineError), T;
    };
  }(ju)), ju.exports;
}
var hb;
function vr() {
  if (hb) return zt;
  hb = 1;
  var t = et, e = Kk()();
  zt.defer = n, zt.when = e.resolve, zt.resolve = e.resolve, zt.all = e.all, zt.props = e.props, zt.reject = e.reject, zt.promisify = e.promisify, zt.mapSeries = e.mapSeries, zt.attempt = e.attempt, zt.nfcall = function(r) {
    var i = Array.prototype.slice.call(arguments, 1), o = e.promisify(r);
    return o.apply(null, i);
  }, e.prototype.fail = e.prototype.caught, e.prototype.also = function(r) {
    return this.then(function(i) {
      var o = t.extend({}, i, r(i));
      return e.props(o);
    });
  };
  function n() {
    var r, i, o = new e.Promise(function(a, s) {
      r = a, i = s;
    });
    return {
      resolve: r,
      reject: i,
      promise: o
    };
  }
  return zt;
}
var Le = {}, pb;
function Zr() {
  if (pb) return Le;
  pb = 1;
  var t = et, e = Le.types = {
    document: "document",
    paragraph: "paragraph",
    run: "run",
    text: "text",
    tab: "tab",
    checkbox: "checkbox",
    hyperlink: "hyperlink",
    noteReference: "noteReference",
    image: "image",
    note: "note",
    commentReference: "commentReference",
    comment: "comment",
    table: "table",
    tableRow: "tableRow",
    tableCell: "tableCell",
    break: "break",
    bookmarkStart: "bookmarkStart"
  };
  function n(E, S) {
    return S = S || {}, {
      type: e.document,
      children: E,
      notes: S.notes || new f({}),
      comments: S.comments || []
    };
  }
  function r(E, S) {
    S = S || {};
    var U = S.indent || {};
    return {
      type: e.paragraph,
      children: E,
      styleId: S.styleId || null,
      styleName: S.styleName || null,
      numbering: S.numbering || null,
      alignment: S.alignment || null,
      indent: {
        start: U.start || null,
        end: U.end || null,
        firstLine: U.firstLine || null,
        hanging: U.hanging || null
      }
    };
  }
  function i(E, S) {
    return S = S || {}, {
      type: e.run,
      children: E,
      styleId: S.styleId || null,
      styleName: S.styleName || null,
      isBold: !!S.isBold,
      isUnderline: !!S.isUnderline,
      isItalic: !!S.isItalic,
      isStrikethrough: !!S.isStrikethrough,
      isAllCaps: !!S.isAllCaps,
      isSmallCaps: !!S.isSmallCaps,
      verticalAlignment: S.verticalAlignment || o.baseline,
      font: S.font || null,
      fontSize: S.fontSize || null,
      highlight: S.highlight || null
    };
  }
  var o = {
    baseline: "baseline",
    superscript: "superscript",
    subscript: "subscript"
  };
  function a(E) {
    return {
      type: e.text,
      value: E
    };
  }
  function s() {
    return {
      type: e.tab
    };
  }
  function c(E) {
    return {
      type: e.checkbox,
      checked: E.checked
    };
  }
  function l(E, S) {
    return {
      type: e.hyperlink,
      children: E,
      href: S.href,
      anchor: S.anchor,
      targetFrame: S.targetFrame
    };
  }
  function u(E) {
    return {
      type: e.noteReference,
      noteType: E.noteType,
      noteId: E.noteId
    };
  }
  function f(E) {
    this._notes = t.indexBy(E, function(S) {
      return m(S.noteType, S.noteId);
    });
  }
  f.prototype.resolve = function(E) {
    return this.findNoteByKey(m(E.noteType, E.noteId));
  }, f.prototype.findNoteByKey = function(E) {
    return this._notes[E] || null;
  };
  function d(E) {
    return {
      type: e.note,
      noteType: E.noteType,
      noteId: E.noteId,
      body: E.body
    };
  }
  function h(E) {
    return {
      type: e.commentReference,
      commentId: E.commentId
    };
  }
  function p(E) {
    return {
      type: e.comment,
      commentId: E.commentId,
      body: E.body,
      authorName: E.authorName,
      authorInitials: E.authorInitials
    };
  }
  function m(E, S) {
    return E + "-" + S;
  }
  function g(E) {
    return {
      type: e.image,
      // `read` is retained for backwards compatibility, but other read
      // methods should be preferred.
      read: function(S) {
        return S ? E.readImage(S) : E.readImage().then(function(U) {
          return Buffer.from(U);
        });
      },
      readAsArrayBuffer: function() {
        return E.readImage();
      },
      readAsBase64String: function() {
        return E.readImage("base64");
      },
      readAsBuffer: function() {
        return E.readImage().then(function(S) {
          return Buffer.from(S);
        });
      },
      altText: E.altText,
      contentType: E.contentType
    };
  }
  function y(E, S) {
    return S = S || {}, {
      type: e.table,
      children: E,
      styleId: S.styleId || null,
      styleName: S.styleName || null
    };
  }
  function b(E, S) {
    return S = S || {}, {
      type: e.tableRow,
      children: E,
      isHeader: S.isHeader || !1
    };
  }
  function v(E, S) {
    return S = S || {}, {
      type: e.tableCell,
      children: E,
      colSpan: S.colSpan == null ? 1 : S.colSpan,
      rowSpan: S.rowSpan == null ? 1 : S.rowSpan
    };
  }
  function _(E) {
    return {
      type: e.break,
      breakType: E
    };
  }
  function x(E) {
    return {
      type: e.bookmarkStart,
      name: E.name
    };
  }
  return Le.document = Le.Document = n, Le.paragraph = Le.Paragraph = r, Le.run = Le.Run = i, Le.text = Le.Text = a, Le.tab = Le.Tab = s, Le.checkbox = Le.Checkbox = c, Le.Hyperlink = l, Le.noteReference = Le.NoteReference = u, Le.Notes = f, Le.Note = d, Le.commentReference = h, Le.comment = p, Le.Image = g, Le.Table = y, Le.TableRow = b, Le.TableCell = v, Le.lineBreak = _("line"), Le.pageBreak = _("page"), Le.columnBreak = _("column"), Le.BookmarkStart = x, Le.verticalAlignment = o, Le;
}
var ri = {}, gb;
function Wn() {
  if (gb) return ri;
  gb = 1;
  var t = et;
  ri.Result = e, ri.success = n, ri.warning = r, ri.error = i;
  function e(c, l) {
    this.value = c, this.messages = l || [];
  }
  e.prototype.map = function(c) {
    return new e(c(this.value), this.messages);
  }, e.prototype.flatMap = function(c) {
    var l = c(this.value);
    return new e(l.value, o([this, l]));
  }, e.prototype.flatMapThen = function(c) {
    var l = this;
    return c(this.value).then(function(u) {
      return new e(u.value, o([l, u]));
    });
  }, e.combine = function(c) {
    var l = t.flatten(t.pluck(c, "value")), u = o(c);
    return new e(l, u);
  };
  function n(c) {
    return new e(c, []);
  }
  function r(c) {
    return {
      type: "warning",
      message: c
    };
  }
  function i(c) {
    return {
      type: "error",
      message: c.message,
      error: c
    };
  }
  function o(c) {
    var l = [];
    return t.flatten(t.pluck(c, "messages"), !0).forEach(function(u) {
      a(l, u) || l.push(u);
    }), l;
  }
  function a(c, l) {
    return t.find(c, s.bind(null, l)) !== void 0;
  }
  function s(c, l) {
    return c.type === l.type && c.message === l.message;
  }
  return ri;
}
var Wi = {}, Li = {}, mb;
function Jk() {
  if (mb) return Li;
  mb = 1, Li.byteLength = s, Li.toByteArray = l, Li.fromByteArray = d;
  for (var t = [], e = [], n = typeof Uint8Array < "u" ? Uint8Array : Array, r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, o = r.length; i < o; ++i)
    t[i] = r[i], e[r.charCodeAt(i)] = i;
  e[45] = 62, e[95] = 63;
  function a(h) {
    var p = h.length;
    if (p % 4 > 0)
      throw new Error("Invalid string. Length must be a multiple of 4");
    var m = h.indexOf("=");
    m === -1 && (m = p);
    var g = m === p ? 0 : 4 - m % 4;
    return [m, g];
  }
  function s(h) {
    var p = a(h), m = p[0], g = p[1];
    return (m + g) * 3 / 4 - g;
  }
  function c(h, p, m) {
    return (p + m) * 3 / 4 - m;
  }
  function l(h) {
    var p, m = a(h), g = m[0], y = m[1], b = new n(c(h, g, y)), v = 0, _ = y > 0 ? g - 4 : g, x;
    for (x = 0; x < _; x += 4)
      p = e[h.charCodeAt(x)] << 18 | e[h.charCodeAt(x + 1)] << 12 | e[h.charCodeAt(x + 2)] << 6 | e[h.charCodeAt(x + 3)], b[v++] = p >> 16 & 255, b[v++] = p >> 8 & 255, b[v++] = p & 255;
    return y === 2 && (p = e[h.charCodeAt(x)] << 2 | e[h.charCodeAt(x + 1)] >> 4, b[v++] = p & 255), y === 1 && (p = e[h.charCodeAt(x)] << 10 | e[h.charCodeAt(x + 1)] << 4 | e[h.charCodeAt(x + 2)] >> 2, b[v++] = p >> 8 & 255, b[v++] = p & 255), b;
  }
  function u(h) {
    return t[h >> 18 & 63] + t[h >> 12 & 63] + t[h >> 6 & 63] + t[h & 63];
  }
  function f(h, p, m) {
    for (var g, y = [], b = p; b < m; b += 3)
      g = (h[b] << 16 & 16711680) + (h[b + 1] << 8 & 65280) + (h[b + 2] & 255), y.push(u(g));
    return y.join("");
  }
  function d(h) {
    for (var p, m = h.length, g = m % 3, y = [], b = 16383, v = 0, _ = m - g; v < _; v += b)
      y.push(f(h, v, v + b > _ ? _ : v + b));
    return g === 1 ? (p = h[m - 1], y.push(
      t[p >> 2] + t[p << 4 & 63] + "=="
    )) : g === 2 && (p = (h[m - 2] << 8) + h[m - 1], y.push(
      t[p >> 10] + t[p >> 4 & 63] + t[p << 2 & 63] + "="
    )), y.join("");
  }
  return Li;
}
function aa(t) {
  throw new Error('Could not dynamically require "' + t + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var wf = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
var yb;
function Zk() {
  return yb || (yb = 1, function(t, e) {
    (function(n) {
      t.exports = n();
    })(function() {
      return function n(r, i, o) {
        function a(l, u) {
          if (!i[l]) {
            if (!r[l]) {
              var f = typeof aa == "function" && aa;
              if (!u && f) return f(l, !0);
              if (s) return s(l, !0);
              var d = new Error("Cannot find module '" + l + "'");
              throw d.code = "MODULE_NOT_FOUND", d;
            }
            var h = i[l] = { exports: {} };
            r[l][0].call(h.exports, function(p) {
              var m = r[l][1][p];
              return a(m || p);
            }, h, h.exports, n, r, i, o);
          }
          return i[l].exports;
        }
        for (var s = typeof aa == "function" && aa, c = 0; c < o.length; c++) a(o[c]);
        return a;
      }({ 1: [function(n, r, i) {
        var o = n("./utils"), a = n("./support"), s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        i.encode = function(c) {
          for (var l, u, f, d, h, p, m, g = [], y = 0, b = c.length, v = b, _ = o.getTypeOf(c) !== "string"; y < c.length; ) v = b - y, f = _ ? (l = c[y++], u = y < b ? c[y++] : 0, y < b ? c[y++] : 0) : (l = c.charCodeAt(y++), u = y < b ? c.charCodeAt(y++) : 0, y < b ? c.charCodeAt(y++) : 0), d = l >> 2, h = (3 & l) << 4 | u >> 4, p = 1 < v ? (15 & u) << 2 | f >> 6 : 64, m = 2 < v ? 63 & f : 64, g.push(s.charAt(d) + s.charAt(h) + s.charAt(p) + s.charAt(m));
          return g.join("");
        }, i.decode = function(c) {
          var l, u, f, d, h, p, m = 0, g = 0, y = "data:";
          if (c.substr(0, y.length) === y) throw new Error("Invalid base64 input, it looks like a data url.");
          var b, v = 3 * (c = c.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
          if (c.charAt(c.length - 1) === s.charAt(64) && v--, c.charAt(c.length - 2) === s.charAt(64) && v--, v % 1 != 0) throw new Error("Invalid base64 input, bad content length.");
          for (b = a.uint8array ? new Uint8Array(0 | v) : new Array(0 | v); m < c.length; ) l = s.indexOf(c.charAt(m++)) << 2 | (d = s.indexOf(c.charAt(m++))) >> 4, u = (15 & d) << 4 | (h = s.indexOf(c.charAt(m++))) >> 2, f = (3 & h) << 6 | (p = s.indexOf(c.charAt(m++))), b[g++] = l, h !== 64 && (b[g++] = u), p !== 64 && (b[g++] = f);
          return b;
        };
      }, { "./support": 30, "./utils": 32 }], 2: [function(n, r, i) {
        var o = n("./external"), a = n("./stream/DataWorker"), s = n("./stream/Crc32Probe"), c = n("./stream/DataLengthProbe");
        function l(u, f, d, h, p) {
          this.compressedSize = u, this.uncompressedSize = f, this.crc32 = d, this.compression = h, this.compressedContent = p;
        }
        l.prototype = { getContentWorker: function() {
          var u = new a(o.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new c("data_length")), f = this;
          return u.on("end", function() {
            if (this.streamInfo.data_length !== f.uncompressedSize) throw new Error("Bug : uncompressed data size mismatch");
          }), u;
        }, getCompressedWorker: function() {
          return new a(o.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
        } }, l.createWorkerFrom = function(u, f, d) {
          return u.pipe(new s()).pipe(new c("uncompressedSize")).pipe(f.compressWorker(d)).pipe(new c("compressedSize")).withStreamInfo("compression", f);
        }, r.exports = l;
      }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(n, r, i) {
        var o = n("./stream/GenericWorker");
        i.STORE = { magic: "\0\0", compressWorker: function() {
          return new o("STORE compression");
        }, uncompressWorker: function() {
          return new o("STORE decompression");
        } }, i.DEFLATE = n("./flate");
      }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(n, r, i) {
        var o = n("./utils"), a = function() {
          for (var s, c = [], l = 0; l < 256; l++) {
            s = l;
            for (var u = 0; u < 8; u++) s = 1 & s ? 3988292384 ^ s >>> 1 : s >>> 1;
            c[l] = s;
          }
          return c;
        }();
        r.exports = function(s, c) {
          return s !== void 0 && s.length ? o.getTypeOf(s) !== "string" ? function(l, u, f, d) {
            var h = a, p = d + f;
            l ^= -1;
            for (var m = d; m < p; m++) l = l >>> 8 ^ h[255 & (l ^ u[m])];
            return -1 ^ l;
          }(0 | c, s, s.length, 0) : function(l, u, f, d) {
            var h = a, p = d + f;
            l ^= -1;
            for (var m = d; m < p; m++) l = l >>> 8 ^ h[255 & (l ^ u.charCodeAt(m))];
            return -1 ^ l;
          }(0 | c, s, s.length, 0) : 0;
        };
      }, { "./utils": 32 }], 5: [function(n, r, i) {
        i.base64 = !1, i.binary = !1, i.dir = !1, i.createFolders = !0, i.date = null, i.compression = null, i.compressionOptions = null, i.comment = null, i.unixPermissions = null, i.dosPermissions = null;
      }, {}], 6: [function(n, r, i) {
        var o = null;
        o = typeof Promise < "u" ? Promise : n("lie"), r.exports = { Promise: o };
      }, { lie: 37 }], 7: [function(n, r, i) {
        var o = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Uint32Array < "u", a = n("pako"), s = n("./utils"), c = n("./stream/GenericWorker"), l = o ? "uint8array" : "array";
        function u(f, d) {
          c.call(this, "FlateWorker/" + f), this._pako = null, this._pakoAction = f, this._pakoOptions = d, this.meta = {};
        }
        i.magic = "\b\0", s.inherits(u, c), u.prototype.processChunk = function(f) {
          this.meta = f.meta, this._pako === null && this._createPako(), this._pako.push(s.transformTo(l, f.data), !1);
        }, u.prototype.flush = function() {
          c.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
        }, u.prototype.cleanUp = function() {
          c.prototype.cleanUp.call(this), this._pako = null;
        }, u.prototype._createPako = function() {
          this._pako = new a[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
          var f = this;
          this._pako.onData = function(d) {
            f.push({ data: d, meta: f.meta });
          };
        }, i.compressWorker = function(f) {
          return new u("Deflate", f);
        }, i.uncompressWorker = function() {
          return new u("Inflate", {});
        };
      }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(n, r, i) {
        function o(h, p) {
          var m, g = "";
          for (m = 0; m < p; m++) g += String.fromCharCode(255 & h), h >>>= 8;
          return g;
        }
        function a(h, p, m, g, y, b) {
          var v, _, x = h.file, E = h.compression, S = b !== l.utf8encode, U = s.transformTo("string", b(x.name)), C = s.transformTo("string", l.utf8encode(x.name)), R = x.comment, j = s.transformTo("string", b(R)), T = s.transformTo("string", l.utf8encode(R)), k = C.length !== x.name.length, w = T.length !== R.length, $ = "", N = "", M = "", K = x.dir, P = x.date, te = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
          p && !m || (te.crc32 = h.crc32, te.compressedSize = h.compressedSize, te.uncompressedSize = h.uncompressedSize);
          var W = 0;
          p && (W |= 8), S || !k && !w || (W |= 2048);
          var B = 0, se = 0;
          K && (B |= 16), y === "UNIX" ? (se = 798, B |= function(J, ce) {
            var he = J;
            return J || (he = ce ? 16893 : 33204), (65535 & he) << 16;
          }(x.unixPermissions, K)) : (se = 20, B |= function(J) {
            return 63 & (J || 0);
          }(x.dosPermissions)), v = P.getUTCHours(), v <<= 6, v |= P.getUTCMinutes(), v <<= 5, v |= P.getUTCSeconds() / 2, _ = P.getUTCFullYear() - 1980, _ <<= 4, _ |= P.getUTCMonth() + 1, _ <<= 5, _ |= P.getUTCDate(), k && (N = o(1, 1) + o(u(U), 4) + C, $ += "up" + o(N.length, 2) + N), w && (M = o(1, 1) + o(u(j), 4) + T, $ += "uc" + o(M.length, 2) + M);
          var G = "";
          return G += `
\0`, G += o(W, 2), G += E.magic, G += o(v, 2), G += o(_, 2), G += o(te.crc32, 4), G += o(te.compressedSize, 4), G += o(te.uncompressedSize, 4), G += o(U.length, 2), G += o($.length, 2), { fileRecord: f.LOCAL_FILE_HEADER + G + U + $, dirRecord: f.CENTRAL_FILE_HEADER + o(se, 2) + G + o(j.length, 2) + "\0\0\0\0" + o(B, 4) + o(g, 4) + U + $ + j };
        }
        var s = n("../utils"), c = n("../stream/GenericWorker"), l = n("../utf8"), u = n("../crc32"), f = n("../signature");
        function d(h, p, m, g) {
          c.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = p, this.zipPlatform = m, this.encodeFileName = g, this.streamFiles = h, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
        }
        s.inherits(d, c), d.prototype.push = function(h) {
          var p = h.meta.percent || 0, m = this.entriesCount, g = this._sources.length;
          this.accumulate ? this.contentBuffer.push(h) : (this.bytesWritten += h.data.length, c.prototype.push.call(this, { data: h.data, meta: { currentFile: this.currentFile, percent: m ? (p + 100 * (m - g - 1)) / m : 100 } }));
        }, d.prototype.openedSource = function(h) {
          this.currentSourceOffset = this.bytesWritten, this.currentFile = h.file.name;
          var p = this.streamFiles && !h.file.dir;
          if (p) {
            var m = a(h, p, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
            this.push({ data: m.fileRecord, meta: { percent: 0 } });
          } else this.accumulate = !0;
        }, d.prototype.closedSource = function(h) {
          this.accumulate = !1;
          var p = this.streamFiles && !h.file.dir, m = a(h, p, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          if (this.dirRecords.push(m.dirRecord), p) this.push({ data: function(g) {
            return f.DATA_DESCRIPTOR + o(g.crc32, 4) + o(g.compressedSize, 4) + o(g.uncompressedSize, 4);
          }(h), meta: { percent: 100 } });
          else for (this.push({ data: m.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; ) this.push(this.contentBuffer.shift());
          this.currentFile = null;
        }, d.prototype.flush = function() {
          for (var h = this.bytesWritten, p = 0; p < this.dirRecords.length; p++) this.push({ data: this.dirRecords[p], meta: { percent: 100 } });
          var m = this.bytesWritten - h, g = function(y, b, v, _, x) {
            var E = s.transformTo("string", x(_));
            return f.CENTRAL_DIRECTORY_END + "\0\0\0\0" + o(y, 2) + o(y, 2) + o(b, 4) + o(v, 4) + o(E.length, 2) + E;
          }(this.dirRecords.length, m, h, this.zipComment, this.encodeFileName);
          this.push({ data: g, meta: { percent: 100 } });
        }, d.prototype.prepareNextSource = function() {
          this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
        }, d.prototype.registerPrevious = function(h) {
          this._sources.push(h);
          var p = this;
          return h.on("data", function(m) {
            p.processChunk(m);
          }), h.on("end", function() {
            p.closedSource(p.previous.streamInfo), p._sources.length ? p.prepareNextSource() : p.end();
          }), h.on("error", function(m) {
            p.error(m);
          }), this;
        }, d.prototype.resume = function() {
          return !!c.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
        }, d.prototype.error = function(h) {
          var p = this._sources;
          if (!c.prototype.error.call(this, h)) return !1;
          for (var m = 0; m < p.length; m++) try {
            p[m].error(h);
          } catch {
          }
          return !0;
        }, d.prototype.lock = function() {
          c.prototype.lock.call(this);
          for (var h = this._sources, p = 0; p < h.length; p++) h[p].lock();
        }, r.exports = d;
      }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(n, r, i) {
        var o = n("../compressions"), a = n("./ZipFileWorker");
        i.generateWorker = function(s, c, l) {
          var u = new a(c.streamFiles, l, c.platform, c.encodeFileName), f = 0;
          try {
            s.forEach(function(d, h) {
              f++;
              var p = function(b, v) {
                var _ = b || v, x = o[_];
                if (!x) throw new Error(_ + " is not a valid compression method !");
                return x;
              }(h.options.compression, c.compression), m = h.options.compressionOptions || c.compressionOptions || {}, g = h.dir, y = h.date;
              h._compressWorker(p, m).withStreamInfo("file", { name: d, dir: g, date: y, comment: h.comment || "", unixPermissions: h.unixPermissions, dosPermissions: h.dosPermissions }).pipe(u);
            }), u.entriesCount = f;
          } catch (d) {
            u.error(d);
          }
          return u;
        };
      }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(n, r, i) {
        function o() {
          if (!(this instanceof o)) return new o();
          if (arguments.length) throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
          this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
            var a = new o();
            for (var s in this) typeof this[s] != "function" && (a[s] = this[s]);
            return a;
          };
        }
        (o.prototype = n("./object")).loadAsync = n("./load"), o.support = n("./support"), o.defaults = n("./defaults"), o.version = "3.10.1", o.loadAsync = function(a, s) {
          return new o().loadAsync(a, s);
        }, o.external = n("./external"), r.exports = o;
      }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(n, r, i) {
        var o = n("./utils"), a = n("./external"), s = n("./utf8"), c = n("./zipEntries"), l = n("./stream/Crc32Probe"), u = n("./nodejsUtils");
        function f(d) {
          return new a.Promise(function(h, p) {
            var m = d.decompressed.getContentWorker().pipe(new l());
            m.on("error", function(g) {
              p(g);
            }).on("end", function() {
              m.streamInfo.crc32 !== d.decompressed.crc32 ? p(new Error("Corrupted zip : CRC32 mismatch")) : h();
            }).resume();
          });
        }
        r.exports = function(d, h) {
          var p = this;
          return h = o.extend(h || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: s.utf8decode }), u.isNode && u.isStream(d) ? a.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : o.prepareContent("the loaded zip file", d, !0, h.optimizedBinaryString, h.base64).then(function(m) {
            var g = new c(h);
            return g.load(m), g;
          }).then(function(m) {
            var g = [a.Promise.resolve(m)], y = m.files;
            if (h.checkCRC32) for (var b = 0; b < y.length; b++) g.push(f(y[b]));
            return a.Promise.all(g);
          }).then(function(m) {
            for (var g = m.shift(), y = g.files, b = 0; b < y.length; b++) {
              var v = y[b], _ = v.fileNameStr, x = o.resolve(v.fileNameStr);
              p.file(x, v.decompressed, { binary: !0, optimizedBinaryString: !0, date: v.date, dir: v.dir, comment: v.fileCommentStr.length ? v.fileCommentStr : null, unixPermissions: v.unixPermissions, dosPermissions: v.dosPermissions, createFolders: h.createFolders }), v.dir || (p.file(x).unsafeOriginalName = _);
            }
            return g.zipComment.length && (p.comment = g.zipComment), p;
          });
        };
      }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(n, r, i) {
        var o = n("../utils"), a = n("../stream/GenericWorker");
        function s(c, l) {
          a.call(this, "Nodejs stream input adapter for " + c), this._upstreamEnded = !1, this._bindStream(l);
        }
        o.inherits(s, a), s.prototype._bindStream = function(c) {
          var l = this;
          (this._stream = c).pause(), c.on("data", function(u) {
            l.push({ data: u, meta: { percent: 0 } });
          }).on("error", function(u) {
            l.isPaused ? this.generatedError = u : l.error(u);
          }).on("end", function() {
            l.isPaused ? l._upstreamEnded = !0 : l.end();
          });
        }, s.prototype.pause = function() {
          return !!a.prototype.pause.call(this) && (this._stream.pause(), !0);
        }, s.prototype.resume = function() {
          return !!a.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
        }, r.exports = s;
      }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(n, r, i) {
        var o = n("readable-stream").Readable;
        function a(s, c, l) {
          o.call(this, c), this._helper = s;
          var u = this;
          s.on("data", function(f, d) {
            u.push(f) || u._helper.pause(), l && l(d);
          }).on("error", function(f) {
            u.emit("error", f);
          }).on("end", function() {
            u.push(null);
          });
        }
        n("../utils").inherits(a, o), a.prototype._read = function() {
          this._helper.resume();
        }, r.exports = a;
      }, { "../utils": 32, "readable-stream": 16 }], 14: [function(n, r, i) {
        r.exports = { isNode: typeof Buffer < "u", newBufferFrom: function(o, a) {
          if (Buffer.from && Buffer.from !== Uint8Array.from) return Buffer.from(o, a);
          if (typeof o == "number") throw new Error('The "data" argument must not be a number');
          return new Buffer(o, a);
        }, allocBuffer: function(o) {
          if (Buffer.alloc) return Buffer.alloc(o);
          var a = new Buffer(o);
          return a.fill(0), a;
        }, isBuffer: function(o) {
          return Buffer.isBuffer(o);
        }, isStream: function(o) {
          return o && typeof o.on == "function" && typeof o.pause == "function" && typeof o.resume == "function";
        } };
      }, {}], 15: [function(n, r, i) {
        function o(x, E, S) {
          var U, C = s.getTypeOf(E), R = s.extend(S || {}, u);
          R.date = R.date || /* @__PURE__ */ new Date(), R.compression !== null && (R.compression = R.compression.toUpperCase()), typeof R.unixPermissions == "string" && (R.unixPermissions = parseInt(R.unixPermissions, 8)), R.unixPermissions && 16384 & R.unixPermissions && (R.dir = !0), R.dosPermissions && 16 & R.dosPermissions && (R.dir = !0), R.dir && (x = y(x)), R.createFolders && (U = g(x)) && b.call(this, U, !0);
          var j = C === "string" && R.binary === !1 && R.base64 === !1;
          S && S.binary !== void 0 || (R.binary = !j), (E instanceof f && E.uncompressedSize === 0 || R.dir || !E || E.length === 0) && (R.base64 = !1, R.binary = !0, E = "", R.compression = "STORE", C = "string");
          var T = null;
          T = E instanceof f || E instanceof c ? E : p.isNode && p.isStream(E) ? new m(x, E) : s.prepareContent(x, E, R.binary, R.optimizedBinaryString, R.base64);
          var k = new d(x, T, R);
          this.files[x] = k;
        }
        var a = n("./utf8"), s = n("./utils"), c = n("./stream/GenericWorker"), l = n("./stream/StreamHelper"), u = n("./defaults"), f = n("./compressedObject"), d = n("./zipObject"), h = n("./generate"), p = n("./nodejsUtils"), m = n("./nodejs/NodejsStreamInputAdapter"), g = function(x) {
          x.slice(-1) === "/" && (x = x.substring(0, x.length - 1));
          var E = x.lastIndexOf("/");
          return 0 < E ? x.substring(0, E) : "";
        }, y = function(x) {
          return x.slice(-1) !== "/" && (x += "/"), x;
        }, b = function(x, E) {
          return E = E !== void 0 ? E : u.createFolders, x = y(x), this.files[x] || o.call(this, x, null, { dir: !0, createFolders: E }), this.files[x];
        };
        function v(x) {
          return Object.prototype.toString.call(x) === "[object RegExp]";
        }
        var _ = { load: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, forEach: function(x) {
          var E, S, U;
          for (E in this.files) U = this.files[E], (S = E.slice(this.root.length, E.length)) && E.slice(0, this.root.length) === this.root && x(S, U);
        }, filter: function(x) {
          var E = [];
          return this.forEach(function(S, U) {
            x(S, U) && E.push(U);
          }), E;
        }, file: function(x, E, S) {
          if (arguments.length !== 1) return x = this.root + x, o.call(this, x, E, S), this;
          if (v(x)) {
            var U = x;
            return this.filter(function(R, j) {
              return !j.dir && U.test(R);
            });
          }
          var C = this.files[this.root + x];
          return C && !C.dir ? C : null;
        }, folder: function(x) {
          if (!x) return this;
          if (v(x)) return this.filter(function(C, R) {
            return R.dir && x.test(C);
          });
          var E = this.root + x, S = b.call(this, E), U = this.clone();
          return U.root = S.name, U;
        }, remove: function(x) {
          x = this.root + x;
          var E = this.files[x];
          if (E || (x.slice(-1) !== "/" && (x += "/"), E = this.files[x]), E && !E.dir) delete this.files[x];
          else for (var S = this.filter(function(C, R) {
            return R.name.slice(0, x.length) === x;
          }), U = 0; U < S.length; U++) delete this.files[S[U].name];
          return this;
        }, generate: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, generateInternalStream: function(x) {
          var E, S = {};
          try {
            if ((S = s.extend(x || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: a.utf8encode })).type = S.type.toLowerCase(), S.compression = S.compression.toUpperCase(), S.type === "binarystring" && (S.type = "string"), !S.type) throw new Error("No output type specified.");
            s.checkSupport(S.type), S.platform !== "darwin" && S.platform !== "freebsd" && S.platform !== "linux" && S.platform !== "sunos" || (S.platform = "UNIX"), S.platform === "win32" && (S.platform = "DOS");
            var U = S.comment || this.comment || "";
            E = h.generateWorker(this, S, U);
          } catch (C) {
            (E = new c("error")).error(C);
          }
          return new l(E, S.type || "string", S.mimeType);
        }, generateAsync: function(x, E) {
          return this.generateInternalStream(x).accumulate(E);
        }, generateNodeStream: function(x, E) {
          return (x = x || {}).type || (x.type = "nodebuffer"), this.generateInternalStream(x).toNodejsStream(E);
        } };
        r.exports = _;
      }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(n, r, i) {
        r.exports = n("stream");
      }, { stream: void 0 }], 17: [function(n, r, i) {
        var o = n("./DataReader");
        function a(s) {
          o.call(this, s);
          for (var c = 0; c < this.data.length; c++) s[c] = 255 & s[c];
        }
        n("../utils").inherits(a, o), a.prototype.byteAt = function(s) {
          return this.data[this.zero + s];
        }, a.prototype.lastIndexOfSignature = function(s) {
          for (var c = s.charCodeAt(0), l = s.charCodeAt(1), u = s.charCodeAt(2), f = s.charCodeAt(3), d = this.length - 4; 0 <= d; --d) if (this.data[d] === c && this.data[d + 1] === l && this.data[d + 2] === u && this.data[d + 3] === f) return d - this.zero;
          return -1;
        }, a.prototype.readAndCheckSignature = function(s) {
          var c = s.charCodeAt(0), l = s.charCodeAt(1), u = s.charCodeAt(2), f = s.charCodeAt(3), d = this.readData(4);
          return c === d[0] && l === d[1] && u === d[2] && f === d[3];
        }, a.prototype.readData = function(s) {
          if (this.checkOffset(s), s === 0) return [];
          var c = this.data.slice(this.zero + this.index, this.zero + this.index + s);
          return this.index += s, c;
        }, r.exports = a;
      }, { "../utils": 32, "./DataReader": 18 }], 18: [function(n, r, i) {
        var o = n("../utils");
        function a(s) {
          this.data = s, this.length = s.length, this.index = 0, this.zero = 0;
        }
        a.prototype = { checkOffset: function(s) {
          this.checkIndex(this.index + s);
        }, checkIndex: function(s) {
          if (this.length < this.zero + s || s < 0) throw new Error("End of data reached (data length = " + this.length + ", asked index = " + s + "). Corrupted zip ?");
        }, setIndex: function(s) {
          this.checkIndex(s), this.index = s;
        }, skip: function(s) {
          this.setIndex(this.index + s);
        }, byteAt: function() {
        }, readInt: function(s) {
          var c, l = 0;
          for (this.checkOffset(s), c = this.index + s - 1; c >= this.index; c--) l = (l << 8) + this.byteAt(c);
          return this.index += s, l;
        }, readString: function(s) {
          return o.transformTo("string", this.readData(s));
        }, readData: function() {
        }, lastIndexOfSignature: function() {
        }, readAndCheckSignature: function() {
        }, readDate: function() {
          var s = this.readInt(4);
          return new Date(Date.UTC(1980 + (s >> 25 & 127), (s >> 21 & 15) - 1, s >> 16 & 31, s >> 11 & 31, s >> 5 & 63, (31 & s) << 1));
        } }, r.exports = a;
      }, { "../utils": 32 }], 19: [function(n, r, i) {
        var o = n("./Uint8ArrayReader");
        function a(s) {
          o.call(this, s);
        }
        n("../utils").inherits(a, o), a.prototype.readData = function(s) {
          this.checkOffset(s);
          var c = this.data.slice(this.zero + this.index, this.zero + this.index + s);
          return this.index += s, c;
        }, r.exports = a;
      }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(n, r, i) {
        var o = n("./DataReader");
        function a(s) {
          o.call(this, s);
        }
        n("../utils").inherits(a, o), a.prototype.byteAt = function(s) {
          return this.data.charCodeAt(this.zero + s);
        }, a.prototype.lastIndexOfSignature = function(s) {
          return this.data.lastIndexOf(s) - this.zero;
        }, a.prototype.readAndCheckSignature = function(s) {
          return s === this.readData(4);
        }, a.prototype.readData = function(s) {
          this.checkOffset(s);
          var c = this.data.slice(this.zero + this.index, this.zero + this.index + s);
          return this.index += s, c;
        }, r.exports = a;
      }, { "../utils": 32, "./DataReader": 18 }], 21: [function(n, r, i) {
        var o = n("./ArrayReader");
        function a(s) {
          o.call(this, s);
        }
        n("../utils").inherits(a, o), a.prototype.readData = function(s) {
          if (this.checkOffset(s), s === 0) return new Uint8Array(0);
          var c = this.data.subarray(this.zero + this.index, this.zero + this.index + s);
          return this.index += s, c;
        }, r.exports = a;
      }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(n, r, i) {
        var o = n("../utils"), a = n("../support"), s = n("./ArrayReader"), c = n("./StringReader"), l = n("./NodeBufferReader"), u = n("./Uint8ArrayReader");
        r.exports = function(f) {
          var d = o.getTypeOf(f);
          return o.checkSupport(d), d !== "string" || a.uint8array ? d === "nodebuffer" ? new l(f) : a.uint8array ? new u(o.transformTo("uint8array", f)) : new s(o.transformTo("array", f)) : new c(f);
        };
      }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(n, r, i) {
        i.LOCAL_FILE_HEADER = "PK", i.CENTRAL_FILE_HEADER = "PK", i.CENTRAL_DIRECTORY_END = "PK", i.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", i.ZIP64_CENTRAL_DIRECTORY_END = "PK", i.DATA_DESCRIPTOR = "PK\x07\b";
      }, {}], 24: [function(n, r, i) {
        var o = n("./GenericWorker"), a = n("../utils");
        function s(c) {
          o.call(this, "ConvertWorker to " + c), this.destType = c;
        }
        a.inherits(s, o), s.prototype.processChunk = function(c) {
          this.push({ data: a.transformTo(this.destType, c.data), meta: c.meta });
        }, r.exports = s;
      }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(n, r, i) {
        var o = n("./GenericWorker"), a = n("../crc32");
        function s() {
          o.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
        }
        n("../utils").inherits(s, o), s.prototype.processChunk = function(c) {
          this.streamInfo.crc32 = a(c.data, this.streamInfo.crc32 || 0), this.push(c);
        }, r.exports = s;
      }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(n, r, i) {
        var o = n("../utils"), a = n("./GenericWorker");
        function s(c) {
          a.call(this, "DataLengthProbe for " + c), this.propName = c, this.withStreamInfo(c, 0);
        }
        o.inherits(s, a), s.prototype.processChunk = function(c) {
          if (c) {
            var l = this.streamInfo[this.propName] || 0;
            this.streamInfo[this.propName] = l + c.data.length;
          }
          a.prototype.processChunk.call(this, c);
        }, r.exports = s;
      }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(n, r, i) {
        var o = n("../utils"), a = n("./GenericWorker");
        function s(c) {
          a.call(this, "DataWorker");
          var l = this;
          this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, c.then(function(u) {
            l.dataIsReady = !0, l.data = u, l.max = u && u.length || 0, l.type = o.getTypeOf(u), l.isPaused || l._tickAndRepeat();
          }, function(u) {
            l.error(u);
          });
        }
        o.inherits(s, a), s.prototype.cleanUp = function() {
          a.prototype.cleanUp.call(this), this.data = null;
        }, s.prototype.resume = function() {
          return !!a.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, o.delay(this._tickAndRepeat, [], this)), !0);
        }, s.prototype._tickAndRepeat = function() {
          this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (o.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
        }, s.prototype._tick = function() {
          if (this.isPaused || this.isFinished) return !1;
          var c = null, l = Math.min(this.max, this.index + 16384);
          if (this.index >= this.max) return this.end();
          switch (this.type) {
            case "string":
              c = this.data.substring(this.index, l);
              break;
            case "uint8array":
              c = this.data.subarray(this.index, l);
              break;
            case "array":
            case "nodebuffer":
              c = this.data.slice(this.index, l);
          }
          return this.index = l, this.push({ data: c, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
        }, r.exports = s;
      }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(n, r, i) {
        function o(a) {
          this.name = a || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
        }
        o.prototype = { push: function(a) {
          this.emit("data", a);
        }, end: function() {
          if (this.isFinished) return !1;
          this.flush();
          try {
            this.emit("end"), this.cleanUp(), this.isFinished = !0;
          } catch (a) {
            this.emit("error", a);
          }
          return !0;
        }, error: function(a) {
          return !this.isFinished && (this.isPaused ? this.generatedError = a : (this.isFinished = !0, this.emit("error", a), this.previous && this.previous.error(a), this.cleanUp()), !0);
        }, on: function(a, s) {
          return this._listeners[a].push(s), this;
        }, cleanUp: function() {
          this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
        }, emit: function(a, s) {
          if (this._listeners[a]) for (var c = 0; c < this._listeners[a].length; c++) this._listeners[a][c].call(this, s);
        }, pipe: function(a) {
          return a.registerPrevious(this);
        }, registerPrevious: function(a) {
          if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
          this.streamInfo = a.streamInfo, this.mergeStreamInfo(), this.previous = a;
          var s = this;
          return a.on("data", function(c) {
            s.processChunk(c);
          }), a.on("end", function() {
            s.end();
          }), a.on("error", function(c) {
            s.error(c);
          }), this;
        }, pause: function() {
          return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
        }, resume: function() {
          if (!this.isPaused || this.isFinished) return !1;
          var a = this.isPaused = !1;
          return this.generatedError && (this.error(this.generatedError), a = !0), this.previous && this.previous.resume(), !a;
        }, flush: function() {
        }, processChunk: function(a) {
          this.push(a);
        }, withStreamInfo: function(a, s) {
          return this.extraStreamInfo[a] = s, this.mergeStreamInfo(), this;
        }, mergeStreamInfo: function() {
          for (var a in this.extraStreamInfo) Object.prototype.hasOwnProperty.call(this.extraStreamInfo, a) && (this.streamInfo[a] = this.extraStreamInfo[a]);
        }, lock: function() {
          if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
          this.isLocked = !0, this.previous && this.previous.lock();
        }, toString: function() {
          var a = "Worker " + this.name;
          return this.previous ? this.previous + " -> " + a : a;
        } }, r.exports = o;
      }, {}], 29: [function(n, r, i) {
        var o = n("../utils"), a = n("./ConvertWorker"), s = n("./GenericWorker"), c = n("../base64"), l = n("../support"), u = n("../external"), f = null;
        if (l.nodestream) try {
          f = n("../nodejs/NodejsStreamOutputAdapter");
        } catch {
        }
        function d(p, m) {
          return new u.Promise(function(g, y) {
            var b = [], v = p._internalType, _ = p._outputType, x = p._mimeType;
            p.on("data", function(E, S) {
              b.push(E), m && m(S);
            }).on("error", function(E) {
              b = [], y(E);
            }).on("end", function() {
              try {
                var E = function(S, U, C) {
                  switch (S) {
                    case "blob":
                      return o.newBlob(o.transformTo("arraybuffer", U), C);
                    case "base64":
                      return c.encode(U);
                    default:
                      return o.transformTo(S, U);
                  }
                }(_, function(S, U) {
                  var C, R = 0, j = null, T = 0;
                  for (C = 0; C < U.length; C++) T += U[C].length;
                  switch (S) {
                    case "string":
                      return U.join("");
                    case "array":
                      return Array.prototype.concat.apply([], U);
                    case "uint8array":
                      for (j = new Uint8Array(T), C = 0; C < U.length; C++) j.set(U[C], R), R += U[C].length;
                      return j;
                    case "nodebuffer":
                      return Buffer.concat(U);
                    default:
                      throw new Error("concat : unsupported type '" + S + "'");
                  }
                }(v, b), x);
                g(E);
              } catch (S) {
                y(S);
              }
              b = [];
            }).resume();
          });
        }
        function h(p, m, g) {
          var y = m;
          switch (m) {
            case "blob":
            case "arraybuffer":
              y = "uint8array";
              break;
            case "base64":
              y = "string";
          }
          try {
            this._internalType = y, this._outputType = m, this._mimeType = g, o.checkSupport(y), this._worker = p.pipe(new a(y)), p.lock();
          } catch (b) {
            this._worker = new s("error"), this._worker.error(b);
          }
        }
        h.prototype = { accumulate: function(p) {
          return d(this, p);
        }, on: function(p, m) {
          var g = this;
          return p === "data" ? this._worker.on(p, function(y) {
            m.call(g, y.data, y.meta);
          }) : this._worker.on(p, function() {
            o.delay(m, arguments, g);
          }), this;
        }, resume: function() {
          return o.delay(this._worker.resume, [], this._worker), this;
        }, pause: function() {
          return this._worker.pause(), this;
        }, toNodejsStream: function(p) {
          if (o.checkSupport("nodestream"), this._outputType !== "nodebuffer") throw new Error(this._outputType + " is not supported by this method");
          return new f(this, { objectMode: this._outputType !== "nodebuffer" }, p);
        } }, r.exports = h;
      }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(n, r, i) {
        if (i.base64 = !0, i.array = !0, i.string = !0, i.arraybuffer = typeof ArrayBuffer < "u" && typeof Uint8Array < "u", i.nodebuffer = typeof Buffer < "u", i.uint8array = typeof Uint8Array < "u", typeof ArrayBuffer > "u") i.blob = !1;
        else {
          var o = new ArrayBuffer(0);
          try {
            i.blob = new Blob([o], { type: "application/zip" }).size === 0;
          } catch {
            try {
              var a = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              a.append(o), i.blob = a.getBlob("application/zip").size === 0;
            } catch {
              i.blob = !1;
            }
          }
        }
        try {
          i.nodestream = !!n("readable-stream").Readable;
        } catch {
          i.nodestream = !1;
        }
      }, { "readable-stream": 16 }], 31: [function(n, r, i) {
        for (var o = n("./utils"), a = n("./support"), s = n("./nodejsUtils"), c = n("./stream/GenericWorker"), l = new Array(256), u = 0; u < 256; u++) l[u] = 252 <= u ? 6 : 248 <= u ? 5 : 240 <= u ? 4 : 224 <= u ? 3 : 192 <= u ? 2 : 1;
        l[254] = l[254] = 1;
        function f() {
          c.call(this, "utf-8 decode"), this.leftOver = null;
        }
        function d() {
          c.call(this, "utf-8 encode");
        }
        i.utf8encode = function(h) {
          return a.nodebuffer ? s.newBufferFrom(h, "utf-8") : function(p) {
            var m, g, y, b, v, _ = p.length, x = 0;
            for (b = 0; b < _; b++) (64512 & (g = p.charCodeAt(b))) == 55296 && b + 1 < _ && (64512 & (y = p.charCodeAt(b + 1))) == 56320 && (g = 65536 + (g - 55296 << 10) + (y - 56320), b++), x += g < 128 ? 1 : g < 2048 ? 2 : g < 65536 ? 3 : 4;
            for (m = a.uint8array ? new Uint8Array(x) : new Array(x), b = v = 0; v < x; b++) (64512 & (g = p.charCodeAt(b))) == 55296 && b + 1 < _ && (64512 & (y = p.charCodeAt(b + 1))) == 56320 && (g = 65536 + (g - 55296 << 10) + (y - 56320), b++), g < 128 ? m[v++] = g : (g < 2048 ? m[v++] = 192 | g >>> 6 : (g < 65536 ? m[v++] = 224 | g >>> 12 : (m[v++] = 240 | g >>> 18, m[v++] = 128 | g >>> 12 & 63), m[v++] = 128 | g >>> 6 & 63), m[v++] = 128 | 63 & g);
            return m;
          }(h);
        }, i.utf8decode = function(h) {
          return a.nodebuffer ? o.transformTo("nodebuffer", h).toString("utf-8") : function(p) {
            var m, g, y, b, v = p.length, _ = new Array(2 * v);
            for (m = g = 0; m < v; ) if ((y = p[m++]) < 128) _[g++] = y;
            else if (4 < (b = l[y])) _[g++] = 65533, m += b - 1;
            else {
              for (y &= b === 2 ? 31 : b === 3 ? 15 : 7; 1 < b && m < v; ) y = y << 6 | 63 & p[m++], b--;
              1 < b ? _[g++] = 65533 : y < 65536 ? _[g++] = y : (y -= 65536, _[g++] = 55296 | y >> 10 & 1023, _[g++] = 56320 | 1023 & y);
            }
            return _.length !== g && (_.subarray ? _ = _.subarray(0, g) : _.length = g), o.applyFromCharCode(_);
          }(h = o.transformTo(a.uint8array ? "uint8array" : "array", h));
        }, o.inherits(f, c), f.prototype.processChunk = function(h) {
          var p = o.transformTo(a.uint8array ? "uint8array" : "array", h.data);
          if (this.leftOver && this.leftOver.length) {
            if (a.uint8array) {
              var m = p;
              (p = new Uint8Array(m.length + this.leftOver.length)).set(this.leftOver, 0), p.set(m, this.leftOver.length);
            } else p = this.leftOver.concat(p);
            this.leftOver = null;
          }
          var g = function(b, v) {
            var _;
            for ((v = v || b.length) > b.length && (v = b.length), _ = v - 1; 0 <= _ && (192 & b[_]) == 128; ) _--;
            return _ < 0 || _ === 0 ? v : _ + l[b[_]] > v ? _ : v;
          }(p), y = p;
          g !== p.length && (a.uint8array ? (y = p.subarray(0, g), this.leftOver = p.subarray(g, p.length)) : (y = p.slice(0, g), this.leftOver = p.slice(g, p.length))), this.push({ data: i.utf8decode(y), meta: h.meta });
        }, f.prototype.flush = function() {
          this.leftOver && this.leftOver.length && (this.push({ data: i.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
        }, i.Utf8DecodeWorker = f, o.inherits(d, c), d.prototype.processChunk = function(h) {
          this.push({ data: i.utf8encode(h.data), meta: h.meta });
        }, i.Utf8EncodeWorker = d;
      }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(n, r, i) {
        var o = n("./support"), a = n("./base64"), s = n("./nodejsUtils"), c = n("./external");
        function l(m) {
          return m;
        }
        function u(m, g) {
          for (var y = 0; y < m.length; ++y) g[y] = 255 & m.charCodeAt(y);
          return g;
        }
        n("setimmediate"), i.newBlob = function(m, g) {
          i.checkSupport("blob");
          try {
            return new Blob([m], { type: g });
          } catch {
            try {
              var y = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              return y.append(m), y.getBlob(g);
            } catch {
              throw new Error("Bug : can't construct the Blob.");
            }
          }
        };
        var f = { stringifyByChunk: function(m, g, y) {
          var b = [], v = 0, _ = m.length;
          if (_ <= y) return String.fromCharCode.apply(null, m);
          for (; v < _; ) g === "array" || g === "nodebuffer" ? b.push(String.fromCharCode.apply(null, m.slice(v, Math.min(v + y, _)))) : b.push(String.fromCharCode.apply(null, m.subarray(v, Math.min(v + y, _)))), v += y;
          return b.join("");
        }, stringifyByChar: function(m) {
          for (var g = "", y = 0; y < m.length; y++) g += String.fromCharCode(m[y]);
          return g;
        }, applyCanBeUsed: { uint8array: function() {
          try {
            return o.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
          } catch {
            return !1;
          }
        }(), nodebuffer: function() {
          try {
            return o.nodebuffer && String.fromCharCode.apply(null, s.allocBuffer(1)).length === 1;
          } catch {
            return !1;
          }
        }() } };
        function d(m) {
          var g = 65536, y = i.getTypeOf(m), b = !0;
          if (y === "uint8array" ? b = f.applyCanBeUsed.uint8array : y === "nodebuffer" && (b = f.applyCanBeUsed.nodebuffer), b) for (; 1 < g; ) try {
            return f.stringifyByChunk(m, y, g);
          } catch {
            g = Math.floor(g / 2);
          }
          return f.stringifyByChar(m);
        }
        function h(m, g) {
          for (var y = 0; y < m.length; y++) g[y] = m[y];
          return g;
        }
        i.applyFromCharCode = d;
        var p = {};
        p.string = { string: l, array: function(m) {
          return u(m, new Array(m.length));
        }, arraybuffer: function(m) {
          return p.string.uint8array(m).buffer;
        }, uint8array: function(m) {
          return u(m, new Uint8Array(m.length));
        }, nodebuffer: function(m) {
          return u(m, s.allocBuffer(m.length));
        } }, p.array = { string: d, array: l, arraybuffer: function(m) {
          return new Uint8Array(m).buffer;
        }, uint8array: function(m) {
          return new Uint8Array(m);
        }, nodebuffer: function(m) {
          return s.newBufferFrom(m);
        } }, p.arraybuffer = { string: function(m) {
          return d(new Uint8Array(m));
        }, array: function(m) {
          return h(new Uint8Array(m), new Array(m.byteLength));
        }, arraybuffer: l, uint8array: function(m) {
          return new Uint8Array(m);
        }, nodebuffer: function(m) {
          return s.newBufferFrom(new Uint8Array(m));
        } }, p.uint8array = { string: d, array: function(m) {
          return h(m, new Array(m.length));
        }, arraybuffer: function(m) {
          return m.buffer;
        }, uint8array: l, nodebuffer: function(m) {
          return s.newBufferFrom(m);
        } }, p.nodebuffer = { string: d, array: function(m) {
          return h(m, new Array(m.length));
        }, arraybuffer: function(m) {
          return p.nodebuffer.uint8array(m).buffer;
        }, uint8array: function(m) {
          return h(m, new Uint8Array(m.length));
        }, nodebuffer: l }, i.transformTo = function(m, g) {
          if (g = g || "", !m) return g;
          i.checkSupport(m);
          var y = i.getTypeOf(g);
          return p[y][m](g);
        }, i.resolve = function(m) {
          for (var g = m.split("/"), y = [], b = 0; b < g.length; b++) {
            var v = g[b];
            v === "." || v === "" && b !== 0 && b !== g.length - 1 || (v === ".." ? y.pop() : y.push(v));
          }
          return y.join("/");
        }, i.getTypeOf = function(m) {
          return typeof m == "string" ? "string" : Object.prototype.toString.call(m) === "[object Array]" ? "array" : o.nodebuffer && s.isBuffer(m) ? "nodebuffer" : o.uint8array && m instanceof Uint8Array ? "uint8array" : o.arraybuffer && m instanceof ArrayBuffer ? "arraybuffer" : void 0;
        }, i.checkSupport = function(m) {
          if (!o[m.toLowerCase()]) throw new Error(m + " is not supported by this platform");
        }, i.MAX_VALUE_16BITS = 65535, i.MAX_VALUE_32BITS = -1, i.pretty = function(m) {
          var g, y, b = "";
          for (y = 0; y < (m || "").length; y++) b += "\\x" + ((g = m.charCodeAt(y)) < 16 ? "0" : "") + g.toString(16).toUpperCase();
          return b;
        }, i.delay = function(m, g, y) {
          setImmediate(function() {
            m.apply(y || null, g || []);
          });
        }, i.inherits = function(m, g) {
          function y() {
          }
          y.prototype = g.prototype, m.prototype = new y();
        }, i.extend = function() {
          var m, g, y = {};
          for (m = 0; m < arguments.length; m++) for (g in arguments[m]) Object.prototype.hasOwnProperty.call(arguments[m], g) && y[g] === void 0 && (y[g] = arguments[m][g]);
          return y;
        }, i.prepareContent = function(m, g, y, b, v) {
          return c.Promise.resolve(g).then(function(_) {
            return o.blob && (_ instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(_)) !== -1) && typeof FileReader < "u" ? new c.Promise(function(x, E) {
              var S = new FileReader();
              S.onload = function(U) {
                x(U.target.result);
              }, S.onerror = function(U) {
                E(U.target.error);
              }, S.readAsArrayBuffer(_);
            }) : _;
          }).then(function(_) {
            var x = i.getTypeOf(_);
            return x ? (x === "arraybuffer" ? _ = i.transformTo("uint8array", _) : x === "string" && (v ? _ = a.decode(_) : y && b !== !0 && (_ = function(E) {
              return u(E, o.uint8array ? new Uint8Array(E.length) : new Array(E.length));
            }(_))), _) : c.Promise.reject(new Error("Can't read the data of '" + m + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
          });
        };
      }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(n, r, i) {
        var o = n("./reader/readerFor"), a = n("./utils"), s = n("./signature"), c = n("./zipEntry"), l = n("./support");
        function u(f) {
          this.files = [], this.loadOptions = f;
        }
        u.prototype = { checkSignature: function(f) {
          if (!this.reader.readAndCheckSignature(f)) {
            this.reader.index -= 4;
            var d = this.reader.readString(4);
            throw new Error("Corrupted zip or bug: unexpected signature (" + a.pretty(d) + ", expected " + a.pretty(f) + ")");
          }
        }, isSignature: function(f, d) {
          var h = this.reader.index;
          this.reader.setIndex(f);
          var p = this.reader.readString(4) === d;
          return this.reader.setIndex(h), p;
        }, readBlockEndOfCentral: function() {
          this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
          var f = this.reader.readData(this.zipCommentLength), d = l.uint8array ? "uint8array" : "array", h = a.transformTo(d, f);
          this.zipComment = this.loadOptions.decodeFileName(h);
        }, readBlockZip64EndOfCentral: function() {
          this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
          for (var f, d, h, p = this.zip64EndOfCentralSize - 44; 0 < p; ) f = this.reader.readInt(2), d = this.reader.readInt(4), h = this.reader.readData(d), this.zip64ExtensibleData[f] = { id: f, length: d, value: h };
        }, readBlockZip64EndOfCentralLocator: function() {
          if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount) throw new Error("Multi-volumes zip are not supported");
        }, readLocalFiles: function() {
          var f, d;
          for (f = 0; f < this.files.length; f++) d = this.files[f], this.reader.setIndex(d.localHeaderOffset), this.checkSignature(s.LOCAL_FILE_HEADER), d.readLocalPart(this.reader), d.handleUTF8(), d.processAttributes();
        }, readCentralDir: function() {
          var f;
          for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER); ) (f = new c({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(f);
          if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0) throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
        }, readEndOfCentral: function() {
          var f = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
          if (f < 0) throw this.isSignature(0, s.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
          this.reader.setIndex(f);
          var d = f;
          if (this.checkSignature(s.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === a.MAX_VALUE_16BITS || this.diskWithCentralDirStart === a.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === a.MAX_VALUE_16BITS || this.centralDirRecords === a.MAX_VALUE_16BITS || this.centralDirSize === a.MAX_VALUE_32BITS || this.centralDirOffset === a.MAX_VALUE_32BITS) {
            if (this.zip64 = !0, (f = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
            if (this.reader.setIndex(f), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0)) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
          }
          var h = this.centralDirOffset + this.centralDirSize;
          this.zip64 && (h += 20, h += 12 + this.zip64EndOfCentralSize);
          var p = d - h;
          if (0 < p) this.isSignature(d, s.CENTRAL_FILE_HEADER) || (this.reader.zero = p);
          else if (p < 0) throw new Error("Corrupted zip: missing " + Math.abs(p) + " bytes.");
        }, prepareReader: function(f) {
          this.reader = o(f);
        }, load: function(f) {
          this.prepareReader(f), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
        } }, r.exports = u;
      }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(n, r, i) {
        var o = n("./reader/readerFor"), a = n("./utils"), s = n("./compressedObject"), c = n("./crc32"), l = n("./utf8"), u = n("./compressions"), f = n("./support");
        function d(h, p) {
          this.options = h, this.loadOptions = p;
        }
        d.prototype = { isEncrypted: function() {
          return (1 & this.bitFlag) == 1;
        }, useUTF8: function() {
          return (2048 & this.bitFlag) == 2048;
        }, readLocalPart: function(h) {
          var p, m;
          if (h.skip(22), this.fileNameLength = h.readInt(2), m = h.readInt(2), this.fileName = h.readData(this.fileNameLength), h.skip(m), this.compressedSize === -1 || this.uncompressedSize === -1) throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
          if ((p = function(g) {
            for (var y in u) if (Object.prototype.hasOwnProperty.call(u, y) && u[y].magic === g) return u[y];
            return null;
          }(this.compressionMethod)) === null) throw new Error("Corrupted zip : compression " + a.pretty(this.compressionMethod) + " unknown (inner file : " + a.transformTo("string", this.fileName) + ")");
          this.decompressed = new s(this.compressedSize, this.uncompressedSize, this.crc32, p, h.readData(this.compressedSize));
        }, readCentralPart: function(h) {
          this.versionMadeBy = h.readInt(2), h.skip(2), this.bitFlag = h.readInt(2), this.compressionMethod = h.readString(2), this.date = h.readDate(), this.crc32 = h.readInt(4), this.compressedSize = h.readInt(4), this.uncompressedSize = h.readInt(4);
          var p = h.readInt(2);
          if (this.extraFieldsLength = h.readInt(2), this.fileCommentLength = h.readInt(2), this.diskNumberStart = h.readInt(2), this.internalFileAttributes = h.readInt(2), this.externalFileAttributes = h.readInt(4), this.localHeaderOffset = h.readInt(4), this.isEncrypted()) throw new Error("Encrypted zip are not supported");
          h.skip(p), this.readExtraFields(h), this.parseZIP64ExtraField(h), this.fileComment = h.readData(this.fileCommentLength);
        }, processAttributes: function() {
          this.unixPermissions = null, this.dosPermissions = null;
          var h = this.versionMadeBy >> 8;
          this.dir = !!(16 & this.externalFileAttributes), h == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), h == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
        }, parseZIP64ExtraField: function() {
          if (this.extraFields[1]) {
            var h = o(this.extraFields[1].value);
            this.uncompressedSize === a.MAX_VALUE_32BITS && (this.uncompressedSize = h.readInt(8)), this.compressedSize === a.MAX_VALUE_32BITS && (this.compressedSize = h.readInt(8)), this.localHeaderOffset === a.MAX_VALUE_32BITS && (this.localHeaderOffset = h.readInt(8)), this.diskNumberStart === a.MAX_VALUE_32BITS && (this.diskNumberStart = h.readInt(4));
          }
        }, readExtraFields: function(h) {
          var p, m, g, y = h.index + this.extraFieldsLength;
          for (this.extraFields || (this.extraFields = {}); h.index + 4 < y; ) p = h.readInt(2), m = h.readInt(2), g = h.readData(m), this.extraFields[p] = { id: p, length: m, value: g };
          h.setIndex(y);
        }, handleUTF8: function() {
          var h = f.uint8array ? "uint8array" : "array";
          if (this.useUTF8()) this.fileNameStr = l.utf8decode(this.fileName), this.fileCommentStr = l.utf8decode(this.fileComment);
          else {
            var p = this.findExtraFieldUnicodePath();
            if (p !== null) this.fileNameStr = p;
            else {
              var m = a.transformTo(h, this.fileName);
              this.fileNameStr = this.loadOptions.decodeFileName(m);
            }
            var g = this.findExtraFieldUnicodeComment();
            if (g !== null) this.fileCommentStr = g;
            else {
              var y = a.transformTo(h, this.fileComment);
              this.fileCommentStr = this.loadOptions.decodeFileName(y);
            }
          }
        }, findExtraFieldUnicodePath: function() {
          var h = this.extraFields[28789];
          if (h) {
            var p = o(h.value);
            return p.readInt(1) !== 1 || c(this.fileName) !== p.readInt(4) ? null : l.utf8decode(p.readData(h.length - 5));
          }
          return null;
        }, findExtraFieldUnicodeComment: function() {
          var h = this.extraFields[25461];
          if (h) {
            var p = o(h.value);
            return p.readInt(1) !== 1 || c(this.fileComment) !== p.readInt(4) ? null : l.utf8decode(p.readData(h.length - 5));
          }
          return null;
        } }, r.exports = d;
      }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(n, r, i) {
        function o(p, m, g) {
          this.name = p, this.dir = g.dir, this.date = g.date, this.comment = g.comment, this.unixPermissions = g.unixPermissions, this.dosPermissions = g.dosPermissions, this._data = m, this._dataBinary = g.binary, this.options = { compression: g.compression, compressionOptions: g.compressionOptions };
        }
        var a = n("./stream/StreamHelper"), s = n("./stream/DataWorker"), c = n("./utf8"), l = n("./compressedObject"), u = n("./stream/GenericWorker");
        o.prototype = { internalStream: function(p) {
          var m = null, g = "string";
          try {
            if (!p) throw new Error("No output type specified.");
            var y = (g = p.toLowerCase()) === "string" || g === "text";
            g !== "binarystring" && g !== "text" || (g = "string"), m = this._decompressWorker();
            var b = !this._dataBinary;
            b && !y && (m = m.pipe(new c.Utf8EncodeWorker())), !b && y && (m = m.pipe(new c.Utf8DecodeWorker()));
          } catch (v) {
            (m = new u("error")).error(v);
          }
          return new a(m, g, "");
        }, async: function(p, m) {
          return this.internalStream(p).accumulate(m);
        }, nodeStream: function(p, m) {
          return this.internalStream(p || "nodebuffer").toNodejsStream(m);
        }, _compressWorker: function(p, m) {
          if (this._data instanceof l && this._data.compression.magic === p.magic) return this._data.getCompressedWorker();
          var g = this._decompressWorker();
          return this._dataBinary || (g = g.pipe(new c.Utf8EncodeWorker())), l.createWorkerFrom(g, p, m);
        }, _decompressWorker: function() {
          return this._data instanceof l ? this._data.getContentWorker() : this._data instanceof u ? this._data : new s(this._data);
        } };
        for (var f = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], d = function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, h = 0; h < f.length; h++) o.prototype[f[h]] = d;
        r.exports = o;
      }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(n, r, i) {
        (function(o) {
          var a, s, c = o.MutationObserver || o.WebKitMutationObserver;
          if (c) {
            var l = 0, u = new c(p), f = o.document.createTextNode("");
            u.observe(f, { characterData: !0 }), a = function() {
              f.data = l = ++l % 2;
            };
          } else if (o.setImmediate || o.MessageChannel === void 0) a = "document" in o && "onreadystatechange" in o.document.createElement("script") ? function() {
            var m = o.document.createElement("script");
            m.onreadystatechange = function() {
              p(), m.onreadystatechange = null, m.parentNode.removeChild(m), m = null;
            }, o.document.documentElement.appendChild(m);
          } : function() {
            setTimeout(p, 0);
          };
          else {
            var d = new o.MessageChannel();
            d.port1.onmessage = p, a = function() {
              d.port2.postMessage(0);
            };
          }
          var h = [];
          function p() {
            var m, g;
            s = !0;
            for (var y = h.length; y; ) {
              for (g = h, h = [], m = -1; ++m < y; ) g[m]();
              y = h.length;
            }
            s = !1;
          }
          r.exports = function(m) {
            h.push(m) !== 1 || s || a();
          };
        }).call(this, typeof Ht < "u" ? Ht : typeof self < "u" ? self : typeof window < "u" ? window : {});
      }, {}], 37: [function(n, r, i) {
        var o = n("immediate");
        function a() {
        }
        var s = {}, c = ["REJECTED"], l = ["FULFILLED"], u = ["PENDING"];
        function f(y) {
          if (typeof y != "function") throw new TypeError("resolver must be a function");
          this.state = u, this.queue = [], this.outcome = void 0, y !== a && m(this, y);
        }
        function d(y, b, v) {
          this.promise = y, typeof b == "function" && (this.onFulfilled = b, this.callFulfilled = this.otherCallFulfilled), typeof v == "function" && (this.onRejected = v, this.callRejected = this.otherCallRejected);
        }
        function h(y, b, v) {
          o(function() {
            var _;
            try {
              _ = b(v);
            } catch (x) {
              return s.reject(y, x);
            }
            _ === y ? s.reject(y, new TypeError("Cannot resolve promise with itself")) : s.resolve(y, _);
          });
        }
        function p(y) {
          var b = y && y.then;
          if (y && (typeof y == "object" || typeof y == "function") && typeof b == "function") return function() {
            b.apply(y, arguments);
          };
        }
        function m(y, b) {
          var v = !1;
          function _(S) {
            v || (v = !0, s.reject(y, S));
          }
          function x(S) {
            v || (v = !0, s.resolve(y, S));
          }
          var E = g(function() {
            b(x, _);
          });
          E.status === "error" && _(E.value);
        }
        function g(y, b) {
          var v = {};
          try {
            v.value = y(b), v.status = "success";
          } catch (_) {
            v.status = "error", v.value = _;
          }
          return v;
        }
        (r.exports = f).prototype.finally = function(y) {
          if (typeof y != "function") return this;
          var b = this.constructor;
          return this.then(function(v) {
            return b.resolve(y()).then(function() {
              return v;
            });
          }, function(v) {
            return b.resolve(y()).then(function() {
              throw v;
            });
          });
        }, f.prototype.catch = function(y) {
          return this.then(null, y);
        }, f.prototype.then = function(y, b) {
          if (typeof y != "function" && this.state === l || typeof b != "function" && this.state === c) return this;
          var v = new this.constructor(a);
          return this.state !== u ? h(v, this.state === l ? y : b, this.outcome) : this.queue.push(new d(v, y, b)), v;
        }, d.prototype.callFulfilled = function(y) {
          s.resolve(this.promise, y);
        }, d.prototype.otherCallFulfilled = function(y) {
          h(this.promise, this.onFulfilled, y);
        }, d.prototype.callRejected = function(y) {
          s.reject(this.promise, y);
        }, d.prototype.otherCallRejected = function(y) {
          h(this.promise, this.onRejected, y);
        }, s.resolve = function(y, b) {
          var v = g(p, b);
          if (v.status === "error") return s.reject(y, v.value);
          var _ = v.value;
          if (_) m(y, _);
          else {
            y.state = l, y.outcome = b;
            for (var x = -1, E = y.queue.length; ++x < E; ) y.queue[x].callFulfilled(b);
          }
          return y;
        }, s.reject = function(y, b) {
          y.state = c, y.outcome = b;
          for (var v = -1, _ = y.queue.length; ++v < _; ) y.queue[v].callRejected(b);
          return y;
        }, f.resolve = function(y) {
          return y instanceof this ? y : s.resolve(new this(a), y);
        }, f.reject = function(y) {
          var b = new this(a);
          return s.reject(b, y);
        }, f.all = function(y) {
          var b = this;
          if (Object.prototype.toString.call(y) !== "[object Array]") return this.reject(new TypeError("must be an array"));
          var v = y.length, _ = !1;
          if (!v) return this.resolve([]);
          for (var x = new Array(v), E = 0, S = -1, U = new this(a); ++S < v; ) C(y[S], S);
          return U;
          function C(R, j) {
            b.resolve(R).then(function(T) {
              x[j] = T, ++E !== v || _ || (_ = !0, s.resolve(U, x));
            }, function(T) {
              _ || (_ = !0, s.reject(U, T));
            });
          }
        }, f.race = function(y) {
          var b = this;
          if (Object.prototype.toString.call(y) !== "[object Array]") return this.reject(new TypeError("must be an array"));
          var v = y.length, _ = !1;
          if (!v) return this.resolve([]);
          for (var x = -1, E = new this(a); ++x < v; ) S = y[x], b.resolve(S).then(function(U) {
            _ || (_ = !0, s.resolve(E, U));
          }, function(U) {
            _ || (_ = !0, s.reject(E, U));
          });
          var S;
          return E;
        };
      }, { immediate: 36 }], 38: [function(n, r, i) {
        var o = {};
        (0, n("./lib/utils/common").assign)(o, n("./lib/deflate"), n("./lib/inflate"), n("./lib/zlib/constants")), r.exports = o;
      }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(n, r, i) {
        var o = n("./zlib/deflate"), a = n("./utils/common"), s = n("./utils/strings"), c = n("./zlib/messages"), l = n("./zlib/zstream"), u = Object.prototype.toString, f = 0, d = -1, h = 0, p = 8;
        function m(y) {
          if (!(this instanceof m)) return new m(y);
          this.options = a.assign({ level: d, method: p, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: h, to: "" }, y || {});
          var b = this.options;
          b.raw && 0 < b.windowBits ? b.windowBits = -b.windowBits : b.gzip && 0 < b.windowBits && b.windowBits < 16 && (b.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new l(), this.strm.avail_out = 0;
          var v = o.deflateInit2(this.strm, b.level, b.method, b.windowBits, b.memLevel, b.strategy);
          if (v !== f) throw new Error(c[v]);
          if (b.header && o.deflateSetHeader(this.strm, b.header), b.dictionary) {
            var _;
            if (_ = typeof b.dictionary == "string" ? s.string2buf(b.dictionary) : u.call(b.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(b.dictionary) : b.dictionary, (v = o.deflateSetDictionary(this.strm, _)) !== f) throw new Error(c[v]);
            this._dict_set = !0;
          }
        }
        function g(y, b) {
          var v = new m(b);
          if (v.push(y, !0), v.err) throw v.msg || c[v.err];
          return v.result;
        }
        m.prototype.push = function(y, b) {
          var v, _, x = this.strm, E = this.options.chunkSize;
          if (this.ended) return !1;
          _ = b === ~~b ? b : b === !0 ? 4 : 0, typeof y == "string" ? x.input = s.string2buf(y) : u.call(y) === "[object ArrayBuffer]" ? x.input = new Uint8Array(y) : x.input = y, x.next_in = 0, x.avail_in = x.input.length;
          do {
            if (x.avail_out === 0 && (x.output = new a.Buf8(E), x.next_out = 0, x.avail_out = E), (v = o.deflate(x, _)) !== 1 && v !== f) return this.onEnd(v), !(this.ended = !0);
            x.avail_out !== 0 && (x.avail_in !== 0 || _ !== 4 && _ !== 2) || (this.options.to === "string" ? this.onData(s.buf2binstring(a.shrinkBuf(x.output, x.next_out))) : this.onData(a.shrinkBuf(x.output, x.next_out)));
          } while ((0 < x.avail_in || x.avail_out === 0) && v !== 1);
          return _ === 4 ? (v = o.deflateEnd(this.strm), this.onEnd(v), this.ended = !0, v === f) : _ !== 2 || (this.onEnd(f), !(x.avail_out = 0));
        }, m.prototype.onData = function(y) {
          this.chunks.push(y);
        }, m.prototype.onEnd = function(y) {
          y === f && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = a.flattenChunks(this.chunks)), this.chunks = [], this.err = y, this.msg = this.strm.msg;
        }, i.Deflate = m, i.deflate = g, i.deflateRaw = function(y, b) {
          return (b = b || {}).raw = !0, g(y, b);
        }, i.gzip = function(y, b) {
          return (b = b || {}).gzip = !0, g(y, b);
        };
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(n, r, i) {
        var o = n("./zlib/inflate"), a = n("./utils/common"), s = n("./utils/strings"), c = n("./zlib/constants"), l = n("./zlib/messages"), u = n("./zlib/zstream"), f = n("./zlib/gzheader"), d = Object.prototype.toString;
        function h(m) {
          if (!(this instanceof h)) return new h(m);
          this.options = a.assign({ chunkSize: 16384, windowBits: 0, to: "" }, m || {});
          var g = this.options;
          g.raw && 0 <= g.windowBits && g.windowBits < 16 && (g.windowBits = -g.windowBits, g.windowBits === 0 && (g.windowBits = -15)), !(0 <= g.windowBits && g.windowBits < 16) || m && m.windowBits || (g.windowBits += 32), 15 < g.windowBits && g.windowBits < 48 && (15 & g.windowBits) == 0 && (g.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new u(), this.strm.avail_out = 0;
          var y = o.inflateInit2(this.strm, g.windowBits);
          if (y !== c.Z_OK) throw new Error(l[y]);
          this.header = new f(), o.inflateGetHeader(this.strm, this.header);
        }
        function p(m, g) {
          var y = new h(g);
          if (y.push(m, !0), y.err) throw y.msg || l[y.err];
          return y.result;
        }
        h.prototype.push = function(m, g) {
          var y, b, v, _, x, E, S = this.strm, U = this.options.chunkSize, C = this.options.dictionary, R = !1;
          if (this.ended) return !1;
          b = g === ~~g ? g : g === !0 ? c.Z_FINISH : c.Z_NO_FLUSH, typeof m == "string" ? S.input = s.binstring2buf(m) : d.call(m) === "[object ArrayBuffer]" ? S.input = new Uint8Array(m) : S.input = m, S.next_in = 0, S.avail_in = S.input.length;
          do {
            if (S.avail_out === 0 && (S.output = new a.Buf8(U), S.next_out = 0, S.avail_out = U), (y = o.inflate(S, c.Z_NO_FLUSH)) === c.Z_NEED_DICT && C && (E = typeof C == "string" ? s.string2buf(C) : d.call(C) === "[object ArrayBuffer]" ? new Uint8Array(C) : C, y = o.inflateSetDictionary(this.strm, E)), y === c.Z_BUF_ERROR && R === !0 && (y = c.Z_OK, R = !1), y !== c.Z_STREAM_END && y !== c.Z_OK) return this.onEnd(y), !(this.ended = !0);
            S.next_out && (S.avail_out !== 0 && y !== c.Z_STREAM_END && (S.avail_in !== 0 || b !== c.Z_FINISH && b !== c.Z_SYNC_FLUSH) || (this.options.to === "string" ? (v = s.utf8border(S.output, S.next_out), _ = S.next_out - v, x = s.buf2string(S.output, v), S.next_out = _, S.avail_out = U - _, _ && a.arraySet(S.output, S.output, v, _, 0), this.onData(x)) : this.onData(a.shrinkBuf(S.output, S.next_out)))), S.avail_in === 0 && S.avail_out === 0 && (R = !0);
          } while ((0 < S.avail_in || S.avail_out === 0) && y !== c.Z_STREAM_END);
          return y === c.Z_STREAM_END && (b = c.Z_FINISH), b === c.Z_FINISH ? (y = o.inflateEnd(this.strm), this.onEnd(y), this.ended = !0, y === c.Z_OK) : b !== c.Z_SYNC_FLUSH || (this.onEnd(c.Z_OK), !(S.avail_out = 0));
        }, h.prototype.onData = function(m) {
          this.chunks.push(m);
        }, h.prototype.onEnd = function(m) {
          m === c.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = a.flattenChunks(this.chunks)), this.chunks = [], this.err = m, this.msg = this.strm.msg;
        }, i.Inflate = h, i.inflate = p, i.inflateRaw = function(m, g) {
          return (g = g || {}).raw = !0, p(m, g);
        }, i.ungzip = p;
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(n, r, i) {
        var o = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
        i.assign = function(c) {
          for (var l = Array.prototype.slice.call(arguments, 1); l.length; ) {
            var u = l.shift();
            if (u) {
              if (typeof u != "object") throw new TypeError(u + "must be non-object");
              for (var f in u) u.hasOwnProperty(f) && (c[f] = u[f]);
            }
          }
          return c;
        }, i.shrinkBuf = function(c, l) {
          return c.length === l ? c : c.subarray ? c.subarray(0, l) : (c.length = l, c);
        };
        var a = { arraySet: function(c, l, u, f, d) {
          if (l.subarray && c.subarray) c.set(l.subarray(u, u + f), d);
          else for (var h = 0; h < f; h++) c[d + h] = l[u + h];
        }, flattenChunks: function(c) {
          var l, u, f, d, h, p;
          for (l = f = 0, u = c.length; l < u; l++) f += c[l].length;
          for (p = new Uint8Array(f), l = d = 0, u = c.length; l < u; l++) h = c[l], p.set(h, d), d += h.length;
          return p;
        } }, s = { arraySet: function(c, l, u, f, d) {
          for (var h = 0; h < f; h++) c[d + h] = l[u + h];
        }, flattenChunks: function(c) {
          return [].concat.apply([], c);
        } };
        i.setTyped = function(c) {
          c ? (i.Buf8 = Uint8Array, i.Buf16 = Uint16Array, i.Buf32 = Int32Array, i.assign(i, a)) : (i.Buf8 = Array, i.Buf16 = Array, i.Buf32 = Array, i.assign(i, s));
        }, i.setTyped(o);
      }, {}], 42: [function(n, r, i) {
        var o = n("./common"), a = !0, s = !0;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch {
          a = !1;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch {
          s = !1;
        }
        for (var c = new o.Buf8(256), l = 0; l < 256; l++) c[l] = 252 <= l ? 6 : 248 <= l ? 5 : 240 <= l ? 4 : 224 <= l ? 3 : 192 <= l ? 2 : 1;
        function u(f, d) {
          if (d < 65537 && (f.subarray && s || !f.subarray && a)) return String.fromCharCode.apply(null, o.shrinkBuf(f, d));
          for (var h = "", p = 0; p < d; p++) h += String.fromCharCode(f[p]);
          return h;
        }
        c[254] = c[254] = 1, i.string2buf = function(f) {
          var d, h, p, m, g, y = f.length, b = 0;
          for (m = 0; m < y; m++) (64512 & (h = f.charCodeAt(m))) == 55296 && m + 1 < y && (64512 & (p = f.charCodeAt(m + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (p - 56320), m++), b += h < 128 ? 1 : h < 2048 ? 2 : h < 65536 ? 3 : 4;
          for (d = new o.Buf8(b), m = g = 0; g < b; m++) (64512 & (h = f.charCodeAt(m))) == 55296 && m + 1 < y && (64512 & (p = f.charCodeAt(m + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (p - 56320), m++), h < 128 ? d[g++] = h : (h < 2048 ? d[g++] = 192 | h >>> 6 : (h < 65536 ? d[g++] = 224 | h >>> 12 : (d[g++] = 240 | h >>> 18, d[g++] = 128 | h >>> 12 & 63), d[g++] = 128 | h >>> 6 & 63), d[g++] = 128 | 63 & h);
          return d;
        }, i.buf2binstring = function(f) {
          return u(f, f.length);
        }, i.binstring2buf = function(f) {
          for (var d = new o.Buf8(f.length), h = 0, p = d.length; h < p; h++) d[h] = f.charCodeAt(h);
          return d;
        }, i.buf2string = function(f, d) {
          var h, p, m, g, y = d || f.length, b = new Array(2 * y);
          for (h = p = 0; h < y; ) if ((m = f[h++]) < 128) b[p++] = m;
          else if (4 < (g = c[m])) b[p++] = 65533, h += g - 1;
          else {
            for (m &= g === 2 ? 31 : g === 3 ? 15 : 7; 1 < g && h < y; ) m = m << 6 | 63 & f[h++], g--;
            1 < g ? b[p++] = 65533 : m < 65536 ? b[p++] = m : (m -= 65536, b[p++] = 55296 | m >> 10 & 1023, b[p++] = 56320 | 1023 & m);
          }
          return u(b, p);
        }, i.utf8border = function(f, d) {
          var h;
          for ((d = d || f.length) > f.length && (d = f.length), h = d - 1; 0 <= h && (192 & f[h]) == 128; ) h--;
          return h < 0 || h === 0 ? d : h + c[f[h]] > d ? h : d;
        };
      }, { "./common": 41 }], 43: [function(n, r, i) {
        r.exports = function(o, a, s, c) {
          for (var l = 65535 & o | 0, u = o >>> 16 & 65535 | 0, f = 0; s !== 0; ) {
            for (s -= f = 2e3 < s ? 2e3 : s; u = u + (l = l + a[c++] | 0) | 0, --f; ) ;
            l %= 65521, u %= 65521;
          }
          return l | u << 16 | 0;
        };
      }, {}], 44: [function(n, r, i) {
        r.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, {}], 45: [function(n, r, i) {
        var o = function() {
          for (var a, s = [], c = 0; c < 256; c++) {
            a = c;
            for (var l = 0; l < 8; l++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
            s[c] = a;
          }
          return s;
        }();
        r.exports = function(a, s, c, l) {
          var u = o, f = l + c;
          a ^= -1;
          for (var d = l; d < f; d++) a = a >>> 8 ^ u[255 & (a ^ s[d])];
          return -1 ^ a;
        };
      }, {}], 46: [function(n, r, i) {
        var o, a = n("../utils/common"), s = n("./trees"), c = n("./adler32"), l = n("./crc32"), u = n("./messages"), f = 0, d = 4, h = 0, p = -2, m = -1, g = 4, y = 2, b = 8, v = 9, _ = 286, x = 30, E = 19, S = 2 * _ + 1, U = 15, C = 3, R = 258, j = R + C + 1, T = 42, k = 113, w = 1, $ = 2, N = 3, M = 4;
        function K(D, V) {
          return D.msg = u[V], V;
        }
        function P(D) {
          return (D << 1) - (4 < D ? 9 : 0);
        }
        function te(D) {
          for (var V = D.length; 0 <= --V; ) D[V] = 0;
        }
        function W(D) {
          var V = D.state, q = V.pending;
          q > D.avail_out && (q = D.avail_out), q !== 0 && (a.arraySet(D.output, V.pending_buf, V.pending_out, q, D.next_out), D.next_out += q, V.pending_out += q, D.total_out += q, D.avail_out -= q, V.pending -= q, V.pending === 0 && (V.pending_out = 0));
        }
        function B(D, V) {
          s._tr_flush_block(D, 0 <= D.block_start ? D.block_start : -1, D.strstart - D.block_start, V), D.block_start = D.strstart, W(D.strm);
        }
        function se(D, V) {
          D.pending_buf[D.pending++] = V;
        }
        function G(D, V) {
          D.pending_buf[D.pending++] = V >>> 8 & 255, D.pending_buf[D.pending++] = 255 & V;
        }
        function J(D, V) {
          var q, I, O = D.max_chain_length, z = D.strstart, ie = D.prev_length, ne = D.nice_match, Z = D.strstart > D.w_size - j ? D.strstart - (D.w_size - j) : 0, L = D.window, X = D.w_mask, Y = D.prev, oe = D.strstart + R, De = L[z + ie - 1], Te = L[z + ie];
          D.prev_length >= D.good_match && (O >>= 2), ne > D.lookahead && (ne = D.lookahead);
          do
            if (L[(q = V) + ie] === Te && L[q + ie - 1] === De && L[q] === L[z] && L[++q] === L[z + 1]) {
              z += 2, q++;
              do
                ;
              while (L[++z] === L[++q] && L[++z] === L[++q] && L[++z] === L[++q] && L[++z] === L[++q] && L[++z] === L[++q] && L[++z] === L[++q] && L[++z] === L[++q] && L[++z] === L[++q] && z < oe);
              if (I = R - (oe - z), z = oe - R, ie < I) {
                if (D.match_start = V, ne <= (ie = I)) break;
                De = L[z + ie - 1], Te = L[z + ie];
              }
            }
          while ((V = Y[V & X]) > Z && --O != 0);
          return ie <= D.lookahead ? ie : D.lookahead;
        }
        function ce(D) {
          var V, q, I, O, z, ie, ne, Z, L, X, Y = D.w_size;
          do {
            if (O = D.window_size - D.lookahead - D.strstart, D.strstart >= Y + (Y - j)) {
              for (a.arraySet(D.window, D.window, Y, Y, 0), D.match_start -= Y, D.strstart -= Y, D.block_start -= Y, V = q = D.hash_size; I = D.head[--V], D.head[V] = Y <= I ? I - Y : 0, --q; ) ;
              for (V = q = Y; I = D.prev[--V], D.prev[V] = Y <= I ? I - Y : 0, --q; ) ;
              O += Y;
            }
            if (D.strm.avail_in === 0) break;
            if (ie = D.strm, ne = D.window, Z = D.strstart + D.lookahead, L = O, X = void 0, X = ie.avail_in, L < X && (X = L), q = X === 0 ? 0 : (ie.avail_in -= X, a.arraySet(ne, ie.input, ie.next_in, X, Z), ie.state.wrap === 1 ? ie.adler = c(ie.adler, ne, X, Z) : ie.state.wrap === 2 && (ie.adler = l(ie.adler, ne, X, Z)), ie.next_in += X, ie.total_in += X, X), D.lookahead += q, D.lookahead + D.insert >= C) for (z = D.strstart - D.insert, D.ins_h = D.window[z], D.ins_h = (D.ins_h << D.hash_shift ^ D.window[z + 1]) & D.hash_mask; D.insert && (D.ins_h = (D.ins_h << D.hash_shift ^ D.window[z + C - 1]) & D.hash_mask, D.prev[z & D.w_mask] = D.head[D.ins_h], D.head[D.ins_h] = z, z++, D.insert--, !(D.lookahead + D.insert < C)); ) ;
          } while (D.lookahead < j && D.strm.avail_in !== 0);
        }
        function he(D, V) {
          for (var q, I; ; ) {
            if (D.lookahead < j) {
              if (ce(D), D.lookahead < j && V === f) return w;
              if (D.lookahead === 0) break;
            }
            if (q = 0, D.lookahead >= C && (D.ins_h = (D.ins_h << D.hash_shift ^ D.window[D.strstart + C - 1]) & D.hash_mask, q = D.prev[D.strstart & D.w_mask] = D.head[D.ins_h], D.head[D.ins_h] = D.strstart), q !== 0 && D.strstart - q <= D.w_size - j && (D.match_length = J(D, q)), D.match_length >= C) if (I = s._tr_tally(D, D.strstart - D.match_start, D.match_length - C), D.lookahead -= D.match_length, D.match_length <= D.max_lazy_match && D.lookahead >= C) {
              for (D.match_length--; D.strstart++, D.ins_h = (D.ins_h << D.hash_shift ^ D.window[D.strstart + C - 1]) & D.hash_mask, q = D.prev[D.strstart & D.w_mask] = D.head[D.ins_h], D.head[D.ins_h] = D.strstart, --D.match_length != 0; ) ;
              D.strstart++;
            } else D.strstart += D.match_length, D.match_length = 0, D.ins_h = D.window[D.strstart], D.ins_h = (D.ins_h << D.hash_shift ^ D.window[D.strstart + 1]) & D.hash_mask;
            else I = s._tr_tally(D, 0, D.window[D.strstart]), D.lookahead--, D.strstart++;
            if (I && (B(D, !1), D.strm.avail_out === 0)) return w;
          }
          return D.insert = D.strstart < C - 1 ? D.strstart : C - 1, V === d ? (B(D, !0), D.strm.avail_out === 0 ? N : M) : D.last_lit && (B(D, !1), D.strm.avail_out === 0) ? w : $;
        }
        function fe(D, V) {
          for (var q, I, O; ; ) {
            if (D.lookahead < j) {
              if (ce(D), D.lookahead < j && V === f) return w;
              if (D.lookahead === 0) break;
            }
            if (q = 0, D.lookahead >= C && (D.ins_h = (D.ins_h << D.hash_shift ^ D.window[D.strstart + C - 1]) & D.hash_mask, q = D.prev[D.strstart & D.w_mask] = D.head[D.ins_h], D.head[D.ins_h] = D.strstart), D.prev_length = D.match_length, D.prev_match = D.match_start, D.match_length = C - 1, q !== 0 && D.prev_length < D.max_lazy_match && D.strstart - q <= D.w_size - j && (D.match_length = J(D, q), D.match_length <= 5 && (D.strategy === 1 || D.match_length === C && 4096 < D.strstart - D.match_start) && (D.match_length = C - 1)), D.prev_length >= C && D.match_length <= D.prev_length) {
              for (O = D.strstart + D.lookahead - C, I = s._tr_tally(D, D.strstart - 1 - D.prev_match, D.prev_length - C), D.lookahead -= D.prev_length - 1, D.prev_length -= 2; ++D.strstart <= O && (D.ins_h = (D.ins_h << D.hash_shift ^ D.window[D.strstart + C - 1]) & D.hash_mask, q = D.prev[D.strstart & D.w_mask] = D.head[D.ins_h], D.head[D.ins_h] = D.strstart), --D.prev_length != 0; ) ;
              if (D.match_available = 0, D.match_length = C - 1, D.strstart++, I && (B(D, !1), D.strm.avail_out === 0)) return w;
            } else if (D.match_available) {
              if ((I = s._tr_tally(D, 0, D.window[D.strstart - 1])) && B(D, !1), D.strstart++, D.lookahead--, D.strm.avail_out === 0) return w;
            } else D.match_available = 1, D.strstart++, D.lookahead--;
          }
          return D.match_available && (I = s._tr_tally(D, 0, D.window[D.strstart - 1]), D.match_available = 0), D.insert = D.strstart < C - 1 ? D.strstart : C - 1, V === d ? (B(D, !0), D.strm.avail_out === 0 ? N : M) : D.last_lit && (B(D, !1), D.strm.avail_out === 0) ? w : $;
        }
        function me(D, V, q, I, O) {
          this.good_length = D, this.max_lazy = V, this.nice_length = q, this.max_chain = I, this.func = O;
        }
        function de() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = b, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new a.Buf16(2 * S), this.dyn_dtree = new a.Buf16(2 * (2 * x + 1)), this.bl_tree = new a.Buf16(2 * (2 * E + 1)), te(this.dyn_ltree), te(this.dyn_dtree), te(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new a.Buf16(U + 1), this.heap = new a.Buf16(2 * _ + 1), te(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new a.Buf16(2 * _ + 1), te(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        function pe(D) {
          var V;
          return D && D.state ? (D.total_in = D.total_out = 0, D.data_type = y, (V = D.state).pending = 0, V.pending_out = 0, V.wrap < 0 && (V.wrap = -V.wrap), V.status = V.wrap ? T : k, D.adler = V.wrap === 2 ? 0 : 1, V.last_flush = f, s._tr_init(V), h) : K(D, p);
        }
        function ye(D) {
          var V = pe(D);
          return V === h && function(q) {
            q.window_size = 2 * q.w_size, te(q.head), q.max_lazy_match = o[q.level].max_lazy, q.good_match = o[q.level].good_length, q.nice_match = o[q.level].nice_length, q.max_chain_length = o[q.level].max_chain, q.strstart = 0, q.block_start = 0, q.lookahead = 0, q.insert = 0, q.match_length = q.prev_length = C - 1, q.match_available = 0, q.ins_h = 0;
          }(D.state), V;
        }
        function be(D, V, q, I, O, z) {
          if (!D) return p;
          var ie = 1;
          if (V === m && (V = 6), I < 0 ? (ie = 0, I = -I) : 15 < I && (ie = 2, I -= 16), O < 1 || v < O || q !== b || I < 8 || 15 < I || V < 0 || 9 < V || z < 0 || g < z) return K(D, p);
          I === 8 && (I = 9);
          var ne = new de();
          return (D.state = ne).strm = D, ne.wrap = ie, ne.gzhead = null, ne.w_bits = I, ne.w_size = 1 << ne.w_bits, ne.w_mask = ne.w_size - 1, ne.hash_bits = O + 7, ne.hash_size = 1 << ne.hash_bits, ne.hash_mask = ne.hash_size - 1, ne.hash_shift = ~~((ne.hash_bits + C - 1) / C), ne.window = new a.Buf8(2 * ne.w_size), ne.head = new a.Buf16(ne.hash_size), ne.prev = new a.Buf16(ne.w_size), ne.lit_bufsize = 1 << O + 6, ne.pending_buf_size = 4 * ne.lit_bufsize, ne.pending_buf = new a.Buf8(ne.pending_buf_size), ne.d_buf = 1 * ne.lit_bufsize, ne.l_buf = 3 * ne.lit_bufsize, ne.level = V, ne.strategy = z, ne.method = q, ye(D);
        }
        o = [new me(0, 0, 0, 0, function(D, V) {
          var q = 65535;
          for (q > D.pending_buf_size - 5 && (q = D.pending_buf_size - 5); ; ) {
            if (D.lookahead <= 1) {
              if (ce(D), D.lookahead === 0 && V === f) return w;
              if (D.lookahead === 0) break;
            }
            D.strstart += D.lookahead, D.lookahead = 0;
            var I = D.block_start + q;
            if ((D.strstart === 0 || D.strstart >= I) && (D.lookahead = D.strstart - I, D.strstart = I, B(D, !1), D.strm.avail_out === 0) || D.strstart - D.block_start >= D.w_size - j && (B(D, !1), D.strm.avail_out === 0)) return w;
          }
          return D.insert = 0, V === d ? (B(D, !0), D.strm.avail_out === 0 ? N : M) : (D.strstart > D.block_start && (B(D, !1), D.strm.avail_out), w);
        }), new me(4, 4, 8, 4, he), new me(4, 5, 16, 8, he), new me(4, 6, 32, 32, he), new me(4, 4, 16, 16, fe), new me(8, 16, 32, 32, fe), new me(8, 16, 128, 128, fe), new me(8, 32, 128, 256, fe), new me(32, 128, 258, 1024, fe), new me(32, 258, 258, 4096, fe)], i.deflateInit = function(D, V) {
          return be(D, V, b, 15, 8, 0);
        }, i.deflateInit2 = be, i.deflateReset = ye, i.deflateResetKeep = pe, i.deflateSetHeader = function(D, V) {
          return D && D.state ? D.state.wrap !== 2 ? p : (D.state.gzhead = V, h) : p;
        }, i.deflate = function(D, V) {
          var q, I, O, z;
          if (!D || !D.state || 5 < V || V < 0) return D ? K(D, p) : p;
          if (I = D.state, !D.output || !D.input && D.avail_in !== 0 || I.status === 666 && V !== d) return K(D, D.avail_out === 0 ? -5 : p);
          if (I.strm = D, q = I.last_flush, I.last_flush = V, I.status === T) if (I.wrap === 2) D.adler = 0, se(I, 31), se(I, 139), se(I, 8), I.gzhead ? (se(I, (I.gzhead.text ? 1 : 0) + (I.gzhead.hcrc ? 2 : 0) + (I.gzhead.extra ? 4 : 0) + (I.gzhead.name ? 8 : 0) + (I.gzhead.comment ? 16 : 0)), se(I, 255 & I.gzhead.time), se(I, I.gzhead.time >> 8 & 255), se(I, I.gzhead.time >> 16 & 255), se(I, I.gzhead.time >> 24 & 255), se(I, I.level === 9 ? 2 : 2 <= I.strategy || I.level < 2 ? 4 : 0), se(I, 255 & I.gzhead.os), I.gzhead.extra && I.gzhead.extra.length && (se(I, 255 & I.gzhead.extra.length), se(I, I.gzhead.extra.length >> 8 & 255)), I.gzhead.hcrc && (D.adler = l(D.adler, I.pending_buf, I.pending, 0)), I.gzindex = 0, I.status = 69) : (se(I, 0), se(I, 0), se(I, 0), se(I, 0), se(I, 0), se(I, I.level === 9 ? 2 : 2 <= I.strategy || I.level < 2 ? 4 : 0), se(I, 3), I.status = k);
          else {
            var ie = b + (I.w_bits - 8 << 4) << 8;
            ie |= (2 <= I.strategy || I.level < 2 ? 0 : I.level < 6 ? 1 : I.level === 6 ? 2 : 3) << 6, I.strstart !== 0 && (ie |= 32), ie += 31 - ie % 31, I.status = k, G(I, ie), I.strstart !== 0 && (G(I, D.adler >>> 16), G(I, 65535 & D.adler)), D.adler = 1;
          }
          if (I.status === 69) if (I.gzhead.extra) {
            for (O = I.pending; I.gzindex < (65535 & I.gzhead.extra.length) && (I.pending !== I.pending_buf_size || (I.gzhead.hcrc && I.pending > O && (D.adler = l(D.adler, I.pending_buf, I.pending - O, O)), W(D), O = I.pending, I.pending !== I.pending_buf_size)); ) se(I, 255 & I.gzhead.extra[I.gzindex]), I.gzindex++;
            I.gzhead.hcrc && I.pending > O && (D.adler = l(D.adler, I.pending_buf, I.pending - O, O)), I.gzindex === I.gzhead.extra.length && (I.gzindex = 0, I.status = 73);
          } else I.status = 73;
          if (I.status === 73) if (I.gzhead.name) {
            O = I.pending;
            do {
              if (I.pending === I.pending_buf_size && (I.gzhead.hcrc && I.pending > O && (D.adler = l(D.adler, I.pending_buf, I.pending - O, O)), W(D), O = I.pending, I.pending === I.pending_buf_size)) {
                z = 1;
                break;
              }
              z = I.gzindex < I.gzhead.name.length ? 255 & I.gzhead.name.charCodeAt(I.gzindex++) : 0, se(I, z);
            } while (z !== 0);
            I.gzhead.hcrc && I.pending > O && (D.adler = l(D.adler, I.pending_buf, I.pending - O, O)), z === 0 && (I.gzindex = 0, I.status = 91);
          } else I.status = 91;
          if (I.status === 91) if (I.gzhead.comment) {
            O = I.pending;
            do {
              if (I.pending === I.pending_buf_size && (I.gzhead.hcrc && I.pending > O && (D.adler = l(D.adler, I.pending_buf, I.pending - O, O)), W(D), O = I.pending, I.pending === I.pending_buf_size)) {
                z = 1;
                break;
              }
              z = I.gzindex < I.gzhead.comment.length ? 255 & I.gzhead.comment.charCodeAt(I.gzindex++) : 0, se(I, z);
            } while (z !== 0);
            I.gzhead.hcrc && I.pending > O && (D.adler = l(D.adler, I.pending_buf, I.pending - O, O)), z === 0 && (I.status = 103);
          } else I.status = 103;
          if (I.status === 103 && (I.gzhead.hcrc ? (I.pending + 2 > I.pending_buf_size && W(D), I.pending + 2 <= I.pending_buf_size && (se(I, 255 & D.adler), se(I, D.adler >> 8 & 255), D.adler = 0, I.status = k)) : I.status = k), I.pending !== 0) {
            if (W(D), D.avail_out === 0) return I.last_flush = -1, h;
          } else if (D.avail_in === 0 && P(V) <= P(q) && V !== d) return K(D, -5);
          if (I.status === 666 && D.avail_in !== 0) return K(D, -5);
          if (D.avail_in !== 0 || I.lookahead !== 0 || V !== f && I.status !== 666) {
            var ne = I.strategy === 2 ? function(Z, L) {
              for (var X; ; ) {
                if (Z.lookahead === 0 && (ce(Z), Z.lookahead === 0)) {
                  if (L === f) return w;
                  break;
                }
                if (Z.match_length = 0, X = s._tr_tally(Z, 0, Z.window[Z.strstart]), Z.lookahead--, Z.strstart++, X && (B(Z, !1), Z.strm.avail_out === 0)) return w;
              }
              return Z.insert = 0, L === d ? (B(Z, !0), Z.strm.avail_out === 0 ? N : M) : Z.last_lit && (B(Z, !1), Z.strm.avail_out === 0) ? w : $;
            }(I, V) : I.strategy === 3 ? function(Z, L) {
              for (var X, Y, oe, De, Te = Z.window; ; ) {
                if (Z.lookahead <= R) {
                  if (ce(Z), Z.lookahead <= R && L === f) return w;
                  if (Z.lookahead === 0) break;
                }
                if (Z.match_length = 0, Z.lookahead >= C && 0 < Z.strstart && (Y = Te[oe = Z.strstart - 1]) === Te[++oe] && Y === Te[++oe] && Y === Te[++oe]) {
                  De = Z.strstart + R;
                  do
                    ;
                  while (Y === Te[++oe] && Y === Te[++oe] && Y === Te[++oe] && Y === Te[++oe] && Y === Te[++oe] && Y === Te[++oe] && Y === Te[++oe] && Y === Te[++oe] && oe < De);
                  Z.match_length = R - (De - oe), Z.match_length > Z.lookahead && (Z.match_length = Z.lookahead);
                }
                if (Z.match_length >= C ? (X = s._tr_tally(Z, 1, Z.match_length - C), Z.lookahead -= Z.match_length, Z.strstart += Z.match_length, Z.match_length = 0) : (X = s._tr_tally(Z, 0, Z.window[Z.strstart]), Z.lookahead--, Z.strstart++), X && (B(Z, !1), Z.strm.avail_out === 0)) return w;
              }
              return Z.insert = 0, L === d ? (B(Z, !0), Z.strm.avail_out === 0 ? N : M) : Z.last_lit && (B(Z, !1), Z.strm.avail_out === 0) ? w : $;
            }(I, V) : o[I.level].func(I, V);
            if (ne !== N && ne !== M || (I.status = 666), ne === w || ne === N) return D.avail_out === 0 && (I.last_flush = -1), h;
            if (ne === $ && (V === 1 ? s._tr_align(I) : V !== 5 && (s._tr_stored_block(I, 0, 0, !1), V === 3 && (te(I.head), I.lookahead === 0 && (I.strstart = 0, I.block_start = 0, I.insert = 0))), W(D), D.avail_out === 0)) return I.last_flush = -1, h;
          }
          return V !== d ? h : I.wrap <= 0 ? 1 : (I.wrap === 2 ? (se(I, 255 & D.adler), se(I, D.adler >> 8 & 255), se(I, D.adler >> 16 & 255), se(I, D.adler >> 24 & 255), se(I, 255 & D.total_in), se(I, D.total_in >> 8 & 255), se(I, D.total_in >> 16 & 255), se(I, D.total_in >> 24 & 255)) : (G(I, D.adler >>> 16), G(I, 65535 & D.adler)), W(D), 0 < I.wrap && (I.wrap = -I.wrap), I.pending !== 0 ? h : 1);
        }, i.deflateEnd = function(D) {
          var V;
          return D && D.state ? (V = D.state.status) !== T && V !== 69 && V !== 73 && V !== 91 && V !== 103 && V !== k && V !== 666 ? K(D, p) : (D.state = null, V === k ? K(D, -3) : h) : p;
        }, i.deflateSetDictionary = function(D, V) {
          var q, I, O, z, ie, ne, Z, L, X = V.length;
          if (!D || !D.state || (z = (q = D.state).wrap) === 2 || z === 1 && q.status !== T || q.lookahead) return p;
          for (z === 1 && (D.adler = c(D.adler, V, X, 0)), q.wrap = 0, X >= q.w_size && (z === 0 && (te(q.head), q.strstart = 0, q.block_start = 0, q.insert = 0), L = new a.Buf8(q.w_size), a.arraySet(L, V, X - q.w_size, q.w_size, 0), V = L, X = q.w_size), ie = D.avail_in, ne = D.next_in, Z = D.input, D.avail_in = X, D.next_in = 0, D.input = V, ce(q); q.lookahead >= C; ) {
            for (I = q.strstart, O = q.lookahead - (C - 1); q.ins_h = (q.ins_h << q.hash_shift ^ q.window[I + C - 1]) & q.hash_mask, q.prev[I & q.w_mask] = q.head[q.ins_h], q.head[q.ins_h] = I, I++, --O; ) ;
            q.strstart = I, q.lookahead = C - 1, ce(q);
          }
          return q.strstart += q.lookahead, q.block_start = q.strstart, q.insert = q.lookahead, q.lookahead = 0, q.match_length = q.prev_length = C - 1, q.match_available = 0, D.next_in = ne, D.input = Z, D.avail_in = ie, q.wrap = z, h;
        }, i.deflateInfo = "pako deflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(n, r, i) {
        r.exports = function() {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
        };
      }, {}], 48: [function(n, r, i) {
        r.exports = function(o, a) {
          var s, c, l, u, f, d, h, p, m, g, y, b, v, _, x, E, S, U, C, R, j, T, k, w, $;
          s = o.state, c = o.next_in, w = o.input, l = c + (o.avail_in - 5), u = o.next_out, $ = o.output, f = u - (a - o.avail_out), d = u + (o.avail_out - 257), h = s.dmax, p = s.wsize, m = s.whave, g = s.wnext, y = s.window, b = s.hold, v = s.bits, _ = s.lencode, x = s.distcode, E = (1 << s.lenbits) - 1, S = (1 << s.distbits) - 1;
          e: do {
            v < 15 && (b += w[c++] << v, v += 8, b += w[c++] << v, v += 8), U = _[b & E];
            t: for (; ; ) {
              if (b >>>= C = U >>> 24, v -= C, (C = U >>> 16 & 255) === 0) $[u++] = 65535 & U;
              else {
                if (!(16 & C)) {
                  if ((64 & C) == 0) {
                    U = _[(65535 & U) + (b & (1 << C) - 1)];
                    continue t;
                  }
                  if (32 & C) {
                    s.mode = 12;
                    break e;
                  }
                  o.msg = "invalid literal/length code", s.mode = 30;
                  break e;
                }
                R = 65535 & U, (C &= 15) && (v < C && (b += w[c++] << v, v += 8), R += b & (1 << C) - 1, b >>>= C, v -= C), v < 15 && (b += w[c++] << v, v += 8, b += w[c++] << v, v += 8), U = x[b & S];
                n: for (; ; ) {
                  if (b >>>= C = U >>> 24, v -= C, !(16 & (C = U >>> 16 & 255))) {
                    if ((64 & C) == 0) {
                      U = x[(65535 & U) + (b & (1 << C) - 1)];
                      continue n;
                    }
                    o.msg = "invalid distance code", s.mode = 30;
                    break e;
                  }
                  if (j = 65535 & U, v < (C &= 15) && (b += w[c++] << v, (v += 8) < C && (b += w[c++] << v, v += 8)), h < (j += b & (1 << C) - 1)) {
                    o.msg = "invalid distance too far back", s.mode = 30;
                    break e;
                  }
                  if (b >>>= C, v -= C, (C = u - f) < j) {
                    if (m < (C = j - C) && s.sane) {
                      o.msg = "invalid distance too far back", s.mode = 30;
                      break e;
                    }
                    if (k = y, (T = 0) === g) {
                      if (T += p - C, C < R) {
                        for (R -= C; $[u++] = y[T++], --C; ) ;
                        T = u - j, k = $;
                      }
                    } else if (g < C) {
                      if (T += p + g - C, (C -= g) < R) {
                        for (R -= C; $[u++] = y[T++], --C; ) ;
                        if (T = 0, g < R) {
                          for (R -= C = g; $[u++] = y[T++], --C; ) ;
                          T = u - j, k = $;
                        }
                      }
                    } else if (T += g - C, C < R) {
                      for (R -= C; $[u++] = y[T++], --C; ) ;
                      T = u - j, k = $;
                    }
                    for (; 2 < R; ) $[u++] = k[T++], $[u++] = k[T++], $[u++] = k[T++], R -= 3;
                    R && ($[u++] = k[T++], 1 < R && ($[u++] = k[T++]));
                  } else {
                    for (T = u - j; $[u++] = $[T++], $[u++] = $[T++], $[u++] = $[T++], 2 < (R -= 3); ) ;
                    R && ($[u++] = $[T++], 1 < R && ($[u++] = $[T++]));
                  }
                  break;
                }
              }
              break;
            }
          } while (c < l && u < d);
          c -= R = v >> 3, b &= (1 << (v -= R << 3)) - 1, o.next_in = c, o.next_out = u, o.avail_in = c < l ? l - c + 5 : 5 - (c - l), o.avail_out = u < d ? d - u + 257 : 257 - (u - d), s.hold = b, s.bits = v;
        };
      }, {}], 49: [function(n, r, i) {
        var o = n("../utils/common"), a = n("./adler32"), s = n("./crc32"), c = n("./inffast"), l = n("./inftrees"), u = 1, f = 2, d = 0, h = -2, p = 1, m = 852, g = 592;
        function y(T) {
          return (T >>> 24 & 255) + (T >>> 8 & 65280) + ((65280 & T) << 8) + ((255 & T) << 24);
        }
        function b() {
          this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new o.Buf16(320), this.work = new o.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function v(T) {
          var k;
          return T && T.state ? (k = T.state, T.total_in = T.total_out = k.total = 0, T.msg = "", k.wrap && (T.adler = 1 & k.wrap), k.mode = p, k.last = 0, k.havedict = 0, k.dmax = 32768, k.head = null, k.hold = 0, k.bits = 0, k.lencode = k.lendyn = new o.Buf32(m), k.distcode = k.distdyn = new o.Buf32(g), k.sane = 1, k.back = -1, d) : h;
        }
        function _(T) {
          var k;
          return T && T.state ? ((k = T.state).wsize = 0, k.whave = 0, k.wnext = 0, v(T)) : h;
        }
        function x(T, k) {
          var w, $;
          return T && T.state ? ($ = T.state, k < 0 ? (w = 0, k = -k) : (w = 1 + (k >> 4), k < 48 && (k &= 15)), k && (k < 8 || 15 < k) ? h : ($.window !== null && $.wbits !== k && ($.window = null), $.wrap = w, $.wbits = k, _(T))) : h;
        }
        function E(T, k) {
          var w, $;
          return T ? ($ = new b(), (T.state = $).window = null, (w = x(T, k)) !== d && (T.state = null), w) : h;
        }
        var S, U, C = !0;
        function R(T) {
          if (C) {
            var k;
            for (S = new o.Buf32(512), U = new o.Buf32(32), k = 0; k < 144; ) T.lens[k++] = 8;
            for (; k < 256; ) T.lens[k++] = 9;
            for (; k < 280; ) T.lens[k++] = 7;
            for (; k < 288; ) T.lens[k++] = 8;
            for (l(u, T.lens, 0, 288, S, 0, T.work, { bits: 9 }), k = 0; k < 32; ) T.lens[k++] = 5;
            l(f, T.lens, 0, 32, U, 0, T.work, { bits: 5 }), C = !1;
          }
          T.lencode = S, T.lenbits = 9, T.distcode = U, T.distbits = 5;
        }
        function j(T, k, w, $) {
          var N, M = T.state;
          return M.window === null && (M.wsize = 1 << M.wbits, M.wnext = 0, M.whave = 0, M.window = new o.Buf8(M.wsize)), $ >= M.wsize ? (o.arraySet(M.window, k, w - M.wsize, M.wsize, 0), M.wnext = 0, M.whave = M.wsize) : ($ < (N = M.wsize - M.wnext) && (N = $), o.arraySet(M.window, k, w - $, N, M.wnext), ($ -= N) ? (o.arraySet(M.window, k, w - $, $, 0), M.wnext = $, M.whave = M.wsize) : (M.wnext += N, M.wnext === M.wsize && (M.wnext = 0), M.whave < M.wsize && (M.whave += N))), 0;
        }
        i.inflateReset = _, i.inflateReset2 = x, i.inflateResetKeep = v, i.inflateInit = function(T) {
          return E(T, 15);
        }, i.inflateInit2 = E, i.inflate = function(T, k) {
          var w, $, N, M, K, P, te, W, B, se, G, J, ce, he, fe, me, de, pe, ye, be, D, V, q, I, O = 0, z = new o.Buf8(4), ie = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!T || !T.state || !T.output || !T.input && T.avail_in !== 0) return h;
          (w = T.state).mode === 12 && (w.mode = 13), K = T.next_out, N = T.output, te = T.avail_out, M = T.next_in, $ = T.input, P = T.avail_in, W = w.hold, B = w.bits, se = P, G = te, V = d;
          e: for (; ; ) switch (w.mode) {
            case p:
              if (w.wrap === 0) {
                w.mode = 13;
                break;
              }
              for (; B < 16; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              if (2 & w.wrap && W === 35615) {
                z[w.check = 0] = 255 & W, z[1] = W >>> 8 & 255, w.check = s(w.check, z, 2, 0), B = W = 0, w.mode = 2;
                break;
              }
              if (w.flags = 0, w.head && (w.head.done = !1), !(1 & w.wrap) || (((255 & W) << 8) + (W >> 8)) % 31) {
                T.msg = "incorrect header check", w.mode = 30;
                break;
              }
              if ((15 & W) != 8) {
                T.msg = "unknown compression method", w.mode = 30;
                break;
              }
              if (B -= 4, D = 8 + (15 & (W >>>= 4)), w.wbits === 0) w.wbits = D;
              else if (D > w.wbits) {
                T.msg = "invalid window size", w.mode = 30;
                break;
              }
              w.dmax = 1 << D, T.adler = w.check = 1, w.mode = 512 & W ? 10 : 12, B = W = 0;
              break;
            case 2:
              for (; B < 16; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              if (w.flags = W, (255 & w.flags) != 8) {
                T.msg = "unknown compression method", w.mode = 30;
                break;
              }
              if (57344 & w.flags) {
                T.msg = "unknown header flags set", w.mode = 30;
                break;
              }
              w.head && (w.head.text = W >> 8 & 1), 512 & w.flags && (z[0] = 255 & W, z[1] = W >>> 8 & 255, w.check = s(w.check, z, 2, 0)), B = W = 0, w.mode = 3;
            case 3:
              for (; B < 32; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              w.head && (w.head.time = W), 512 & w.flags && (z[0] = 255 & W, z[1] = W >>> 8 & 255, z[2] = W >>> 16 & 255, z[3] = W >>> 24 & 255, w.check = s(w.check, z, 4, 0)), B = W = 0, w.mode = 4;
            case 4:
              for (; B < 16; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              w.head && (w.head.xflags = 255 & W, w.head.os = W >> 8), 512 & w.flags && (z[0] = 255 & W, z[1] = W >>> 8 & 255, w.check = s(w.check, z, 2, 0)), B = W = 0, w.mode = 5;
            case 5:
              if (1024 & w.flags) {
                for (; B < 16; ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                w.length = W, w.head && (w.head.extra_len = W), 512 & w.flags && (z[0] = 255 & W, z[1] = W >>> 8 & 255, w.check = s(w.check, z, 2, 0)), B = W = 0;
              } else w.head && (w.head.extra = null);
              w.mode = 6;
            case 6:
              if (1024 & w.flags && (P < (J = w.length) && (J = P), J && (w.head && (D = w.head.extra_len - w.length, w.head.extra || (w.head.extra = new Array(w.head.extra_len)), o.arraySet(w.head.extra, $, M, J, D)), 512 & w.flags && (w.check = s(w.check, $, J, M)), P -= J, M += J, w.length -= J), w.length)) break e;
              w.length = 0, w.mode = 7;
            case 7:
              if (2048 & w.flags) {
                if (P === 0) break e;
                for (J = 0; D = $[M + J++], w.head && D && w.length < 65536 && (w.head.name += String.fromCharCode(D)), D && J < P; ) ;
                if (512 & w.flags && (w.check = s(w.check, $, J, M)), P -= J, M += J, D) break e;
              } else w.head && (w.head.name = null);
              w.length = 0, w.mode = 8;
            case 8:
              if (4096 & w.flags) {
                if (P === 0) break e;
                for (J = 0; D = $[M + J++], w.head && D && w.length < 65536 && (w.head.comment += String.fromCharCode(D)), D && J < P; ) ;
                if (512 & w.flags && (w.check = s(w.check, $, J, M)), P -= J, M += J, D) break e;
              } else w.head && (w.head.comment = null);
              w.mode = 9;
            case 9:
              if (512 & w.flags) {
                for (; B < 16; ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                if (W !== (65535 & w.check)) {
                  T.msg = "header crc mismatch", w.mode = 30;
                  break;
                }
                B = W = 0;
              }
              w.head && (w.head.hcrc = w.flags >> 9 & 1, w.head.done = !0), T.adler = w.check = 0, w.mode = 12;
              break;
            case 10:
              for (; B < 32; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              T.adler = w.check = y(W), B = W = 0, w.mode = 11;
            case 11:
              if (w.havedict === 0) return T.next_out = K, T.avail_out = te, T.next_in = M, T.avail_in = P, w.hold = W, w.bits = B, 2;
              T.adler = w.check = 1, w.mode = 12;
            case 12:
              if (k === 5 || k === 6) break e;
            case 13:
              if (w.last) {
                W >>>= 7 & B, B -= 7 & B, w.mode = 27;
                break;
              }
              for (; B < 3; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              switch (w.last = 1 & W, B -= 1, 3 & (W >>>= 1)) {
                case 0:
                  w.mode = 14;
                  break;
                case 1:
                  if (R(w), w.mode = 20, k !== 6) break;
                  W >>>= 2, B -= 2;
                  break e;
                case 2:
                  w.mode = 17;
                  break;
                case 3:
                  T.msg = "invalid block type", w.mode = 30;
              }
              W >>>= 2, B -= 2;
              break;
            case 14:
              for (W >>>= 7 & B, B -= 7 & B; B < 32; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              if ((65535 & W) != (W >>> 16 ^ 65535)) {
                T.msg = "invalid stored block lengths", w.mode = 30;
                break;
              }
              if (w.length = 65535 & W, B = W = 0, w.mode = 15, k === 6) break e;
            case 15:
              w.mode = 16;
            case 16:
              if (J = w.length) {
                if (P < J && (J = P), te < J && (J = te), J === 0) break e;
                o.arraySet(N, $, M, J, K), P -= J, M += J, te -= J, K += J, w.length -= J;
                break;
              }
              w.mode = 12;
              break;
            case 17:
              for (; B < 14; ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              if (w.nlen = 257 + (31 & W), W >>>= 5, B -= 5, w.ndist = 1 + (31 & W), W >>>= 5, B -= 5, w.ncode = 4 + (15 & W), W >>>= 4, B -= 4, 286 < w.nlen || 30 < w.ndist) {
                T.msg = "too many length or distance symbols", w.mode = 30;
                break;
              }
              w.have = 0, w.mode = 18;
            case 18:
              for (; w.have < w.ncode; ) {
                for (; B < 3; ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                w.lens[ie[w.have++]] = 7 & W, W >>>= 3, B -= 3;
              }
              for (; w.have < 19; ) w.lens[ie[w.have++]] = 0;
              if (w.lencode = w.lendyn, w.lenbits = 7, q = { bits: w.lenbits }, V = l(0, w.lens, 0, 19, w.lencode, 0, w.work, q), w.lenbits = q.bits, V) {
                T.msg = "invalid code lengths set", w.mode = 30;
                break;
              }
              w.have = 0, w.mode = 19;
            case 19:
              for (; w.have < w.nlen + w.ndist; ) {
                for (; me = (O = w.lencode[W & (1 << w.lenbits) - 1]) >>> 16 & 255, de = 65535 & O, !((fe = O >>> 24) <= B); ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                if (de < 16) W >>>= fe, B -= fe, w.lens[w.have++] = de;
                else {
                  if (de === 16) {
                    for (I = fe + 2; B < I; ) {
                      if (P === 0) break e;
                      P--, W += $[M++] << B, B += 8;
                    }
                    if (W >>>= fe, B -= fe, w.have === 0) {
                      T.msg = "invalid bit length repeat", w.mode = 30;
                      break;
                    }
                    D = w.lens[w.have - 1], J = 3 + (3 & W), W >>>= 2, B -= 2;
                  } else if (de === 17) {
                    for (I = fe + 3; B < I; ) {
                      if (P === 0) break e;
                      P--, W += $[M++] << B, B += 8;
                    }
                    B -= fe, D = 0, J = 3 + (7 & (W >>>= fe)), W >>>= 3, B -= 3;
                  } else {
                    for (I = fe + 7; B < I; ) {
                      if (P === 0) break e;
                      P--, W += $[M++] << B, B += 8;
                    }
                    B -= fe, D = 0, J = 11 + (127 & (W >>>= fe)), W >>>= 7, B -= 7;
                  }
                  if (w.have + J > w.nlen + w.ndist) {
                    T.msg = "invalid bit length repeat", w.mode = 30;
                    break;
                  }
                  for (; J--; ) w.lens[w.have++] = D;
                }
              }
              if (w.mode === 30) break;
              if (w.lens[256] === 0) {
                T.msg = "invalid code -- missing end-of-block", w.mode = 30;
                break;
              }
              if (w.lenbits = 9, q = { bits: w.lenbits }, V = l(u, w.lens, 0, w.nlen, w.lencode, 0, w.work, q), w.lenbits = q.bits, V) {
                T.msg = "invalid literal/lengths set", w.mode = 30;
                break;
              }
              if (w.distbits = 6, w.distcode = w.distdyn, q = { bits: w.distbits }, V = l(f, w.lens, w.nlen, w.ndist, w.distcode, 0, w.work, q), w.distbits = q.bits, V) {
                T.msg = "invalid distances set", w.mode = 30;
                break;
              }
              if (w.mode = 20, k === 6) break e;
            case 20:
              w.mode = 21;
            case 21:
              if (6 <= P && 258 <= te) {
                T.next_out = K, T.avail_out = te, T.next_in = M, T.avail_in = P, w.hold = W, w.bits = B, c(T, G), K = T.next_out, N = T.output, te = T.avail_out, M = T.next_in, $ = T.input, P = T.avail_in, W = w.hold, B = w.bits, w.mode === 12 && (w.back = -1);
                break;
              }
              for (w.back = 0; me = (O = w.lencode[W & (1 << w.lenbits) - 1]) >>> 16 & 255, de = 65535 & O, !((fe = O >>> 24) <= B); ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              if (me && (240 & me) == 0) {
                for (pe = fe, ye = me, be = de; me = (O = w.lencode[be + ((W & (1 << pe + ye) - 1) >> pe)]) >>> 16 & 255, de = 65535 & O, !(pe + (fe = O >>> 24) <= B); ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                W >>>= pe, B -= pe, w.back += pe;
              }
              if (W >>>= fe, B -= fe, w.back += fe, w.length = de, me === 0) {
                w.mode = 26;
                break;
              }
              if (32 & me) {
                w.back = -1, w.mode = 12;
                break;
              }
              if (64 & me) {
                T.msg = "invalid literal/length code", w.mode = 30;
                break;
              }
              w.extra = 15 & me, w.mode = 22;
            case 22:
              if (w.extra) {
                for (I = w.extra; B < I; ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                w.length += W & (1 << w.extra) - 1, W >>>= w.extra, B -= w.extra, w.back += w.extra;
              }
              w.was = w.length, w.mode = 23;
            case 23:
              for (; me = (O = w.distcode[W & (1 << w.distbits) - 1]) >>> 16 & 255, de = 65535 & O, !((fe = O >>> 24) <= B); ) {
                if (P === 0) break e;
                P--, W += $[M++] << B, B += 8;
              }
              if ((240 & me) == 0) {
                for (pe = fe, ye = me, be = de; me = (O = w.distcode[be + ((W & (1 << pe + ye) - 1) >> pe)]) >>> 16 & 255, de = 65535 & O, !(pe + (fe = O >>> 24) <= B); ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                W >>>= pe, B -= pe, w.back += pe;
              }
              if (W >>>= fe, B -= fe, w.back += fe, 64 & me) {
                T.msg = "invalid distance code", w.mode = 30;
                break;
              }
              w.offset = de, w.extra = 15 & me, w.mode = 24;
            case 24:
              if (w.extra) {
                for (I = w.extra; B < I; ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                w.offset += W & (1 << w.extra) - 1, W >>>= w.extra, B -= w.extra, w.back += w.extra;
              }
              if (w.offset > w.dmax) {
                T.msg = "invalid distance too far back", w.mode = 30;
                break;
              }
              w.mode = 25;
            case 25:
              if (te === 0) break e;
              if (J = G - te, w.offset > J) {
                if ((J = w.offset - J) > w.whave && w.sane) {
                  T.msg = "invalid distance too far back", w.mode = 30;
                  break;
                }
                ce = J > w.wnext ? (J -= w.wnext, w.wsize - J) : w.wnext - J, J > w.length && (J = w.length), he = w.window;
              } else he = N, ce = K - w.offset, J = w.length;
              for (te < J && (J = te), te -= J, w.length -= J; N[K++] = he[ce++], --J; ) ;
              w.length === 0 && (w.mode = 21);
              break;
            case 26:
              if (te === 0) break e;
              N[K++] = w.length, te--, w.mode = 21;
              break;
            case 27:
              if (w.wrap) {
                for (; B < 32; ) {
                  if (P === 0) break e;
                  P--, W |= $[M++] << B, B += 8;
                }
                if (G -= te, T.total_out += G, w.total += G, G && (T.adler = w.check = w.flags ? s(w.check, N, G, K - G) : a(w.check, N, G, K - G)), G = te, (w.flags ? W : y(W)) !== w.check) {
                  T.msg = "incorrect data check", w.mode = 30;
                  break;
                }
                B = W = 0;
              }
              w.mode = 28;
            case 28:
              if (w.wrap && w.flags) {
                for (; B < 32; ) {
                  if (P === 0) break e;
                  P--, W += $[M++] << B, B += 8;
                }
                if (W !== (4294967295 & w.total)) {
                  T.msg = "incorrect length check", w.mode = 30;
                  break;
                }
                B = W = 0;
              }
              w.mode = 29;
            case 29:
              V = 1;
              break e;
            case 30:
              V = -3;
              break e;
            case 31:
              return -4;
            case 32:
            default:
              return h;
          }
          return T.next_out = K, T.avail_out = te, T.next_in = M, T.avail_in = P, w.hold = W, w.bits = B, (w.wsize || G !== T.avail_out && w.mode < 30 && (w.mode < 27 || k !== 4)) && j(T, T.output, T.next_out, G - T.avail_out) ? (w.mode = 31, -4) : (se -= T.avail_in, G -= T.avail_out, T.total_in += se, T.total_out += G, w.total += G, w.wrap && G && (T.adler = w.check = w.flags ? s(w.check, N, G, T.next_out - G) : a(w.check, N, G, T.next_out - G)), T.data_type = w.bits + (w.last ? 64 : 0) + (w.mode === 12 ? 128 : 0) + (w.mode === 20 || w.mode === 15 ? 256 : 0), (se == 0 && G === 0 || k === 4) && V === d && (V = -5), V);
        }, i.inflateEnd = function(T) {
          if (!T || !T.state) return h;
          var k = T.state;
          return k.window && (k.window = null), T.state = null, d;
        }, i.inflateGetHeader = function(T, k) {
          var w;
          return T && T.state ? (2 & (w = T.state).wrap) == 0 ? h : ((w.head = k).done = !1, d) : h;
        }, i.inflateSetDictionary = function(T, k) {
          var w, $ = k.length;
          return T && T.state ? (w = T.state).wrap !== 0 && w.mode !== 11 ? h : w.mode === 11 && a(1, k, $, 0) !== w.check ? -3 : j(T, k, $, $) ? (w.mode = 31, -4) : (w.havedict = 1, d) : h;
        }, i.inflateInfo = "pako inflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(n, r, i) {
        var o = n("../utils/common"), a = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], s = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], c = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], l = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        r.exports = function(u, f, d, h, p, m, g, y) {
          var b, v, _, x, E, S, U, C, R, j = y.bits, T = 0, k = 0, w = 0, $ = 0, N = 0, M = 0, K = 0, P = 0, te = 0, W = 0, B = null, se = 0, G = new o.Buf16(16), J = new o.Buf16(16), ce = null, he = 0;
          for (T = 0; T <= 15; T++) G[T] = 0;
          for (k = 0; k < h; k++) G[f[d + k]]++;
          for (N = j, $ = 15; 1 <= $ && G[$] === 0; $--) ;
          if ($ < N && (N = $), $ === 0) return p[m++] = 20971520, p[m++] = 20971520, y.bits = 1, 0;
          for (w = 1; w < $ && G[w] === 0; w++) ;
          for (N < w && (N = w), T = P = 1; T <= 15; T++) if (P <<= 1, (P -= G[T]) < 0) return -1;
          if (0 < P && (u === 0 || $ !== 1)) return -1;
          for (J[1] = 0, T = 1; T < 15; T++) J[T + 1] = J[T] + G[T];
          for (k = 0; k < h; k++) f[d + k] !== 0 && (g[J[f[d + k]]++] = k);
          if (S = u === 0 ? (B = ce = g, 19) : u === 1 ? (B = a, se -= 257, ce = s, he -= 257, 256) : (B = c, ce = l, -1), T = w, E = m, K = k = W = 0, _ = -1, x = (te = 1 << (M = N)) - 1, u === 1 && 852 < te || u === 2 && 592 < te) return 1;
          for (; ; ) {
            for (U = T - K, R = g[k] < S ? (C = 0, g[k]) : g[k] > S ? (C = ce[he + g[k]], B[se + g[k]]) : (C = 96, 0), b = 1 << T - K, w = v = 1 << M; p[E + (W >> K) + (v -= b)] = U << 24 | C << 16 | R | 0, v !== 0; ) ;
            for (b = 1 << T - 1; W & b; ) b >>= 1;
            if (b !== 0 ? (W &= b - 1, W += b) : W = 0, k++, --G[T] == 0) {
              if (T === $) break;
              T = f[d + g[k]];
            }
            if (N < T && (W & x) !== _) {
              for (K === 0 && (K = N), E += w, P = 1 << (M = T - K); M + K < $ && !((P -= G[M + K]) <= 0); ) M++, P <<= 1;
              if (te += 1 << M, u === 1 && 852 < te || u === 2 && 592 < te) return 1;
              p[_ = W & x] = N << 24 | M << 16 | E - m | 0;
            }
          }
          return W !== 0 && (p[E + W] = T - K << 24 | 64 << 16 | 0), y.bits = N, 0;
        };
      }, { "../utils/common": 41 }], 51: [function(n, r, i) {
        r.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, {}], 52: [function(n, r, i) {
        var o = n("../utils/common"), a = 0, s = 1;
        function c(O) {
          for (var z = O.length; 0 <= --z; ) O[z] = 0;
        }
        var l = 0, u = 29, f = 256, d = f + 1 + u, h = 30, p = 19, m = 2 * d + 1, g = 15, y = 16, b = 7, v = 256, _ = 16, x = 17, E = 18, S = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], U = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], C = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], R = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], j = new Array(2 * (d + 2));
        c(j);
        var T = new Array(2 * h);
        c(T);
        var k = new Array(512);
        c(k);
        var w = new Array(256);
        c(w);
        var $ = new Array(u);
        c($);
        var N, M, K, P = new Array(h);
        function te(O, z, ie, ne, Z) {
          this.static_tree = O, this.extra_bits = z, this.extra_base = ie, this.elems = ne, this.max_length = Z, this.has_stree = O && O.length;
        }
        function W(O, z) {
          this.dyn_tree = O, this.max_code = 0, this.stat_desc = z;
        }
        function B(O) {
          return O < 256 ? k[O] : k[256 + (O >>> 7)];
        }
        function se(O, z) {
          O.pending_buf[O.pending++] = 255 & z, O.pending_buf[O.pending++] = z >>> 8 & 255;
        }
        function G(O, z, ie) {
          O.bi_valid > y - ie ? (O.bi_buf |= z << O.bi_valid & 65535, se(O, O.bi_buf), O.bi_buf = z >> y - O.bi_valid, O.bi_valid += ie - y) : (O.bi_buf |= z << O.bi_valid & 65535, O.bi_valid += ie);
        }
        function J(O, z, ie) {
          G(O, ie[2 * z], ie[2 * z + 1]);
        }
        function ce(O, z) {
          for (var ie = 0; ie |= 1 & O, O >>>= 1, ie <<= 1, 0 < --z; ) ;
          return ie >>> 1;
        }
        function he(O, z, ie) {
          var ne, Z, L = new Array(g + 1), X = 0;
          for (ne = 1; ne <= g; ne++) L[ne] = X = X + ie[ne - 1] << 1;
          for (Z = 0; Z <= z; Z++) {
            var Y = O[2 * Z + 1];
            Y !== 0 && (O[2 * Z] = ce(L[Y]++, Y));
          }
        }
        function fe(O) {
          var z;
          for (z = 0; z < d; z++) O.dyn_ltree[2 * z] = 0;
          for (z = 0; z < h; z++) O.dyn_dtree[2 * z] = 0;
          for (z = 0; z < p; z++) O.bl_tree[2 * z] = 0;
          O.dyn_ltree[2 * v] = 1, O.opt_len = O.static_len = 0, O.last_lit = O.matches = 0;
        }
        function me(O) {
          8 < O.bi_valid ? se(O, O.bi_buf) : 0 < O.bi_valid && (O.pending_buf[O.pending++] = O.bi_buf), O.bi_buf = 0, O.bi_valid = 0;
        }
        function de(O, z, ie, ne) {
          var Z = 2 * z, L = 2 * ie;
          return O[Z] < O[L] || O[Z] === O[L] && ne[z] <= ne[ie];
        }
        function pe(O, z, ie) {
          for (var ne = O.heap[ie], Z = ie << 1; Z <= O.heap_len && (Z < O.heap_len && de(z, O.heap[Z + 1], O.heap[Z], O.depth) && Z++, !de(z, ne, O.heap[Z], O.depth)); ) O.heap[ie] = O.heap[Z], ie = Z, Z <<= 1;
          O.heap[ie] = ne;
        }
        function ye(O, z, ie) {
          var ne, Z, L, X, Y = 0;
          if (O.last_lit !== 0) for (; ne = O.pending_buf[O.d_buf + 2 * Y] << 8 | O.pending_buf[O.d_buf + 2 * Y + 1], Z = O.pending_buf[O.l_buf + Y], Y++, ne === 0 ? J(O, Z, z) : (J(O, (L = w[Z]) + f + 1, z), (X = S[L]) !== 0 && G(O, Z -= $[L], X), J(O, L = B(--ne), ie), (X = U[L]) !== 0 && G(O, ne -= P[L], X)), Y < O.last_lit; ) ;
          J(O, v, z);
        }
        function be(O, z) {
          var ie, ne, Z, L = z.dyn_tree, X = z.stat_desc.static_tree, Y = z.stat_desc.has_stree, oe = z.stat_desc.elems, De = -1;
          for (O.heap_len = 0, O.heap_max = m, ie = 0; ie < oe; ie++) L[2 * ie] !== 0 ? (O.heap[++O.heap_len] = De = ie, O.depth[ie] = 0) : L[2 * ie + 1] = 0;
          for (; O.heap_len < 2; ) L[2 * (Z = O.heap[++O.heap_len] = De < 2 ? ++De : 0)] = 1, O.depth[Z] = 0, O.opt_len--, Y && (O.static_len -= X[2 * Z + 1]);
          for (z.max_code = De, ie = O.heap_len >> 1; 1 <= ie; ie--) pe(O, L, ie);
          for (Z = oe; ie = O.heap[1], O.heap[1] = O.heap[O.heap_len--], pe(O, L, 1), ne = O.heap[1], O.heap[--O.heap_max] = ie, O.heap[--O.heap_max] = ne, L[2 * Z] = L[2 * ie] + L[2 * ne], O.depth[Z] = (O.depth[ie] >= O.depth[ne] ? O.depth[ie] : O.depth[ne]) + 1, L[2 * ie + 1] = L[2 * ne + 1] = Z, O.heap[1] = Z++, pe(O, L, 1), 2 <= O.heap_len; ) ;
          O.heap[--O.heap_max] = O.heap[1], function(Te, Se) {
            var Ce, ee, ue, ve, Ee, ke, Q = Se.dyn_tree, re = Se.max_code, Fe = Se.stat_desc.static_tree, Ie = Se.stat_desc.has_stree, Pe = Se.stat_desc.extra_bits, A = Se.stat_desc.extra_base, F = Se.stat_desc.max_length, H = 0;
            for (ve = 0; ve <= g; ve++) Te.bl_count[ve] = 0;
            for (Q[2 * Te.heap[Te.heap_max] + 1] = 0, Ce = Te.heap_max + 1; Ce < m; Ce++) F < (ve = Q[2 * Q[2 * (ee = Te.heap[Ce]) + 1] + 1] + 1) && (ve = F, H++), Q[2 * ee + 1] = ve, re < ee || (Te.bl_count[ve]++, Ee = 0, A <= ee && (Ee = Pe[ee - A]), ke = Q[2 * ee], Te.opt_len += ke * (ve + Ee), Ie && (Te.static_len += ke * (Fe[2 * ee + 1] + Ee)));
            if (H !== 0) {
              do {
                for (ve = F - 1; Te.bl_count[ve] === 0; ) ve--;
                Te.bl_count[ve]--, Te.bl_count[ve + 1] += 2, Te.bl_count[F]--, H -= 2;
              } while (0 < H);
              for (ve = F; ve !== 0; ve--) for (ee = Te.bl_count[ve]; ee !== 0; ) re < (ue = Te.heap[--Ce]) || (Q[2 * ue + 1] !== ve && (Te.opt_len += (ve - Q[2 * ue + 1]) * Q[2 * ue], Q[2 * ue + 1] = ve), ee--);
            }
          }(O, z), he(L, De, O.bl_count);
        }
        function D(O, z, ie) {
          var ne, Z, L = -1, X = z[1], Y = 0, oe = 7, De = 4;
          for (X === 0 && (oe = 138, De = 3), z[2 * (ie + 1) + 1] = 65535, ne = 0; ne <= ie; ne++) Z = X, X = z[2 * (ne + 1) + 1], ++Y < oe && Z === X || (Y < De ? O.bl_tree[2 * Z] += Y : Z !== 0 ? (Z !== L && O.bl_tree[2 * Z]++, O.bl_tree[2 * _]++) : Y <= 10 ? O.bl_tree[2 * x]++ : O.bl_tree[2 * E]++, L = Z, De = (Y = 0) === X ? (oe = 138, 3) : Z === X ? (oe = 6, 3) : (oe = 7, 4));
        }
        function V(O, z, ie) {
          var ne, Z, L = -1, X = z[1], Y = 0, oe = 7, De = 4;
          for (X === 0 && (oe = 138, De = 3), ne = 0; ne <= ie; ne++) if (Z = X, X = z[2 * (ne + 1) + 1], !(++Y < oe && Z === X)) {
            if (Y < De) for (; J(O, Z, O.bl_tree), --Y != 0; ) ;
            else Z !== 0 ? (Z !== L && (J(O, Z, O.bl_tree), Y--), J(O, _, O.bl_tree), G(O, Y - 3, 2)) : Y <= 10 ? (J(O, x, O.bl_tree), G(O, Y - 3, 3)) : (J(O, E, O.bl_tree), G(O, Y - 11, 7));
            L = Z, De = (Y = 0) === X ? (oe = 138, 3) : Z === X ? (oe = 6, 3) : (oe = 7, 4);
          }
        }
        c(P);
        var q = !1;
        function I(O, z, ie, ne) {
          G(O, (l << 1) + (ne ? 1 : 0), 3), function(Z, L, X, Y) {
            me(Z), se(Z, X), se(Z, ~X), o.arraySet(Z.pending_buf, Z.window, L, X, Z.pending), Z.pending += X;
          }(O, z, ie);
        }
        i._tr_init = function(O) {
          q || (function() {
            var z, ie, ne, Z, L, X = new Array(g + 1);
            for (Z = ne = 0; Z < u - 1; Z++) for ($[Z] = ne, z = 0; z < 1 << S[Z]; z++) w[ne++] = Z;
            for (w[ne - 1] = Z, Z = L = 0; Z < 16; Z++) for (P[Z] = L, z = 0; z < 1 << U[Z]; z++) k[L++] = Z;
            for (L >>= 7; Z < h; Z++) for (P[Z] = L << 7, z = 0; z < 1 << U[Z] - 7; z++) k[256 + L++] = Z;
            for (ie = 0; ie <= g; ie++) X[ie] = 0;
            for (z = 0; z <= 143; ) j[2 * z + 1] = 8, z++, X[8]++;
            for (; z <= 255; ) j[2 * z + 1] = 9, z++, X[9]++;
            for (; z <= 279; ) j[2 * z + 1] = 7, z++, X[7]++;
            for (; z <= 287; ) j[2 * z + 1] = 8, z++, X[8]++;
            for (he(j, d + 1, X), z = 0; z < h; z++) T[2 * z + 1] = 5, T[2 * z] = ce(z, 5);
            N = new te(j, S, f + 1, d, g), M = new te(T, U, 0, h, g), K = new te(new Array(0), C, 0, p, b);
          }(), q = !0), O.l_desc = new W(O.dyn_ltree, N), O.d_desc = new W(O.dyn_dtree, M), O.bl_desc = new W(O.bl_tree, K), O.bi_buf = 0, O.bi_valid = 0, fe(O);
        }, i._tr_stored_block = I, i._tr_flush_block = function(O, z, ie, ne) {
          var Z, L, X = 0;
          0 < O.level ? (O.strm.data_type === 2 && (O.strm.data_type = function(Y) {
            var oe, De = 4093624447;
            for (oe = 0; oe <= 31; oe++, De >>>= 1) if (1 & De && Y.dyn_ltree[2 * oe] !== 0) return a;
            if (Y.dyn_ltree[18] !== 0 || Y.dyn_ltree[20] !== 0 || Y.dyn_ltree[26] !== 0) return s;
            for (oe = 32; oe < f; oe++) if (Y.dyn_ltree[2 * oe] !== 0) return s;
            return a;
          }(O)), be(O, O.l_desc), be(O, O.d_desc), X = function(Y) {
            var oe;
            for (D(Y, Y.dyn_ltree, Y.l_desc.max_code), D(Y, Y.dyn_dtree, Y.d_desc.max_code), be(Y, Y.bl_desc), oe = p - 1; 3 <= oe && Y.bl_tree[2 * R[oe] + 1] === 0; oe--) ;
            return Y.opt_len += 3 * (oe + 1) + 5 + 5 + 4, oe;
          }(O), Z = O.opt_len + 3 + 7 >>> 3, (L = O.static_len + 3 + 7 >>> 3) <= Z && (Z = L)) : Z = L = ie + 5, ie + 4 <= Z && z !== -1 ? I(O, z, ie, ne) : O.strategy === 4 || L === Z ? (G(O, 2 + (ne ? 1 : 0), 3), ye(O, j, T)) : (G(O, 4 + (ne ? 1 : 0), 3), function(Y, oe, De, Te) {
            var Se;
            for (G(Y, oe - 257, 5), G(Y, De - 1, 5), G(Y, Te - 4, 4), Se = 0; Se < Te; Se++) G(Y, Y.bl_tree[2 * R[Se] + 1], 3);
            V(Y, Y.dyn_ltree, oe - 1), V(Y, Y.dyn_dtree, De - 1);
          }(O, O.l_desc.max_code + 1, O.d_desc.max_code + 1, X + 1), ye(O, O.dyn_ltree, O.dyn_dtree)), fe(O), ne && me(O);
        }, i._tr_tally = function(O, z, ie) {
          return O.pending_buf[O.d_buf + 2 * O.last_lit] = z >>> 8 & 255, O.pending_buf[O.d_buf + 2 * O.last_lit + 1] = 255 & z, O.pending_buf[O.l_buf + O.last_lit] = 255 & ie, O.last_lit++, z === 0 ? O.dyn_ltree[2 * ie]++ : (O.matches++, z--, O.dyn_ltree[2 * (w[ie] + f + 1)]++, O.dyn_dtree[2 * B(z)]++), O.last_lit === O.lit_bufsize - 1;
        }, i._tr_align = function(O) {
          G(O, 2, 3), J(O, v, j), function(z) {
            z.bi_valid === 16 ? (se(z, z.bi_buf), z.bi_buf = 0, z.bi_valid = 0) : 8 <= z.bi_valid && (z.pending_buf[z.pending++] = 255 & z.bi_buf, z.bi_buf >>= 8, z.bi_valid -= 8);
          }(O);
        };
      }, { "../utils/common": 41 }], 53: [function(n, r, i) {
        r.exports = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, {}], 54: [function(n, r, i) {
        (function(o) {
          (function(a, s) {
            if (!a.setImmediate) {
              var c, l, u, f, d = 1, h = {}, p = !1, m = a.document, g = Object.getPrototypeOf && Object.getPrototypeOf(a);
              g = g && g.setTimeout ? g : a, c = {}.toString.call(a.process) === "[object process]" ? function(_) {
                process.nextTick(function() {
                  b(_);
                });
              } : function() {
                if (a.postMessage && !a.importScripts) {
                  var _ = !0, x = a.onmessage;
                  return a.onmessage = function() {
                    _ = !1;
                  }, a.postMessage("", "*"), a.onmessage = x, _;
                }
              }() ? (f = "setImmediate$" + Math.random() + "$", a.addEventListener ? a.addEventListener("message", v, !1) : a.attachEvent("onmessage", v), function(_) {
                a.postMessage(f + _, "*");
              }) : a.MessageChannel ? ((u = new MessageChannel()).port1.onmessage = function(_) {
                b(_.data);
              }, function(_) {
                u.port2.postMessage(_);
              }) : m && "onreadystatechange" in m.createElement("script") ? (l = m.documentElement, function(_) {
                var x = m.createElement("script");
                x.onreadystatechange = function() {
                  b(_), x.onreadystatechange = null, l.removeChild(x), x = null;
                }, l.appendChild(x);
              }) : function(_) {
                setTimeout(b, 0, _);
              }, g.setImmediate = function(_) {
                typeof _ != "function" && (_ = new Function("" + _));
                for (var x = new Array(arguments.length - 1), E = 0; E < x.length; E++) x[E] = arguments[E + 1];
                var S = { callback: _, args: x };
                return h[d] = S, c(d), d++;
              }, g.clearImmediate = y;
            }
            function y(_) {
              delete h[_];
            }
            function b(_) {
              if (p) setTimeout(b, 0, _);
              else {
                var x = h[_];
                if (x) {
                  p = !0;
                  try {
                    (function(E) {
                      var S = E.callback, U = E.args;
                      switch (U.length) {
                        case 0:
                          S();
                          break;
                        case 1:
                          S(U[0]);
                          break;
                        case 2:
                          S(U[0], U[1]);
                          break;
                        case 3:
                          S(U[0], U[1], U[2]);
                          break;
                        default:
                          S.apply(s, U);
                      }
                    })(x);
                  } finally {
                    y(_), p = !1;
                  }
                }
              }
            }
            function v(_) {
              _.source === a && typeof _.data == "string" && _.data.indexOf(f) === 0 && b(+_.data.slice(f.length));
            }
          })(typeof self > "u" ? o === void 0 ? this : o : self);
        }).call(this, typeof Ht < "u" ? Ht : typeof self < "u" ? self : typeof window < "u" ? window : {});
      }, {}] }, {}, [10])(10);
    });
  }(wf)), wf.exports;
}
var bb;
function kw() {
  if (bb) return Wi;
  bb = 1;
  var t = Jk(), e = Zk();
  Wi.openArrayBuffer = n, Wi.splitPath = r, Wi.joinPath = i;
  function n(o) {
    return e.loadAsync(o).then(function(a) {
      function s(f) {
        return a.file(f) !== null;
      }
      function c(f, d) {
        return a.file(f).async("uint8array").then(function(h) {
          if (d === "base64")
            return t.fromByteArray(h);
          if (d) {
            var p = new TextDecoder(d);
            return p.decode(h);
          } else
            return h;
        });
      }
      function l(f, d) {
        a.file(f, d);
      }
      function u() {
        return a.generateAsync({ type: "arraybuffer" });
      }
      return {
        exists: s,
        read: c,
        write: l,
        toArrayBuffer: u
      };
    });
  }
  function r(o) {
    var a = o.lastIndexOf("/");
    return a === -1 ? { dirname: "", basename: o } : {
      dirname: o.substring(0, a),
      basename: o.substring(a + 1)
    };
  }
  function i() {
    var o = Array.prototype.filter.call(arguments, function(s) {
      return s;
    }), a = [];
    return o.forEach(function(s) {
      /^\//.test(s) ? a = [s] : a.push(s);
    }), a.join("/");
  }
  return Wi;
}
var sa = {}, Hn = {}, ii = {}, vb;
function Fw() {
  if (vb) return ii;
  vb = 1;
  var t = et;
  ii.Element = n, ii.element = function(o, a, s) {
    return new n(o, a, s);
  }, ii.text = function(o) {
    return {
      type: "text",
      value: o
    };
  };
  var e = ii.emptyElement = {
    first: function() {
      return null;
    },
    firstOrEmpty: function() {
      return e;
    },
    attributes: {},
    children: []
  };
  function n(o, a, s) {
    this.type = "element", this.name = o, this.attributes = a || {}, this.children = s || [];
  }
  n.prototype.first = function(o) {
    return t.find(this.children, function(a) {
      return a.name === o;
    });
  }, n.prototype.firstOrEmpty = function(o) {
    return this.first(o) || e;
  }, n.prototype.getElementsByTagName = function(o) {
    var a = t.filter(this.children, function(s) {
      return s.name === o;
    });
    return i(a);
  }, n.prototype.text = function() {
    if (this.children.length === 0)
      return "";
    if (this.children.length !== 1 || this.children[0].type !== "text")
      throw new Error("Not implemented");
    return this.children[0].value;
  };
  var r = {
    getElementsByTagName: function(o) {
      return i(t.flatten(this.map(function(a) {
        return a.getElementsByTagName(o);
      }, !0)));
    }
  };
  function i(o) {
    return t.extend(o, r);
  }
  return ii;
}
var _f = {}, ca = {}, Pi = {}, Cn = {}, wr = {}, Db;
function hc() {
  if (Db) return wr;
  Db = 1;
  function t(o, a, s) {
    if (s === void 0 && (s = Array.prototype), o && typeof s.find == "function")
      return s.find.call(o, a);
    for (var c = 0; c < o.length; c++)
      if (Object.prototype.hasOwnProperty.call(o, c)) {
        var l = o[c];
        if (a.call(void 0, l, c, o))
          return l;
      }
  }
  function e(o, a) {
    return a === void 0 && (a = Object), a && typeof a.freeze == "function" ? a.freeze(o) : o;
  }
  function n(o, a) {
    if (o === null || typeof o != "object")
      throw new TypeError("target is not an object");
    for (var s in a)
      Object.prototype.hasOwnProperty.call(a, s) && (o[s] = a[s]);
    return o;
  }
  var r = e({
    /**
     * `text/html`, the only mime type that triggers treating an XML document as HTML.
     *
     * @see DOMParser.SupportedType.isHTML
     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/HTML Wikipedia
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec
     */
    HTML: "text/html",
    /**
     * Helper method to check a mime type if it indicates an HTML document
     *
     * @param {string} [value]
     * @returns {boolean}
     *
     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/HTML Wikipedia
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN
     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring 	 */
    isHTML: function(o) {
      return o === r.HTML;
    },
    /**
     * `application/xml`, the standard mime type for XML documents.
     *
     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration
     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303
     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
     */
    XML_APPLICATION: "application/xml",
    /**
     * `text/html`, an alias for `application/xml`.
     *
     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303
     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration
     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia
     */
    XML_TEXT: "text/xml",
    /**
     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,
     * but is parsed as an XML document.
     *
     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec
     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia
     */
    XML_XHTML_APPLICATION: "application/xhtml+xml",
    /**
     * `image/svg+xml`,
     *
     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration
     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1
     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia
     */
    XML_SVG_IMAGE: "image/svg+xml"
  }), i = e({
    /**
     * The XHTML namespace.
     *
     * @see http://www.w3.org/1999/xhtml
     */
    HTML: "http://www.w3.org/1999/xhtml",
    /**
     * Checks if `uri` equals `NAMESPACE.HTML`.
     *
     * @param {string} [uri]
     *
     * @see NAMESPACE.HTML
     */
    isHTML: function(o) {
      return o === i.HTML;
    },
    /**
     * The SVG namespace.
     *
     * @see http://www.w3.org/2000/svg
     */
    SVG: "http://www.w3.org/2000/svg",
    /**
     * The `xml:` namespace.
     *
     * @see http://www.w3.org/XML/1998/namespace
     */
    XML: "http://www.w3.org/XML/1998/namespace",
    /**
     * The `xmlns:` namespace
     *
     * @see https://www.w3.org/2000/xmlns/
     */
    XMLNS: "http://www.w3.org/2000/xmlns/"
  });
  return wr.assign = n, wr.find = t, wr.freeze = e, wr.MIME_TYPE = r, wr.NAMESPACE = i, wr;
}
var xb;
function Bp() {
  if (xb) return Cn;
  xb = 1;
  var t = hc(), e = t.find, n = t.NAMESPACE;
  function r(A) {
    return A !== "";
  }
  function i(A) {
    return A ? A.split(/[\t\n\f\r ]+/).filter(r) : [];
  }
  function o(A, F) {
    return A.hasOwnProperty(F) || (A[F] = !0), A;
  }
  function a(A) {
    if (!A) return [];
    var F = i(A);
    return Object.keys(F.reduce(o, {}));
  }
  function s(A) {
    return function(F) {
      return A && A.indexOf(F) !== -1;
    };
  }
  function c(A, F) {
    for (var H in A)
      Object.prototype.hasOwnProperty.call(A, H) && (F[H] = A[H]);
  }
  function l(A, F) {
    var H = A.prototype;
    if (!(H instanceof F)) {
      let ae = function() {
      };
      ae.prototype = F.prototype, ae = new ae(), c(H, ae), A.prototype = H = ae;
    }
    H.constructor != A && (typeof A != "function" && console.error("unknown Class:" + A), H.constructor = A);
  }
  var u = {}, f = u.ELEMENT_NODE = 1, d = u.ATTRIBUTE_NODE = 2, h = u.TEXT_NODE = 3, p = u.CDATA_SECTION_NODE = 4, m = u.ENTITY_REFERENCE_NODE = 5, g = u.ENTITY_NODE = 6, y = u.PROCESSING_INSTRUCTION_NODE = 7, b = u.COMMENT_NODE = 8, v = u.DOCUMENT_NODE = 9, _ = u.DOCUMENT_TYPE_NODE = 10, x = u.DOCUMENT_FRAGMENT_NODE = 11, E = u.NOTATION_NODE = 12, S = {}, U = {};
  S.INDEX_SIZE_ERR = (U[1] = "Index size error", 1), S.DOMSTRING_SIZE_ERR = (U[2] = "DOMString size error", 2);
  var C = S.HIERARCHY_REQUEST_ERR = (U[3] = "Hierarchy request error", 3);
  S.WRONG_DOCUMENT_ERR = (U[4] = "Wrong document", 4), S.INVALID_CHARACTER_ERR = (U[5] = "Invalid character", 5), S.NO_DATA_ALLOWED_ERR = (U[6] = "No data allowed", 6), S.NO_MODIFICATION_ALLOWED_ERR = (U[7] = "No modification allowed", 7);
  var R = S.NOT_FOUND_ERR = (U[8] = "Not found", 8);
  S.NOT_SUPPORTED_ERR = (U[9] = "Not supported", 9);
  var j = S.INUSE_ATTRIBUTE_ERR = (U[10] = "Attribute in use", 10);
  S.INVALID_STATE_ERR = (U[11] = "Invalid state", 11), S.SYNTAX_ERR = (U[12] = "Syntax error", 12), S.INVALID_MODIFICATION_ERR = (U[13] = "Invalid modification", 13), S.NAMESPACE_ERR = (U[14] = "Invalid namespace", 14), S.INVALID_ACCESS_ERR = (U[15] = "Invalid access", 15);
  function T(A, F) {
    if (F instanceof Error)
      var H = F;
    else
      H = this, Error.call(this, U[A]), this.message = U[A], Error.captureStackTrace && Error.captureStackTrace(this, T);
    return H.code = A, F && (this.message = this.message + ": " + F), H;
  }
  T.prototype = Error.prototype, c(S, T);
  function k() {
  }
  k.prototype = {
    /**
     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
     * @standard level1
     */
    length: 0,
    /**
     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
     * @standard level1
     * @param index  unsigned long
     *   Index into the collection.
     * @return Node
     * 	The node at the indexth position in the NodeList, or null if that is not a valid index.
     */
    item: function(A) {
      return A >= 0 && A < this.length ? this[A] : null;
    },
    toString: function(A, F) {
      for (var H = [], ae = 0; ae < this.length; ae++)
        re(this[ae], H, A, F);
      return H.join("");
    },
    /**
     * @private
     * @param {function (Node):boolean} predicate
     * @returns {Node[]}
     */
    filter: function(A) {
      return Array.prototype.filter.call(this, A);
    },
    /**
     * @private
     * @param {Node} item
     * @returns {number}
     */
    indexOf: function(A) {
      return Array.prototype.indexOf.call(this, A);
    }
  };
  function w(A, F) {
    this._node = A, this._refresh = F, $(this);
  }
  function $(A) {
    var F = A._node._inc || A._node.ownerDocument._inc;
    if (A._inc !== F) {
      var H = A._refresh(A._node);
      if (Pe(A, "length", H.length), !A.$$length || H.length < A.$$length)
        for (var ae = H.length; ae in A; ae++)
          Object.prototype.hasOwnProperty.call(A, ae) && delete A[ae];
      c(H, A), A._inc = F;
    }
  }
  w.prototype.item = function(A) {
    return $(this), this[A] || null;
  }, l(w, k);
  function N() {
  }
  function M(A, F) {
    for (var H = A.length; H--; )
      if (A[H] === F)
        return H;
  }
  function K(A, F, H, ae) {
    if (ae ? F[M(F, ae)] = H : F[F.length++] = H, A) {
      H.ownerElement = A;
      var we = A.ownerDocument;
      we && (ae && ce(we, A, ae), J(we, A, H));
    }
  }
  function P(A, F, H) {
    var ae = M(F, H);
    if (ae >= 0) {
      for (var we = F.length - 1; ae < we; )
        F[ae] = F[++ae];
      if (F.length = we, A) {
        var Ae = A.ownerDocument;
        Ae && (ce(Ae, A, H), H.ownerElement = null);
      }
    } else
      throw new T(R, new Error(A.tagName + "@" + H));
  }
  N.prototype = {
    length: 0,
    item: k.prototype.item,
    getNamedItem: function(A) {
      for (var F = this.length; F--; ) {
        var H = this[F];
        if (H.nodeName == A)
          return H;
      }
    },
    setNamedItem: function(A) {
      var F = A.ownerElement;
      if (F && F != this._ownerElement)
        throw new T(j);
      var H = this.getNamedItem(A.nodeName);
      return K(this._ownerElement, this, A, H), H;
    },
    /* returns Node */
    setNamedItemNS: function(A) {
      var F = A.ownerElement, H;
      if (F && F != this._ownerElement)
        throw new T(j);
      return H = this.getNamedItemNS(A.namespaceURI, A.localName), K(this._ownerElement, this, A, H), H;
    },
    /* returns Node */
    removeNamedItem: function(A) {
      var F = this.getNamedItem(A);
      return P(this._ownerElement, this, F), F;
    },
    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR
    //for level2
    removeNamedItemNS: function(A, F) {
      var H = this.getNamedItemNS(A, F);
      return P(this._ownerElement, this, H), H;
    },
    getNamedItemNS: function(A, F) {
      for (var H = this.length; H--; ) {
        var ae = this[H];
        if (ae.localName == F && ae.namespaceURI == A)
          return ae;
      }
      return null;
    }
  };
  function te() {
  }
  te.prototype = {
    /**
     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.
     * The different implementations fairly diverged in what kind of features were reported.
     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.
     *
     * @deprecated It is deprecated and modern browsers return true in all cases.
     *
     * @param {string} feature
     * @param {string} [version]
     * @returns {boolean} always true
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN
     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard
     */
    hasFeature: function(A, F) {
      return !0;
    },
    /**
     * Creates an XML Document object of the specified type with its document element.
     *
     * __It behaves slightly different from the description in the living standard__:
     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.
     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.
     * - this implementation is not validating names or qualified names
     *   (when parsing XML strings, the SAX parser takes care of that)
     *
     * @param {string|null} namespaceURI
     * @param {string} qualifiedName
     * @param {DocumentType=null} doctype
     * @returns {Document}
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN
     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core
     *
     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract
     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names
     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names
     */
    createDocument: function(A, F, H) {
      var ae = new G();
      if (ae.implementation = this, ae.childNodes = new k(), ae.doctype = H || null, H && ae.appendChild(H), F) {
        var we = ae.createElementNS(A, F);
        ae.appendChild(we);
      }
      return ae;
    },
    /**
     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.
     *
     * __This behavior is slightly different from the in the specs__:
     * - this implementation is not validating names or qualified names
     *   (when parsing XML strings, the SAX parser takes care of that)
     *
     * @param {string} qualifiedName
     * @param {string} [publicId]
     * @param {string} [systemId]
     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation
     * 				  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN
     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core
     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard
     *
     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract
     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names
     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names
     */
    createDocumentType: function(A, F, H) {
      var ae = new De();
      return ae.name = A, ae.nodeName = A, ae.publicId = F || "", ae.systemId = H || "", ae;
    }
  };
  function W() {
  }
  W.prototype = {
    firstChild: null,
    lastChild: null,
    previousSibling: null,
    nextSibling: null,
    attributes: null,
    parentNode: null,
    childNodes: null,
    ownerDocument: null,
    nodeValue: null,
    namespaceURI: null,
    prefix: null,
    localName: null,
    // Modified in DOM Level 2:
    insertBefore: function(A, F) {
      return z(this, A, F);
    },
    replaceChild: function(A, F) {
      z(this, A, F, O), F && this.removeChild(F);
    },
    removeChild: function(A) {
      return fe(this, A);
    },
    appendChild: function(A) {
      return this.insertBefore(A, null);
    },
    hasChildNodes: function() {
      return this.firstChild != null;
    },
    cloneNode: function(A) {
      return Ie(this.ownerDocument || this, this, A);
    },
    // Modified in DOM Level 2:
    normalize: function() {
      for (var A = this.firstChild; A; ) {
        var F = A.nextSibling;
        F && F.nodeType == h && A.nodeType == h ? (this.removeChild(F), A.appendData(F.data)) : (A.normalize(), A = F);
      }
    },
    // Introduced in DOM Level 2:
    isSupported: function(A, F) {
      return this.ownerDocument.implementation.hasFeature(A, F);
    },
    // Introduced in DOM Level 2:
    hasAttributes: function() {
      return this.attributes.length > 0;
    },
    /**
     * Look up the prefix associated to the given namespace URI, starting from this node.
     * **The default namespace declarations are ignored by this method.**
     * See Namespace Prefix Lookup for details on the algorithm used by this method.
     *
     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._
     *
     * @param {string | null} namespaceURI
     * @returns {string | null}
     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix
     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo
     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix
     * @see https://github.com/xmldom/xmldom/issues/322
     */
    lookupPrefix: function(A) {
      for (var F = this; F; ) {
        var H = F._nsMap;
        if (H) {
          for (var ae in H)
            if (Object.prototype.hasOwnProperty.call(H, ae) && H[ae] === A)
              return ae;
        }
        F = F.nodeType == d ? F.ownerDocument : F.parentNode;
      }
      return null;
    },
    // Introduced in DOM Level 3:
    lookupNamespaceURI: function(A) {
      for (var F = this; F; ) {
        var H = F._nsMap;
        if (H && Object.prototype.hasOwnProperty.call(H, A))
          return H[A];
        F = F.nodeType == d ? F.ownerDocument : F.parentNode;
      }
      return null;
    },
    // Introduced in DOM Level 3:
    isDefaultNamespace: function(A) {
      var F = this.lookupPrefix(A);
      return F == null;
    }
  };
  function B(A) {
    return A == "<" && "&lt;" || A == ">" && "&gt;" || A == "&" && "&amp;" || A == '"' && "&quot;" || "&#" + A.charCodeAt() + ";";
  }
  c(u, W), c(u, W.prototype);
  function se(A, F) {
    if (F(A))
      return !0;
    if (A = A.firstChild)
      do
        if (se(A, F))
          return !0;
      while (A = A.nextSibling);
  }
  function G() {
    this.ownerDocument = this;
  }
  function J(A, F, H) {
    A && A._inc++;
    var ae = H.namespaceURI;
    ae === n.XMLNS && (F._nsMap[H.prefix ? H.localName : ""] = H.value);
  }
  function ce(A, F, H, ae) {
    A && A._inc++;
    var we = H.namespaceURI;
    we === n.XMLNS && delete F._nsMap[H.prefix ? H.localName : ""];
  }
  function he(A, F, H) {
    if (A && A._inc) {
      A._inc++;
      var ae = F.childNodes;
      if (H)
        ae[ae.length++] = H;
      else {
        for (var we = F.firstChild, Ae = 0; we; )
          ae[Ae++] = we, we = we.nextSibling;
        ae.length = Ae, delete ae[ae.length];
      }
    }
  }
  function fe(A, F) {
    var H = F.previousSibling, ae = F.nextSibling;
    return H ? H.nextSibling = ae : A.firstChild = ae, ae ? ae.previousSibling = H : A.lastChild = H, F.parentNode = null, F.previousSibling = null, F.nextSibling = null, he(A.ownerDocument, A), F;
  }
  function me(A) {
    return A && (A.nodeType === W.DOCUMENT_NODE || A.nodeType === W.DOCUMENT_FRAGMENT_NODE || A.nodeType === W.ELEMENT_NODE);
  }
  function de(A) {
    return A && (ye(A) || be(A) || pe(A) || A.nodeType === W.DOCUMENT_FRAGMENT_NODE || A.nodeType === W.COMMENT_NODE || A.nodeType === W.PROCESSING_INSTRUCTION_NODE);
  }
  function pe(A) {
    return A && A.nodeType === W.DOCUMENT_TYPE_NODE;
  }
  function ye(A) {
    return A && A.nodeType === W.ELEMENT_NODE;
  }
  function be(A) {
    return A && A.nodeType === W.TEXT_NODE;
  }
  function D(A, F) {
    var H = A.childNodes || [];
    if (e(H, ye) || pe(F))
      return !1;
    var ae = e(H, pe);
    return !(F && ae && H.indexOf(ae) > H.indexOf(F));
  }
  function V(A, F) {
    var H = A.childNodes || [];
    function ae(Ae) {
      return ye(Ae) && Ae !== F;
    }
    if (e(H, ae))
      return !1;
    var we = e(H, pe);
    return !(F && we && H.indexOf(we) > H.indexOf(F));
  }
  function q(A, F, H) {
    if (!me(A))
      throw new T(C, "Unexpected parent node type " + A.nodeType);
    if (H && H.parentNode !== A)
      throw new T(R, "child not in parent");
    if (
      // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a "HierarchyRequestError" DOMException.
      !de(F) || // 5. If either `node` is a Text node and `parent` is a document,
      // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0
      // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)
      // or `node` is a doctype and `parent` is not a document, then throw a "HierarchyRequestError" DOMException.
      pe(F) && A.nodeType !== W.DOCUMENT_NODE
    )
      throw new T(
        C,
        "Unexpected node type " + F.nodeType + " for parent node type " + A.nodeType
      );
  }
  function I(A, F, H) {
    var ae = A.childNodes || [], we = F.childNodes || [];
    if (F.nodeType === W.DOCUMENT_FRAGMENT_NODE) {
      var Ae = we.filter(ye);
      if (Ae.length > 1 || e(we, be))
        throw new T(C, "More than one element or text in fragment");
      if (Ae.length === 1 && !D(A, H))
        throw new T(C, "Element in fragment can not be inserted before doctype");
    }
    if (ye(F) && !D(A, H))
      throw new T(C, "Only one element can be added and only after doctype");
    if (pe(F)) {
      if (e(ae, pe))
        throw new T(C, "Only one doctype is allowed");
      var We = e(ae, ye);
      if (H && ae.indexOf(We) < ae.indexOf(H))
        throw new T(C, "Doctype can only be inserted before an element");
      if (!H && We)
        throw new T(C, "Doctype can not be appended since element is present");
    }
  }
  function O(A, F, H) {
    var ae = A.childNodes || [], we = F.childNodes || [];
    if (F.nodeType === W.DOCUMENT_FRAGMENT_NODE) {
      var Ae = we.filter(ye);
      if (Ae.length > 1 || e(we, be))
        throw new T(C, "More than one element or text in fragment");
      if (Ae.length === 1 && !V(A, H))
        throw new T(C, "Element in fragment can not be inserted before doctype");
    }
    if (ye(F) && !V(A, H))
      throw new T(C, "Only one element can be added and only after doctype");
    if (pe(F)) {
      if (e(ae, function(Mt) {
        return pe(Mt) && Mt !== H;
      }))
        throw new T(C, "Only one doctype is allowed");
      var We = e(ae, ye);
      if (H && ae.indexOf(We) < ae.indexOf(H))
        throw new T(C, "Doctype can only be inserted before an element");
    }
  }
  function z(A, F, H, ae) {
    q(A, F, H), A.nodeType === W.DOCUMENT_NODE && (ae || I)(A, F, H);
    var we = F.parentNode;
    if (we && we.removeChild(F), F.nodeType === x) {
      var Ae = F.firstChild;
      if (Ae == null)
        return F;
      var We = F.lastChild;
    } else
      Ae = We = F;
    var $e = H ? H.previousSibling : A.lastChild;
    Ae.previousSibling = $e, We.nextSibling = H, $e ? $e.nextSibling = Ae : A.firstChild = Ae, H == null ? A.lastChild = We : H.previousSibling = We;
    do
      Ae.parentNode = A;
    while (Ae !== We && (Ae = Ae.nextSibling));
    return he(A.ownerDocument || A, A), F.nodeType == x && (F.firstChild = F.lastChild = null), F;
  }
  function ie(A, F) {
    return F.parentNode && F.parentNode.removeChild(F), F.parentNode = A, F.previousSibling = A.lastChild, F.nextSibling = null, F.previousSibling ? F.previousSibling.nextSibling = F : A.firstChild = F, A.lastChild = F, he(A.ownerDocument, A, F), F;
  }
  G.prototype = {
    //implementation : null,
    nodeName: "#document",
    nodeType: v,
    /**
     * The DocumentType node of the document.
     *
     * @readonly
     * @type DocumentType
     */
    doctype: null,
    documentElement: null,
    _inc: 1,
    insertBefore: function(A, F) {
      if (A.nodeType == x) {
        for (var H = A.firstChild; H; ) {
          var ae = H.nextSibling;
          this.insertBefore(H, F), H = ae;
        }
        return A;
      }
      return z(this, A, F), A.ownerDocument = this, this.documentElement === null && A.nodeType === f && (this.documentElement = A), A;
    },
    removeChild: function(A) {
      return this.documentElement == A && (this.documentElement = null), fe(this, A);
    },
    replaceChild: function(A, F) {
      z(this, A, F, O), A.ownerDocument = this, F && this.removeChild(F), ye(A) && (this.documentElement = A);
    },
    // Introduced in DOM Level 2:
    importNode: function(A, F) {
      return Fe(this, A, F);
    },
    // Introduced in DOM Level 2:
    getElementById: function(A) {
      var F = null;
      return se(this.documentElement, function(H) {
        if (H.nodeType == f && H.getAttribute("id") == A)
          return F = H, !0;
      }), F;
    },
    /**
     * The `getElementsByClassName` method of `Document` interface returns an array-like object
     * of all child elements which have **all** of the given class name(s).
     *
     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.
     *
     *
     * Warning: This is a live LiveNodeList.
     * Changes in the DOM will reflect in the array as the changes occur.
     * If an element selected by this array no longer qualifies for the selector,
     * it will automatically be removed. Be aware of this for iteration purposes.
     *
     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName
     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname
     */
    getElementsByClassName: function(A) {
      var F = a(A);
      return new w(this, function(H) {
        var ae = [];
        return F.length > 0 && se(H.documentElement, function(we) {
          if (we !== H && we.nodeType === f) {
            var Ae = we.getAttribute("class");
            if (Ae) {
              var We = A === Ae;
              if (!We) {
                var $e = a(Ae);
                We = F.every(s($e));
              }
              We && ae.push(we);
            }
          }
        }), ae;
      });
    },
    //document factory method:
    createElement: function(A) {
      var F = new ne();
      F.ownerDocument = this, F.nodeName = A, F.tagName = A, F.localName = A, F.childNodes = new k();
      var H = F.attributes = new N();
      return H._ownerElement = F, F;
    },
    createDocumentFragment: function() {
      var A = new ee();
      return A.ownerDocument = this, A.childNodes = new k(), A;
    },
    createTextNode: function(A) {
      var F = new X();
      return F.ownerDocument = this, F.appendData(A), F;
    },
    createComment: function(A) {
      var F = new Y();
      return F.ownerDocument = this, F.appendData(A), F;
    },
    createCDATASection: function(A) {
      var F = new oe();
      return F.ownerDocument = this, F.appendData(A), F;
    },
    createProcessingInstruction: function(A, F) {
      var H = new ue();
      return H.ownerDocument = this, H.tagName = H.nodeName = H.target = A, H.nodeValue = H.data = F, H;
    },
    createAttribute: function(A) {
      var F = new Z();
      return F.ownerDocument = this, F.name = A, F.nodeName = A, F.localName = A, F.specified = !0, F;
    },
    createEntityReference: function(A) {
      var F = new Ce();
      return F.ownerDocument = this, F.nodeName = A, F;
    },
    // Introduced in DOM Level 2:
    createElementNS: function(A, F) {
      var H = new ne(), ae = F.split(":"), we = H.attributes = new N();
      return H.childNodes = new k(), H.ownerDocument = this, H.nodeName = F, H.tagName = F, H.namespaceURI = A, ae.length == 2 ? (H.prefix = ae[0], H.localName = ae[1]) : H.localName = F, we._ownerElement = H, H;
    },
    // Introduced in DOM Level 2:
    createAttributeNS: function(A, F) {
      var H = new Z(), ae = F.split(":");
      return H.ownerDocument = this, H.nodeName = F, H.name = F, H.namespaceURI = A, H.specified = !0, ae.length == 2 ? (H.prefix = ae[0], H.localName = ae[1]) : H.localName = F, H;
    }
  }, l(G, W);
  function ne() {
    this._nsMap = {};
  }
  ne.prototype = {
    nodeType: f,
    hasAttribute: function(A) {
      return this.getAttributeNode(A) != null;
    },
    getAttribute: function(A) {
      var F = this.getAttributeNode(A);
      return F && F.value || "";
    },
    getAttributeNode: function(A) {
      return this.attributes.getNamedItem(A);
    },
    setAttribute: function(A, F) {
      var H = this.ownerDocument.createAttribute(A);
      H.value = H.nodeValue = "" + F, this.setAttributeNode(H);
    },
    removeAttribute: function(A) {
      var F = this.getAttributeNode(A);
      F && this.removeAttributeNode(F);
    },
    //four real opeartion method
    appendChild: function(A) {
      return A.nodeType === x ? this.insertBefore(A, null) : ie(this, A);
    },
    setAttributeNode: function(A) {
      return this.attributes.setNamedItem(A);
    },
    setAttributeNodeNS: function(A) {
      return this.attributes.setNamedItemNS(A);
    },
    removeAttributeNode: function(A) {
      return this.attributes.removeNamedItem(A.nodeName);
    },
    //get real attribute name,and remove it by removeAttributeNode
    removeAttributeNS: function(A, F) {
      var H = this.getAttributeNodeNS(A, F);
      H && this.removeAttributeNode(H);
    },
    hasAttributeNS: function(A, F) {
      return this.getAttributeNodeNS(A, F) != null;
    },
    getAttributeNS: function(A, F) {
      var H = this.getAttributeNodeNS(A, F);
      return H && H.value || "";
    },
    setAttributeNS: function(A, F, H) {
      var ae = this.ownerDocument.createAttributeNS(A, F);
      ae.value = ae.nodeValue = "" + H, this.setAttributeNode(ae);
    },
    getAttributeNodeNS: function(A, F) {
      return this.attributes.getNamedItemNS(A, F);
    },
    getElementsByTagName: function(A) {
      return new w(this, function(F) {
        var H = [];
        return se(F, function(ae) {
          ae !== F && ae.nodeType == f && (A === "*" || ae.tagName == A) && H.push(ae);
        }), H;
      });
    },
    getElementsByTagNameNS: function(A, F) {
      return new w(this, function(H) {
        var ae = [];
        return se(H, function(we) {
          we !== H && we.nodeType === f && (A === "*" || we.namespaceURI === A) && (F === "*" || we.localName == F) && ae.push(we);
        }), ae;
      });
    }
  }, G.prototype.getElementsByTagName = ne.prototype.getElementsByTagName, G.prototype.getElementsByTagNameNS = ne.prototype.getElementsByTagNameNS, l(ne, W);
  function Z() {
  }
  Z.prototype.nodeType = d, l(Z, W);
  function L() {
  }
  L.prototype = {
    data: "",
    substringData: function(A, F) {
      return this.data.substring(A, A + F);
    },
    appendData: function(A) {
      A = this.data + A, this.nodeValue = this.data = A, this.length = A.length;
    },
    insertData: function(A, F) {
      this.replaceData(A, 0, F);
    },
    appendChild: function(A) {
      throw new Error(U[C]);
    },
    deleteData: function(A, F) {
      this.replaceData(A, F, "");
    },
    replaceData: function(A, F, H) {
      var ae = this.data.substring(0, A), we = this.data.substring(A + F);
      H = ae + H + we, this.nodeValue = this.data = H, this.length = H.length;
    }
  }, l(L, W);
  function X() {
  }
  X.prototype = {
    nodeName: "#text",
    nodeType: h,
    splitText: function(A) {
      var F = this.data, H = F.substring(A);
      F = F.substring(0, A), this.data = this.nodeValue = F, this.length = F.length;
      var ae = this.ownerDocument.createTextNode(H);
      return this.parentNode && this.parentNode.insertBefore(ae, this.nextSibling), ae;
    }
  }, l(X, L);
  function Y() {
  }
  Y.prototype = {
    nodeName: "#comment",
    nodeType: b
  }, l(Y, L);
  function oe() {
  }
  oe.prototype = {
    nodeName: "#cdata-section",
    nodeType: p
  }, l(oe, L);
  function De() {
  }
  De.prototype.nodeType = _, l(De, W);
  function Te() {
  }
  Te.prototype.nodeType = E, l(Te, W);
  function Se() {
  }
  Se.prototype.nodeType = g, l(Se, W);
  function Ce() {
  }
  Ce.prototype.nodeType = m, l(Ce, W);
  function ee() {
  }
  ee.prototype.nodeName = "#document-fragment", ee.prototype.nodeType = x, l(ee, W);
  function ue() {
  }
  ue.prototype.nodeType = y, l(ue, W);
  function ve() {
  }
  ve.prototype.serializeToString = function(A, F, H) {
    return Ee.call(A, F, H);
  }, W.prototype.toString = Ee;
  function Ee(A, F) {
    var H = [], ae = this.nodeType == 9 && this.documentElement || this, we = ae.prefix, Ae = ae.namespaceURI;
    if (Ae && we == null) {
      var we = ae.lookupPrefix(Ae);
      if (we == null)
        var We = [
          { namespace: Ae, prefix: null }
          //{namespace:uri,prefix:''}
        ];
    }
    return re(this, H, A, F, We), H.join("");
  }
  function ke(A, F, H) {
    var ae = A.prefix || "", we = A.namespaceURI;
    if (!we || ae === "xml" && we === n.XML || we === n.XMLNS)
      return !1;
    for (var Ae = H.length; Ae--; ) {
      var We = H[Ae];
      if (We.prefix === ae)
        return We.namespace !== we;
    }
    return !0;
  }
  function Q(A, F, H) {
    A.push(" ", F, '="', H.replace(/[<>&"\t\n\r]/g, B), '"');
  }
  function re(A, F, H, ae, we) {
    if (we || (we = []), ae)
      if (A = ae(A), A) {
        if (typeof A == "string") {
          F.push(A);
          return;
        }
      } else
        return;
    switch (A.nodeType) {
      case f:
        var Ae = A.attributes, We = Ae.length, nt = A.firstChild, $e = A.tagName;
        H = n.isHTML(A.namespaceURI) || H;
        var Mt = $e;
        if (!H && !A.prefix && A.namespaceURI) {
          for (var Zt, Wt = 0; Wt < Ae.length; Wt++)
            if (Ae.item(Wt).name === "xmlns") {
              Zt = Ae.item(Wt).value;
              break;
            }
          if (!Zt)
            for (var Ot = we.length - 1; Ot >= 0; Ot--) {
              var Yt = we[Ot];
              if (Yt.prefix === "" && Yt.namespace === A.namespaceURI) {
                Zt = Yt.namespace;
                break;
              }
            }
          if (Zt !== A.namespaceURI)
            for (var Ot = we.length - 1; Ot >= 0; Ot--) {
              var Yt = we[Ot];
              if (Yt.namespace === A.namespaceURI) {
                Yt.prefix && (Mt = Yt.prefix + ":" + $e);
                break;
              }
            }
        }
        F.push("<", Mt);
        for (var Lt = 0; Lt < We; Lt++) {
          var Et = Ae.item(Lt);
          Et.prefix == "xmlns" ? we.push({ prefix: Et.localName, namespace: Et.value }) : Et.nodeName == "xmlns" && we.push({ prefix: "", namespace: Et.value });
        }
        for (var Lt = 0; Lt < We; Lt++) {
          var Et = Ae.item(Lt);
          if (ke(Et, H, we)) {
            var Qt = Et.prefix || "", zn = Et.namespaceURI;
            Q(F, Qt ? "xmlns:" + Qt : "xmlns", zn), we.push({ prefix: Qt, namespace: zn });
          }
          re(Et, F, H, ae, we);
        }
        if ($e === Mt && ke(A, H, we)) {
          var Qt = A.prefix || "", zn = A.namespaceURI;
          Q(F, Qt ? "xmlns:" + Qt : "xmlns", zn), we.push({ prefix: Qt, namespace: zn });
        }
        if (nt || H && !/^(?:meta|link|img|br|hr|input)$/i.test($e)) {
          if (F.push(">"), H && /^script$/i.test($e))
            for (; nt; )
              nt.data ? F.push(nt.data) : re(nt, F, H, ae, we.slice()), nt = nt.nextSibling;
          else
            for (; nt; )
              re(nt, F, H, ae, we.slice()), nt = nt.nextSibling;
          F.push("</", Mt, ">");
        } else
          F.push("/>");
        return;
      case v:
      case x:
        for (var nt = A.firstChild; nt; )
          re(nt, F, H, ae, we.slice()), nt = nt.nextSibling;
        return;
      case d:
        return Q(F, A.name, A.value);
      case h:
        return F.push(
          A.data.replace(/[<&>]/g, B)
        );
      case p:
        return F.push("<![CDATA[", A.data, "]]>");
      case b:
        return F.push("<!--", A.data, "-->");
      case _:
        var Yr = A.publicId, xn = A.systemId;
        if (F.push("<!DOCTYPE ", A.name), Yr)
          F.push(" PUBLIC ", Yr), xn && xn != "." && F.push(" ", xn), F.push(">");
        else if (xn && xn != ".")
          F.push(" SYSTEM ", xn, ">");
        else {
          var Qr = A.internalSubset;
          Qr && F.push(" [", Qr, "]"), F.push(">");
        }
        return;
      case y:
        return F.push("<?", A.target, " ", A.data, "?>");
      case m:
        return F.push("&", A.nodeName, ";");
      //case ENTITY_NODE:
      //case NOTATION_NODE:
      default:
        F.push("??", A.nodeName);
    }
  }
  function Fe(A, F, H) {
    var ae;
    switch (F.nodeType) {
      case f:
        ae = F.cloneNode(!1), ae.ownerDocument = A;
      //var attrs = node2.attributes;
      //var len = attrs.length;
      //for(var i=0;i<len;i++){
      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
      //}
      case x:
        break;
      case d:
        H = !0;
        break;
    }
    if (ae || (ae = F.cloneNode(!1)), ae.ownerDocument = A, ae.parentNode = null, H)
      for (var we = F.firstChild; we; )
        ae.appendChild(Fe(A, we, H)), we = we.nextSibling;
    return ae;
  }
  function Ie(A, F, H) {
    var ae = new F.constructor();
    for (var we in F)
      if (Object.prototype.hasOwnProperty.call(F, we)) {
        var Ae = F[we];
        typeof Ae != "object" && Ae != ae[we] && (ae[we] = Ae);
      }
    switch (F.childNodes && (ae.childNodes = new k()), ae.ownerDocument = A, ae.nodeType) {
      case f:
        var We = F.attributes, $e = ae.attributes = new N(), Mt = We.length;
        $e._ownerElement = ae;
        for (var Zt = 0; Zt < Mt; Zt++)
          ae.setAttributeNode(Ie(A, We.item(Zt), !0));
        break;
      case d:
        H = !0;
    }
    if (H)
      for (var Wt = F.firstChild; Wt; )
        ae.appendChild(Ie(A, Wt, H)), Wt = Wt.nextSibling;
    return ae;
  }
  function Pe(A, F, H) {
    A[F] = H;
  }
  try {
    if (Object.defineProperty) {
      let A = function(F) {
        switch (F.nodeType) {
          case f:
          case x:
            var H = [];
            for (F = F.firstChild; F; )
              F.nodeType !== 7 && F.nodeType !== 8 && H.push(A(F)), F = F.nextSibling;
            return H.join("");
          default:
            return F.nodeValue;
        }
      };
      Object.defineProperty(w.prototype, "length", {
        get: function() {
          return $(this), this.$$length;
        }
      }), Object.defineProperty(W.prototype, "textContent", {
        get: function() {
          return A(this);
        },
        set: function(F) {
          switch (this.nodeType) {
            case f:
            case x:
              for (; this.firstChild; )
                this.removeChild(this.firstChild);
              (F || String(F)) && this.appendChild(this.ownerDocument.createTextNode(F));
              break;
            default:
              this.data = F, this.value = F, this.nodeValue = F;
          }
        }
      }), Pe = function(F, H, ae) {
        F["$$" + H] = ae;
      };
    }
  } catch {
  }
  return Cn.DocumentType = De, Cn.DOMException = T, Cn.DOMImplementation = te, Cn.Element = ne, Cn.Node = W, Cn.NodeList = k, Cn.XMLSerializer = ve, Cn;
}
var qi = {}, Tf = {}, wb;
function Yk() {
  return wb || (wb = 1, function(t) {
    var e = hc().freeze;
    t.XML_ENTITIES = e({
      amp: "&",
      apos: "'",
      gt: ">",
      lt: "<",
      quot: '"'
    }), t.HTML_ENTITIES = e({
      Aacute: "Á",
      aacute: "á",
      Abreve: "Ă",
      abreve: "ă",
      ac: "∾",
      acd: "∿",
      acE: "∾̳",
      Acirc: "Â",
      acirc: "â",
      acute: "´",
      Acy: "А",
      acy: "а",
      AElig: "Æ",
      aelig: "æ",
      af: "⁡",
      Afr: "𝔄",
      afr: "𝔞",
      Agrave: "À",
      agrave: "à",
      alefsym: "ℵ",
      aleph: "ℵ",
      Alpha: "Α",
      alpha: "α",
      Amacr: "Ā",
      amacr: "ā",
      amalg: "⨿",
      AMP: "&",
      amp: "&",
      And: "⩓",
      and: "∧",
      andand: "⩕",
      andd: "⩜",
      andslope: "⩘",
      andv: "⩚",
      ang: "∠",
      ange: "⦤",
      angle: "∠",
      angmsd: "∡",
      angmsdaa: "⦨",
      angmsdab: "⦩",
      angmsdac: "⦪",
      angmsdad: "⦫",
      angmsdae: "⦬",
      angmsdaf: "⦭",
      angmsdag: "⦮",
      angmsdah: "⦯",
      angrt: "∟",
      angrtvb: "⊾",
      angrtvbd: "⦝",
      angsph: "∢",
      angst: "Å",
      angzarr: "⍼",
      Aogon: "Ą",
      aogon: "ą",
      Aopf: "𝔸",
      aopf: "𝕒",
      ap: "≈",
      apacir: "⩯",
      apE: "⩰",
      ape: "≊",
      apid: "≋",
      apos: "'",
      ApplyFunction: "⁡",
      approx: "≈",
      approxeq: "≊",
      Aring: "Å",
      aring: "å",
      Ascr: "𝒜",
      ascr: "𝒶",
      Assign: "≔",
      ast: "*",
      asymp: "≈",
      asympeq: "≍",
      Atilde: "Ã",
      atilde: "ã",
      Auml: "Ä",
      auml: "ä",
      awconint: "∳",
      awint: "⨑",
      backcong: "≌",
      backepsilon: "϶",
      backprime: "‵",
      backsim: "∽",
      backsimeq: "⋍",
      Backslash: "∖",
      Barv: "⫧",
      barvee: "⊽",
      Barwed: "⌆",
      barwed: "⌅",
      barwedge: "⌅",
      bbrk: "⎵",
      bbrktbrk: "⎶",
      bcong: "≌",
      Bcy: "Б",
      bcy: "б",
      bdquo: "„",
      becaus: "∵",
      Because: "∵",
      because: "∵",
      bemptyv: "⦰",
      bepsi: "϶",
      bernou: "ℬ",
      Bernoullis: "ℬ",
      Beta: "Β",
      beta: "β",
      beth: "ℶ",
      between: "≬",
      Bfr: "𝔅",
      bfr: "𝔟",
      bigcap: "⋂",
      bigcirc: "◯",
      bigcup: "⋃",
      bigodot: "⨀",
      bigoplus: "⨁",
      bigotimes: "⨂",
      bigsqcup: "⨆",
      bigstar: "★",
      bigtriangledown: "▽",
      bigtriangleup: "△",
      biguplus: "⨄",
      bigvee: "⋁",
      bigwedge: "⋀",
      bkarow: "⤍",
      blacklozenge: "⧫",
      blacksquare: "▪",
      blacktriangle: "▴",
      blacktriangledown: "▾",
      blacktriangleleft: "◂",
      blacktriangleright: "▸",
      blank: "␣",
      blk12: "▒",
      blk14: "░",
      blk34: "▓",
      block: "█",
      bne: "=⃥",
      bnequiv: "≡⃥",
      bNot: "⫭",
      bnot: "⌐",
      Bopf: "𝔹",
      bopf: "𝕓",
      bot: "⊥",
      bottom: "⊥",
      bowtie: "⋈",
      boxbox: "⧉",
      boxDL: "╗",
      boxDl: "╖",
      boxdL: "╕",
      boxdl: "┐",
      boxDR: "╔",
      boxDr: "╓",
      boxdR: "╒",
      boxdr: "┌",
      boxH: "═",
      boxh: "─",
      boxHD: "╦",
      boxHd: "╤",
      boxhD: "╥",
      boxhd: "┬",
      boxHU: "╩",
      boxHu: "╧",
      boxhU: "╨",
      boxhu: "┴",
      boxminus: "⊟",
      boxplus: "⊞",
      boxtimes: "⊠",
      boxUL: "╝",
      boxUl: "╜",
      boxuL: "╛",
      boxul: "┘",
      boxUR: "╚",
      boxUr: "╙",
      boxuR: "╘",
      boxur: "└",
      boxV: "║",
      boxv: "│",
      boxVH: "╬",
      boxVh: "╫",
      boxvH: "╪",
      boxvh: "┼",
      boxVL: "╣",
      boxVl: "╢",
      boxvL: "╡",
      boxvl: "┤",
      boxVR: "╠",
      boxVr: "╟",
      boxvR: "╞",
      boxvr: "├",
      bprime: "‵",
      Breve: "˘",
      breve: "˘",
      brvbar: "¦",
      Bscr: "ℬ",
      bscr: "𝒷",
      bsemi: "⁏",
      bsim: "∽",
      bsime: "⋍",
      bsol: "\\",
      bsolb: "⧅",
      bsolhsub: "⟈",
      bull: "•",
      bullet: "•",
      bump: "≎",
      bumpE: "⪮",
      bumpe: "≏",
      Bumpeq: "≎",
      bumpeq: "≏",
      Cacute: "Ć",
      cacute: "ć",
      Cap: "⋒",
      cap: "∩",
      capand: "⩄",
      capbrcup: "⩉",
      capcap: "⩋",
      capcup: "⩇",
      capdot: "⩀",
      CapitalDifferentialD: "ⅅ",
      caps: "∩︀",
      caret: "⁁",
      caron: "ˇ",
      Cayleys: "ℭ",
      ccaps: "⩍",
      Ccaron: "Č",
      ccaron: "č",
      Ccedil: "Ç",
      ccedil: "ç",
      Ccirc: "Ĉ",
      ccirc: "ĉ",
      Cconint: "∰",
      ccups: "⩌",
      ccupssm: "⩐",
      Cdot: "Ċ",
      cdot: "ċ",
      cedil: "¸",
      Cedilla: "¸",
      cemptyv: "⦲",
      cent: "¢",
      CenterDot: "·",
      centerdot: "·",
      Cfr: "ℭ",
      cfr: "𝔠",
      CHcy: "Ч",
      chcy: "ч",
      check: "✓",
      checkmark: "✓",
      Chi: "Χ",
      chi: "χ",
      cir: "○",
      circ: "ˆ",
      circeq: "≗",
      circlearrowleft: "↺",
      circlearrowright: "↻",
      circledast: "⊛",
      circledcirc: "⊚",
      circleddash: "⊝",
      CircleDot: "⊙",
      circledR: "®",
      circledS: "Ⓢ",
      CircleMinus: "⊖",
      CirclePlus: "⊕",
      CircleTimes: "⊗",
      cirE: "⧃",
      cire: "≗",
      cirfnint: "⨐",
      cirmid: "⫯",
      cirscir: "⧂",
      ClockwiseContourIntegral: "∲",
      CloseCurlyDoubleQuote: "”",
      CloseCurlyQuote: "’",
      clubs: "♣",
      clubsuit: "♣",
      Colon: "∷",
      colon: ":",
      Colone: "⩴",
      colone: "≔",
      coloneq: "≔",
      comma: ",",
      commat: "@",
      comp: "∁",
      compfn: "∘",
      complement: "∁",
      complexes: "ℂ",
      cong: "≅",
      congdot: "⩭",
      Congruent: "≡",
      Conint: "∯",
      conint: "∮",
      ContourIntegral: "∮",
      Copf: "ℂ",
      copf: "𝕔",
      coprod: "∐",
      Coproduct: "∐",
      COPY: "©",
      copy: "©",
      copysr: "℗",
      CounterClockwiseContourIntegral: "∳",
      crarr: "↵",
      Cross: "⨯",
      cross: "✗",
      Cscr: "𝒞",
      cscr: "𝒸",
      csub: "⫏",
      csube: "⫑",
      csup: "⫐",
      csupe: "⫒",
      ctdot: "⋯",
      cudarrl: "⤸",
      cudarrr: "⤵",
      cuepr: "⋞",
      cuesc: "⋟",
      cularr: "↶",
      cularrp: "⤽",
      Cup: "⋓",
      cup: "∪",
      cupbrcap: "⩈",
      CupCap: "≍",
      cupcap: "⩆",
      cupcup: "⩊",
      cupdot: "⊍",
      cupor: "⩅",
      cups: "∪︀",
      curarr: "↷",
      curarrm: "⤼",
      curlyeqprec: "⋞",
      curlyeqsucc: "⋟",
      curlyvee: "⋎",
      curlywedge: "⋏",
      curren: "¤",
      curvearrowleft: "↶",
      curvearrowright: "↷",
      cuvee: "⋎",
      cuwed: "⋏",
      cwconint: "∲",
      cwint: "∱",
      cylcty: "⌭",
      Dagger: "‡",
      dagger: "†",
      daleth: "ℸ",
      Darr: "↡",
      dArr: "⇓",
      darr: "↓",
      dash: "‐",
      Dashv: "⫤",
      dashv: "⊣",
      dbkarow: "⤏",
      dblac: "˝",
      Dcaron: "Ď",
      dcaron: "ď",
      Dcy: "Д",
      dcy: "д",
      DD: "ⅅ",
      dd: "ⅆ",
      ddagger: "‡",
      ddarr: "⇊",
      DDotrahd: "⤑",
      ddotseq: "⩷",
      deg: "°",
      Del: "∇",
      Delta: "Δ",
      delta: "δ",
      demptyv: "⦱",
      dfisht: "⥿",
      Dfr: "𝔇",
      dfr: "𝔡",
      dHar: "⥥",
      dharl: "⇃",
      dharr: "⇂",
      DiacriticalAcute: "´",
      DiacriticalDot: "˙",
      DiacriticalDoubleAcute: "˝",
      DiacriticalGrave: "`",
      DiacriticalTilde: "˜",
      diam: "⋄",
      Diamond: "⋄",
      diamond: "⋄",
      diamondsuit: "♦",
      diams: "♦",
      die: "¨",
      DifferentialD: "ⅆ",
      digamma: "ϝ",
      disin: "⋲",
      div: "÷",
      divide: "÷",
      divideontimes: "⋇",
      divonx: "⋇",
      DJcy: "Ђ",
      djcy: "ђ",
      dlcorn: "⌞",
      dlcrop: "⌍",
      dollar: "$",
      Dopf: "𝔻",
      dopf: "𝕕",
      Dot: "¨",
      dot: "˙",
      DotDot: "⃜",
      doteq: "≐",
      doteqdot: "≑",
      DotEqual: "≐",
      dotminus: "∸",
      dotplus: "∔",
      dotsquare: "⊡",
      doublebarwedge: "⌆",
      DoubleContourIntegral: "∯",
      DoubleDot: "¨",
      DoubleDownArrow: "⇓",
      DoubleLeftArrow: "⇐",
      DoubleLeftRightArrow: "⇔",
      DoubleLeftTee: "⫤",
      DoubleLongLeftArrow: "⟸",
      DoubleLongLeftRightArrow: "⟺",
      DoubleLongRightArrow: "⟹",
      DoubleRightArrow: "⇒",
      DoubleRightTee: "⊨",
      DoubleUpArrow: "⇑",
      DoubleUpDownArrow: "⇕",
      DoubleVerticalBar: "∥",
      DownArrow: "↓",
      Downarrow: "⇓",
      downarrow: "↓",
      DownArrowBar: "⤓",
      DownArrowUpArrow: "⇵",
      DownBreve: "̑",
      downdownarrows: "⇊",
      downharpoonleft: "⇃",
      downharpoonright: "⇂",
      DownLeftRightVector: "⥐",
      DownLeftTeeVector: "⥞",
      DownLeftVector: "↽",
      DownLeftVectorBar: "⥖",
      DownRightTeeVector: "⥟",
      DownRightVector: "⇁",
      DownRightVectorBar: "⥗",
      DownTee: "⊤",
      DownTeeArrow: "↧",
      drbkarow: "⤐",
      drcorn: "⌟",
      drcrop: "⌌",
      Dscr: "𝒟",
      dscr: "𝒹",
      DScy: "Ѕ",
      dscy: "ѕ",
      dsol: "⧶",
      Dstrok: "Đ",
      dstrok: "đ",
      dtdot: "⋱",
      dtri: "▿",
      dtrif: "▾",
      duarr: "⇵",
      duhar: "⥯",
      dwangle: "⦦",
      DZcy: "Џ",
      dzcy: "џ",
      dzigrarr: "⟿",
      Eacute: "É",
      eacute: "é",
      easter: "⩮",
      Ecaron: "Ě",
      ecaron: "ě",
      ecir: "≖",
      Ecirc: "Ê",
      ecirc: "ê",
      ecolon: "≕",
      Ecy: "Э",
      ecy: "э",
      eDDot: "⩷",
      Edot: "Ė",
      eDot: "≑",
      edot: "ė",
      ee: "ⅇ",
      efDot: "≒",
      Efr: "𝔈",
      efr: "𝔢",
      eg: "⪚",
      Egrave: "È",
      egrave: "è",
      egs: "⪖",
      egsdot: "⪘",
      el: "⪙",
      Element: "∈",
      elinters: "⏧",
      ell: "ℓ",
      els: "⪕",
      elsdot: "⪗",
      Emacr: "Ē",
      emacr: "ē",
      empty: "∅",
      emptyset: "∅",
      EmptySmallSquare: "◻",
      emptyv: "∅",
      EmptyVerySmallSquare: "▫",
      emsp: " ",
      emsp13: " ",
      emsp14: " ",
      ENG: "Ŋ",
      eng: "ŋ",
      ensp: " ",
      Eogon: "Ę",
      eogon: "ę",
      Eopf: "𝔼",
      eopf: "𝕖",
      epar: "⋕",
      eparsl: "⧣",
      eplus: "⩱",
      epsi: "ε",
      Epsilon: "Ε",
      epsilon: "ε",
      epsiv: "ϵ",
      eqcirc: "≖",
      eqcolon: "≕",
      eqsim: "≂",
      eqslantgtr: "⪖",
      eqslantless: "⪕",
      Equal: "⩵",
      equals: "=",
      EqualTilde: "≂",
      equest: "≟",
      Equilibrium: "⇌",
      equiv: "≡",
      equivDD: "⩸",
      eqvparsl: "⧥",
      erarr: "⥱",
      erDot: "≓",
      Escr: "ℰ",
      escr: "ℯ",
      esdot: "≐",
      Esim: "⩳",
      esim: "≂",
      Eta: "Η",
      eta: "η",
      ETH: "Ð",
      eth: "ð",
      Euml: "Ë",
      euml: "ë",
      euro: "€",
      excl: "!",
      exist: "∃",
      Exists: "∃",
      expectation: "ℰ",
      ExponentialE: "ⅇ",
      exponentiale: "ⅇ",
      fallingdotseq: "≒",
      Fcy: "Ф",
      fcy: "ф",
      female: "♀",
      ffilig: "ﬃ",
      fflig: "ﬀ",
      ffllig: "ﬄ",
      Ffr: "𝔉",
      ffr: "𝔣",
      filig: "ﬁ",
      FilledSmallSquare: "◼",
      FilledVerySmallSquare: "▪",
      fjlig: "fj",
      flat: "♭",
      fllig: "ﬂ",
      fltns: "▱",
      fnof: "ƒ",
      Fopf: "𝔽",
      fopf: "𝕗",
      ForAll: "∀",
      forall: "∀",
      fork: "⋔",
      forkv: "⫙",
      Fouriertrf: "ℱ",
      fpartint: "⨍",
      frac12: "½",
      frac13: "⅓",
      frac14: "¼",
      frac15: "⅕",
      frac16: "⅙",
      frac18: "⅛",
      frac23: "⅔",
      frac25: "⅖",
      frac34: "¾",
      frac35: "⅗",
      frac38: "⅜",
      frac45: "⅘",
      frac56: "⅚",
      frac58: "⅝",
      frac78: "⅞",
      frasl: "⁄",
      frown: "⌢",
      Fscr: "ℱ",
      fscr: "𝒻",
      gacute: "ǵ",
      Gamma: "Γ",
      gamma: "γ",
      Gammad: "Ϝ",
      gammad: "ϝ",
      gap: "⪆",
      Gbreve: "Ğ",
      gbreve: "ğ",
      Gcedil: "Ģ",
      Gcirc: "Ĝ",
      gcirc: "ĝ",
      Gcy: "Г",
      gcy: "г",
      Gdot: "Ġ",
      gdot: "ġ",
      gE: "≧",
      ge: "≥",
      gEl: "⪌",
      gel: "⋛",
      geq: "≥",
      geqq: "≧",
      geqslant: "⩾",
      ges: "⩾",
      gescc: "⪩",
      gesdot: "⪀",
      gesdoto: "⪂",
      gesdotol: "⪄",
      gesl: "⋛︀",
      gesles: "⪔",
      Gfr: "𝔊",
      gfr: "𝔤",
      Gg: "⋙",
      gg: "≫",
      ggg: "⋙",
      gimel: "ℷ",
      GJcy: "Ѓ",
      gjcy: "ѓ",
      gl: "≷",
      gla: "⪥",
      glE: "⪒",
      glj: "⪤",
      gnap: "⪊",
      gnapprox: "⪊",
      gnE: "≩",
      gne: "⪈",
      gneq: "⪈",
      gneqq: "≩",
      gnsim: "⋧",
      Gopf: "𝔾",
      gopf: "𝕘",
      grave: "`",
      GreaterEqual: "≥",
      GreaterEqualLess: "⋛",
      GreaterFullEqual: "≧",
      GreaterGreater: "⪢",
      GreaterLess: "≷",
      GreaterSlantEqual: "⩾",
      GreaterTilde: "≳",
      Gscr: "𝒢",
      gscr: "ℊ",
      gsim: "≳",
      gsime: "⪎",
      gsiml: "⪐",
      Gt: "≫",
      GT: ">",
      gt: ">",
      gtcc: "⪧",
      gtcir: "⩺",
      gtdot: "⋗",
      gtlPar: "⦕",
      gtquest: "⩼",
      gtrapprox: "⪆",
      gtrarr: "⥸",
      gtrdot: "⋗",
      gtreqless: "⋛",
      gtreqqless: "⪌",
      gtrless: "≷",
      gtrsim: "≳",
      gvertneqq: "≩︀",
      gvnE: "≩︀",
      Hacek: "ˇ",
      hairsp: " ",
      half: "½",
      hamilt: "ℋ",
      HARDcy: "Ъ",
      hardcy: "ъ",
      hArr: "⇔",
      harr: "↔",
      harrcir: "⥈",
      harrw: "↭",
      Hat: "^",
      hbar: "ℏ",
      Hcirc: "Ĥ",
      hcirc: "ĥ",
      hearts: "♥",
      heartsuit: "♥",
      hellip: "…",
      hercon: "⊹",
      Hfr: "ℌ",
      hfr: "𝔥",
      HilbertSpace: "ℋ",
      hksearow: "⤥",
      hkswarow: "⤦",
      hoarr: "⇿",
      homtht: "∻",
      hookleftarrow: "↩",
      hookrightarrow: "↪",
      Hopf: "ℍ",
      hopf: "𝕙",
      horbar: "―",
      HorizontalLine: "─",
      Hscr: "ℋ",
      hscr: "𝒽",
      hslash: "ℏ",
      Hstrok: "Ħ",
      hstrok: "ħ",
      HumpDownHump: "≎",
      HumpEqual: "≏",
      hybull: "⁃",
      hyphen: "‐",
      Iacute: "Í",
      iacute: "í",
      ic: "⁣",
      Icirc: "Î",
      icirc: "î",
      Icy: "И",
      icy: "и",
      Idot: "İ",
      IEcy: "Е",
      iecy: "е",
      iexcl: "¡",
      iff: "⇔",
      Ifr: "ℑ",
      ifr: "𝔦",
      Igrave: "Ì",
      igrave: "ì",
      ii: "ⅈ",
      iiiint: "⨌",
      iiint: "∭",
      iinfin: "⧜",
      iiota: "℩",
      IJlig: "Ĳ",
      ijlig: "ĳ",
      Im: "ℑ",
      Imacr: "Ī",
      imacr: "ī",
      image: "ℑ",
      ImaginaryI: "ⅈ",
      imagline: "ℐ",
      imagpart: "ℑ",
      imath: "ı",
      imof: "⊷",
      imped: "Ƶ",
      Implies: "⇒",
      in: "∈",
      incare: "℅",
      infin: "∞",
      infintie: "⧝",
      inodot: "ı",
      Int: "∬",
      int: "∫",
      intcal: "⊺",
      integers: "ℤ",
      Integral: "∫",
      intercal: "⊺",
      Intersection: "⋂",
      intlarhk: "⨗",
      intprod: "⨼",
      InvisibleComma: "⁣",
      InvisibleTimes: "⁢",
      IOcy: "Ё",
      iocy: "ё",
      Iogon: "Į",
      iogon: "į",
      Iopf: "𝕀",
      iopf: "𝕚",
      Iota: "Ι",
      iota: "ι",
      iprod: "⨼",
      iquest: "¿",
      Iscr: "ℐ",
      iscr: "𝒾",
      isin: "∈",
      isindot: "⋵",
      isinE: "⋹",
      isins: "⋴",
      isinsv: "⋳",
      isinv: "∈",
      it: "⁢",
      Itilde: "Ĩ",
      itilde: "ĩ",
      Iukcy: "І",
      iukcy: "і",
      Iuml: "Ï",
      iuml: "ï",
      Jcirc: "Ĵ",
      jcirc: "ĵ",
      Jcy: "Й",
      jcy: "й",
      Jfr: "𝔍",
      jfr: "𝔧",
      jmath: "ȷ",
      Jopf: "𝕁",
      jopf: "𝕛",
      Jscr: "𝒥",
      jscr: "𝒿",
      Jsercy: "Ј",
      jsercy: "ј",
      Jukcy: "Є",
      jukcy: "є",
      Kappa: "Κ",
      kappa: "κ",
      kappav: "ϰ",
      Kcedil: "Ķ",
      kcedil: "ķ",
      Kcy: "К",
      kcy: "к",
      Kfr: "𝔎",
      kfr: "𝔨",
      kgreen: "ĸ",
      KHcy: "Х",
      khcy: "х",
      KJcy: "Ќ",
      kjcy: "ќ",
      Kopf: "𝕂",
      kopf: "𝕜",
      Kscr: "𝒦",
      kscr: "𝓀",
      lAarr: "⇚",
      Lacute: "Ĺ",
      lacute: "ĺ",
      laemptyv: "⦴",
      lagran: "ℒ",
      Lambda: "Λ",
      lambda: "λ",
      Lang: "⟪",
      lang: "⟨",
      langd: "⦑",
      langle: "⟨",
      lap: "⪅",
      Laplacetrf: "ℒ",
      laquo: "«",
      Larr: "↞",
      lArr: "⇐",
      larr: "←",
      larrb: "⇤",
      larrbfs: "⤟",
      larrfs: "⤝",
      larrhk: "↩",
      larrlp: "↫",
      larrpl: "⤹",
      larrsim: "⥳",
      larrtl: "↢",
      lat: "⪫",
      lAtail: "⤛",
      latail: "⤙",
      late: "⪭",
      lates: "⪭︀",
      lBarr: "⤎",
      lbarr: "⤌",
      lbbrk: "❲",
      lbrace: "{",
      lbrack: "[",
      lbrke: "⦋",
      lbrksld: "⦏",
      lbrkslu: "⦍",
      Lcaron: "Ľ",
      lcaron: "ľ",
      Lcedil: "Ļ",
      lcedil: "ļ",
      lceil: "⌈",
      lcub: "{",
      Lcy: "Л",
      lcy: "л",
      ldca: "⤶",
      ldquo: "“",
      ldquor: "„",
      ldrdhar: "⥧",
      ldrushar: "⥋",
      ldsh: "↲",
      lE: "≦",
      le: "≤",
      LeftAngleBracket: "⟨",
      LeftArrow: "←",
      Leftarrow: "⇐",
      leftarrow: "←",
      LeftArrowBar: "⇤",
      LeftArrowRightArrow: "⇆",
      leftarrowtail: "↢",
      LeftCeiling: "⌈",
      LeftDoubleBracket: "⟦",
      LeftDownTeeVector: "⥡",
      LeftDownVector: "⇃",
      LeftDownVectorBar: "⥙",
      LeftFloor: "⌊",
      leftharpoondown: "↽",
      leftharpoonup: "↼",
      leftleftarrows: "⇇",
      LeftRightArrow: "↔",
      Leftrightarrow: "⇔",
      leftrightarrow: "↔",
      leftrightarrows: "⇆",
      leftrightharpoons: "⇋",
      leftrightsquigarrow: "↭",
      LeftRightVector: "⥎",
      LeftTee: "⊣",
      LeftTeeArrow: "↤",
      LeftTeeVector: "⥚",
      leftthreetimes: "⋋",
      LeftTriangle: "⊲",
      LeftTriangleBar: "⧏",
      LeftTriangleEqual: "⊴",
      LeftUpDownVector: "⥑",
      LeftUpTeeVector: "⥠",
      LeftUpVector: "↿",
      LeftUpVectorBar: "⥘",
      LeftVector: "↼",
      LeftVectorBar: "⥒",
      lEg: "⪋",
      leg: "⋚",
      leq: "≤",
      leqq: "≦",
      leqslant: "⩽",
      les: "⩽",
      lescc: "⪨",
      lesdot: "⩿",
      lesdoto: "⪁",
      lesdotor: "⪃",
      lesg: "⋚︀",
      lesges: "⪓",
      lessapprox: "⪅",
      lessdot: "⋖",
      lesseqgtr: "⋚",
      lesseqqgtr: "⪋",
      LessEqualGreater: "⋚",
      LessFullEqual: "≦",
      LessGreater: "≶",
      lessgtr: "≶",
      LessLess: "⪡",
      lesssim: "≲",
      LessSlantEqual: "⩽",
      LessTilde: "≲",
      lfisht: "⥼",
      lfloor: "⌊",
      Lfr: "𝔏",
      lfr: "𝔩",
      lg: "≶",
      lgE: "⪑",
      lHar: "⥢",
      lhard: "↽",
      lharu: "↼",
      lharul: "⥪",
      lhblk: "▄",
      LJcy: "Љ",
      ljcy: "љ",
      Ll: "⋘",
      ll: "≪",
      llarr: "⇇",
      llcorner: "⌞",
      Lleftarrow: "⇚",
      llhard: "⥫",
      lltri: "◺",
      Lmidot: "Ŀ",
      lmidot: "ŀ",
      lmoust: "⎰",
      lmoustache: "⎰",
      lnap: "⪉",
      lnapprox: "⪉",
      lnE: "≨",
      lne: "⪇",
      lneq: "⪇",
      lneqq: "≨",
      lnsim: "⋦",
      loang: "⟬",
      loarr: "⇽",
      lobrk: "⟦",
      LongLeftArrow: "⟵",
      Longleftarrow: "⟸",
      longleftarrow: "⟵",
      LongLeftRightArrow: "⟷",
      Longleftrightarrow: "⟺",
      longleftrightarrow: "⟷",
      longmapsto: "⟼",
      LongRightArrow: "⟶",
      Longrightarrow: "⟹",
      longrightarrow: "⟶",
      looparrowleft: "↫",
      looparrowright: "↬",
      lopar: "⦅",
      Lopf: "𝕃",
      lopf: "𝕝",
      loplus: "⨭",
      lotimes: "⨴",
      lowast: "∗",
      lowbar: "_",
      LowerLeftArrow: "↙",
      LowerRightArrow: "↘",
      loz: "◊",
      lozenge: "◊",
      lozf: "⧫",
      lpar: "(",
      lparlt: "⦓",
      lrarr: "⇆",
      lrcorner: "⌟",
      lrhar: "⇋",
      lrhard: "⥭",
      lrm: "‎",
      lrtri: "⊿",
      lsaquo: "‹",
      Lscr: "ℒ",
      lscr: "𝓁",
      Lsh: "↰",
      lsh: "↰",
      lsim: "≲",
      lsime: "⪍",
      lsimg: "⪏",
      lsqb: "[",
      lsquo: "‘",
      lsquor: "‚",
      Lstrok: "Ł",
      lstrok: "ł",
      Lt: "≪",
      LT: "<",
      lt: "<",
      ltcc: "⪦",
      ltcir: "⩹",
      ltdot: "⋖",
      lthree: "⋋",
      ltimes: "⋉",
      ltlarr: "⥶",
      ltquest: "⩻",
      ltri: "◃",
      ltrie: "⊴",
      ltrif: "◂",
      ltrPar: "⦖",
      lurdshar: "⥊",
      luruhar: "⥦",
      lvertneqq: "≨︀",
      lvnE: "≨︀",
      macr: "¯",
      male: "♂",
      malt: "✠",
      maltese: "✠",
      Map: "⤅",
      map: "↦",
      mapsto: "↦",
      mapstodown: "↧",
      mapstoleft: "↤",
      mapstoup: "↥",
      marker: "▮",
      mcomma: "⨩",
      Mcy: "М",
      mcy: "м",
      mdash: "—",
      mDDot: "∺",
      measuredangle: "∡",
      MediumSpace: " ",
      Mellintrf: "ℳ",
      Mfr: "𝔐",
      mfr: "𝔪",
      mho: "℧",
      micro: "µ",
      mid: "∣",
      midast: "*",
      midcir: "⫰",
      middot: "·",
      minus: "−",
      minusb: "⊟",
      minusd: "∸",
      minusdu: "⨪",
      MinusPlus: "∓",
      mlcp: "⫛",
      mldr: "…",
      mnplus: "∓",
      models: "⊧",
      Mopf: "𝕄",
      mopf: "𝕞",
      mp: "∓",
      Mscr: "ℳ",
      mscr: "𝓂",
      mstpos: "∾",
      Mu: "Μ",
      mu: "μ",
      multimap: "⊸",
      mumap: "⊸",
      nabla: "∇",
      Nacute: "Ń",
      nacute: "ń",
      nang: "∠⃒",
      nap: "≉",
      napE: "⩰̸",
      napid: "≋̸",
      napos: "ŉ",
      napprox: "≉",
      natur: "♮",
      natural: "♮",
      naturals: "ℕ",
      nbsp: " ",
      nbump: "≎̸",
      nbumpe: "≏̸",
      ncap: "⩃",
      Ncaron: "Ň",
      ncaron: "ň",
      Ncedil: "Ņ",
      ncedil: "ņ",
      ncong: "≇",
      ncongdot: "⩭̸",
      ncup: "⩂",
      Ncy: "Н",
      ncy: "н",
      ndash: "–",
      ne: "≠",
      nearhk: "⤤",
      neArr: "⇗",
      nearr: "↗",
      nearrow: "↗",
      nedot: "≐̸",
      NegativeMediumSpace: "​",
      NegativeThickSpace: "​",
      NegativeThinSpace: "​",
      NegativeVeryThinSpace: "​",
      nequiv: "≢",
      nesear: "⤨",
      nesim: "≂̸",
      NestedGreaterGreater: "≫",
      NestedLessLess: "≪",
      NewLine: `
`,
      nexist: "∄",
      nexists: "∄",
      Nfr: "𝔑",
      nfr: "𝔫",
      ngE: "≧̸",
      nge: "≱",
      ngeq: "≱",
      ngeqq: "≧̸",
      ngeqslant: "⩾̸",
      nges: "⩾̸",
      nGg: "⋙̸",
      ngsim: "≵",
      nGt: "≫⃒",
      ngt: "≯",
      ngtr: "≯",
      nGtv: "≫̸",
      nhArr: "⇎",
      nharr: "↮",
      nhpar: "⫲",
      ni: "∋",
      nis: "⋼",
      nisd: "⋺",
      niv: "∋",
      NJcy: "Њ",
      njcy: "њ",
      nlArr: "⇍",
      nlarr: "↚",
      nldr: "‥",
      nlE: "≦̸",
      nle: "≰",
      nLeftarrow: "⇍",
      nleftarrow: "↚",
      nLeftrightarrow: "⇎",
      nleftrightarrow: "↮",
      nleq: "≰",
      nleqq: "≦̸",
      nleqslant: "⩽̸",
      nles: "⩽̸",
      nless: "≮",
      nLl: "⋘̸",
      nlsim: "≴",
      nLt: "≪⃒",
      nlt: "≮",
      nltri: "⋪",
      nltrie: "⋬",
      nLtv: "≪̸",
      nmid: "∤",
      NoBreak: "⁠",
      NonBreakingSpace: " ",
      Nopf: "ℕ",
      nopf: "𝕟",
      Not: "⫬",
      not: "¬",
      NotCongruent: "≢",
      NotCupCap: "≭",
      NotDoubleVerticalBar: "∦",
      NotElement: "∉",
      NotEqual: "≠",
      NotEqualTilde: "≂̸",
      NotExists: "∄",
      NotGreater: "≯",
      NotGreaterEqual: "≱",
      NotGreaterFullEqual: "≧̸",
      NotGreaterGreater: "≫̸",
      NotGreaterLess: "≹",
      NotGreaterSlantEqual: "⩾̸",
      NotGreaterTilde: "≵",
      NotHumpDownHump: "≎̸",
      NotHumpEqual: "≏̸",
      notin: "∉",
      notindot: "⋵̸",
      notinE: "⋹̸",
      notinva: "∉",
      notinvb: "⋷",
      notinvc: "⋶",
      NotLeftTriangle: "⋪",
      NotLeftTriangleBar: "⧏̸",
      NotLeftTriangleEqual: "⋬",
      NotLess: "≮",
      NotLessEqual: "≰",
      NotLessGreater: "≸",
      NotLessLess: "≪̸",
      NotLessSlantEqual: "⩽̸",
      NotLessTilde: "≴",
      NotNestedGreaterGreater: "⪢̸",
      NotNestedLessLess: "⪡̸",
      notni: "∌",
      notniva: "∌",
      notnivb: "⋾",
      notnivc: "⋽",
      NotPrecedes: "⊀",
      NotPrecedesEqual: "⪯̸",
      NotPrecedesSlantEqual: "⋠",
      NotReverseElement: "∌",
      NotRightTriangle: "⋫",
      NotRightTriangleBar: "⧐̸",
      NotRightTriangleEqual: "⋭",
      NotSquareSubset: "⊏̸",
      NotSquareSubsetEqual: "⋢",
      NotSquareSuperset: "⊐̸",
      NotSquareSupersetEqual: "⋣",
      NotSubset: "⊂⃒",
      NotSubsetEqual: "⊈",
      NotSucceeds: "⊁",
      NotSucceedsEqual: "⪰̸",
      NotSucceedsSlantEqual: "⋡",
      NotSucceedsTilde: "≿̸",
      NotSuperset: "⊃⃒",
      NotSupersetEqual: "⊉",
      NotTilde: "≁",
      NotTildeEqual: "≄",
      NotTildeFullEqual: "≇",
      NotTildeTilde: "≉",
      NotVerticalBar: "∤",
      npar: "∦",
      nparallel: "∦",
      nparsl: "⫽⃥",
      npart: "∂̸",
      npolint: "⨔",
      npr: "⊀",
      nprcue: "⋠",
      npre: "⪯̸",
      nprec: "⊀",
      npreceq: "⪯̸",
      nrArr: "⇏",
      nrarr: "↛",
      nrarrc: "⤳̸",
      nrarrw: "↝̸",
      nRightarrow: "⇏",
      nrightarrow: "↛",
      nrtri: "⋫",
      nrtrie: "⋭",
      nsc: "⊁",
      nsccue: "⋡",
      nsce: "⪰̸",
      Nscr: "𝒩",
      nscr: "𝓃",
      nshortmid: "∤",
      nshortparallel: "∦",
      nsim: "≁",
      nsime: "≄",
      nsimeq: "≄",
      nsmid: "∤",
      nspar: "∦",
      nsqsube: "⋢",
      nsqsupe: "⋣",
      nsub: "⊄",
      nsubE: "⫅̸",
      nsube: "⊈",
      nsubset: "⊂⃒",
      nsubseteq: "⊈",
      nsubseteqq: "⫅̸",
      nsucc: "⊁",
      nsucceq: "⪰̸",
      nsup: "⊅",
      nsupE: "⫆̸",
      nsupe: "⊉",
      nsupset: "⊃⃒",
      nsupseteq: "⊉",
      nsupseteqq: "⫆̸",
      ntgl: "≹",
      Ntilde: "Ñ",
      ntilde: "ñ",
      ntlg: "≸",
      ntriangleleft: "⋪",
      ntrianglelefteq: "⋬",
      ntriangleright: "⋫",
      ntrianglerighteq: "⋭",
      Nu: "Ν",
      nu: "ν",
      num: "#",
      numero: "№",
      numsp: " ",
      nvap: "≍⃒",
      nVDash: "⊯",
      nVdash: "⊮",
      nvDash: "⊭",
      nvdash: "⊬",
      nvge: "≥⃒",
      nvgt: ">⃒",
      nvHarr: "⤄",
      nvinfin: "⧞",
      nvlArr: "⤂",
      nvle: "≤⃒",
      nvlt: "<⃒",
      nvltrie: "⊴⃒",
      nvrArr: "⤃",
      nvrtrie: "⊵⃒",
      nvsim: "∼⃒",
      nwarhk: "⤣",
      nwArr: "⇖",
      nwarr: "↖",
      nwarrow: "↖",
      nwnear: "⤧",
      Oacute: "Ó",
      oacute: "ó",
      oast: "⊛",
      ocir: "⊚",
      Ocirc: "Ô",
      ocirc: "ô",
      Ocy: "О",
      ocy: "о",
      odash: "⊝",
      Odblac: "Ő",
      odblac: "ő",
      odiv: "⨸",
      odot: "⊙",
      odsold: "⦼",
      OElig: "Œ",
      oelig: "œ",
      ofcir: "⦿",
      Ofr: "𝔒",
      ofr: "𝔬",
      ogon: "˛",
      Ograve: "Ò",
      ograve: "ò",
      ogt: "⧁",
      ohbar: "⦵",
      ohm: "Ω",
      oint: "∮",
      olarr: "↺",
      olcir: "⦾",
      olcross: "⦻",
      oline: "‾",
      olt: "⧀",
      Omacr: "Ō",
      omacr: "ō",
      Omega: "Ω",
      omega: "ω",
      Omicron: "Ο",
      omicron: "ο",
      omid: "⦶",
      ominus: "⊖",
      Oopf: "𝕆",
      oopf: "𝕠",
      opar: "⦷",
      OpenCurlyDoubleQuote: "“",
      OpenCurlyQuote: "‘",
      operp: "⦹",
      oplus: "⊕",
      Or: "⩔",
      or: "∨",
      orarr: "↻",
      ord: "⩝",
      order: "ℴ",
      orderof: "ℴ",
      ordf: "ª",
      ordm: "º",
      origof: "⊶",
      oror: "⩖",
      orslope: "⩗",
      orv: "⩛",
      oS: "Ⓢ",
      Oscr: "𝒪",
      oscr: "ℴ",
      Oslash: "Ø",
      oslash: "ø",
      osol: "⊘",
      Otilde: "Õ",
      otilde: "õ",
      Otimes: "⨷",
      otimes: "⊗",
      otimesas: "⨶",
      Ouml: "Ö",
      ouml: "ö",
      ovbar: "⌽",
      OverBar: "‾",
      OverBrace: "⏞",
      OverBracket: "⎴",
      OverParenthesis: "⏜",
      par: "∥",
      para: "¶",
      parallel: "∥",
      parsim: "⫳",
      parsl: "⫽",
      part: "∂",
      PartialD: "∂",
      Pcy: "П",
      pcy: "п",
      percnt: "%",
      period: ".",
      permil: "‰",
      perp: "⊥",
      pertenk: "‱",
      Pfr: "𝔓",
      pfr: "𝔭",
      Phi: "Φ",
      phi: "φ",
      phiv: "ϕ",
      phmmat: "ℳ",
      phone: "☎",
      Pi: "Π",
      pi: "π",
      pitchfork: "⋔",
      piv: "ϖ",
      planck: "ℏ",
      planckh: "ℎ",
      plankv: "ℏ",
      plus: "+",
      plusacir: "⨣",
      plusb: "⊞",
      pluscir: "⨢",
      plusdo: "∔",
      plusdu: "⨥",
      pluse: "⩲",
      PlusMinus: "±",
      plusmn: "±",
      plussim: "⨦",
      plustwo: "⨧",
      pm: "±",
      Poincareplane: "ℌ",
      pointint: "⨕",
      Popf: "ℙ",
      popf: "𝕡",
      pound: "£",
      Pr: "⪻",
      pr: "≺",
      prap: "⪷",
      prcue: "≼",
      prE: "⪳",
      pre: "⪯",
      prec: "≺",
      precapprox: "⪷",
      preccurlyeq: "≼",
      Precedes: "≺",
      PrecedesEqual: "⪯",
      PrecedesSlantEqual: "≼",
      PrecedesTilde: "≾",
      preceq: "⪯",
      precnapprox: "⪹",
      precneqq: "⪵",
      precnsim: "⋨",
      precsim: "≾",
      Prime: "″",
      prime: "′",
      primes: "ℙ",
      prnap: "⪹",
      prnE: "⪵",
      prnsim: "⋨",
      prod: "∏",
      Product: "∏",
      profalar: "⌮",
      profline: "⌒",
      profsurf: "⌓",
      prop: "∝",
      Proportion: "∷",
      Proportional: "∝",
      propto: "∝",
      prsim: "≾",
      prurel: "⊰",
      Pscr: "𝒫",
      pscr: "𝓅",
      Psi: "Ψ",
      psi: "ψ",
      puncsp: " ",
      Qfr: "𝔔",
      qfr: "𝔮",
      qint: "⨌",
      Qopf: "ℚ",
      qopf: "𝕢",
      qprime: "⁗",
      Qscr: "𝒬",
      qscr: "𝓆",
      quaternions: "ℍ",
      quatint: "⨖",
      quest: "?",
      questeq: "≟",
      QUOT: '"',
      quot: '"',
      rAarr: "⇛",
      race: "∽̱",
      Racute: "Ŕ",
      racute: "ŕ",
      radic: "√",
      raemptyv: "⦳",
      Rang: "⟫",
      rang: "⟩",
      rangd: "⦒",
      range: "⦥",
      rangle: "⟩",
      raquo: "»",
      Rarr: "↠",
      rArr: "⇒",
      rarr: "→",
      rarrap: "⥵",
      rarrb: "⇥",
      rarrbfs: "⤠",
      rarrc: "⤳",
      rarrfs: "⤞",
      rarrhk: "↪",
      rarrlp: "↬",
      rarrpl: "⥅",
      rarrsim: "⥴",
      Rarrtl: "⤖",
      rarrtl: "↣",
      rarrw: "↝",
      rAtail: "⤜",
      ratail: "⤚",
      ratio: "∶",
      rationals: "ℚ",
      RBarr: "⤐",
      rBarr: "⤏",
      rbarr: "⤍",
      rbbrk: "❳",
      rbrace: "}",
      rbrack: "]",
      rbrke: "⦌",
      rbrksld: "⦎",
      rbrkslu: "⦐",
      Rcaron: "Ř",
      rcaron: "ř",
      Rcedil: "Ŗ",
      rcedil: "ŗ",
      rceil: "⌉",
      rcub: "}",
      Rcy: "Р",
      rcy: "р",
      rdca: "⤷",
      rdldhar: "⥩",
      rdquo: "”",
      rdquor: "”",
      rdsh: "↳",
      Re: "ℜ",
      real: "ℜ",
      realine: "ℛ",
      realpart: "ℜ",
      reals: "ℝ",
      rect: "▭",
      REG: "®",
      reg: "®",
      ReverseElement: "∋",
      ReverseEquilibrium: "⇋",
      ReverseUpEquilibrium: "⥯",
      rfisht: "⥽",
      rfloor: "⌋",
      Rfr: "ℜ",
      rfr: "𝔯",
      rHar: "⥤",
      rhard: "⇁",
      rharu: "⇀",
      rharul: "⥬",
      Rho: "Ρ",
      rho: "ρ",
      rhov: "ϱ",
      RightAngleBracket: "⟩",
      RightArrow: "→",
      Rightarrow: "⇒",
      rightarrow: "→",
      RightArrowBar: "⇥",
      RightArrowLeftArrow: "⇄",
      rightarrowtail: "↣",
      RightCeiling: "⌉",
      RightDoubleBracket: "⟧",
      RightDownTeeVector: "⥝",
      RightDownVector: "⇂",
      RightDownVectorBar: "⥕",
      RightFloor: "⌋",
      rightharpoondown: "⇁",
      rightharpoonup: "⇀",
      rightleftarrows: "⇄",
      rightleftharpoons: "⇌",
      rightrightarrows: "⇉",
      rightsquigarrow: "↝",
      RightTee: "⊢",
      RightTeeArrow: "↦",
      RightTeeVector: "⥛",
      rightthreetimes: "⋌",
      RightTriangle: "⊳",
      RightTriangleBar: "⧐",
      RightTriangleEqual: "⊵",
      RightUpDownVector: "⥏",
      RightUpTeeVector: "⥜",
      RightUpVector: "↾",
      RightUpVectorBar: "⥔",
      RightVector: "⇀",
      RightVectorBar: "⥓",
      ring: "˚",
      risingdotseq: "≓",
      rlarr: "⇄",
      rlhar: "⇌",
      rlm: "‏",
      rmoust: "⎱",
      rmoustache: "⎱",
      rnmid: "⫮",
      roang: "⟭",
      roarr: "⇾",
      robrk: "⟧",
      ropar: "⦆",
      Ropf: "ℝ",
      ropf: "𝕣",
      roplus: "⨮",
      rotimes: "⨵",
      RoundImplies: "⥰",
      rpar: ")",
      rpargt: "⦔",
      rppolint: "⨒",
      rrarr: "⇉",
      Rrightarrow: "⇛",
      rsaquo: "›",
      Rscr: "ℛ",
      rscr: "𝓇",
      Rsh: "↱",
      rsh: "↱",
      rsqb: "]",
      rsquo: "’",
      rsquor: "’",
      rthree: "⋌",
      rtimes: "⋊",
      rtri: "▹",
      rtrie: "⊵",
      rtrif: "▸",
      rtriltri: "⧎",
      RuleDelayed: "⧴",
      ruluhar: "⥨",
      rx: "℞",
      Sacute: "Ś",
      sacute: "ś",
      sbquo: "‚",
      Sc: "⪼",
      sc: "≻",
      scap: "⪸",
      Scaron: "Š",
      scaron: "š",
      sccue: "≽",
      scE: "⪴",
      sce: "⪰",
      Scedil: "Ş",
      scedil: "ş",
      Scirc: "Ŝ",
      scirc: "ŝ",
      scnap: "⪺",
      scnE: "⪶",
      scnsim: "⋩",
      scpolint: "⨓",
      scsim: "≿",
      Scy: "С",
      scy: "с",
      sdot: "⋅",
      sdotb: "⊡",
      sdote: "⩦",
      searhk: "⤥",
      seArr: "⇘",
      searr: "↘",
      searrow: "↘",
      sect: "§",
      semi: ";",
      seswar: "⤩",
      setminus: "∖",
      setmn: "∖",
      sext: "✶",
      Sfr: "𝔖",
      sfr: "𝔰",
      sfrown: "⌢",
      sharp: "♯",
      SHCHcy: "Щ",
      shchcy: "щ",
      SHcy: "Ш",
      shcy: "ш",
      ShortDownArrow: "↓",
      ShortLeftArrow: "←",
      shortmid: "∣",
      shortparallel: "∥",
      ShortRightArrow: "→",
      ShortUpArrow: "↑",
      shy: "­",
      Sigma: "Σ",
      sigma: "σ",
      sigmaf: "ς",
      sigmav: "ς",
      sim: "∼",
      simdot: "⩪",
      sime: "≃",
      simeq: "≃",
      simg: "⪞",
      simgE: "⪠",
      siml: "⪝",
      simlE: "⪟",
      simne: "≆",
      simplus: "⨤",
      simrarr: "⥲",
      slarr: "←",
      SmallCircle: "∘",
      smallsetminus: "∖",
      smashp: "⨳",
      smeparsl: "⧤",
      smid: "∣",
      smile: "⌣",
      smt: "⪪",
      smte: "⪬",
      smtes: "⪬︀",
      SOFTcy: "Ь",
      softcy: "ь",
      sol: "/",
      solb: "⧄",
      solbar: "⌿",
      Sopf: "𝕊",
      sopf: "𝕤",
      spades: "♠",
      spadesuit: "♠",
      spar: "∥",
      sqcap: "⊓",
      sqcaps: "⊓︀",
      sqcup: "⊔",
      sqcups: "⊔︀",
      Sqrt: "√",
      sqsub: "⊏",
      sqsube: "⊑",
      sqsubset: "⊏",
      sqsubseteq: "⊑",
      sqsup: "⊐",
      sqsupe: "⊒",
      sqsupset: "⊐",
      sqsupseteq: "⊒",
      squ: "□",
      Square: "□",
      square: "□",
      SquareIntersection: "⊓",
      SquareSubset: "⊏",
      SquareSubsetEqual: "⊑",
      SquareSuperset: "⊐",
      SquareSupersetEqual: "⊒",
      SquareUnion: "⊔",
      squarf: "▪",
      squf: "▪",
      srarr: "→",
      Sscr: "𝒮",
      sscr: "𝓈",
      ssetmn: "∖",
      ssmile: "⌣",
      sstarf: "⋆",
      Star: "⋆",
      star: "☆",
      starf: "★",
      straightepsilon: "ϵ",
      straightphi: "ϕ",
      strns: "¯",
      Sub: "⋐",
      sub: "⊂",
      subdot: "⪽",
      subE: "⫅",
      sube: "⊆",
      subedot: "⫃",
      submult: "⫁",
      subnE: "⫋",
      subne: "⊊",
      subplus: "⪿",
      subrarr: "⥹",
      Subset: "⋐",
      subset: "⊂",
      subseteq: "⊆",
      subseteqq: "⫅",
      SubsetEqual: "⊆",
      subsetneq: "⊊",
      subsetneqq: "⫋",
      subsim: "⫇",
      subsub: "⫕",
      subsup: "⫓",
      succ: "≻",
      succapprox: "⪸",
      succcurlyeq: "≽",
      Succeeds: "≻",
      SucceedsEqual: "⪰",
      SucceedsSlantEqual: "≽",
      SucceedsTilde: "≿",
      succeq: "⪰",
      succnapprox: "⪺",
      succneqq: "⪶",
      succnsim: "⋩",
      succsim: "≿",
      SuchThat: "∋",
      Sum: "∑",
      sum: "∑",
      sung: "♪",
      Sup: "⋑",
      sup: "⊃",
      sup1: "¹",
      sup2: "²",
      sup3: "³",
      supdot: "⪾",
      supdsub: "⫘",
      supE: "⫆",
      supe: "⊇",
      supedot: "⫄",
      Superset: "⊃",
      SupersetEqual: "⊇",
      suphsol: "⟉",
      suphsub: "⫗",
      suplarr: "⥻",
      supmult: "⫂",
      supnE: "⫌",
      supne: "⊋",
      supplus: "⫀",
      Supset: "⋑",
      supset: "⊃",
      supseteq: "⊇",
      supseteqq: "⫆",
      supsetneq: "⊋",
      supsetneqq: "⫌",
      supsim: "⫈",
      supsub: "⫔",
      supsup: "⫖",
      swarhk: "⤦",
      swArr: "⇙",
      swarr: "↙",
      swarrow: "↙",
      swnwar: "⤪",
      szlig: "ß",
      Tab: "	",
      target: "⌖",
      Tau: "Τ",
      tau: "τ",
      tbrk: "⎴",
      Tcaron: "Ť",
      tcaron: "ť",
      Tcedil: "Ţ",
      tcedil: "ţ",
      Tcy: "Т",
      tcy: "т",
      tdot: "⃛",
      telrec: "⌕",
      Tfr: "𝔗",
      tfr: "𝔱",
      there4: "∴",
      Therefore: "∴",
      therefore: "∴",
      Theta: "Θ",
      theta: "θ",
      thetasym: "ϑ",
      thetav: "ϑ",
      thickapprox: "≈",
      thicksim: "∼",
      ThickSpace: "  ",
      thinsp: " ",
      ThinSpace: " ",
      thkap: "≈",
      thksim: "∼",
      THORN: "Þ",
      thorn: "þ",
      Tilde: "∼",
      tilde: "˜",
      TildeEqual: "≃",
      TildeFullEqual: "≅",
      TildeTilde: "≈",
      times: "×",
      timesb: "⊠",
      timesbar: "⨱",
      timesd: "⨰",
      tint: "∭",
      toea: "⤨",
      top: "⊤",
      topbot: "⌶",
      topcir: "⫱",
      Topf: "𝕋",
      topf: "𝕥",
      topfork: "⫚",
      tosa: "⤩",
      tprime: "‴",
      TRADE: "™",
      trade: "™",
      triangle: "▵",
      triangledown: "▿",
      triangleleft: "◃",
      trianglelefteq: "⊴",
      triangleq: "≜",
      triangleright: "▹",
      trianglerighteq: "⊵",
      tridot: "◬",
      trie: "≜",
      triminus: "⨺",
      TripleDot: "⃛",
      triplus: "⨹",
      trisb: "⧍",
      tritime: "⨻",
      trpezium: "⏢",
      Tscr: "𝒯",
      tscr: "𝓉",
      TScy: "Ц",
      tscy: "ц",
      TSHcy: "Ћ",
      tshcy: "ћ",
      Tstrok: "Ŧ",
      tstrok: "ŧ",
      twixt: "≬",
      twoheadleftarrow: "↞",
      twoheadrightarrow: "↠",
      Uacute: "Ú",
      uacute: "ú",
      Uarr: "↟",
      uArr: "⇑",
      uarr: "↑",
      Uarrocir: "⥉",
      Ubrcy: "Ў",
      ubrcy: "ў",
      Ubreve: "Ŭ",
      ubreve: "ŭ",
      Ucirc: "Û",
      ucirc: "û",
      Ucy: "У",
      ucy: "у",
      udarr: "⇅",
      Udblac: "Ű",
      udblac: "ű",
      udhar: "⥮",
      ufisht: "⥾",
      Ufr: "𝔘",
      ufr: "𝔲",
      Ugrave: "Ù",
      ugrave: "ù",
      uHar: "⥣",
      uharl: "↿",
      uharr: "↾",
      uhblk: "▀",
      ulcorn: "⌜",
      ulcorner: "⌜",
      ulcrop: "⌏",
      ultri: "◸",
      Umacr: "Ū",
      umacr: "ū",
      uml: "¨",
      UnderBar: "_",
      UnderBrace: "⏟",
      UnderBracket: "⎵",
      UnderParenthesis: "⏝",
      Union: "⋃",
      UnionPlus: "⊎",
      Uogon: "Ų",
      uogon: "ų",
      Uopf: "𝕌",
      uopf: "𝕦",
      UpArrow: "↑",
      Uparrow: "⇑",
      uparrow: "↑",
      UpArrowBar: "⤒",
      UpArrowDownArrow: "⇅",
      UpDownArrow: "↕",
      Updownarrow: "⇕",
      updownarrow: "↕",
      UpEquilibrium: "⥮",
      upharpoonleft: "↿",
      upharpoonright: "↾",
      uplus: "⊎",
      UpperLeftArrow: "↖",
      UpperRightArrow: "↗",
      Upsi: "ϒ",
      upsi: "υ",
      upsih: "ϒ",
      Upsilon: "Υ",
      upsilon: "υ",
      UpTee: "⊥",
      UpTeeArrow: "↥",
      upuparrows: "⇈",
      urcorn: "⌝",
      urcorner: "⌝",
      urcrop: "⌎",
      Uring: "Ů",
      uring: "ů",
      urtri: "◹",
      Uscr: "𝒰",
      uscr: "𝓊",
      utdot: "⋰",
      Utilde: "Ũ",
      utilde: "ũ",
      utri: "▵",
      utrif: "▴",
      uuarr: "⇈",
      Uuml: "Ü",
      uuml: "ü",
      uwangle: "⦧",
      vangrt: "⦜",
      varepsilon: "ϵ",
      varkappa: "ϰ",
      varnothing: "∅",
      varphi: "ϕ",
      varpi: "ϖ",
      varpropto: "∝",
      vArr: "⇕",
      varr: "↕",
      varrho: "ϱ",
      varsigma: "ς",
      varsubsetneq: "⊊︀",
      varsubsetneqq: "⫋︀",
      varsupsetneq: "⊋︀",
      varsupsetneqq: "⫌︀",
      vartheta: "ϑ",
      vartriangleleft: "⊲",
      vartriangleright: "⊳",
      Vbar: "⫫",
      vBar: "⫨",
      vBarv: "⫩",
      Vcy: "В",
      vcy: "в",
      VDash: "⊫",
      Vdash: "⊩",
      vDash: "⊨",
      vdash: "⊢",
      Vdashl: "⫦",
      Vee: "⋁",
      vee: "∨",
      veebar: "⊻",
      veeeq: "≚",
      vellip: "⋮",
      Verbar: "‖",
      verbar: "|",
      Vert: "‖",
      vert: "|",
      VerticalBar: "∣",
      VerticalLine: "|",
      VerticalSeparator: "❘",
      VerticalTilde: "≀",
      VeryThinSpace: " ",
      Vfr: "𝔙",
      vfr: "𝔳",
      vltri: "⊲",
      vnsub: "⊂⃒",
      vnsup: "⊃⃒",
      Vopf: "𝕍",
      vopf: "𝕧",
      vprop: "∝",
      vrtri: "⊳",
      Vscr: "𝒱",
      vscr: "𝓋",
      vsubnE: "⫋︀",
      vsubne: "⊊︀",
      vsupnE: "⫌︀",
      vsupne: "⊋︀",
      Vvdash: "⊪",
      vzigzag: "⦚",
      Wcirc: "Ŵ",
      wcirc: "ŵ",
      wedbar: "⩟",
      Wedge: "⋀",
      wedge: "∧",
      wedgeq: "≙",
      weierp: "℘",
      Wfr: "𝔚",
      wfr: "𝔴",
      Wopf: "𝕎",
      wopf: "𝕨",
      wp: "℘",
      wr: "≀",
      wreath: "≀",
      Wscr: "𝒲",
      wscr: "𝓌",
      xcap: "⋂",
      xcirc: "◯",
      xcup: "⋃",
      xdtri: "▽",
      Xfr: "𝔛",
      xfr: "𝔵",
      xhArr: "⟺",
      xharr: "⟷",
      Xi: "Ξ",
      xi: "ξ",
      xlArr: "⟸",
      xlarr: "⟵",
      xmap: "⟼",
      xnis: "⋻",
      xodot: "⨀",
      Xopf: "𝕏",
      xopf: "𝕩",
      xoplus: "⨁",
      xotime: "⨂",
      xrArr: "⟹",
      xrarr: "⟶",
      Xscr: "𝒳",
      xscr: "𝓍",
      xsqcup: "⨆",
      xuplus: "⨄",
      xutri: "△",
      xvee: "⋁",
      xwedge: "⋀",
      Yacute: "Ý",
      yacute: "ý",
      YAcy: "Я",
      yacy: "я",
      Ycirc: "Ŷ",
      ycirc: "ŷ",
      Ycy: "Ы",
      ycy: "ы",
      yen: "¥",
      Yfr: "𝔜",
      yfr: "𝔶",
      YIcy: "Ї",
      yicy: "ї",
      Yopf: "𝕐",
      yopf: "𝕪",
      Yscr: "𝒴",
      yscr: "𝓎",
      YUcy: "Ю",
      yucy: "ю",
      Yuml: "Ÿ",
      yuml: "ÿ",
      Zacute: "Ź",
      zacute: "ź",
      Zcaron: "Ž",
      zcaron: "ž",
      Zcy: "З",
      zcy: "з",
      Zdot: "Ż",
      zdot: "ż",
      zeetrf: "ℨ",
      ZeroWidthSpace: "​",
      Zeta: "Ζ",
      zeta: "ζ",
      Zfr: "ℨ",
      zfr: "𝔷",
      ZHcy: "Ж",
      zhcy: "ж",
      zigrarr: "⇝",
      Zopf: "ℤ",
      zopf: "𝕫",
      Zscr: "𝒵",
      zscr: "𝓏",
      zwj: "‍",
      zwnj: "‌"
    }), t.entityMap = t.HTML_ENTITIES;
  }(Tf)), Tf;
}
var la = {}, _b;
function Qk() {
  if (_b) return la;
  _b = 1;
  var t = hc().NAMESPACE, e = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, n = new RegExp("[\\-\\.0-9" + e.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"), r = new RegExp("^" + e.source + n.source + "*(?::" + e.source + n.source + "*)?$"), i = 0, o = 1, a = 2, s = 3, c = 4, l = 5, u = 6, f = 7;
  function d(C, R) {
    this.message = C, this.locator = R, Error.captureStackTrace && Error.captureStackTrace(this, d);
  }
  d.prototype = new Error(), d.prototype.name = d.name;
  function h() {
  }
  h.prototype = {
    parse: function(C, R, j) {
      var T = this.domBuilder;
      T.startDocument(), _(R, R = {}), p(
        C,
        R,
        j,
        T,
        this.errorHandler
      ), T.endDocument();
    }
  };
  function p(C, R, j, T, k) {
    function w(ne) {
      if (ne > 65535) {
        ne -= 65536;
        var Z = 55296 + (ne >> 10), L = 56320 + (ne & 1023);
        return String.fromCharCode(Z, L);
      } else
        return String.fromCharCode(ne);
    }
    function $(ne) {
      var Z = ne.slice(1, -1);
      return Object.hasOwnProperty.call(j, Z) ? j[Z] : Z.charAt(0) === "#" ? w(parseInt(Z.substr(1).replace("x", "0x"))) : (k.error("entity not found:" + ne), ne);
    }
    function N(ne) {
      if (ne > G) {
        var Z = C.substring(G, ne).replace(/&#?\w+;/g, $);
        W && M(G), T.characters(Z, 0, ne - G), G = ne;
      }
    }
    function M(ne, Z) {
      for (; ne >= P && (Z = te.exec(C)); )
        K = Z.index, P = K + Z[0].length, W.lineNumber++;
      W.columnNumber = ne - K + 1;
    }
    for (var K = 0, P = 0, te = /.*(?:\r\n?|\n)|.*$/g, W = T.locator, B = [{ currentNSMap: R }], se = {}, G = 0; ; ) {
      try {
        var J = C.indexOf("<", G);
        if (J < 0) {
          if (!C.substr(G).match(/^\s*$/)) {
            var ce = T.doc, he = ce.createTextNode(C.substr(G));
            ce.appendChild(he), T.currentElement = he;
          }
          return;
        }
        switch (J > G && N(J), C.charAt(J + 1)) {
          case "/":
            var q = C.indexOf(">", J + 3), fe = C.substring(J + 2, q).replace(/[ \t\n\r]+$/g, ""), me = B.pop();
            q < 0 ? (fe = C.substring(J + 2).replace(/[\s<].*/, ""), k.error("end tag name: " + fe + " is not complete:" + me.tagName), q = J + 1 + fe.length) : fe.match(/\s</) && (fe = fe.replace(/[\s<].*/, ""), k.error("end tag name: " + fe + " maybe not complete"), q = J + 1 + fe.length);
            var de = me.localNSMap, pe = me.tagName == fe, ye = pe || me.tagName && me.tagName.toLowerCase() == fe.toLowerCase();
            if (ye) {
              if (T.endElement(me.uri, me.localName, fe), de)
                for (var be in de)
                  Object.prototype.hasOwnProperty.call(de, be) && T.endPrefixMapping(be);
              pe || k.fatalError("end tag name: " + fe + " is not match the current start tagName:" + me.tagName);
            } else
              B.push(me);
            q++;
            break;
          // end elment
          case "?":
            W && M(J), q = E(C, J, T);
            break;
          case "!":
            W && M(J), q = x(C, J, T, k);
            break;
          default:
            W && M(J);
            var D = new S(), V = B[B.length - 1].currentNSMap, q = g(C, J, D, V, $, k), I = D.length;
            if (!D.closed && v(C, q, D.tagName, se) && (D.closed = !0, j.nbsp || k.warning("unclosed xml attribute")), W && I) {
              for (var O = m(W, {}), z = 0; z < I; z++) {
                var ie = D[z];
                M(ie.offset), ie.locator = m(W, {});
              }
              T.locator = O, y(D, T, V) && B.push(D), T.locator = W;
            } else
              y(D, T, V) && B.push(D);
            t.isHTML(D.uri) && !D.closed ? q = b(C, q, D.tagName, $, T) : q++;
        }
      } catch (ne) {
        if (ne instanceof d)
          throw ne;
        k.error("element parse error: " + ne), q = -1;
      }
      q > G ? G = q : N(Math.max(J, G) + 1);
    }
  }
  function m(C, R) {
    return R.lineNumber = C.lineNumber, R.columnNumber = C.columnNumber, R;
  }
  function g(C, R, j, T, k, w) {
    function $(W, B, se) {
      j.attributeNames.hasOwnProperty(W) && w.fatalError("Attribute " + W + " redefined"), j.addValue(
        W,
        // @see https://www.w3.org/TR/xml/#AVNormalize
        // since the xmldom sax parser does not "interpret" DTD the following is not implemented:
        // - recursive replacement of (DTD) entity references
        // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA
        B.replace(/[\t\n\r]/g, " ").replace(/&#?\w+;/g, k),
        se
      );
    }
    for (var N, M, K = ++R, P = i; ; ) {
      var te = C.charAt(K);
      switch (te) {
        case "=":
          if (P === o)
            N = C.slice(R, K), P = s;
          else if (P === a)
            P = s;
          else
            throw new Error("attribute equal must after attrName");
          break;
        case "'":
        case '"':
          if (P === s || P === o)
            if (P === o && (w.warning('attribute value must after "="'), N = C.slice(R, K)), R = K + 1, K = C.indexOf(te, R), K > 0)
              M = C.slice(R, K), $(N, M, R - 1), P = l;
            else
              throw new Error("attribute value no end '" + te + "' match");
          else if (P == c)
            M = C.slice(R, K), $(N, M, R), w.warning('attribute "' + N + '" missed start quot(' + te + ")!!"), R = K + 1, P = l;
          else
            throw new Error('attribute value must after "="');
          break;
        case "/":
          switch (P) {
            case i:
              j.setTagName(C.slice(R, K));
            case l:
            case u:
            case f:
              P = f, j.closed = !0;
            case c:
            case o:
              break;
            case a:
              j.closed = !0;
              break;
            //case S_EQ:
            default:
              throw new Error("attribute invalid close char('/')");
          }
          break;
        case "":
          return w.error("unexpected end of input"), P == i && j.setTagName(C.slice(R, K)), K;
        case ">":
          switch (P) {
            case i:
              j.setTagName(C.slice(R, K));
            case l:
            case u:
            case f:
              break;
            //normal
            case c:
            //Compatible state
            case o:
              M = C.slice(R, K), M.slice(-1) === "/" && (j.closed = !0, M = M.slice(0, -1));
            case a:
              P === a && (M = N), P == c ? (w.warning('attribute "' + M + '" missed quot(")!'), $(N, M, R)) : ((!t.isHTML(T[""]) || !M.match(/^(?:disabled|checked|selected)$/i)) && w.warning('attribute "' + M + '" missed value!! "' + M + '" instead!!'), $(M, M, R));
              break;
            case s:
              throw new Error("attribute value missed!!");
          }
          return K;
        /*xml space '\x20' | #x9 | #xD | #xA; */
        case "":
          te = " ";
        default:
          if (te <= " ")
            switch (P) {
              case i:
                j.setTagName(C.slice(R, K)), P = u;
                break;
              case o:
                N = C.slice(R, K), P = a;
                break;
              case c:
                var M = C.slice(R, K);
                w.warning('attribute "' + M + '" missed quot(")!!'), $(N, M, R);
              case l:
                P = u;
                break;
            }
          else
            switch (P) {
              //case S_TAG:void();break;
              //case S_ATTR:void();break;
              //case S_ATTR_NOQUOT_VALUE:void();break;
              case a:
                j.tagName, (!t.isHTML(T[""]) || !N.match(/^(?:disabled|checked|selected)$/i)) && w.warning('attribute "' + N + '" missed value!! "' + N + '" instead2!!'), $(N, N, R), R = K, P = o;
                break;
              case l:
                w.warning('attribute space is required"' + N + '"!!');
              case u:
                P = o, R = K;
                break;
              case s:
                P = c, R = K;
                break;
              case f:
                throw new Error("elements closed character '/' and '>' must be connected to");
            }
      }
      K++;
    }
  }
  function y(C, R, j) {
    for (var T = C.tagName, k = null, te = C.length; te--; ) {
      var w = C[te], $ = w.qName, N = w.value, W = $.indexOf(":");
      if (W > 0)
        var M = w.prefix = $.slice(0, W), K = $.slice(W + 1), P = M === "xmlns" && K;
      else
        K = $, M = null, P = $ === "xmlns" && "";
      w.localName = K, P !== !1 && (k == null && (k = {}, _(j, j = {})), j[P] = k[P] = N, w.uri = t.XMLNS, R.startPrefixMapping(P, N));
    }
    for (var te = C.length; te--; ) {
      w = C[te];
      var M = w.prefix;
      M && (M === "xml" && (w.uri = t.XML), M !== "xmlns" && (w.uri = j[M || ""]));
    }
    var W = T.indexOf(":");
    W > 0 ? (M = C.prefix = T.slice(0, W), K = C.localName = T.slice(W + 1)) : (M = null, K = C.localName = T);
    var B = C.uri = j[M || ""];
    if (R.startElement(B, K, T, C), C.closed) {
      if (R.endElement(B, K, T), k)
        for (M in k)
          Object.prototype.hasOwnProperty.call(k, M) && R.endPrefixMapping(M);
    } else
      return C.currentNSMap = j, C.localNSMap = k, !0;
  }
  function b(C, R, j, T, k) {
    if (/^(?:script|textarea)$/i.test(j)) {
      var w = C.indexOf("</" + j + ">", R), $ = C.substring(R + 1, w);
      if (/[&<]/.test($))
        return /^script$/i.test(j) ? (k.characters($, 0, $.length), w) : ($ = $.replace(/&#?\w+;/g, T), k.characters($, 0, $.length), w);
    }
    return R + 1;
  }
  function v(C, R, j, T) {
    var k = T[j];
    return k == null && (k = C.lastIndexOf("</" + j + ">"), k < R && (k = C.lastIndexOf("</" + j)), T[j] = k), k < R;
  }
  function _(C, R) {
    for (var j in C)
      Object.prototype.hasOwnProperty.call(C, j) && (R[j] = C[j]);
  }
  function x(C, R, j, T) {
    var k = C.charAt(R + 2);
    switch (k) {
      case "-":
        if (C.charAt(R + 3) === "-") {
          var w = C.indexOf("-->", R + 4);
          return w > R ? (j.comment(C, R + 4, w - R - 4), w + 3) : (T.error("Unclosed comment"), -1);
        } else
          return -1;
      default:
        if (C.substr(R + 3, 6) == "CDATA[") {
          var w = C.indexOf("]]>", R + 9);
          return j.startCDATA(), j.characters(C, R + 9, w - R - 9), j.endCDATA(), w + 3;
        }
        var $ = U(C, R), N = $.length;
        if (N > 1 && /!doctype/i.test($[0][0])) {
          var M = $[1][0], K = !1, P = !1;
          N > 3 && (/^public$/i.test($[2][0]) ? (K = $[3][0], P = N > 4 && $[4][0]) : /^system$/i.test($[2][0]) && (P = $[3][0]));
          var te = $[N - 1];
          return j.startDTD(M, K, P), j.endDTD(), te.index + te[0].length;
        }
    }
    return -1;
  }
  function E(C, R, j) {
    var T = C.indexOf("?>", R);
    if (T) {
      var k = C.substring(R, T).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
      return k ? (k[0].length, j.processingInstruction(k[1], k[2]), T + 2) : -1;
    }
    return -1;
  }
  function S() {
    this.attributeNames = {};
  }
  S.prototype = {
    setTagName: function(C) {
      if (!r.test(C))
        throw new Error("invalid tagName:" + C);
      this.tagName = C;
    },
    addValue: function(C, R, j) {
      if (!r.test(C))
        throw new Error("invalid attribute:" + C);
      this.attributeNames[C] = this.length, this[this.length++] = { qName: C, value: R, offset: j };
    },
    length: 0,
    getLocalName: function(C) {
      return this[C].localName;
    },
    getLocator: function(C) {
      return this[C].locator;
    },
    getQName: function(C) {
      return this[C].qName;
    },
    getURI: function(C) {
      return this[C].uri;
    },
    getValue: function(C) {
      return this[C].value;
    }
    //	,getIndex:function(uri, localName)){
    //		if(localName){
    //
    //		}else{
    //			var qName = uri
    //		}
    //	},
    //	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
    //	getType:function(uri,localName){}
    //	getType:function(i){},
  };
  function U(C, R) {
    var j, T = [], k = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
    for (k.lastIndex = R, k.exec(C); j = k.exec(C); )
      if (T.push(j), j[1]) return T;
  }
  return la.XMLReader = h, la.ParseError = d, la;
}
var Tb;
function eF() {
  if (Tb) return qi;
  Tb = 1;
  var t = hc(), e = Bp(), n = Yk(), r = Qk(), i = e.DOMImplementation, o = t.NAMESPACE, a = r.ParseError, s = r.XMLReader;
  function c(g) {
    return g.replace(/\r[\n\u0085]/g, `
`).replace(/[\r\u0085\u2028]/g, `
`);
  }
  function l(g) {
    this.options = g || { locator: {} };
  }
  l.prototype.parseFromString = function(g, y) {
    var b = this.options, v = new s(), _ = b.domBuilder || new f(), x = b.errorHandler, E = b.locator, S = b.xmlns || {}, U = /\/x?html?$/.test(y), C = U ? n.HTML_ENTITIES : n.XML_ENTITIES;
    E && _.setDocumentLocator(E), v.errorHandler = u(x, _, E), v.domBuilder = b.domBuilder || _, U && (S[""] = o.HTML), S.xml = S.xml || o.XML;
    var R = b.normalizeLineEndings || c;
    return g && typeof g == "string" ? v.parse(
      R(g),
      S,
      C
    ) : v.errorHandler.error("invalid doc source"), _.doc;
  };
  function u(g, y, b) {
    if (!g) {
      if (y instanceof f)
        return y;
      g = y;
    }
    var v = {}, _ = g instanceof Function;
    b = b || {};
    function x(E) {
      var S = g[E];
      !S && _ && (S = g.length == 2 ? function(U) {
        g(E, U);
      } : g), v[E] = S && function(U) {
        S("[xmldom " + E + "]	" + U + h(b));
      } || function() {
      };
    }
    return x("warning"), x("error"), x("fatalError"), v;
  }
  function f() {
    this.cdata = !1;
  }
  function d(g, y) {
    y.lineNumber = g.lineNumber, y.columnNumber = g.columnNumber;
  }
  f.prototype = {
    startDocument: function() {
      this.doc = new i().createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId);
    },
    startElement: function(g, y, b, v) {
      var _ = this.doc, x = _.createElementNS(g, b || y), E = v.length;
      m(this, x), this.currentElement = x, this.locator && d(this.locator, x);
      for (var S = 0; S < E; S++) {
        var g = v.getURI(S), U = v.getValue(S), b = v.getQName(S), C = _.createAttributeNS(g, b);
        this.locator && d(v.getLocator(S), C), C.value = C.nodeValue = U, x.setAttributeNode(C);
      }
    },
    endElement: function(g, y, b) {
      var v = this.currentElement;
      v.tagName, this.currentElement = v.parentNode;
    },
    startPrefixMapping: function(g, y) {
    },
    endPrefixMapping: function(g) {
    },
    processingInstruction: function(g, y) {
      var b = this.doc.createProcessingInstruction(g, y);
      this.locator && d(this.locator, b), m(this, b);
    },
    ignorableWhitespace: function(g, y, b) {
    },
    characters: function(g, y, b) {
      if (g = p.apply(this, arguments), g) {
        if (this.cdata)
          var v = this.doc.createCDATASection(g);
        else
          var v = this.doc.createTextNode(g);
        this.currentElement ? this.currentElement.appendChild(v) : /^\s*$/.test(g) && this.doc.appendChild(v), this.locator && d(this.locator, v);
      }
    },
    skippedEntity: function(g) {
    },
    endDocument: function() {
      this.doc.normalize();
    },
    setDocumentLocator: function(g) {
      (this.locator = g) && (g.lineNumber = 0);
    },
    //LexicalHandler
    comment: function(g, y, b) {
      g = p.apply(this, arguments);
      var v = this.doc.createComment(g);
      this.locator && d(this.locator, v), m(this, v);
    },
    startCDATA: function() {
      this.cdata = !0;
    },
    endCDATA: function() {
      this.cdata = !1;
    },
    startDTD: function(g, y, b) {
      var v = this.doc.implementation;
      if (v && v.createDocumentType) {
        var _ = v.createDocumentType(g, y, b);
        this.locator && d(this.locator, _), m(this, _), this.doc.doctype = _;
      }
    },
    /**
     * @see org.xml.sax.ErrorHandler
     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
     */
    warning: function(g) {
      console.warn("[xmldom warning]	" + g, h(this.locator));
    },
    error: function(g) {
      console.error("[xmldom error]	" + g, h(this.locator));
    },
    fatalError: function(g) {
      throw new a(g, this.locator);
    }
  };
  function h(g) {
    if (g)
      return `
@` + (g.systemId || "") + "#[line:" + g.lineNumber + ",col:" + g.columnNumber + "]";
  }
  function p(g, y, b) {
    return typeof g == "string" ? g.substr(y, b) : g.length >= y + b || y ? new java.lang.String(g, y, b) + "" : g;
  }
  "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(g) {
    f.prototype[g] = function() {
      return null;
    };
  });
  function m(g, y) {
    g.currentElement ? g.currentElement.appendChild(y) : g.doc.appendChild(y);
  }
  return qi.__DOMHandler = f, qi.normalizeLineEndings = c, qi.DOMParser = l, qi;
}
var Eb;
function tF() {
  if (Eb) return Pi;
  Eb = 1;
  var t = Bp();
  return Pi.DOMImplementation = t.DOMImplementation, Pi.XMLSerializer = t.XMLSerializer, Pi.DOMParser = eF().DOMParser, Pi;
}
var Cb;
function nF() {
  if (Cb) return ca;
  Cb = 1;
  var t = tF(), e = Bp();
  function n(r) {
    var i = null, o = new t.DOMParser({
      errorHandler: function(s, c) {
        i = { level: s, message: c };
      }
    }), a = o.parseFromString(r);
    if (i === null)
      return a;
    throw new Error(i.level + ": " + i.message);
  }
  return ca.parseFromString = n, ca.Node = e.Node, ca;
}
var Sb;
function rF() {
  if (Sb) return _f;
  Sb = 1;
  var t = vr(), e = et, n = nF(), r = Fw(), i = r.Element;
  _f.readString = a;
  var o = n.Node;
  function a(s, c) {
    c = c || {};
    try {
      var l = n.parseFromString(s, "text/xml");
    } catch (h) {
      return t.reject(h);
    }
    if (l.documentElement.tagName === "parsererror")
      return t.resolve(new Error(l.documentElement.textContent));
    function u(h) {
      switch (h.nodeType) {
        case o.ELEMENT_NODE:
          return f(h);
        case o.TEXT_NODE:
          return r.text(h.nodeValue);
      }
    }
    function f(h) {
      var p = d(h), m = [];
      e.forEach(h.childNodes, function(y) {
        var b = u(y);
        b && m.push(b);
      });
      var g = {};
      return e.forEach(h.attributes, function(y) {
        g[d(y)] = y.value;
      }), new i(p, g, m);
    }
    function d(h) {
      if (h.namespaceURI) {
        var p = c[h.namespaceURI], m;
        return p ? m = p + ":" : m = "{" + h.namespaceURI + "}", m + h.localName;
      } else
        return h.localName;
    }
    return t.resolve(u(l.documentElement));
  }
  return _f;
}
var Ef = {}, _r = {}, sn = {}, Ab;
function Dr() {
  return Ab || (Ab = 1, (function() {
    var t, e, n, r, i, o, a, s = [].slice, c = {}.hasOwnProperty;
    t = function() {
      var l, u, f, d, h, p;
      if (p = arguments[0], h = 2 <= arguments.length ? s.call(arguments, 1) : [], i(Object.assign))
        Object.assign.apply(null, arguments);
      else
        for (l = 0, f = h.length; l < f; l++)
          if (d = h[l], d != null)
            for (u in d)
              c.call(d, u) && (p[u] = d[u]);
      return p;
    }, i = function(l) {
      return !!l && Object.prototype.toString.call(l) === "[object Function]";
    }, o = function(l) {
      var u;
      return !!l && ((u = typeof l) == "function" || u === "object");
    }, n = function(l) {
      return i(Array.isArray) ? Array.isArray(l) : Object.prototype.toString.call(l) === "[object Array]";
    }, r = function(l) {
      var u;
      if (n(l))
        return !l.length;
      for (u in l)
        if (c.call(l, u))
          return !1;
      return !0;
    }, a = function(l) {
      var u, f;
      return o(l) && (f = Object.getPrototypeOf(l)) && (u = f.constructor) && typeof u == "function" && u instanceof u && Function.prototype.toString.call(u) === Function.prototype.toString.call(Object);
    }, e = function(l) {
      return i(l.valueOf) ? l.valueOf() : l;
    }, sn.assign = t, sn.isFunction = i, sn.isObject = o, sn.isArray = n, sn.isEmpty = r, sn.isPlainObject = a, sn.getValue = e;
  }).call(sn)), sn;
}
var Ua = { exports: {} }, ka = { exports: {} }, Fa = { exports: {} }, Oa = { exports: {} }, iF = Oa.exports, Ub;
function Ow() {
  return Ub || (Ub = 1, (function() {
    Oa.exports = function() {
      function t(e, n, r) {
        if (this.options = e.options, this.stringify = e.stringify, this.parent = e, n == null)
          throw new Error("Missing attribute name. " + this.debugInfo(n));
        if (r == null)
          throw new Error("Missing attribute value. " + this.debugInfo(n));
        this.name = this.stringify.attName(n), this.value = this.stringify.attValue(r);
      }
      return t.prototype.clone = function() {
        return Object.create(this);
      }, t.prototype.toString = function(e) {
        return this.options.writer.set(e).attribute(this);
      }, t.prototype.debugInfo = function(e) {
        return e = e || this.name, e == null ? "parent: <" + this.parent.name + ">" : "attribute: {" + e + "}, parent: <" + this.parent.name + ">";
      }, t;
    }();
  }).call(iF)), Oa.exports;
}
var oF = Fa.exports, kb;
function pc() {
  return kb || (kb = 1, (function() {
    var t, e, n, r, i, o, a = function(c, l) {
      for (var u in l)
        s.call(l, u) && (c[u] = l[u]);
      function f() {
        this.constructor = c;
      }
      return f.prototype = l.prototype, c.prototype = new f(), c.__super__ = l.prototype, c;
    }, s = {}.hasOwnProperty;
    o = Dr(), i = o.isObject, r = o.isFunction, n = o.getValue, e = Ft(), t = Ow(), Fa.exports = function(c) {
      a(l, c);
      function l(u, f, d) {
        if (l.__super__.constructor.call(this, u), f == null)
          throw new Error("Missing element name. " + this.debugInfo());
        this.name = this.stringify.eleName(f), this.attributes = {}, d != null && this.attribute(d), u.isDocument && (this.isRoot = !0, this.documentObject = u, u.rootObject = this);
      }
      return l.prototype.clone = function() {
        var u, f, d, h;
        d = Object.create(this), d.isRoot && (d.documentObject = null), d.attributes = {}, h = this.attributes;
        for (f in h)
          s.call(h, f) && (u = h[f], d.attributes[f] = u.clone());
        return d.children = [], this.children.forEach(function(p) {
          var m;
          return m = p.clone(), m.parent = d, d.children.push(m);
        }), d;
      }, l.prototype.attribute = function(u, f) {
        var d, h;
        if (u != null && (u = n(u)), i(u))
          for (d in u)
            s.call(u, d) && (h = u[d], this.attribute(d, h));
        else
          r(f) && (f = f.apply()), (!this.options.skipNullAttributes || f != null) && (this.attributes[u] = new t(this, u, f));
        return this;
      }, l.prototype.removeAttribute = function(u) {
        var f, d, h;
        if (u == null)
          throw new Error("Missing attribute name. " + this.debugInfo());
        if (u = n(u), Array.isArray(u))
          for (d = 0, h = u.length; d < h; d++)
            f = u[d], delete this.attributes[f];
        else
          delete this.attributes[u];
        return this;
      }, l.prototype.toString = function(u) {
        return this.options.writer.set(u).element(this);
      }, l.prototype.att = function(u, f) {
        return this.attribute(u, f);
      }, l.prototype.a = function(u, f) {
        return this.attribute(u, f);
      }, l;
    }(e);
  }).call(oF)), Fa.exports;
}
var Ra = { exports: {} }, aF = Ra.exports, Fb;
function gc() {
  return Fb || (Fb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), Ra.exports = function(r) {
      e(i, r);
      function i(o, a) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing CDATA text. " + this.debugInfo());
        this.text = this.stringify.cdata(a);
      }
      return i.prototype.clone = function() {
        return Object.create(this);
      }, i.prototype.toString = function(o) {
        return this.options.writer.set(o).cdata(this);
      }, i;
    }(t);
  }).call(aF)), Ra.exports;
}
var Na = { exports: {} }, sF = Na.exports, Ob;
function mc() {
  return Ob || (Ob = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), Na.exports = function(r) {
      e(i, r);
      function i(o, a) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing comment text. " + this.debugInfo());
        this.text = this.stringify.comment(a);
      }
      return i.prototype.clone = function() {
        return Object.create(this);
      }, i.prototype.toString = function(o) {
        return this.options.writer.set(o).comment(this);
      }, i;
    }(t);
  }).call(sF)), Na.exports;
}
var Ba = { exports: {} }, cF = Ba.exports, Rb;
function yc() {
  return Rb || (Rb = 1, (function() {
    var t, e, n = function(i, o) {
      for (var a in o)
        r.call(o, a) && (i[a] = o[a]);
      function s() {
        this.constructor = i;
      }
      return s.prototype = o.prototype, i.prototype = new s(), i.__super__ = o.prototype, i;
    }, r = {}.hasOwnProperty;
    e = Dr().isObject, t = Ft(), Ba.exports = function(i) {
      n(o, i);
      function o(a, s, c, l) {
        var u;
        o.__super__.constructor.call(this, a), e(s) && (u = s, s = u.version, c = u.encoding, l = u.standalone), s || (s = "1.0"), this.version = this.stringify.xmlVersion(s), c != null && (this.encoding = this.stringify.xmlEncoding(c)), l != null && (this.standalone = this.stringify.xmlStandalone(l));
      }
      return o.prototype.toString = function(a) {
        return this.options.writer.set(a).declaration(this);
      }, o;
    }(t);
  }).call(cF)), Ba.exports;
}
var Ia = { exports: {} }, Ma = { exports: {} }, lF = Ma.exports, Nb;
function bc() {
  return Nb || (Nb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), Ma.exports = function(r) {
      e(i, r);
      function i(o, a, s, c, l, u) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing DTD element name. " + this.debugInfo());
        if (s == null)
          throw new Error("Missing DTD attribute name. " + this.debugInfo(a));
        if (!c)
          throw new Error("Missing DTD attribute type. " + this.debugInfo(a));
        if (!l)
          throw new Error("Missing DTD attribute default. " + this.debugInfo(a));
        if (l.indexOf("#") !== 0 && (l = "#" + l), !l.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/))
          throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. " + this.debugInfo(a));
        if (u && !l.match(/^(#FIXED|#DEFAULT)$/))
          throw new Error("Default value only applies to #FIXED or #DEFAULT. " + this.debugInfo(a));
        this.elementName = this.stringify.eleName(a), this.attributeName = this.stringify.attName(s), this.attributeType = this.stringify.dtdAttType(c), this.defaultValue = this.stringify.dtdAttDefault(u), this.defaultValueType = l;
      }
      return i.prototype.toString = function(o) {
        return this.options.writer.set(o).dtdAttList(this);
      }, i;
    }(t);
  }).call(lF)), Ma.exports;
}
var Wa = { exports: {} }, uF = Wa.exports, Bb;
function vc() {
  return Bb || (Bb = 1, (function() {
    var t, e, n = function(i, o) {
      for (var a in o)
        r.call(o, a) && (i[a] = o[a]);
      function s() {
        this.constructor = i;
      }
      return s.prototype = o.prototype, i.prototype = new s(), i.__super__ = o.prototype, i;
    }, r = {}.hasOwnProperty;
    e = Dr().isObject, t = Ft(), Wa.exports = function(i) {
      n(o, i);
      function o(a, s, c, l) {
        if (o.__super__.constructor.call(this, a), c == null)
          throw new Error("Missing DTD entity name. " + this.debugInfo(c));
        if (l == null)
          throw new Error("Missing DTD entity value. " + this.debugInfo(c));
        if (this.pe = !!s, this.name = this.stringify.eleName(c), !e(l))
          this.value = this.stringify.dtdEntityValue(l);
        else {
          if (!l.pubID && !l.sysID)
            throw new Error("Public and/or system identifiers are required for an external entity. " + this.debugInfo(c));
          if (l.pubID && !l.sysID)
            throw new Error("System identifier is required for a public external entity. " + this.debugInfo(c));
          if (l.pubID != null && (this.pubID = this.stringify.dtdPubID(l.pubID)), l.sysID != null && (this.sysID = this.stringify.dtdSysID(l.sysID)), l.nData != null && (this.nData = this.stringify.dtdNData(l.nData)), this.pe && this.nData)
            throw new Error("Notation declaration is not allowed in a parameter entity. " + this.debugInfo(c));
        }
      }
      return o.prototype.toString = function(a) {
        return this.options.writer.set(a).dtdEntity(this);
      }, o;
    }(t);
  }).call(uF)), Wa.exports;
}
var La = { exports: {} }, fF = La.exports, Ib;
function Dc() {
  return Ib || (Ib = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), La.exports = function(r) {
      e(i, r);
      function i(o, a, s) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing DTD element name. " + this.debugInfo());
        s || (s = "(#PCDATA)"), Array.isArray(s) && (s = "(" + s.join(",") + ")"), this.name = this.stringify.eleName(a), this.value = this.stringify.dtdElementValue(s);
      }
      return i.prototype.toString = function(o) {
        return this.options.writer.set(o).dtdElement(this);
      }, i;
    }(t);
  }).call(fF)), La.exports;
}
var Pa = { exports: {} }, dF = Pa.exports, Mb;
function xc() {
  return Mb || (Mb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), Pa.exports = function(r) {
      e(i, r);
      function i(o, a, s) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing DTD notation name. " + this.debugInfo(a));
        if (!s.pubID && !s.sysID)
          throw new Error("Public or system identifiers are required for an external entity. " + this.debugInfo(a));
        this.name = this.stringify.eleName(a), s.pubID != null && (this.pubID = this.stringify.dtdPubID(s.pubID)), s.sysID != null && (this.sysID = this.stringify.dtdSysID(s.sysID));
      }
      return i.prototype.toString = function(o) {
        return this.options.writer.set(o).dtdNotation(this);
      }, i;
    }(t);
  }).call(dF)), Pa.exports;
}
var hF = Ia.exports, Wb;
function wc() {
  return Wb || (Wb = 1, (function() {
    var t, e, n, r, i, o, a = function(c, l) {
      for (var u in l)
        s.call(l, u) && (c[u] = l[u]);
      function f() {
        this.constructor = c;
      }
      return f.prototype = l.prototype, c.prototype = new f(), c.__super__ = l.prototype, c;
    }, s = {}.hasOwnProperty;
    o = Dr().isObject, i = Ft(), t = bc(), n = vc(), e = Dc(), r = xc(), Ia.exports = function(c) {
      a(l, c);
      function l(u, f, d) {
        var h, p;
        l.__super__.constructor.call(this, u), this.name = "!DOCTYPE", this.documentObject = u, o(f) && (h = f, f = h.pubID, d = h.sysID), d == null && (p = [f, d], d = p[0], f = p[1]), f != null && (this.pubID = this.stringify.dtdPubID(f)), d != null && (this.sysID = this.stringify.dtdSysID(d));
      }
      return l.prototype.element = function(u, f) {
        var d;
        return d = new e(this, u, f), this.children.push(d), this;
      }, l.prototype.attList = function(u, f, d, h, p) {
        var m;
        return m = new t(this, u, f, d, h, p), this.children.push(m), this;
      }, l.prototype.entity = function(u, f) {
        var d;
        return d = new n(this, !1, u, f), this.children.push(d), this;
      }, l.prototype.pEntity = function(u, f) {
        var d;
        return d = new n(this, !0, u, f), this.children.push(d), this;
      }, l.prototype.notation = function(u, f) {
        var d;
        return d = new r(this, u, f), this.children.push(d), this;
      }, l.prototype.toString = function(u) {
        return this.options.writer.set(u).docType(this);
      }, l.prototype.ele = function(u, f) {
        return this.element(u, f);
      }, l.prototype.att = function(u, f, d, h, p) {
        return this.attList(u, f, d, h, p);
      }, l.prototype.ent = function(u, f) {
        return this.entity(u, f);
      }, l.prototype.pent = function(u, f) {
        return this.pEntity(u, f);
      }, l.prototype.not = function(u, f) {
        return this.notation(u, f);
      }, l.prototype.up = function() {
        return this.root() || this.documentObject;
      }, l;
    }(i);
  }).call(hF)), Ia.exports;
}
var qa = { exports: {} }, pF = qa.exports, Lb;
function _c() {
  return Lb || (Lb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), qa.exports = function(r) {
      e(i, r);
      function i(o, a) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing raw text. " + this.debugInfo());
        this.value = this.stringify.raw(a);
      }
      return i.prototype.clone = function() {
        return Object.create(this);
      }, i.prototype.toString = function(o) {
        return this.options.writer.set(o).raw(this);
      }, i;
    }(t);
  }).call(pF)), qa.exports;
}
var za = { exports: {} }, gF = za.exports, Pb;
function Tc() {
  return Pb || (Pb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), za.exports = function(r) {
      e(i, r);
      function i(o, a) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing element text. " + this.debugInfo());
        this.value = this.stringify.eleText(a);
      }
      return i.prototype.clone = function() {
        return Object.create(this);
      }, i.prototype.toString = function(o) {
        return this.options.writer.set(o).text(this);
      }, i;
    }(t);
  }).call(gF)), za.exports;
}
var ja = { exports: {} }, mF = ja.exports, qb;
function Ec() {
  return qb || (qb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), ja.exports = function(r) {
      e(i, r);
      function i(o, a, s) {
        if (i.__super__.constructor.call(this, o), a == null)
          throw new Error("Missing instruction target. " + this.debugInfo());
        this.target = this.stringify.insTarget(a), s && (this.value = this.stringify.insValue(s));
      }
      return i.prototype.clone = function() {
        return Object.create(this);
      }, i.prototype.toString = function(o) {
        return this.options.writer.set(o).processingInstruction(this);
      }, i;
    }(t);
  }).call(mF)), ja.exports;
}
var $a = { exports: {} }, yF = $a.exports, zb;
function Ip() {
  return zb || (zb = 1, (function() {
    var t, e = function(r, i) {
      for (var o in i)
        n.call(i, o) && (r[o] = i[o]);
      function a() {
        this.constructor = r;
      }
      return a.prototype = i.prototype, r.prototype = new a(), r.__super__ = i.prototype, r;
    }, n = {}.hasOwnProperty;
    t = Ft(), $a.exports = function(r) {
      e(i, r);
      function i(o) {
        i.__super__.constructor.call(this, o), this.isDummy = !0;
      }
      return i.prototype.clone = function() {
        return Object.create(this);
      }, i.prototype.toString = function(o) {
        return "";
      }, i;
    }(t);
  }).call(yF)), $a.exports;
}
var bF = ka.exports, jb;
function Ft() {
  return jb || (jb = 1, (function() {
    var t, e, n, r, i, o, a, s, c, l, u, f, d, h, p = {}.hasOwnProperty;
    h = Dr(), d = h.isObject, f = h.isFunction, u = h.isEmpty, l = h.getValue, o = null, t = null, e = null, n = null, r = null, s = null, c = null, a = null, i = null, ka.exports = function() {
      function m(g) {
        this.parent = g, this.parent && (this.options = this.parent.options, this.stringify = this.parent.stringify), this.children = [], o || (o = pc(), t = gc(), e = mc(), n = yc(), r = wc(), s = _c(), c = Tc(), a = Ec(), i = Ip());
      }
      return m.prototype.element = function(g, y, b) {
        var v, _, x, E, S, U, C, R, j, T, k;
        if (U = null, y === null && b == null && (j = [{}, null], y = j[0], b = j[1]), y == null && (y = {}), y = l(y), d(y) || (T = [y, b], b = T[0], y = T[1]), g != null && (g = l(g)), Array.isArray(g))
          for (x = 0, C = g.length; x < C; x++)
            _ = g[x], U = this.element(_);
        else if (f(g))
          U = this.element(g.apply());
        else if (d(g)) {
          for (S in g)
            if (p.call(g, S))
              if (k = g[S], f(k) && (k = k.apply()), d(k) && u(k) && (k = null), !this.options.ignoreDecorators && this.stringify.convertAttKey && S.indexOf(this.stringify.convertAttKey) === 0)
                U = this.attribute(S.substr(this.stringify.convertAttKey.length), k);
              else if (!this.options.separateArrayItems && Array.isArray(k))
                for (E = 0, R = k.length; E < R; E++)
                  _ = k[E], v = {}, v[S] = _, U = this.element(v);
              else d(k) ? (U = this.element(S), U.element(k)) : U = this.element(S, k);
        } else this.options.skipNullNodes && b === null ? U = this.dummy() : !this.options.ignoreDecorators && this.stringify.convertTextKey && g.indexOf(this.stringify.convertTextKey) === 0 ? U = this.text(b) : !this.options.ignoreDecorators && this.stringify.convertCDataKey && g.indexOf(this.stringify.convertCDataKey) === 0 ? U = this.cdata(b) : !this.options.ignoreDecorators && this.stringify.convertCommentKey && g.indexOf(this.stringify.convertCommentKey) === 0 ? U = this.comment(b) : !this.options.ignoreDecorators && this.stringify.convertRawKey && g.indexOf(this.stringify.convertRawKey) === 0 ? U = this.raw(b) : !this.options.ignoreDecorators && this.stringify.convertPIKey && g.indexOf(this.stringify.convertPIKey) === 0 ? U = this.instruction(g.substr(this.stringify.convertPIKey.length), b) : U = this.node(g, y, b);
        if (U == null)
          throw new Error("Could not create any elements with: " + g + ". " + this.debugInfo());
        return U;
      }, m.prototype.insertBefore = function(g, y, b) {
        var v, _, x;
        if (this.isRoot)
          throw new Error("Cannot insert elements at root level. " + this.debugInfo(g));
        return _ = this.parent.children.indexOf(this), x = this.parent.children.splice(_), v = this.parent.element(g, y, b), Array.prototype.push.apply(this.parent.children, x), v;
      }, m.prototype.insertAfter = function(g, y, b) {
        var v, _, x;
        if (this.isRoot)
          throw new Error("Cannot insert elements at root level. " + this.debugInfo(g));
        return _ = this.parent.children.indexOf(this), x = this.parent.children.splice(_ + 1), v = this.parent.element(g, y, b), Array.prototype.push.apply(this.parent.children, x), v;
      }, m.prototype.remove = function() {
        var g;
        if (this.isRoot)
          throw new Error("Cannot remove the root element. " + this.debugInfo());
        return g = this.parent.children.indexOf(this), [].splice.apply(this.parent.children, [g, g - g + 1].concat([])), this.parent;
      }, m.prototype.node = function(g, y, b) {
        var v, _;
        return g != null && (g = l(g)), y || (y = {}), y = l(y), d(y) || (_ = [y, b], b = _[0], y = _[1]), v = new o(this, g, y), b != null && v.text(b), this.children.push(v), v;
      }, m.prototype.text = function(g) {
        var y;
        return y = new c(this, g), this.children.push(y), this;
      }, m.prototype.cdata = function(g) {
        var y;
        return y = new t(this, g), this.children.push(y), this;
      }, m.prototype.comment = function(g) {
        var y;
        return y = new e(this, g), this.children.push(y), this;
      }, m.prototype.commentBefore = function(g) {
        var y, b;
        return y = this.parent.children.indexOf(this), b = this.parent.children.splice(y), this.parent.comment(g), Array.prototype.push.apply(this.parent.children, b), this;
      }, m.prototype.commentAfter = function(g) {
        var y, b;
        return y = this.parent.children.indexOf(this), b = this.parent.children.splice(y + 1), this.parent.comment(g), Array.prototype.push.apply(this.parent.children, b), this;
      }, m.prototype.raw = function(g) {
        var y;
        return y = new s(this, g), this.children.push(y), this;
      }, m.prototype.dummy = function() {
        var g;
        return g = new i(this), this.children.push(g), g;
      }, m.prototype.instruction = function(g, y) {
        var b, v, _, x, E;
        if (g != null && (g = l(g)), y != null && (y = l(y)), Array.isArray(g))
          for (x = 0, E = g.length; x < E; x++)
            b = g[x], this.instruction(b);
        else if (d(g))
          for (b in g)
            p.call(g, b) && (v = g[b], this.instruction(b, v));
        else
          f(y) && (y = y.apply()), _ = new a(this, g, y), this.children.push(_);
        return this;
      }, m.prototype.instructionBefore = function(g, y) {
        var b, v;
        return b = this.parent.children.indexOf(this), v = this.parent.children.splice(b), this.parent.instruction(g, y), Array.prototype.push.apply(this.parent.children, v), this;
      }, m.prototype.instructionAfter = function(g, y) {
        var b, v;
        return b = this.parent.children.indexOf(this), v = this.parent.children.splice(b + 1), this.parent.instruction(g, y), Array.prototype.push.apply(this.parent.children, v), this;
      }, m.prototype.declaration = function(g, y, b) {
        var v, _;
        return v = this.document(), _ = new n(v, g, y, b), v.children[0] instanceof n ? v.children[0] = _ : v.children.unshift(_), v.root() || v;
      }, m.prototype.doctype = function(g, y) {
        var b, v, _, x, E, S, U, C, R, j;
        for (v = this.document(), _ = new r(v, g, y), R = v.children, x = E = 0, U = R.length; E < U; x = ++E)
          if (b = R[x], b instanceof r)
            return v.children[x] = _, _;
        for (j = v.children, x = S = 0, C = j.length; S < C; x = ++S)
          if (b = j[x], b.isRoot)
            return v.children.splice(x, 0, _), _;
        return v.children.push(_), _;
      }, m.prototype.up = function() {
        if (this.isRoot)
          throw new Error("The root node has no parent. Use doc() if you need to get the document object.");
        return this.parent;
      }, m.prototype.root = function() {
        var g;
        for (g = this; g; ) {
          if (g.isDocument)
            return g.rootObject;
          if (g.isRoot)
            return g;
          g = g.parent;
        }
      }, m.prototype.document = function() {
        var g;
        for (g = this; g; ) {
          if (g.isDocument)
            return g;
          g = g.parent;
        }
      }, m.prototype.end = function(g) {
        return this.document().end(g);
      }, m.prototype.prev = function() {
        var g;
        for (g = this.parent.children.indexOf(this); g > 0 && this.parent.children[g - 1].isDummy; )
          g = g - 1;
        if (g < 1)
          throw new Error("Already at the first node. " + this.debugInfo());
        return this.parent.children[g - 1];
      }, m.prototype.next = function() {
        var g;
        for (g = this.parent.children.indexOf(this); g < this.parent.children.length - 1 && this.parent.children[g + 1].isDummy; )
          g = g + 1;
        if (g === -1 || g === this.parent.children.length - 1)
          throw new Error("Already at the last node. " + this.debugInfo());
        return this.parent.children[g + 1];
      }, m.prototype.importDocument = function(g) {
        var y;
        return y = g.root().clone(), y.parent = this, y.isRoot = !1, this.children.push(y), this;
      }, m.prototype.debugInfo = function(g) {
        var y, b;
        return g = g || this.name, g == null && !((y = this.parent) != null && y.name) ? "" : g == null ? "parent: <" + this.parent.name + ">" : (b = this.parent) != null && b.name ? "node: <" + g + ">, parent: <" + this.parent.name + ">" : "node: <" + g + ">";
      }, m.prototype.ele = function(g, y, b) {
        return this.element(g, y, b);
      }, m.prototype.nod = function(g, y, b) {
        return this.node(g, y, b);
      }, m.prototype.txt = function(g) {
        return this.text(g);
      }, m.prototype.dat = function(g) {
        return this.cdata(g);
      }, m.prototype.com = function(g) {
        return this.comment(g);
      }, m.prototype.ins = function(g, y) {
        return this.instruction(g, y);
      }, m.prototype.doc = function() {
        return this.document();
      }, m.prototype.dec = function(g, y, b) {
        return this.declaration(g, y, b);
      }, m.prototype.dtd = function(g, y) {
        return this.doctype(g, y);
      }, m.prototype.e = function(g, y, b) {
        return this.element(g, y, b);
      }, m.prototype.n = function(g, y, b) {
        return this.node(g, y, b);
      }, m.prototype.t = function(g) {
        return this.text(g);
      }, m.prototype.d = function(g) {
        return this.cdata(g);
      }, m.prototype.c = function(g) {
        return this.comment(g);
      }, m.prototype.r = function(g) {
        return this.raw(g);
      }, m.prototype.i = function(g, y) {
        return this.instruction(g, y);
      }, m.prototype.u = function() {
        return this.up();
      }, m.prototype.importXMLBuilder = function(g) {
        return this.importDocument(g);
      }, m;
    }();
  }).call(bF)), ka.exports;
}
var Va = { exports: {} }, vF = Va.exports, $b;
function Rw() {
  return $b || ($b = 1, (function() {
    var t = function(n, r) {
      return function() {
        return n.apply(r, arguments);
      };
    }, e = {}.hasOwnProperty;
    Va.exports = function() {
      function n(r) {
        this.assertLegalChar = t(this.assertLegalChar, this);
        var i, o, a;
        r || (r = {}), this.noDoubleEncoding = r.noDoubleEncoding, o = r.stringify || {};
        for (i in o)
          e.call(o, i) && (a = o[i], this[i] = a);
      }
      return n.prototype.eleName = function(r) {
        return r = "" + r || "", this.assertLegalChar(r);
      }, n.prototype.eleText = function(r) {
        return r = "" + r || "", this.assertLegalChar(this.elEscape(r));
      }, n.prototype.cdata = function(r) {
        return r = "" + r || "", r = r.replace("]]>", "]]]]><![CDATA[>"), this.assertLegalChar(r);
      }, n.prototype.comment = function(r) {
        if (r = "" + r || "", r.match(/--/))
          throw new Error("Comment text cannot contain double-hypen: " + r);
        return this.assertLegalChar(r);
      }, n.prototype.raw = function(r) {
        return "" + r || "";
      }, n.prototype.attName = function(r) {
        return r = "" + r || "";
      }, n.prototype.attValue = function(r) {
        return r = "" + r || "", this.attEscape(r);
      }, n.prototype.insTarget = function(r) {
        return "" + r || "";
      }, n.prototype.insValue = function(r) {
        if (r = "" + r || "", r.match(/\?>/))
          throw new Error("Invalid processing instruction value: " + r);
        return r;
      }, n.prototype.xmlVersion = function(r) {
        if (r = "" + r || "", !r.match(/1\.[0-9]+/))
          throw new Error("Invalid version number: " + r);
        return r;
      }, n.prototype.xmlEncoding = function(r) {
        if (r = "" + r || "", !r.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/))
          throw new Error("Invalid encoding: " + r);
        return r;
      }, n.prototype.xmlStandalone = function(r) {
        return r ? "yes" : "no";
      }, n.prototype.dtdPubID = function(r) {
        return "" + r || "";
      }, n.prototype.dtdSysID = function(r) {
        return "" + r || "";
      }, n.prototype.dtdElementValue = function(r) {
        return "" + r || "";
      }, n.prototype.dtdAttType = function(r) {
        return "" + r || "";
      }, n.prototype.dtdAttDefault = function(r) {
        return r != null ? "" + r || "" : r;
      }, n.prototype.dtdEntityValue = function(r) {
        return "" + r || "";
      }, n.prototype.dtdNData = function(r) {
        return "" + r || "";
      }, n.prototype.convertAttKey = "@", n.prototype.convertPIKey = "?", n.prototype.convertTextKey = "#text", n.prototype.convertCDataKey = "#cdata", n.prototype.convertCommentKey = "#comment", n.prototype.convertRawKey = "#raw", n.prototype.assertLegalChar = function(r) {
        var i;
        if (i = r.match(/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/), i)
          throw new Error("Invalid character in string: " + r + " at index " + i.index);
        return r;
      }, n.prototype.elEscape = function(r) {
        var i;
        return i = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g, r.replace(i, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\r/g, "&#xD;");
      }, n.prototype.attEscape = function(r) {
        var i;
        return i = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g, r.replace(i, "&amp;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/\t/g, "&#x9;").replace(/\n/g, "&#xA;").replace(/\r/g, "&#xD;");
      }, n;
    }();
  }).call(vF)), Va.exports;
}
var Ha = { exports: {} }, Xa = { exports: {} }, DF = Xa.exports, Vb;
function Nw() {
  return Vb || (Vb = 1, (function() {
    var t = {}.hasOwnProperty;
    Xa.exports = function() {
      function e(n) {
        var r, i, o, a, s, c, l, u, f;
        n || (n = {}), this.pretty = n.pretty || !1, this.allowEmpty = (i = n.allowEmpty) != null ? i : !1, this.pretty ? (this.indent = (o = n.indent) != null ? o : "  ", this.newline = (a = n.newline) != null ? a : `
`, this.offset = (s = n.offset) != null ? s : 0, this.dontprettytextnodes = (c = n.dontprettytextnodes) != null ? c : 0) : (this.indent = "", this.newline = "", this.offset = 0, this.dontprettytextnodes = 0), this.spacebeforeslash = (l = n.spacebeforeslash) != null ? l : "", this.spacebeforeslash === !0 && (this.spacebeforeslash = " "), this.newlinedefault = this.newline, this.prettydefault = this.pretty, u = n.writer || {};
        for (r in u)
          t.call(u, r) && (f = u[r], this[r] = f);
      }
      return e.prototype.set = function(n) {
        var r, i, o;
        n || (n = {}), "pretty" in n && (this.pretty = n.pretty), "allowEmpty" in n && (this.allowEmpty = n.allowEmpty), this.pretty ? (this.indent = "indent" in n ? n.indent : "  ", this.newline = "newline" in n ? n.newline : `
`, this.offset = "offset" in n ? n.offset : 0, this.dontprettytextnodes = "dontprettytextnodes" in n ? n.dontprettytextnodes : 0) : (this.indent = "", this.newline = "", this.offset = 0, this.dontprettytextnodes = 0), this.spacebeforeslash = "spacebeforeslash" in n ? n.spacebeforeslash : "", this.spacebeforeslash === !0 && (this.spacebeforeslash = " "), this.newlinedefault = this.newline, this.prettydefault = this.pretty, i = n.writer || {};
        for (r in i)
          t.call(i, r) && (o = i[r], this[r] = o);
        return this;
      }, e.prototype.space = function(n) {
        var r;
        return this.pretty ? (r = (n || 0) + this.offset + 1, r > 0 ? new Array(r).join(this.indent) : "") : "";
      }, e;
    }();
  }).call(DF)), Xa.exports;
}
var xF = Ha.exports, Hb;
function Mp() {
  return Hb || (Hb = 1, (function() {
    var t, e, n, r, i, o, a, s, c, l, u, f, d, h, p = function(g, y) {
      for (var b in y)
        m.call(y, b) && (g[b] = y[b]);
      function v() {
        this.constructor = g;
      }
      return v.prototype = y.prototype, g.prototype = new v(), g.__super__ = y.prototype, g;
    }, m = {}.hasOwnProperty;
    a = yc(), s = wc(), t = gc(), e = mc(), l = pc(), f = _c(), d = Tc(), u = Ec(), c = Ip(), n = bc(), r = Dc(), i = vc(), o = xc(), h = Nw(), Ha.exports = function(g) {
      p(y, g);
      function y(b) {
        y.__super__.constructor.call(this, b);
      }
      return y.prototype.document = function(b) {
        var v, _, x, E, S;
        for (this.textispresent = !1, E = "", S = b.children, _ = 0, x = S.length; _ < x; _++)
          v = S[_], !(v instanceof c) && (E += (function() {
            switch (!1) {
              case !(v instanceof a):
                return this.declaration(v);
              case !(v instanceof s):
                return this.docType(v);
              case !(v instanceof e):
                return this.comment(v);
              case !(v instanceof u):
                return this.processingInstruction(v);
              default:
                return this.element(v, 0);
            }
          }).call(this));
        return this.pretty && E.slice(-this.newline.length) === this.newline && (E = E.slice(0, -this.newline.length)), E;
      }, y.prototype.attribute = function(b) {
        return " " + b.name + '="' + b.value + '"';
      }, y.prototype.cdata = function(b, v) {
        return this.space(v) + "<![CDATA[" + b.text + "]]>" + this.newline;
      }, y.prototype.comment = function(b, v) {
        return this.space(v) + "<!-- " + b.text + " -->" + this.newline;
      }, y.prototype.declaration = function(b, v) {
        var _;
        return _ = this.space(v), _ += '<?xml version="' + b.version + '"', b.encoding != null && (_ += ' encoding="' + b.encoding + '"'), b.standalone != null && (_ += ' standalone="' + b.standalone + '"'), _ += this.spacebeforeslash + "?>", _ += this.newline, _;
      }, y.prototype.docType = function(b, v) {
        var _, x, E, S, U;
        if (v || (v = 0), S = this.space(v), S += "<!DOCTYPE " + b.root().name, b.pubID && b.sysID ? S += ' PUBLIC "' + b.pubID + '" "' + b.sysID + '"' : b.sysID && (S += ' SYSTEM "' + b.sysID + '"'), b.children.length > 0) {
          for (S += " [", S += this.newline, U = b.children, x = 0, E = U.length; x < E; x++)
            _ = U[x], S += (function() {
              switch (!1) {
                case !(_ instanceof n):
                  return this.dtdAttList(_, v + 1);
                case !(_ instanceof r):
                  return this.dtdElement(_, v + 1);
                case !(_ instanceof i):
                  return this.dtdEntity(_, v + 1);
                case !(_ instanceof o):
                  return this.dtdNotation(_, v + 1);
                case !(_ instanceof t):
                  return this.cdata(_, v + 1);
                case !(_ instanceof e):
                  return this.comment(_, v + 1);
                case !(_ instanceof u):
                  return this.processingInstruction(_, v + 1);
                default:
                  throw new Error("Unknown DTD node type: " + _.constructor.name);
              }
            }).call(this);
          S += "]";
        }
        return S += this.spacebeforeslash + ">", S += this.newline, S;
      }, y.prototype.element = function(b, v) {
        var _, x, E, S, U, C, R, j, T, k, w, $, N;
        v || (v = 0), N = !1, this.textispresent ? (this.newline = "", this.pretty = !1) : (this.newline = this.newlinedefault, this.pretty = this.prettydefault), $ = this.space(v), j = "", j += $ + "<" + b.name, T = b.attributes;
        for (R in T)
          m.call(T, R) && (_ = T[R], j += this.attribute(_));
        if (b.children.length === 0 || b.children.every(function(M) {
          return M.value === "";
        }))
          this.allowEmpty ? j += "></" + b.name + ">" + this.newline : j += this.spacebeforeslash + "/>" + this.newline;
        else if (this.pretty && b.children.length === 1 && b.children[0].value != null)
          j += ">", j += b.children[0].value, j += "</" + b.name + ">" + this.newline;
        else {
          if (this.dontprettytextnodes) {
            for (k = b.children, E = 0, U = k.length; E < U; E++)
              if (x = k[E], x.value != null) {
                this.textispresent++, N = !0;
                break;
              }
          }
          for (this.textispresent && (this.newline = "", this.pretty = !1, $ = this.space(v)), j += ">" + this.newline, w = b.children, S = 0, C = w.length; S < C; S++)
            x = w[S], j += (function() {
              switch (!1) {
                case !(x instanceof t):
                  return this.cdata(x, v + 1);
                case !(x instanceof e):
                  return this.comment(x, v + 1);
                case !(x instanceof l):
                  return this.element(x, v + 1);
                case !(x instanceof f):
                  return this.raw(x, v + 1);
                case !(x instanceof d):
                  return this.text(x, v + 1);
                case !(x instanceof u):
                  return this.processingInstruction(x, v + 1);
                case !(x instanceof c):
                  return "";
                default:
                  throw new Error("Unknown XML node type: " + x.constructor.name);
              }
            }).call(this);
          N && this.textispresent--, this.textispresent || (this.newline = this.newlinedefault, this.pretty = this.prettydefault), j += $ + "</" + b.name + ">" + this.newline;
        }
        return j;
      }, y.prototype.processingInstruction = function(b, v) {
        var _;
        return _ = this.space(v) + "<?" + b.target, b.value && (_ += " " + b.value), _ += this.spacebeforeslash + "?>" + this.newline, _;
      }, y.prototype.raw = function(b, v) {
        return this.space(v) + b.value + this.newline;
      }, y.prototype.text = function(b, v) {
        return this.space(v) + b.value + this.newline;
      }, y.prototype.dtdAttList = function(b, v) {
        var _;
        return _ = this.space(v) + "<!ATTLIST " + b.elementName + " " + b.attributeName + " " + b.attributeType, b.defaultValueType !== "#DEFAULT" && (_ += " " + b.defaultValueType), b.defaultValue && (_ += ' "' + b.defaultValue + '"'), _ += this.spacebeforeslash + ">" + this.newline, _;
      }, y.prototype.dtdElement = function(b, v) {
        return this.space(v) + "<!ELEMENT " + b.name + " " + b.value + this.spacebeforeslash + ">" + this.newline;
      }, y.prototype.dtdEntity = function(b, v) {
        var _;
        return _ = this.space(v) + "<!ENTITY", b.pe && (_ += " %"), _ += " " + b.name, b.value ? _ += ' "' + b.value + '"' : (b.pubID && b.sysID ? _ += ' PUBLIC "' + b.pubID + '" "' + b.sysID + '"' : b.sysID && (_ += ' SYSTEM "' + b.sysID + '"'), b.nData && (_ += " NDATA " + b.nData)), _ += this.spacebeforeslash + ">" + this.newline, _;
      }, y.prototype.dtdNotation = function(b, v) {
        var _;
        return _ = this.space(v) + "<!NOTATION " + b.name, b.pubID && b.sysID ? _ += ' PUBLIC "' + b.pubID + '" "' + b.sysID + '"' : b.pubID ? _ += ' PUBLIC "' + b.pubID + '"' : b.sysID && (_ += ' SYSTEM "' + b.sysID + '"'), _ += this.spacebeforeslash + ">" + this.newline, _;
      }, y.prototype.openNode = function(b, v) {
        var _, x, E, S;
        if (v || (v = 0), b instanceof l) {
          E = this.space(v) + "<" + b.name, S = b.attributes;
          for (x in S)
            m.call(S, x) && (_ = S[x], E += this.attribute(_));
          return E += (b.children ? ">" : "/>") + this.newline, E;
        } else
          return E = this.space(v) + "<!DOCTYPE " + b.rootNodeName, b.pubID && b.sysID ? E += ' PUBLIC "' + b.pubID + '" "' + b.sysID + '"' : b.sysID && (E += ' SYSTEM "' + b.sysID + '"'), E += (b.children ? " [" : ">") + this.newline, E;
      }, y.prototype.closeNode = function(b, v) {
        switch (v || (v = 0), !1) {
          case !(b instanceof l):
            return this.space(v) + "</" + b.name + ">" + this.newline;
          case !(b instanceof s):
            return this.space(v) + "]>" + this.newline;
        }
      }, y;
    }(h);
  }).call(xF)), Ha.exports;
}
var wF = Ua.exports, Xb;
function _F() {
  return Xb || (Xb = 1, (function() {
    var t, e, n, r, i = function(a, s) {
      for (var c in s)
        o.call(s, c) && (a[c] = s[c]);
      function l() {
        this.constructor = a;
      }
      return l.prototype = s.prototype, a.prototype = new l(), a.__super__ = s.prototype, a;
    }, o = {}.hasOwnProperty;
    r = Dr().isPlainObject, t = Ft(), n = Rw(), e = Mp(), Ua.exports = function(a) {
      i(s, a);
      function s(c) {
        s.__super__.constructor.call(this, null), this.name = "?xml", c || (c = {}), c.writer || (c.writer = new e()), this.options = c, this.stringify = new n(c), this.isDocument = !0;
      }
      return s.prototype.end = function(c) {
        var l;
        return c ? r(c) && (l = c, c = this.options.writer.set(l)) : c = this.options.writer, c.document(this);
      }, s.prototype.toString = function(c) {
        return this.options.writer.set(c).document(this);
      }, s;
    }(t);
  }).call(wF)), Ua.exports;
}
var Ga = { exports: {} }, TF = Ga.exports, Gb;
function EF() {
  return Gb || (Gb = 1, (function() {
    var t, e, n, r, i, o, a, s, c, l, u, f, d, h, p, m, g, y, b, v, _ = {}.hasOwnProperty;
    v = Dr(), y = v.isObject, g = v.isFunction, b = v.isPlainObject, m = v.getValue, l = pc(), e = gc(), n = mc(), f = _c(), p = Tc(), u = Ec(), s = yc(), c = wc(), r = bc(), o = vc(), i = Dc(), a = xc(), t = Ow(), h = Rw(), d = Mp(), Ga.exports = function() {
      function x(E, S, U) {
        var C;
        this.name = "?xml", E || (E = {}), E.writer ? b(E.writer) && (C = E.writer, E.writer = new d(C)) : E.writer = new d(E), this.options = E, this.writer = E.writer, this.stringify = new h(E), this.onDataCallback = S || function() {
        }, this.onEndCallback = U || function() {
        }, this.currentNode = null, this.currentLevel = -1, this.openTags = {}, this.documentStarted = !1, this.documentCompleted = !1, this.root = null;
      }
      return x.prototype.node = function(E, S, U) {
        var C, R;
        if (E == null)
          throw new Error("Missing node name.");
        if (this.root && this.currentLevel === -1)
          throw new Error("Document can only have one root node. " + this.debugInfo(E));
        return this.openCurrent(), E = m(E), S === null && U == null && (C = [{}, null], S = C[0], U = C[1]), S == null && (S = {}), S = m(S), y(S) || (R = [S, U], U = R[0], S = R[1]), this.currentNode = new l(this, E, S), this.currentNode.children = !1, this.currentLevel++, this.openTags[this.currentLevel] = this.currentNode, U != null && this.text(U), this;
      }, x.prototype.element = function(E, S, U) {
        return this.currentNode && this.currentNode instanceof c ? this.dtdElement.apply(this, arguments) : this.node(E, S, U);
      }, x.prototype.attribute = function(E, S) {
        var U, C;
        if (!this.currentNode || this.currentNode.children)
          throw new Error("att() can only be used immediately after an ele() call in callback mode. " + this.debugInfo(E));
        if (E != null && (E = m(E)), y(E))
          for (U in E)
            _.call(E, U) && (C = E[U], this.attribute(U, C));
        else
          g(S) && (S = S.apply()), (!this.options.skipNullAttributes || S != null) && (this.currentNode.attributes[E] = new t(this, E, S));
        return this;
      }, x.prototype.text = function(E) {
        var S;
        return this.openCurrent(), S = new p(this, E), this.onData(this.writer.text(S, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.cdata = function(E) {
        var S;
        return this.openCurrent(), S = new e(this, E), this.onData(this.writer.cdata(S, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.comment = function(E) {
        var S;
        return this.openCurrent(), S = new n(this, E), this.onData(this.writer.comment(S, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.raw = function(E) {
        var S;
        return this.openCurrent(), S = new f(this, E), this.onData(this.writer.raw(S, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.instruction = function(E, S) {
        var U, C, R, j, T;
        if (this.openCurrent(), E != null && (E = m(E)), S != null && (S = m(S)), Array.isArray(E))
          for (U = 0, j = E.length; U < j; U++)
            C = E[U], this.instruction(C);
        else if (y(E))
          for (C in E)
            _.call(E, C) && (R = E[C], this.instruction(C, R));
        else
          g(S) && (S = S.apply()), T = new u(this, E, S), this.onData(this.writer.processingInstruction(T, this.currentLevel + 1), this.currentLevel + 1);
        return this;
      }, x.prototype.declaration = function(E, S, U) {
        var C;
        if (this.openCurrent(), this.documentStarted)
          throw new Error("declaration() must be the first node.");
        return C = new s(this, E, S, U), this.onData(this.writer.declaration(C, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.doctype = function(E, S, U) {
        if (this.openCurrent(), E == null)
          throw new Error("Missing root node name.");
        if (this.root)
          throw new Error("dtd() must come before the root node.");
        return this.currentNode = new c(this, S, U), this.currentNode.rootNodeName = E, this.currentNode.children = !1, this.currentLevel++, this.openTags[this.currentLevel] = this.currentNode, this;
      }, x.prototype.dtdElement = function(E, S) {
        var U;
        return this.openCurrent(), U = new i(this, E, S), this.onData(this.writer.dtdElement(U, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.attList = function(E, S, U, C, R) {
        var j;
        return this.openCurrent(), j = new r(this, E, S, U, C, R), this.onData(this.writer.dtdAttList(j, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.entity = function(E, S) {
        var U;
        return this.openCurrent(), U = new o(this, !1, E, S), this.onData(this.writer.dtdEntity(U, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.pEntity = function(E, S) {
        var U;
        return this.openCurrent(), U = new o(this, !0, E, S), this.onData(this.writer.dtdEntity(U, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.notation = function(E, S) {
        var U;
        return this.openCurrent(), U = new a(this, E, S), this.onData(this.writer.dtdNotation(U, this.currentLevel + 1), this.currentLevel + 1), this;
      }, x.prototype.up = function() {
        if (this.currentLevel < 0)
          throw new Error("The document node has no parent.");
        return this.currentNode ? (this.currentNode.children ? this.closeNode(this.currentNode) : this.openNode(this.currentNode), this.currentNode = null) : this.closeNode(this.openTags[this.currentLevel]), delete this.openTags[this.currentLevel], this.currentLevel--, this;
      }, x.prototype.end = function() {
        for (; this.currentLevel >= 0; )
          this.up();
        return this.onEnd();
      }, x.prototype.openCurrent = function() {
        if (this.currentNode)
          return this.currentNode.children = !0, this.openNode(this.currentNode);
      }, x.prototype.openNode = function(E) {
        if (!E.isOpen)
          return !this.root && this.currentLevel === 0 && E instanceof l && (this.root = E), this.onData(this.writer.openNode(E, this.currentLevel), this.currentLevel), E.isOpen = !0;
      }, x.prototype.closeNode = function(E) {
        if (!E.isClosed)
          return this.onData(this.writer.closeNode(E, this.currentLevel), this.currentLevel), E.isClosed = !0;
      }, x.prototype.onData = function(E, S) {
        return this.documentStarted = !0, this.onDataCallback(E, S + 1);
      }, x.prototype.onEnd = function() {
        return this.documentCompleted = !0, this.onEndCallback();
      }, x.prototype.debugInfo = function(E) {
        return E == null ? "" : "node: <" + E + ">";
      }, x.prototype.ele = function() {
        return this.element.apply(this, arguments);
      }, x.prototype.nod = function(E, S, U) {
        return this.node(E, S, U);
      }, x.prototype.txt = function(E) {
        return this.text(E);
      }, x.prototype.dat = function(E) {
        return this.cdata(E);
      }, x.prototype.com = function(E) {
        return this.comment(E);
      }, x.prototype.ins = function(E, S) {
        return this.instruction(E, S);
      }, x.prototype.dec = function(E, S, U) {
        return this.declaration(E, S, U);
      }, x.prototype.dtd = function(E, S, U) {
        return this.doctype(E, S, U);
      }, x.prototype.e = function(E, S, U) {
        return this.element(E, S, U);
      }, x.prototype.n = function(E, S, U) {
        return this.node(E, S, U);
      }, x.prototype.t = function(E) {
        return this.text(E);
      }, x.prototype.d = function(E) {
        return this.cdata(E);
      }, x.prototype.c = function(E) {
        return this.comment(E);
      }, x.prototype.r = function(E) {
        return this.raw(E);
      }, x.prototype.i = function(E, S) {
        return this.instruction(E, S);
      }, x.prototype.att = function() {
        return this.currentNode && this.currentNode instanceof c ? this.attList.apply(this, arguments) : this.attribute.apply(this, arguments);
      }, x.prototype.a = function() {
        return this.currentNode && this.currentNode instanceof c ? this.attList.apply(this, arguments) : this.attribute.apply(this, arguments);
      }, x.prototype.ent = function(E, S) {
        return this.entity(E, S);
      }, x.prototype.pent = function(E, S) {
        return this.pEntity(E, S);
      }, x.prototype.not = function(E, S) {
        return this.notation(E, S);
      }, x;
    }();
  }).call(TF)), Ga.exports;
}
var Ka = { exports: {} }, CF = Ka.exports, Kb;
function SF() {
  return Kb || (Kb = 1, (function() {
    var t, e, n, r, i, o, a, s, c, l, u, f, d, h, p = function(g, y) {
      for (var b in y)
        m.call(y, b) && (g[b] = y[b]);
      function v() {
        this.constructor = g;
      }
      return v.prototype = y.prototype, g.prototype = new v(), g.__super__ = y.prototype, g;
    }, m = {}.hasOwnProperty;
    a = yc(), s = wc(), t = gc(), e = mc(), l = pc(), f = _c(), d = Tc(), u = Ec(), c = Ip(), n = bc(), r = Dc(), i = vc(), o = xc(), h = Nw(), Ka.exports = function(g) {
      p(y, g);
      function y(b, v) {
        y.__super__.constructor.call(this, v), this.stream = b;
      }
      return y.prototype.document = function(b) {
        var v, _, x, E, S, U, C, R;
        for (U = b.children, _ = 0, E = U.length; _ < E; _++)
          v = U[_], v.isLastRootNode = !1;
        for (b.children[b.children.length - 1].isLastRootNode = !0, C = b.children, R = [], x = 0, S = C.length; x < S; x++)
          if (v = C[x], !(v instanceof c))
            switch (!1) {
              case !(v instanceof a):
                R.push(this.declaration(v));
                break;
              case !(v instanceof s):
                R.push(this.docType(v));
                break;
              case !(v instanceof e):
                R.push(this.comment(v));
                break;
              case !(v instanceof u):
                R.push(this.processingInstruction(v));
                break;
              default:
                R.push(this.element(v));
            }
        return R;
      }, y.prototype.attribute = function(b) {
        return this.stream.write(" " + b.name + '="' + b.value + '"');
      }, y.prototype.cdata = function(b, v) {
        return this.stream.write(this.space(v) + "<![CDATA[" + b.text + "]]>" + this.endline(b));
      }, y.prototype.comment = function(b, v) {
        return this.stream.write(this.space(v) + "<!-- " + b.text + " -->" + this.endline(b));
      }, y.prototype.declaration = function(b, v) {
        return this.stream.write(this.space(v)), this.stream.write('<?xml version="' + b.version + '"'), b.encoding != null && this.stream.write(' encoding="' + b.encoding + '"'), b.standalone != null && this.stream.write(' standalone="' + b.standalone + '"'), this.stream.write(this.spacebeforeslash + "?>"), this.stream.write(this.endline(b));
      }, y.prototype.docType = function(b, v) {
        var _, x, E, S;
        if (v || (v = 0), this.stream.write(this.space(v)), this.stream.write("<!DOCTYPE " + b.root().name), b.pubID && b.sysID ? this.stream.write(' PUBLIC "' + b.pubID + '" "' + b.sysID + '"') : b.sysID && this.stream.write(' SYSTEM "' + b.sysID + '"'), b.children.length > 0) {
          for (this.stream.write(" ["), this.stream.write(this.endline(b)), S = b.children, x = 0, E = S.length; x < E; x++)
            switch (_ = S[x], !1) {
              case !(_ instanceof n):
                this.dtdAttList(_, v + 1);
                break;
              case !(_ instanceof r):
                this.dtdElement(_, v + 1);
                break;
              case !(_ instanceof i):
                this.dtdEntity(_, v + 1);
                break;
              case !(_ instanceof o):
                this.dtdNotation(_, v + 1);
                break;
              case !(_ instanceof t):
                this.cdata(_, v + 1);
                break;
              case !(_ instanceof e):
                this.comment(_, v + 1);
                break;
              case !(_ instanceof u):
                this.processingInstruction(_, v + 1);
                break;
              default:
                throw new Error("Unknown DTD node type: " + _.constructor.name);
            }
          this.stream.write("]");
        }
        return this.stream.write(this.spacebeforeslash + ">"), this.stream.write(this.endline(b));
      }, y.prototype.element = function(b, v) {
        var _, x, E, S, U, C, R, j;
        v || (v = 0), j = this.space(v), this.stream.write(j + "<" + b.name), C = b.attributes;
        for (U in C)
          m.call(C, U) && (_ = C[U], this.attribute(_));
        if (b.children.length === 0 || b.children.every(function(T) {
          return T.value === "";
        }))
          this.allowEmpty ? this.stream.write("></" + b.name + ">") : this.stream.write(this.spacebeforeslash + "/>");
        else if (this.pretty && b.children.length === 1 && b.children[0].value != null)
          this.stream.write(">"), this.stream.write(b.children[0].value), this.stream.write("</" + b.name + ">");
        else {
          for (this.stream.write(">" + this.newline), R = b.children, E = 0, S = R.length; E < S; E++)
            switch (x = R[E], !1) {
              case !(x instanceof t):
                this.cdata(x, v + 1);
                break;
              case !(x instanceof e):
                this.comment(x, v + 1);
                break;
              case !(x instanceof l):
                this.element(x, v + 1);
                break;
              case !(x instanceof f):
                this.raw(x, v + 1);
                break;
              case !(x instanceof d):
                this.text(x, v + 1);
                break;
              case !(x instanceof u):
                this.processingInstruction(x, v + 1);
                break;
              case !(x instanceof c):
                break;
              default:
                throw new Error("Unknown XML node type: " + x.constructor.name);
            }
          this.stream.write(j + "</" + b.name + ">");
        }
        return this.stream.write(this.endline(b));
      }, y.prototype.processingInstruction = function(b, v) {
        return this.stream.write(this.space(v) + "<?" + b.target), b.value && this.stream.write(" " + b.value), this.stream.write(this.spacebeforeslash + "?>" + this.endline(b));
      }, y.prototype.raw = function(b, v) {
        return this.stream.write(this.space(v) + b.value + this.endline(b));
      }, y.prototype.text = function(b, v) {
        return this.stream.write(this.space(v) + b.value + this.endline(b));
      }, y.prototype.dtdAttList = function(b, v) {
        return this.stream.write(this.space(v) + "<!ATTLIST " + b.elementName + " " + b.attributeName + " " + b.attributeType), b.defaultValueType !== "#DEFAULT" && this.stream.write(" " + b.defaultValueType), b.defaultValue && this.stream.write(' "' + b.defaultValue + '"'), this.stream.write(this.spacebeforeslash + ">" + this.endline(b));
      }, y.prototype.dtdElement = function(b, v) {
        return this.stream.write(this.space(v) + "<!ELEMENT " + b.name + " " + b.value), this.stream.write(this.spacebeforeslash + ">" + this.endline(b));
      }, y.prototype.dtdEntity = function(b, v) {
        return this.stream.write(this.space(v) + "<!ENTITY"), b.pe && this.stream.write(" %"), this.stream.write(" " + b.name), b.value ? this.stream.write(' "' + b.value + '"') : (b.pubID && b.sysID ? this.stream.write(' PUBLIC "' + b.pubID + '" "' + b.sysID + '"') : b.sysID && this.stream.write(' SYSTEM "' + b.sysID + '"'), b.nData && this.stream.write(" NDATA " + b.nData)), this.stream.write(this.spacebeforeslash + ">" + this.endline(b));
      }, y.prototype.dtdNotation = function(b, v) {
        return this.stream.write(this.space(v) + "<!NOTATION " + b.name), b.pubID && b.sysID ? this.stream.write(' PUBLIC "' + b.pubID + '" "' + b.sysID + '"') : b.pubID ? this.stream.write(' PUBLIC "' + b.pubID + '"') : b.sysID && this.stream.write(' SYSTEM "' + b.sysID + '"'), this.stream.write(this.spacebeforeslash + ">" + this.endline(b));
      }, y.prototype.endline = function(b) {
        return b.isLastRootNode ? "" : this.newline;
      }, y;
    }(h);
  }).call(CF)), Ka.exports;
}
var Jb;
function AF() {
  return Jb || (Jb = 1, (function() {
    var t, e, n, r, i, o, a;
    a = Dr(), i = a.assign, o = a.isFunction, t = _F(), e = EF(), r = Mp(), n = SF(), _r.create = function(s, c, l, u) {
      var f, d;
      if (s == null)
        throw new Error("Root element needs a name.");
      return u = i({}, c, l, u), f = new t(u), d = f.element(s), u.headless || (f.declaration(u), (u.pubID != null || u.sysID != null) && f.doctype(u)), d;
    }, _r.begin = function(s, c, l) {
      var u;
      return o(s) && (u = [s, c], c = u[0], l = u[1], s = {}), c ? new e(s, c, l) : new t(s);
    }, _r.stringWriter = function(s) {
      return new r(s);
    }, _r.streamWriter = function(s, c) {
      return new n(s, c);
    };
  }).call(_r)), _r;
}
var Zb;
function UF() {
  if (Zb) return Ef;
  Zb = 1;
  var t = et, e = AF();
  Ef.writeString = n;
  function n(i, o) {
    var a = t.invert(o), s = {
      element: l,
      text: r
    };
    function c(d, h) {
      return s[h.type](d, h);
    }
    function l(d, h) {
      var p = d.element(u(h.name), h.attributes);
      h.children.forEach(function(m) {
        c(p, m);
      });
    }
    function u(d) {
      var h = /^\{(.*)\}(.*)$/.exec(d);
      if (h) {
        var p = a[h[1]];
        return p + (p === "" ? "" : ":") + h[2];
      } else
        return d;
    }
    function f(d) {
      var h = e.create(u(d.name), {
        version: "1.0",
        encoding: "UTF-8",
        standalone: !0
      });
      return t.forEach(o, function(p, m) {
        var g = "xmlns" + (m === "" ? "" : ":" + m);
        h.attribute(g, p);
      }), d.children.forEach(function(p) {
        c(h, p);
      }), h.end();
    }
    return f(i);
  }
  function r(i, o) {
    i.text(o.value);
  }
  return Ef;
}
var Yb;
function Wp() {
  if (Yb) return Hn;
  Yb = 1;
  var t = Fw();
  return Hn.Element = t.Element, Hn.element = t.element, Hn.emptyElement = t.emptyElement, Hn.text = t.text, Hn.readString = rF().readString, Hn.writeString = UF().writeString, Hn;
}
var Qb;
function kF() {
  if (Qb) return sa;
  Qb = 1;
  var t = et, e = vr(), n = Wp();
  sa.read = i, sa.readXmlFromZipFile = o;
  var r = {
    // Transitional format
    "http://schemas.openxmlformats.org/wordprocessingml/2006/main": "w",
    "http://schemas.openxmlformats.org/officeDocument/2006/relationships": "r",
    "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing": "wp",
    "http://schemas.openxmlformats.org/drawingml/2006/main": "a",
    "http://schemas.openxmlformats.org/drawingml/2006/picture": "pic",
    // Strict format
    "http://purl.oclc.org/ooxml/wordprocessingml/main": "w",
    "http://purl.oclc.org/ooxml/officeDocument/relationships": "r",
    "http://purl.oclc.org/ooxml/drawingml/wordprocessingDrawing": "wp",
    "http://purl.oclc.org/ooxml/drawingml/main": "a",
    "http://purl.oclc.org/ooxml/drawingml/picture": "pic",
    // Common
    "http://schemas.openxmlformats.org/package/2006/content-types": "content-types",
    "http://schemas.openxmlformats.org/package/2006/relationships": "relationships",
    "http://schemas.openxmlformats.org/markup-compatibility/2006": "mc",
    "urn:schemas-microsoft-com:vml": "v",
    "urn:schemas-microsoft-com:office:word": "office-word",
    // [MS-DOCX]: Word Extensions to the Office Open XML (.docx) File Format
    // https://learn.microsoft.com/en-us/openspecs/office_standards/ms-docx/b839fe1f-e1ca-4fa6-8c26-5954d0abbccd
    "http://schemas.microsoft.com/office/word/2010/wordml": "wordml"
  };
  function i(c) {
    return n.readString(c, r).then(function(l) {
      return s(l)[0];
    });
  }
  function o(c, l) {
    return c.exists(l) ? c.read(l, "utf-8").then(a).then(i) : e.resolve(null);
  }
  function a(c) {
    return c.replace(/^\uFEFF/g, "");
  }
  function s(c) {
    return c.type === "element" ? c.name === "mc:AlternateContent" ? c.first("mc:Fallback").children : (c.children = t.flatten(c.children.map(s, !0)), [c]) : [c];
  }
  return sa;
}
var ua = {}, en = {}, fa = {}, e2;
function FF() {
  if (e2) return fa;
  e2 = 1, Object.defineProperty(fa, "__esModule", { value: !0 });
  var t = [
    { "Typeface name": "Symbol", "Dingbat dec": "32", "Dingbat hex": "20", "Unicode dec": "32", "Unicode hex": "20" },
    { "Typeface name": "Symbol", "Dingbat dec": "33", "Dingbat hex": "21", "Unicode dec": "33", "Unicode hex": "21" },
    { "Typeface name": "Symbol", "Dingbat dec": "34", "Dingbat hex": "22", "Unicode dec": "8704", "Unicode hex": "2200" },
    { "Typeface name": "Symbol", "Dingbat dec": "35", "Dingbat hex": "23", "Unicode dec": "35", "Unicode hex": "23" },
    { "Typeface name": "Symbol", "Dingbat dec": "36", "Dingbat hex": "24", "Unicode dec": "8707", "Unicode hex": "2203" },
    { "Typeface name": "Symbol", "Dingbat dec": "37", "Dingbat hex": "25", "Unicode dec": "37", "Unicode hex": "25" },
    { "Typeface name": "Symbol", "Dingbat dec": "38", "Dingbat hex": "26", "Unicode dec": "38", "Unicode hex": "26" },
    { "Typeface name": "Symbol", "Dingbat dec": "39", "Dingbat hex": "27", "Unicode dec": "8717", "Unicode hex": "220D" },
    { "Typeface name": "Symbol", "Dingbat dec": "40", "Dingbat hex": "28", "Unicode dec": "40", "Unicode hex": "28" },
    { "Typeface name": "Symbol", "Dingbat dec": "41", "Dingbat hex": "29", "Unicode dec": "41", "Unicode hex": "29" },
    { "Typeface name": "Symbol", "Dingbat dec": "42", "Dingbat hex": "2A", "Unicode dec": "42", "Unicode hex": "2A" },
    { "Typeface name": "Symbol", "Dingbat dec": "43", "Dingbat hex": "2B", "Unicode dec": "43", "Unicode hex": "2B" },
    { "Typeface name": "Symbol", "Dingbat dec": "44", "Dingbat hex": "2C", "Unicode dec": "44", "Unicode hex": "2C" },
    { "Typeface name": "Symbol", "Dingbat dec": "45", "Dingbat hex": "2D", "Unicode dec": "8722", "Unicode hex": "2212" },
    { "Typeface name": "Symbol", "Dingbat dec": "46", "Dingbat hex": "2E", "Unicode dec": "46", "Unicode hex": "2E" },
    { "Typeface name": "Symbol", "Dingbat dec": "47", "Dingbat hex": "2F", "Unicode dec": "47", "Unicode hex": "2F" },
    { "Typeface name": "Symbol", "Dingbat dec": "48", "Dingbat hex": "30", "Unicode dec": "48", "Unicode hex": "30" },
    { "Typeface name": "Symbol", "Dingbat dec": "49", "Dingbat hex": "31", "Unicode dec": "49", "Unicode hex": "31" },
    { "Typeface name": "Symbol", "Dingbat dec": "50", "Dingbat hex": "32", "Unicode dec": "50", "Unicode hex": "32" },
    { "Typeface name": "Symbol", "Dingbat dec": "51", "Dingbat hex": "33", "Unicode dec": "51", "Unicode hex": "33" },
    { "Typeface name": "Symbol", "Dingbat dec": "52", "Dingbat hex": "34", "Unicode dec": "52", "Unicode hex": "34" },
    { "Typeface name": "Symbol", "Dingbat dec": "53", "Dingbat hex": "35", "Unicode dec": "53", "Unicode hex": "35" },
    { "Typeface name": "Symbol", "Dingbat dec": "54", "Dingbat hex": "36", "Unicode dec": "54", "Unicode hex": "36" },
    { "Typeface name": "Symbol", "Dingbat dec": "55", "Dingbat hex": "37", "Unicode dec": "55", "Unicode hex": "37" },
    { "Typeface name": "Symbol", "Dingbat dec": "56", "Dingbat hex": "38", "Unicode dec": "56", "Unicode hex": "38" },
    { "Typeface name": "Symbol", "Dingbat dec": "57", "Dingbat hex": "39", "Unicode dec": "57", "Unicode hex": "39" },
    { "Typeface name": "Symbol", "Dingbat dec": "58", "Dingbat hex": "3A", "Unicode dec": "58", "Unicode hex": "3A" },
    { "Typeface name": "Symbol", "Dingbat dec": "59", "Dingbat hex": "3B", "Unicode dec": "59", "Unicode hex": "3B" },
    { "Typeface name": "Symbol", "Dingbat dec": "60", "Dingbat hex": "3C", "Unicode dec": "60", "Unicode hex": "3C" },
    { "Typeface name": "Symbol", "Dingbat dec": "61", "Dingbat hex": "3D", "Unicode dec": "61", "Unicode hex": "3D" },
    { "Typeface name": "Symbol", "Dingbat dec": "62", "Dingbat hex": "3E", "Unicode dec": "62", "Unicode hex": "3E" },
    { "Typeface name": "Symbol", "Dingbat dec": "63", "Dingbat hex": "3F", "Unicode dec": "63", "Unicode hex": "3F" },
    { "Typeface name": "Symbol", "Dingbat dec": "64", "Dingbat hex": "40", "Unicode dec": "8773", "Unicode hex": "2245" },
    { "Typeface name": "Symbol", "Dingbat dec": "65", "Dingbat hex": "41", "Unicode dec": "913", "Unicode hex": "391" },
    { "Typeface name": "Symbol", "Dingbat dec": "66", "Dingbat hex": "42", "Unicode dec": "914", "Unicode hex": "392" },
    { "Typeface name": "Symbol", "Dingbat dec": "67", "Dingbat hex": "43", "Unicode dec": "935", "Unicode hex": "3A7" },
    { "Typeface name": "Symbol", "Dingbat dec": "68", "Dingbat hex": "44", "Unicode dec": "916", "Unicode hex": "394" },
    { "Typeface name": "Symbol", "Dingbat dec": "69", "Dingbat hex": "45", "Unicode dec": "917", "Unicode hex": "395" },
    { "Typeface name": "Symbol", "Dingbat dec": "70", "Dingbat hex": "46", "Unicode dec": "934", "Unicode hex": "3A6" },
    { "Typeface name": "Symbol", "Dingbat dec": "71", "Dingbat hex": "47", "Unicode dec": "915", "Unicode hex": "393" },
    { "Typeface name": "Symbol", "Dingbat dec": "72", "Dingbat hex": "48", "Unicode dec": "919", "Unicode hex": "397" },
    { "Typeface name": "Symbol", "Dingbat dec": "73", "Dingbat hex": "49", "Unicode dec": "921", "Unicode hex": "399" },
    { "Typeface name": "Symbol", "Dingbat dec": "74", "Dingbat hex": "4A", "Unicode dec": "977", "Unicode hex": "3D1" },
    { "Typeface name": "Symbol", "Dingbat dec": "75", "Dingbat hex": "4B", "Unicode dec": "922", "Unicode hex": "39A" },
    { "Typeface name": "Symbol", "Dingbat dec": "76", "Dingbat hex": "4C", "Unicode dec": "923", "Unicode hex": "39B" },
    { "Typeface name": "Symbol", "Dingbat dec": "77", "Dingbat hex": "4D", "Unicode dec": "924", "Unicode hex": "39C" },
    { "Typeface name": "Symbol", "Dingbat dec": "78", "Dingbat hex": "4E", "Unicode dec": "925", "Unicode hex": "39D" },
    { "Typeface name": "Symbol", "Dingbat dec": "79", "Dingbat hex": "4F", "Unicode dec": "927", "Unicode hex": "39F" },
    { "Typeface name": "Symbol", "Dingbat dec": "80", "Dingbat hex": "50", "Unicode dec": "928", "Unicode hex": "3A0" },
    { "Typeface name": "Symbol", "Dingbat dec": "81", "Dingbat hex": "51", "Unicode dec": "920", "Unicode hex": "398" },
    { "Typeface name": "Symbol", "Dingbat dec": "82", "Dingbat hex": "52", "Unicode dec": "929", "Unicode hex": "3A1" },
    { "Typeface name": "Symbol", "Dingbat dec": "83", "Dingbat hex": "53", "Unicode dec": "931", "Unicode hex": "3A3" },
    { "Typeface name": "Symbol", "Dingbat dec": "84", "Dingbat hex": "54", "Unicode dec": "932", "Unicode hex": "3A4" },
    { "Typeface name": "Symbol", "Dingbat dec": "85", "Dingbat hex": "55", "Unicode dec": "933", "Unicode hex": "3A5" },
    { "Typeface name": "Symbol", "Dingbat dec": "86", "Dingbat hex": "56", "Unicode dec": "962", "Unicode hex": "3C2" },
    { "Typeface name": "Symbol", "Dingbat dec": "87", "Dingbat hex": "57", "Unicode dec": "937", "Unicode hex": "3A9" },
    { "Typeface name": "Symbol", "Dingbat dec": "88", "Dingbat hex": "58", "Unicode dec": "926", "Unicode hex": "39E" },
    { "Typeface name": "Symbol", "Dingbat dec": "89", "Dingbat hex": "59", "Unicode dec": "936", "Unicode hex": "3A8" },
    { "Typeface name": "Symbol", "Dingbat dec": "90", "Dingbat hex": "5A", "Unicode dec": "918", "Unicode hex": "396" },
    { "Typeface name": "Symbol", "Dingbat dec": "91", "Dingbat hex": "5B", "Unicode dec": "91", "Unicode hex": "5B" },
    { "Typeface name": "Symbol", "Dingbat dec": "92", "Dingbat hex": "5C", "Unicode dec": "8756", "Unicode hex": "2234" },
    { "Typeface name": "Symbol", "Dingbat dec": "93", "Dingbat hex": "5D", "Unicode dec": "93", "Unicode hex": "5D" },
    { "Typeface name": "Symbol", "Dingbat dec": "94", "Dingbat hex": "5E", "Unicode dec": "8869", "Unicode hex": "22A5" },
    { "Typeface name": "Symbol", "Dingbat dec": "95", "Dingbat hex": "5F", "Unicode dec": "95", "Unicode hex": "5F" },
    { "Typeface name": "Symbol", "Dingbat dec": "96", "Dingbat hex": "60", "Unicode dec": "8254", "Unicode hex": "203E" },
    { "Typeface name": "Symbol", "Dingbat dec": "97", "Dingbat hex": "61", "Unicode dec": "945", "Unicode hex": "3B1" },
    { "Typeface name": "Symbol", "Dingbat dec": "98", "Dingbat hex": "62", "Unicode dec": "946", "Unicode hex": "3B2" },
    { "Typeface name": "Symbol", "Dingbat dec": "99", "Dingbat hex": "63", "Unicode dec": "967", "Unicode hex": "3C7" },
    { "Typeface name": "Symbol", "Dingbat dec": "100", "Dingbat hex": "64", "Unicode dec": "948", "Unicode hex": "3B4" },
    { "Typeface name": "Symbol", "Dingbat dec": "101", "Dingbat hex": "65", "Unicode dec": "949", "Unicode hex": "3B5" },
    { "Typeface name": "Symbol", "Dingbat dec": "102", "Dingbat hex": "66", "Unicode dec": "966", "Unicode hex": "3C6" },
    { "Typeface name": "Symbol", "Dingbat dec": "103", "Dingbat hex": "67", "Unicode dec": "947", "Unicode hex": "3B3" },
    { "Typeface name": "Symbol", "Dingbat dec": "104", "Dingbat hex": "68", "Unicode dec": "951", "Unicode hex": "3B7" },
    { "Typeface name": "Symbol", "Dingbat dec": "105", "Dingbat hex": "69", "Unicode dec": "953", "Unicode hex": "3B9" },
    { "Typeface name": "Symbol", "Dingbat dec": "106", "Dingbat hex": "6A", "Unicode dec": "981", "Unicode hex": "3D5" },
    { "Typeface name": "Symbol", "Dingbat dec": "107", "Dingbat hex": "6B", "Unicode dec": "954", "Unicode hex": "3BA" },
    { "Typeface name": "Symbol", "Dingbat dec": "108", "Dingbat hex": "6C", "Unicode dec": "955", "Unicode hex": "3BB" },
    { "Typeface name": "Symbol", "Dingbat dec": "109", "Dingbat hex": "6D", "Unicode dec": "956", "Unicode hex": "3BC" },
    { "Typeface name": "Symbol", "Dingbat dec": "110", "Dingbat hex": "6E", "Unicode dec": "957", "Unicode hex": "3BD" },
    { "Typeface name": "Symbol", "Dingbat dec": "111", "Dingbat hex": "6F", "Unicode dec": "959", "Unicode hex": "3BF" },
    { "Typeface name": "Symbol", "Dingbat dec": "112", "Dingbat hex": "70", "Unicode dec": "960", "Unicode hex": "3C0" },
    { "Typeface name": "Symbol", "Dingbat dec": "113", "Dingbat hex": "71", "Unicode dec": "952", "Unicode hex": "3B8" },
    { "Typeface name": "Symbol", "Dingbat dec": "114", "Dingbat hex": "72", "Unicode dec": "961", "Unicode hex": "3C1" },
    { "Typeface name": "Symbol", "Dingbat dec": "115", "Dingbat hex": "73", "Unicode dec": "963", "Unicode hex": "3C3" },
    { "Typeface name": "Symbol", "Dingbat dec": "116", "Dingbat hex": "74", "Unicode dec": "964", "Unicode hex": "3C4" },
    { "Typeface name": "Symbol", "Dingbat dec": "117", "Dingbat hex": "75", "Unicode dec": "965", "Unicode hex": "3C5" },
    { "Typeface name": "Symbol", "Dingbat dec": "118", "Dingbat hex": "76", "Unicode dec": "982", "Unicode hex": "3D6" },
    { "Typeface name": "Symbol", "Dingbat dec": "119", "Dingbat hex": "77", "Unicode dec": "969", "Unicode hex": "3C9" },
    { "Typeface name": "Symbol", "Dingbat dec": "120", "Dingbat hex": "78", "Unicode dec": "958", "Unicode hex": "3BE" },
    { "Typeface name": "Symbol", "Dingbat dec": "121", "Dingbat hex": "79", "Unicode dec": "968", "Unicode hex": "3C8" },
    { "Typeface name": "Symbol", "Dingbat dec": "122", "Dingbat hex": "7A", "Unicode dec": "950", "Unicode hex": "3B6" },
    { "Typeface name": "Symbol", "Dingbat dec": "123", "Dingbat hex": "7B", "Unicode dec": "123", "Unicode hex": "7B" },
    { "Typeface name": "Symbol", "Dingbat dec": "124", "Dingbat hex": "7C", "Unicode dec": "124", "Unicode hex": "7C" },
    { "Typeface name": "Symbol", "Dingbat dec": "125", "Dingbat hex": "7D", "Unicode dec": "125", "Unicode hex": "7D" },
    { "Typeface name": "Symbol", "Dingbat dec": "126", "Dingbat hex": "7E", "Unicode dec": "126", "Unicode hex": "7E" },
    { "Typeface name": "Symbol", "Dingbat dec": "160", "Dingbat hex": "A0", "Unicode dec": "8364", "Unicode hex": "20AC" },
    { "Typeface name": "Symbol", "Dingbat dec": "161", "Dingbat hex": "A1", "Unicode dec": "978", "Unicode hex": "3D2" },
    { "Typeface name": "Symbol", "Dingbat dec": "162", "Dingbat hex": "A2", "Unicode dec": "8242", "Unicode hex": "2032" },
    { "Typeface name": "Symbol", "Dingbat dec": "163", "Dingbat hex": "A3", "Unicode dec": "8804", "Unicode hex": "2264" },
    { "Typeface name": "Symbol", "Dingbat dec": "164", "Dingbat hex": "A4", "Unicode dec": "8260", "Unicode hex": "2044" },
    { "Typeface name": "Symbol", "Dingbat dec": "165", "Dingbat hex": "A5", "Unicode dec": "8734", "Unicode hex": "221E" },
    { "Typeface name": "Symbol", "Dingbat dec": "166", "Dingbat hex": "A6", "Unicode dec": "402", "Unicode hex": "192" },
    { "Typeface name": "Symbol", "Dingbat dec": "167", "Dingbat hex": "A7", "Unicode dec": "9827", "Unicode hex": "2663" },
    { "Typeface name": "Symbol", "Dingbat dec": "168", "Dingbat hex": "A8", "Unicode dec": "9830", "Unicode hex": "2666" },
    { "Typeface name": "Symbol", "Dingbat dec": "169", "Dingbat hex": "A9", "Unicode dec": "9829", "Unicode hex": "2665" },
    { "Typeface name": "Symbol", "Dingbat dec": "170", "Dingbat hex": "AA", "Unicode dec": "9824", "Unicode hex": "2660" },
    { "Typeface name": "Symbol", "Dingbat dec": "171", "Dingbat hex": "AB", "Unicode dec": "8596", "Unicode hex": "2194" },
    { "Typeface name": "Symbol", "Dingbat dec": "172", "Dingbat hex": "AC", "Unicode dec": "8592", "Unicode hex": "2190" },
    { "Typeface name": "Symbol", "Dingbat dec": "173", "Dingbat hex": "AD", "Unicode dec": "8593", "Unicode hex": "2191" },
    { "Typeface name": "Symbol", "Dingbat dec": "174", "Dingbat hex": "AE", "Unicode dec": "8594", "Unicode hex": "2192" },
    { "Typeface name": "Symbol", "Dingbat dec": "175", "Dingbat hex": "AF", "Unicode dec": "8595", "Unicode hex": "2193" },
    { "Typeface name": "Symbol", "Dingbat dec": "176", "Dingbat hex": "B0", "Unicode dec": "176", "Unicode hex": "B0" },
    { "Typeface name": "Symbol", "Dingbat dec": "177", "Dingbat hex": "B1", "Unicode dec": "177", "Unicode hex": "B1" },
    { "Typeface name": "Symbol", "Dingbat dec": "178", "Dingbat hex": "B2", "Unicode dec": "8243", "Unicode hex": "2033" },
    { "Typeface name": "Symbol", "Dingbat dec": "179", "Dingbat hex": "B3", "Unicode dec": "8805", "Unicode hex": "2265" },
    { "Typeface name": "Symbol", "Dingbat dec": "180", "Dingbat hex": "B4", "Unicode dec": "215", "Unicode hex": "D7" },
    { "Typeface name": "Symbol", "Dingbat dec": "181", "Dingbat hex": "B5", "Unicode dec": "8733", "Unicode hex": "221D" },
    { "Typeface name": "Symbol", "Dingbat dec": "182", "Dingbat hex": "B6", "Unicode dec": "8706", "Unicode hex": "2202" },
    { "Typeface name": "Symbol", "Dingbat dec": "183", "Dingbat hex": "B7", "Unicode dec": "8226", "Unicode hex": "2022" },
    { "Typeface name": "Symbol", "Dingbat dec": "184", "Dingbat hex": "B8", "Unicode dec": "247", "Unicode hex": "F7" },
    { "Typeface name": "Symbol", "Dingbat dec": "185", "Dingbat hex": "B9", "Unicode dec": "8800", "Unicode hex": "2260" },
    { "Typeface name": "Symbol", "Dingbat dec": "186", "Dingbat hex": "BA", "Unicode dec": "8801", "Unicode hex": "2261" },
    { "Typeface name": "Symbol", "Dingbat dec": "187", "Dingbat hex": "BB", "Unicode dec": "8776", "Unicode hex": "2248" },
    { "Typeface name": "Symbol", "Dingbat dec": "188", "Dingbat hex": "BC", "Unicode dec": "8230", "Unicode hex": "2026" },
    { "Typeface name": "Symbol", "Dingbat dec": "189", "Dingbat hex": "BD", "Unicode dec": "9168", "Unicode hex": "23D0" },
    { "Typeface name": "Symbol", "Dingbat dec": "190", "Dingbat hex": "BE", "Unicode dec": "9135", "Unicode hex": "23AF" },
    { "Typeface name": "Symbol", "Dingbat dec": "191", "Dingbat hex": "BF", "Unicode dec": "8629", "Unicode hex": "21B5" },
    { "Typeface name": "Symbol", "Dingbat dec": "192", "Dingbat hex": "C0", "Unicode dec": "8501", "Unicode hex": "2135" },
    { "Typeface name": "Symbol", "Dingbat dec": "193", "Dingbat hex": "C1", "Unicode dec": "8465", "Unicode hex": "2111" },
    { "Typeface name": "Symbol", "Dingbat dec": "194", "Dingbat hex": "C2", "Unicode dec": "8476", "Unicode hex": "211C" },
    { "Typeface name": "Symbol", "Dingbat dec": "195", "Dingbat hex": "C3", "Unicode dec": "8472", "Unicode hex": "2118" },
    { "Typeface name": "Symbol", "Dingbat dec": "196", "Dingbat hex": "C4", "Unicode dec": "8855", "Unicode hex": "2297" },
    { "Typeface name": "Symbol", "Dingbat dec": "197", "Dingbat hex": "C5", "Unicode dec": "8853", "Unicode hex": "2295" },
    { "Typeface name": "Symbol", "Dingbat dec": "198", "Dingbat hex": "C6", "Unicode dec": "8709", "Unicode hex": "2205" },
    { "Typeface name": "Symbol", "Dingbat dec": "199", "Dingbat hex": "C7", "Unicode dec": "8745", "Unicode hex": "2229" },
    { "Typeface name": "Symbol", "Dingbat dec": "200", "Dingbat hex": "C8", "Unicode dec": "8746", "Unicode hex": "222A" },
    { "Typeface name": "Symbol", "Dingbat dec": "201", "Dingbat hex": "C9", "Unicode dec": "8835", "Unicode hex": "2283" },
    { "Typeface name": "Symbol", "Dingbat dec": "202", "Dingbat hex": "CA", "Unicode dec": "8839", "Unicode hex": "2287" },
    { "Typeface name": "Symbol", "Dingbat dec": "203", "Dingbat hex": "CB", "Unicode dec": "8836", "Unicode hex": "2284" },
    { "Typeface name": "Symbol", "Dingbat dec": "204", "Dingbat hex": "CC", "Unicode dec": "8834", "Unicode hex": "2282" },
    { "Typeface name": "Symbol", "Dingbat dec": "205", "Dingbat hex": "CD", "Unicode dec": "8838", "Unicode hex": "2286" },
    { "Typeface name": "Symbol", "Dingbat dec": "206", "Dingbat hex": "CE", "Unicode dec": "8712", "Unicode hex": "2208" },
    { "Typeface name": "Symbol", "Dingbat dec": "207", "Dingbat hex": "CF", "Unicode dec": "8713", "Unicode hex": "2209" },
    { "Typeface name": "Symbol", "Dingbat dec": "208", "Dingbat hex": "D0", "Unicode dec": "8736", "Unicode hex": "2220" },
    { "Typeface name": "Symbol", "Dingbat dec": "209", "Dingbat hex": "D1", "Unicode dec": "8711", "Unicode hex": "2207" },
    { "Typeface name": "Symbol", "Dingbat dec": "210", "Dingbat hex": "D2", "Unicode dec": "174", "Unicode hex": "AE" },
    { "Typeface name": "Symbol", "Dingbat dec": "211", "Dingbat hex": "D3", "Unicode dec": "169", "Unicode hex": "A9" },
    { "Typeface name": "Symbol", "Dingbat dec": "212", "Dingbat hex": "D4", "Unicode dec": "8482", "Unicode hex": "2122" },
    { "Typeface name": "Symbol", "Dingbat dec": "213", "Dingbat hex": "D5", "Unicode dec": "8719", "Unicode hex": "220F" },
    { "Typeface name": "Symbol", "Dingbat dec": "214", "Dingbat hex": "D6", "Unicode dec": "8730", "Unicode hex": "221A" },
    { "Typeface name": "Symbol", "Dingbat dec": "215", "Dingbat hex": "D7", "Unicode dec": "8901", "Unicode hex": "22C5" },
    { "Typeface name": "Symbol", "Dingbat dec": "216", "Dingbat hex": "D8", "Unicode dec": "172", "Unicode hex": "AC" },
    { "Typeface name": "Symbol", "Dingbat dec": "217", "Dingbat hex": "D9", "Unicode dec": "8743", "Unicode hex": "2227" },
    { "Typeface name": "Symbol", "Dingbat dec": "218", "Dingbat hex": "DA", "Unicode dec": "8744", "Unicode hex": "2228" },
    { "Typeface name": "Symbol", "Dingbat dec": "219", "Dingbat hex": "DB", "Unicode dec": "8660", "Unicode hex": "21D4" },
    { "Typeface name": "Symbol", "Dingbat dec": "220", "Dingbat hex": "DC", "Unicode dec": "8656", "Unicode hex": "21D0" },
    { "Typeface name": "Symbol", "Dingbat dec": "221", "Dingbat hex": "DD", "Unicode dec": "8657", "Unicode hex": "21D1" },
    { "Typeface name": "Symbol", "Dingbat dec": "222", "Dingbat hex": "DE", "Unicode dec": "8658", "Unicode hex": "21D2" },
    { "Typeface name": "Symbol", "Dingbat dec": "223", "Dingbat hex": "DF", "Unicode dec": "8659", "Unicode hex": "21D3" },
    { "Typeface name": "Symbol", "Dingbat dec": "224", "Dingbat hex": "E0", "Unicode dec": "9674", "Unicode hex": "25CA" },
    { "Typeface name": "Symbol", "Dingbat dec": "225", "Dingbat hex": "E1", "Unicode dec": "12296", "Unicode hex": "3008" },
    { "Typeface name": "Symbol", "Dingbat dec": "226", "Dingbat hex": "E2", "Unicode dec": "174", "Unicode hex": "AE" },
    { "Typeface name": "Symbol", "Dingbat dec": "227", "Dingbat hex": "E3", "Unicode dec": "169", "Unicode hex": "A9" },
    { "Typeface name": "Symbol", "Dingbat dec": "228", "Dingbat hex": "E4", "Unicode dec": "8482", "Unicode hex": "2122" },
    { "Typeface name": "Symbol", "Dingbat dec": "229", "Dingbat hex": "E5", "Unicode dec": "8721", "Unicode hex": "2211" },
    { "Typeface name": "Symbol", "Dingbat dec": "230", "Dingbat hex": "E6", "Unicode dec": "9115", "Unicode hex": "239B" },
    { "Typeface name": "Symbol", "Dingbat dec": "231", "Dingbat hex": "E7", "Unicode dec": "9116", "Unicode hex": "239C" },
    { "Typeface name": "Symbol", "Dingbat dec": "232", "Dingbat hex": "E8", "Unicode dec": "9117", "Unicode hex": "239D" },
    { "Typeface name": "Symbol", "Dingbat dec": "233", "Dingbat hex": "E9", "Unicode dec": "9121", "Unicode hex": "23A1" },
    { "Typeface name": "Symbol", "Dingbat dec": "234", "Dingbat hex": "EA", "Unicode dec": "9122", "Unicode hex": "23A2" },
    { "Typeface name": "Symbol", "Dingbat dec": "235", "Dingbat hex": "EB", "Unicode dec": "9123", "Unicode hex": "23A3" },
    { "Typeface name": "Symbol", "Dingbat dec": "236", "Dingbat hex": "EC", "Unicode dec": "9127", "Unicode hex": "23A7" },
    { "Typeface name": "Symbol", "Dingbat dec": "237", "Dingbat hex": "ED", "Unicode dec": "9128", "Unicode hex": "23A8" },
    { "Typeface name": "Symbol", "Dingbat dec": "238", "Dingbat hex": "EE", "Unicode dec": "9129", "Unicode hex": "23A9" },
    { "Typeface name": "Symbol", "Dingbat dec": "239", "Dingbat hex": "EF", "Unicode dec": "9130", "Unicode hex": "23AA" },
    { "Typeface name": "Symbol", "Dingbat dec": "240", "Dingbat hex": "F0", "Unicode dec": "63743", "Unicode hex": "F8FF" },
    { "Typeface name": "Symbol", "Dingbat dec": "241", "Dingbat hex": "F1", "Unicode dec": "12297", "Unicode hex": "3009" },
    { "Typeface name": "Symbol", "Dingbat dec": "242", "Dingbat hex": "F2", "Unicode dec": "8747", "Unicode hex": "222B" },
    { "Typeface name": "Symbol", "Dingbat dec": "243", "Dingbat hex": "F3", "Unicode dec": "8992", "Unicode hex": "2320" },
    { "Typeface name": "Symbol", "Dingbat dec": "244", "Dingbat hex": "F4", "Unicode dec": "9134", "Unicode hex": "23AE" },
    { "Typeface name": "Symbol", "Dingbat dec": "245", "Dingbat hex": "F5", "Unicode dec": "8993", "Unicode hex": "2321" },
    { "Typeface name": "Symbol", "Dingbat dec": "246", "Dingbat hex": "F6", "Unicode dec": "9118", "Unicode hex": "239E" },
    { "Typeface name": "Symbol", "Dingbat dec": "247", "Dingbat hex": "F7", "Unicode dec": "9119", "Unicode hex": "239F" },
    { "Typeface name": "Symbol", "Dingbat dec": "248", "Dingbat hex": "F8", "Unicode dec": "9120", "Unicode hex": "23A0" },
    { "Typeface name": "Symbol", "Dingbat dec": "249", "Dingbat hex": "F9", "Unicode dec": "9124", "Unicode hex": "23A4" },
    { "Typeface name": "Symbol", "Dingbat dec": "250", "Dingbat hex": "FA", "Unicode dec": "9125", "Unicode hex": "23A5" },
    { "Typeface name": "Symbol", "Dingbat dec": "251", "Dingbat hex": "FB", "Unicode dec": "9126", "Unicode hex": "23A6" },
    { "Typeface name": "Symbol", "Dingbat dec": "252", "Dingbat hex": "FC", "Unicode dec": "9131", "Unicode hex": "23AB" },
    { "Typeface name": "Symbol", "Dingbat dec": "253", "Dingbat hex": "FD", "Unicode dec": "9132", "Unicode hex": "23AC" },
    { "Typeface name": "Symbol", "Dingbat dec": "254", "Dingbat hex": "FE", "Unicode dec": "9133", "Unicode hex": "23AD" },
    { "Typeface name": "Webdings", "Dingbat dec": "32", "Dingbat hex": "20", "Unicode dec": "32", "Unicode hex": "20" },
    { "Typeface name": "Webdings", "Dingbat dec": "33", "Dingbat hex": "21", "Unicode dec": "128375", "Unicode hex": "1F577" },
    { "Typeface name": "Webdings", "Dingbat dec": "34", "Dingbat hex": "22", "Unicode dec": "128376", "Unicode hex": "1F578" },
    { "Typeface name": "Webdings", "Dingbat dec": "35", "Dingbat hex": "23", "Unicode dec": "128370", "Unicode hex": "1F572" },
    { "Typeface name": "Webdings", "Dingbat dec": "36", "Dingbat hex": "24", "Unicode dec": "128374", "Unicode hex": "1F576" },
    { "Typeface name": "Webdings", "Dingbat dec": "37", "Dingbat hex": "25", "Unicode dec": "127942", "Unicode hex": "1F3C6" },
    { "Typeface name": "Webdings", "Dingbat dec": "38", "Dingbat hex": "26", "Unicode dec": "127894", "Unicode hex": "1F396" },
    { "Typeface name": "Webdings", "Dingbat dec": "39", "Dingbat hex": "27", "Unicode dec": "128391", "Unicode hex": "1F587" },
    { "Typeface name": "Webdings", "Dingbat dec": "40", "Dingbat hex": "28", "Unicode dec": "128488", "Unicode hex": "1F5E8" },
    { "Typeface name": "Webdings", "Dingbat dec": "41", "Dingbat hex": "29", "Unicode dec": "128489", "Unicode hex": "1F5E9" },
    { "Typeface name": "Webdings", "Dingbat dec": "42", "Dingbat hex": "2A", "Unicode dec": "128496", "Unicode hex": "1F5F0" },
    { "Typeface name": "Webdings", "Dingbat dec": "43", "Dingbat hex": "2B", "Unicode dec": "128497", "Unicode hex": "1F5F1" },
    { "Typeface name": "Webdings", "Dingbat dec": "44", "Dingbat hex": "2C", "Unicode dec": "127798", "Unicode hex": "1F336" },
    { "Typeface name": "Webdings", "Dingbat dec": "45", "Dingbat hex": "2D", "Unicode dec": "127895", "Unicode hex": "1F397" },
    { "Typeface name": "Webdings", "Dingbat dec": "46", "Dingbat hex": "2E", "Unicode dec": "128638", "Unicode hex": "1F67E" },
    { "Typeface name": "Webdings", "Dingbat dec": "47", "Dingbat hex": "2F", "Unicode dec": "128636", "Unicode hex": "1F67C" },
    { "Typeface name": "Webdings", "Dingbat dec": "48", "Dingbat hex": "30", "Unicode dec": "128469", "Unicode hex": "1F5D5" },
    { "Typeface name": "Webdings", "Dingbat dec": "49", "Dingbat hex": "31", "Unicode dec": "128470", "Unicode hex": "1F5D6" },
    { "Typeface name": "Webdings", "Dingbat dec": "50", "Dingbat hex": "32", "Unicode dec": "128471", "Unicode hex": "1F5D7" },
    { "Typeface name": "Webdings", "Dingbat dec": "51", "Dingbat hex": "33", "Unicode dec": "9204", "Unicode hex": "23F4" },
    { "Typeface name": "Webdings", "Dingbat dec": "52", "Dingbat hex": "34", "Unicode dec": "9205", "Unicode hex": "23F5" },
    { "Typeface name": "Webdings", "Dingbat dec": "53", "Dingbat hex": "35", "Unicode dec": "9206", "Unicode hex": "23F6" },
    { "Typeface name": "Webdings", "Dingbat dec": "54", "Dingbat hex": "36", "Unicode dec": "9207", "Unicode hex": "23F7" },
    { "Typeface name": "Webdings", "Dingbat dec": "55", "Dingbat hex": "37", "Unicode dec": "9194", "Unicode hex": "23EA" },
    { "Typeface name": "Webdings", "Dingbat dec": "56", "Dingbat hex": "38", "Unicode dec": "9193", "Unicode hex": "23E9" },
    { "Typeface name": "Webdings", "Dingbat dec": "57", "Dingbat hex": "39", "Unicode dec": "9198", "Unicode hex": "23EE" },
    { "Typeface name": "Webdings", "Dingbat dec": "58", "Dingbat hex": "3A", "Unicode dec": "9197", "Unicode hex": "23ED" },
    { "Typeface name": "Webdings", "Dingbat dec": "59", "Dingbat hex": "3B", "Unicode dec": "9208", "Unicode hex": "23F8" },
    { "Typeface name": "Webdings", "Dingbat dec": "60", "Dingbat hex": "3C", "Unicode dec": "9209", "Unicode hex": "23F9" },
    { "Typeface name": "Webdings", "Dingbat dec": "61", "Dingbat hex": "3D", "Unicode dec": "9210", "Unicode hex": "23FA" },
    { "Typeface name": "Webdings", "Dingbat dec": "62", "Dingbat hex": "3E", "Unicode dec": "128474", "Unicode hex": "1F5DA" },
    { "Typeface name": "Webdings", "Dingbat dec": "63", "Dingbat hex": "3F", "Unicode dec": "128499", "Unicode hex": "1F5F3" },
    { "Typeface name": "Webdings", "Dingbat dec": "64", "Dingbat hex": "40", "Unicode dec": "128736", "Unicode hex": "1F6E0" },
    { "Typeface name": "Webdings", "Dingbat dec": "65", "Dingbat hex": "41", "Unicode dec": "127959", "Unicode hex": "1F3D7" },
    { "Typeface name": "Webdings", "Dingbat dec": "66", "Dingbat hex": "42", "Unicode dec": "127960", "Unicode hex": "1F3D8" },
    { "Typeface name": "Webdings", "Dingbat dec": "67", "Dingbat hex": "43", "Unicode dec": "127961", "Unicode hex": "1F3D9" },
    { "Typeface name": "Webdings", "Dingbat dec": "68", "Dingbat hex": "44", "Unicode dec": "127962", "Unicode hex": "1F3DA" },
    { "Typeface name": "Webdings", "Dingbat dec": "69", "Dingbat hex": "45", "Unicode dec": "127964", "Unicode hex": "1F3DC" },
    { "Typeface name": "Webdings", "Dingbat dec": "70", "Dingbat hex": "46", "Unicode dec": "127981", "Unicode hex": "1F3ED" },
    { "Typeface name": "Webdings", "Dingbat dec": "71", "Dingbat hex": "47", "Unicode dec": "127963", "Unicode hex": "1F3DB" },
    { "Typeface name": "Webdings", "Dingbat dec": "72", "Dingbat hex": "48", "Unicode dec": "127968", "Unicode hex": "1F3E0" },
    { "Typeface name": "Webdings", "Dingbat dec": "73", "Dingbat hex": "49", "Unicode dec": "127958", "Unicode hex": "1F3D6" },
    { "Typeface name": "Webdings", "Dingbat dec": "74", "Dingbat hex": "4A", "Unicode dec": "127965", "Unicode hex": "1F3DD" },
    { "Typeface name": "Webdings", "Dingbat dec": "75", "Dingbat hex": "4B", "Unicode dec": "128739", "Unicode hex": "1F6E3" },
    { "Typeface name": "Webdings", "Dingbat dec": "76", "Dingbat hex": "4C", "Unicode dec": "128269", "Unicode hex": "1F50D" },
    { "Typeface name": "Webdings", "Dingbat dec": "77", "Dingbat hex": "4D", "Unicode dec": "127956", "Unicode hex": "1F3D4" },
    { "Typeface name": "Webdings", "Dingbat dec": "78", "Dingbat hex": "4E", "Unicode dec": "128065", "Unicode hex": "1F441" },
    { "Typeface name": "Webdings", "Dingbat dec": "79", "Dingbat hex": "4F", "Unicode dec": "128066", "Unicode hex": "1F442" },
    { "Typeface name": "Webdings", "Dingbat dec": "80", "Dingbat hex": "50", "Unicode dec": "127966", "Unicode hex": "1F3DE" },
    { "Typeface name": "Webdings", "Dingbat dec": "81", "Dingbat hex": "51", "Unicode dec": "127957", "Unicode hex": "1F3D5" },
    { "Typeface name": "Webdings", "Dingbat dec": "82", "Dingbat hex": "52", "Unicode dec": "128740", "Unicode hex": "1F6E4" },
    { "Typeface name": "Webdings", "Dingbat dec": "83", "Dingbat hex": "53", "Unicode dec": "127967", "Unicode hex": "1F3DF" },
    { "Typeface name": "Webdings", "Dingbat dec": "84", "Dingbat hex": "54", "Unicode dec": "128755", "Unicode hex": "1F6F3" },
    { "Typeface name": "Webdings", "Dingbat dec": "85", "Dingbat hex": "55", "Unicode dec": "128364", "Unicode hex": "1F56C" },
    { "Typeface name": "Webdings", "Dingbat dec": "86", "Dingbat hex": "56", "Unicode dec": "128363", "Unicode hex": "1F56B" },
    { "Typeface name": "Webdings", "Dingbat dec": "87", "Dingbat hex": "57", "Unicode dec": "128360", "Unicode hex": "1F568" },
    { "Typeface name": "Webdings", "Dingbat dec": "88", "Dingbat hex": "58", "Unicode dec": "128264", "Unicode hex": "1F508" },
    { "Typeface name": "Webdings", "Dingbat dec": "89", "Dingbat hex": "59", "Unicode dec": "127892", "Unicode hex": "1F394" },
    { "Typeface name": "Webdings", "Dingbat dec": "90", "Dingbat hex": "5A", "Unicode dec": "127893", "Unicode hex": "1F395" },
    { "Typeface name": "Webdings", "Dingbat dec": "91", "Dingbat hex": "5B", "Unicode dec": "128492", "Unicode hex": "1F5EC" },
    { "Typeface name": "Webdings", "Dingbat dec": "92", "Dingbat hex": "5C", "Unicode dec": "128637", "Unicode hex": "1F67D" },
    { "Typeface name": "Webdings", "Dingbat dec": "93", "Dingbat hex": "5D", "Unicode dec": "128493", "Unicode hex": "1F5ED" },
    { "Typeface name": "Webdings", "Dingbat dec": "94", "Dingbat hex": "5E", "Unicode dec": "128490", "Unicode hex": "1F5EA" },
    { "Typeface name": "Webdings", "Dingbat dec": "95", "Dingbat hex": "5F", "Unicode dec": "128491", "Unicode hex": "1F5EB" },
    { "Typeface name": "Webdings", "Dingbat dec": "96", "Dingbat hex": "60", "Unicode dec": "11156", "Unicode hex": "2B94" },
    { "Typeface name": "Webdings", "Dingbat dec": "97", "Dingbat hex": "61", "Unicode dec": "10004", "Unicode hex": "2714" },
    { "Typeface name": "Webdings", "Dingbat dec": "98", "Dingbat hex": "62", "Unicode dec": "128690", "Unicode hex": "1F6B2" },
    { "Typeface name": "Webdings", "Dingbat dec": "99", "Dingbat hex": "63", "Unicode dec": "11036", "Unicode hex": "2B1C" },
    { "Typeface name": "Webdings", "Dingbat dec": "100", "Dingbat hex": "64", "Unicode dec": "128737", "Unicode hex": "1F6E1" },
    { "Typeface name": "Webdings", "Dingbat dec": "101", "Dingbat hex": "65", "Unicode dec": "128230", "Unicode hex": "1F4E6" },
    { "Typeface name": "Webdings", "Dingbat dec": "102", "Dingbat hex": "66", "Unicode dec": "128753", "Unicode hex": "1F6F1" },
    { "Typeface name": "Webdings", "Dingbat dec": "103", "Dingbat hex": "67", "Unicode dec": "11035", "Unicode hex": "2B1B" },
    { "Typeface name": "Webdings", "Dingbat dec": "104", "Dingbat hex": "68", "Unicode dec": "128657", "Unicode hex": "1F691" },
    { "Typeface name": "Webdings", "Dingbat dec": "105", "Dingbat hex": "69", "Unicode dec": "128712", "Unicode hex": "1F6C8" },
    { "Typeface name": "Webdings", "Dingbat dec": "106", "Dingbat hex": "6A", "Unicode dec": "128745", "Unicode hex": "1F6E9" },
    { "Typeface name": "Webdings", "Dingbat dec": "107", "Dingbat hex": "6B", "Unicode dec": "128752", "Unicode hex": "1F6F0" },
    { "Typeface name": "Webdings", "Dingbat dec": "108", "Dingbat hex": "6C", "Unicode dec": "128968", "Unicode hex": "1F7C8" },
    { "Typeface name": "Webdings", "Dingbat dec": "109", "Dingbat hex": "6D", "Unicode dec": "128372", "Unicode hex": "1F574" },
    { "Typeface name": "Webdings", "Dingbat dec": "110", "Dingbat hex": "6E", "Unicode dec": "11044", "Unicode hex": "2B24" },
    { "Typeface name": "Webdings", "Dingbat dec": "111", "Dingbat hex": "6F", "Unicode dec": "128741", "Unicode hex": "1F6E5" },
    { "Typeface name": "Webdings", "Dingbat dec": "112", "Dingbat hex": "70", "Unicode dec": "128660", "Unicode hex": "1F694" },
    { "Typeface name": "Webdings", "Dingbat dec": "113", "Dingbat hex": "71", "Unicode dec": "128472", "Unicode hex": "1F5D8" },
    { "Typeface name": "Webdings", "Dingbat dec": "114", "Dingbat hex": "72", "Unicode dec": "128473", "Unicode hex": "1F5D9" },
    { "Typeface name": "Webdings", "Dingbat dec": "115", "Dingbat hex": "73", "Unicode dec": "10067", "Unicode hex": "2753" },
    { "Typeface name": "Webdings", "Dingbat dec": "116", "Dingbat hex": "74", "Unicode dec": "128754", "Unicode hex": "1F6F2" },
    { "Typeface name": "Webdings", "Dingbat dec": "117", "Dingbat hex": "75", "Unicode dec": "128647", "Unicode hex": "1F687" },
    { "Typeface name": "Webdings", "Dingbat dec": "118", "Dingbat hex": "76", "Unicode dec": "128653", "Unicode hex": "1F68D" },
    { "Typeface name": "Webdings", "Dingbat dec": "119", "Dingbat hex": "77", "Unicode dec": "9971", "Unicode hex": "26F3" },
    { "Typeface name": "Webdings", "Dingbat dec": "120", "Dingbat hex": "78", "Unicode dec": "10680", "Unicode hex": "29B8" },
    { "Typeface name": "Webdings", "Dingbat dec": "121", "Dingbat hex": "79", "Unicode dec": "8854", "Unicode hex": "2296" },
    { "Typeface name": "Webdings", "Dingbat dec": "122", "Dingbat hex": "7A", "Unicode dec": "128685", "Unicode hex": "1F6AD" },
    { "Typeface name": "Webdings", "Dingbat dec": "123", "Dingbat hex": "7B", "Unicode dec": "128494", "Unicode hex": "1F5EE" },
    { "Typeface name": "Webdings", "Dingbat dec": "124", "Dingbat hex": "7C", "Unicode dec": "9168", "Unicode hex": "23D0" },
    { "Typeface name": "Webdings", "Dingbat dec": "125", "Dingbat hex": "7D", "Unicode dec": "128495", "Unicode hex": "1F5EF" },
    { "Typeface name": "Webdings", "Dingbat dec": "126", "Dingbat hex": "7E", "Unicode dec": "128498", "Unicode hex": "1F5F2" },
    { "Typeface name": "Webdings", "Dingbat dec": "128", "Dingbat hex": "80", "Unicode dec": "128697", "Unicode hex": "1F6B9" },
    { "Typeface name": "Webdings", "Dingbat dec": "129", "Dingbat hex": "81", "Unicode dec": "128698", "Unicode hex": "1F6BA" },
    { "Typeface name": "Webdings", "Dingbat dec": "130", "Dingbat hex": "82", "Unicode dec": "128713", "Unicode hex": "1F6C9" },
    { "Typeface name": "Webdings", "Dingbat dec": "131", "Dingbat hex": "83", "Unicode dec": "128714", "Unicode hex": "1F6CA" },
    { "Typeface name": "Webdings", "Dingbat dec": "132", "Dingbat hex": "84", "Unicode dec": "128700", "Unicode hex": "1F6BC" },
    { "Typeface name": "Webdings", "Dingbat dec": "133", "Dingbat hex": "85", "Unicode dec": "128125", "Unicode hex": "1F47D" },
    { "Typeface name": "Webdings", "Dingbat dec": "134", "Dingbat hex": "86", "Unicode dec": "127947", "Unicode hex": "1F3CB" },
    { "Typeface name": "Webdings", "Dingbat dec": "135", "Dingbat hex": "87", "Unicode dec": "9975", "Unicode hex": "26F7" },
    { "Typeface name": "Webdings", "Dingbat dec": "136", "Dingbat hex": "88", "Unicode dec": "127938", "Unicode hex": "1F3C2" },
    { "Typeface name": "Webdings", "Dingbat dec": "137", "Dingbat hex": "89", "Unicode dec": "127948", "Unicode hex": "1F3CC" },
    { "Typeface name": "Webdings", "Dingbat dec": "138", "Dingbat hex": "8A", "Unicode dec": "127946", "Unicode hex": "1F3CA" },
    { "Typeface name": "Webdings", "Dingbat dec": "139", "Dingbat hex": "8B", "Unicode dec": "127940", "Unicode hex": "1F3C4" },
    { "Typeface name": "Webdings", "Dingbat dec": "140", "Dingbat hex": "8C", "Unicode dec": "127949", "Unicode hex": "1F3CD" },
    { "Typeface name": "Webdings", "Dingbat dec": "141", "Dingbat hex": "8D", "Unicode dec": "127950", "Unicode hex": "1F3CE" },
    { "Typeface name": "Webdings", "Dingbat dec": "142", "Dingbat hex": "8E", "Unicode dec": "128664", "Unicode hex": "1F698" },
    { "Typeface name": "Webdings", "Dingbat dec": "143", "Dingbat hex": "8F", "Unicode dec": "128480", "Unicode hex": "1F5E0" },
    { "Typeface name": "Webdings", "Dingbat dec": "144", "Dingbat hex": "90", "Unicode dec": "128738", "Unicode hex": "1F6E2" },
    { "Typeface name": "Webdings", "Dingbat dec": "145", "Dingbat hex": "91", "Unicode dec": "128176", "Unicode hex": "1F4B0" },
    { "Typeface name": "Webdings", "Dingbat dec": "146", "Dingbat hex": "92", "Unicode dec": "127991", "Unicode hex": "1F3F7" },
    { "Typeface name": "Webdings", "Dingbat dec": "147", "Dingbat hex": "93", "Unicode dec": "128179", "Unicode hex": "1F4B3" },
    { "Typeface name": "Webdings", "Dingbat dec": "148", "Dingbat hex": "94", "Unicode dec": "128106", "Unicode hex": "1F46A" },
    { "Typeface name": "Webdings", "Dingbat dec": "149", "Dingbat hex": "95", "Unicode dec": "128481", "Unicode hex": "1F5E1" },
    { "Typeface name": "Webdings", "Dingbat dec": "150", "Dingbat hex": "96", "Unicode dec": "128482", "Unicode hex": "1F5E2" },
    { "Typeface name": "Webdings", "Dingbat dec": "151", "Dingbat hex": "97", "Unicode dec": "128483", "Unicode hex": "1F5E3" },
    { "Typeface name": "Webdings", "Dingbat dec": "152", "Dingbat hex": "98", "Unicode dec": "10031", "Unicode hex": "272F" },
    { "Typeface name": "Webdings", "Dingbat dec": "153", "Dingbat hex": "99", "Unicode dec": "128388", "Unicode hex": "1F584" },
    { "Typeface name": "Webdings", "Dingbat dec": "154", "Dingbat hex": "9A", "Unicode dec": "128389", "Unicode hex": "1F585" },
    { "Typeface name": "Webdings", "Dingbat dec": "155", "Dingbat hex": "9B", "Unicode dec": "128387", "Unicode hex": "1F583" },
    { "Typeface name": "Webdings", "Dingbat dec": "156", "Dingbat hex": "9C", "Unicode dec": "128390", "Unicode hex": "1F586" },
    { "Typeface name": "Webdings", "Dingbat dec": "157", "Dingbat hex": "9D", "Unicode dec": "128441", "Unicode hex": "1F5B9" },
    { "Typeface name": "Webdings", "Dingbat dec": "158", "Dingbat hex": "9E", "Unicode dec": "128442", "Unicode hex": "1F5BA" },
    { "Typeface name": "Webdings", "Dingbat dec": "159", "Dingbat hex": "9F", "Unicode dec": "128443", "Unicode hex": "1F5BB" },
    { "Typeface name": "Webdings", "Dingbat dec": "160", "Dingbat hex": "A0", "Unicode dec": "128373", "Unicode hex": "1F575" },
    { "Typeface name": "Webdings", "Dingbat dec": "161", "Dingbat hex": "A1", "Unicode dec": "128368", "Unicode hex": "1F570" },
    { "Typeface name": "Webdings", "Dingbat dec": "162", "Dingbat hex": "A2", "Unicode dec": "128445", "Unicode hex": "1F5BD" },
    { "Typeface name": "Webdings", "Dingbat dec": "163", "Dingbat hex": "A3", "Unicode dec": "128446", "Unicode hex": "1F5BE" },
    { "Typeface name": "Webdings", "Dingbat dec": "164", "Dingbat hex": "A4", "Unicode dec": "128203", "Unicode hex": "1F4CB" },
    { "Typeface name": "Webdings", "Dingbat dec": "165", "Dingbat hex": "A5", "Unicode dec": "128466", "Unicode hex": "1F5D2" },
    { "Typeface name": "Webdings", "Dingbat dec": "166", "Dingbat hex": "A6", "Unicode dec": "128467", "Unicode hex": "1F5D3" },
    { "Typeface name": "Webdings", "Dingbat dec": "167", "Dingbat hex": "A7", "Unicode dec": "128366", "Unicode hex": "1F56E" },
    { "Typeface name": "Webdings", "Dingbat dec": "168", "Dingbat hex": "A8", "Unicode dec": "128218", "Unicode hex": "1F4DA" },
    { "Typeface name": "Webdings", "Dingbat dec": "169", "Dingbat hex": "A9", "Unicode dec": "128478", "Unicode hex": "1F5DE" },
    { "Typeface name": "Webdings", "Dingbat dec": "170", "Dingbat hex": "AA", "Unicode dec": "128479", "Unicode hex": "1F5DF" },
    { "Typeface name": "Webdings", "Dingbat dec": "171", "Dingbat hex": "AB", "Unicode dec": "128451", "Unicode hex": "1F5C3" },
    { "Typeface name": "Webdings", "Dingbat dec": "172", "Dingbat hex": "AC", "Unicode dec": "128450", "Unicode hex": "1F5C2" },
    { "Typeface name": "Webdings", "Dingbat dec": "173", "Dingbat hex": "AD", "Unicode dec": "128444", "Unicode hex": "1F5BC" },
    { "Typeface name": "Webdings", "Dingbat dec": "174", "Dingbat hex": "AE", "Unicode dec": "127917", "Unicode hex": "1F3AD" },
    { "Typeface name": "Webdings", "Dingbat dec": "175", "Dingbat hex": "AF", "Unicode dec": "127900", "Unicode hex": "1F39C" },
    { "Typeface name": "Webdings", "Dingbat dec": "176", "Dingbat hex": "B0", "Unicode dec": "127896", "Unicode hex": "1F398" },
    { "Typeface name": "Webdings", "Dingbat dec": "177", "Dingbat hex": "B1", "Unicode dec": "127897", "Unicode hex": "1F399" },
    { "Typeface name": "Webdings", "Dingbat dec": "178", "Dingbat hex": "B2", "Unicode dec": "127911", "Unicode hex": "1F3A7" },
    { "Typeface name": "Webdings", "Dingbat dec": "179", "Dingbat hex": "B3", "Unicode dec": "128191", "Unicode hex": "1F4BF" },
    { "Typeface name": "Webdings", "Dingbat dec": "180", "Dingbat hex": "B4", "Unicode dec": "127902", "Unicode hex": "1F39E" },
    { "Typeface name": "Webdings", "Dingbat dec": "181", "Dingbat hex": "B5", "Unicode dec": "128247", "Unicode hex": "1F4F7" },
    { "Typeface name": "Webdings", "Dingbat dec": "182", "Dingbat hex": "B6", "Unicode dec": "127903", "Unicode hex": "1F39F" },
    { "Typeface name": "Webdings", "Dingbat dec": "183", "Dingbat hex": "B7", "Unicode dec": "127916", "Unicode hex": "1F3AC" },
    { "Typeface name": "Webdings", "Dingbat dec": "184", "Dingbat hex": "B8", "Unicode dec": "128253", "Unicode hex": "1F4FD" },
    { "Typeface name": "Webdings", "Dingbat dec": "185", "Dingbat hex": "B9", "Unicode dec": "128249", "Unicode hex": "1F4F9" },
    { "Typeface name": "Webdings", "Dingbat dec": "186", "Dingbat hex": "BA", "Unicode dec": "128254", "Unicode hex": "1F4FE" },
    { "Typeface name": "Webdings", "Dingbat dec": "187", "Dingbat hex": "BB", "Unicode dec": "128251", "Unicode hex": "1F4FB" },
    { "Typeface name": "Webdings", "Dingbat dec": "188", "Dingbat hex": "BC", "Unicode dec": "127898", "Unicode hex": "1F39A" },
    { "Typeface name": "Webdings", "Dingbat dec": "189", "Dingbat hex": "BD", "Unicode dec": "127899", "Unicode hex": "1F39B" },
    { "Typeface name": "Webdings", "Dingbat dec": "190", "Dingbat hex": "BE", "Unicode dec": "128250", "Unicode hex": "1F4FA" },
    { "Typeface name": "Webdings", "Dingbat dec": "191", "Dingbat hex": "BF", "Unicode dec": "128187", "Unicode hex": "1F4BB" },
    { "Typeface name": "Webdings", "Dingbat dec": "192", "Dingbat hex": "C0", "Unicode dec": "128421", "Unicode hex": "1F5A5" },
    { "Typeface name": "Webdings", "Dingbat dec": "193", "Dingbat hex": "C1", "Unicode dec": "128422", "Unicode hex": "1F5A6" },
    { "Typeface name": "Webdings", "Dingbat dec": "194", "Dingbat hex": "C2", "Unicode dec": "128423", "Unicode hex": "1F5A7" },
    { "Typeface name": "Webdings", "Dingbat dec": "195", "Dingbat hex": "C3", "Unicode dec": "128377", "Unicode hex": "1F579" },
    { "Typeface name": "Webdings", "Dingbat dec": "196", "Dingbat hex": "C4", "Unicode dec": "127918", "Unicode hex": "1F3AE" },
    { "Typeface name": "Webdings", "Dingbat dec": "197", "Dingbat hex": "C5", "Unicode dec": "128379", "Unicode hex": "1F57B" },
    { "Typeface name": "Webdings", "Dingbat dec": "198", "Dingbat hex": "C6", "Unicode dec": "128380", "Unicode hex": "1F57C" },
    { "Typeface name": "Webdings", "Dingbat dec": "199", "Dingbat hex": "C7", "Unicode dec": "128223", "Unicode hex": "1F4DF" },
    { "Typeface name": "Webdings", "Dingbat dec": "200", "Dingbat hex": "C8", "Unicode dec": "128385", "Unicode hex": "1F581" },
    { "Typeface name": "Webdings", "Dingbat dec": "201", "Dingbat hex": "C9", "Unicode dec": "128384", "Unicode hex": "1F580" },
    { "Typeface name": "Webdings", "Dingbat dec": "202", "Dingbat hex": "CA", "Unicode dec": "128424", "Unicode hex": "1F5A8" },
    { "Typeface name": "Webdings", "Dingbat dec": "203", "Dingbat hex": "CB", "Unicode dec": "128425", "Unicode hex": "1F5A9" },
    { "Typeface name": "Webdings", "Dingbat dec": "204", "Dingbat hex": "CC", "Unicode dec": "128447", "Unicode hex": "1F5BF" },
    { "Typeface name": "Webdings", "Dingbat dec": "205", "Dingbat hex": "CD", "Unicode dec": "128426", "Unicode hex": "1F5AA" },
    { "Typeface name": "Webdings", "Dingbat dec": "206", "Dingbat hex": "CE", "Unicode dec": "128476", "Unicode hex": "1F5DC" },
    { "Typeface name": "Webdings", "Dingbat dec": "207", "Dingbat hex": "CF", "Unicode dec": "128274", "Unicode hex": "1F512" },
    { "Typeface name": "Webdings", "Dingbat dec": "208", "Dingbat hex": "D0", "Unicode dec": "128275", "Unicode hex": "1F513" },
    { "Typeface name": "Webdings", "Dingbat dec": "209", "Dingbat hex": "D1", "Unicode dec": "128477", "Unicode hex": "1F5DD" },
    { "Typeface name": "Webdings", "Dingbat dec": "210", "Dingbat hex": "D2", "Unicode dec": "128229", "Unicode hex": "1F4E5" },
    { "Typeface name": "Webdings", "Dingbat dec": "211", "Dingbat hex": "D3", "Unicode dec": "128228", "Unicode hex": "1F4E4" },
    { "Typeface name": "Webdings", "Dingbat dec": "212", "Dingbat hex": "D4", "Unicode dec": "128371", "Unicode hex": "1F573" },
    { "Typeface name": "Webdings", "Dingbat dec": "213", "Dingbat hex": "D5", "Unicode dec": "127779", "Unicode hex": "1F323" },
    { "Typeface name": "Webdings", "Dingbat dec": "214", "Dingbat hex": "D6", "Unicode dec": "127780", "Unicode hex": "1F324" },
    { "Typeface name": "Webdings", "Dingbat dec": "215", "Dingbat hex": "D7", "Unicode dec": "127781", "Unicode hex": "1F325" },
    { "Typeface name": "Webdings", "Dingbat dec": "216", "Dingbat hex": "D8", "Unicode dec": "127782", "Unicode hex": "1F326" },
    { "Typeface name": "Webdings", "Dingbat dec": "217", "Dingbat hex": "D9", "Unicode dec": "9729", "Unicode hex": "2601" },
    { "Typeface name": "Webdings", "Dingbat dec": "218", "Dingbat hex": "DA", "Unicode dec": "127784", "Unicode hex": "1F328" },
    { "Typeface name": "Webdings", "Dingbat dec": "219", "Dingbat hex": "DB", "Unicode dec": "127783", "Unicode hex": "1F327" },
    { "Typeface name": "Webdings", "Dingbat dec": "220", "Dingbat hex": "DC", "Unicode dec": "127785", "Unicode hex": "1F329" },
    { "Typeface name": "Webdings", "Dingbat dec": "221", "Dingbat hex": "DD", "Unicode dec": "127786", "Unicode hex": "1F32A" },
    { "Typeface name": "Webdings", "Dingbat dec": "222", "Dingbat hex": "DE", "Unicode dec": "127788", "Unicode hex": "1F32C" },
    { "Typeface name": "Webdings", "Dingbat dec": "223", "Dingbat hex": "DF", "Unicode dec": "127787", "Unicode hex": "1F32B" },
    { "Typeface name": "Webdings", "Dingbat dec": "224", "Dingbat hex": "E0", "Unicode dec": "127772", "Unicode hex": "1F31C" },
    { "Typeface name": "Webdings", "Dingbat dec": "225", "Dingbat hex": "E1", "Unicode dec": "127777", "Unicode hex": "1F321" },
    { "Typeface name": "Webdings", "Dingbat dec": "226", "Dingbat hex": "E2", "Unicode dec": "128715", "Unicode hex": "1F6CB" },
    { "Typeface name": "Webdings", "Dingbat dec": "227", "Dingbat hex": "E3", "Unicode dec": "128719", "Unicode hex": "1F6CF" },
    { "Typeface name": "Webdings", "Dingbat dec": "228", "Dingbat hex": "E4", "Unicode dec": "127869", "Unicode hex": "1F37D" },
    { "Typeface name": "Webdings", "Dingbat dec": "229", "Dingbat hex": "E5", "Unicode dec": "127864", "Unicode hex": "1F378" },
    { "Typeface name": "Webdings", "Dingbat dec": "230", "Dingbat hex": "E6", "Unicode dec": "128718", "Unicode hex": "1F6CE" },
    { "Typeface name": "Webdings", "Dingbat dec": "231", "Dingbat hex": "E7", "Unicode dec": "128717", "Unicode hex": "1F6CD" },
    { "Typeface name": "Webdings", "Dingbat dec": "232", "Dingbat hex": "E8", "Unicode dec": "9413", "Unicode hex": "24C5" },
    { "Typeface name": "Webdings", "Dingbat dec": "233", "Dingbat hex": "E9", "Unicode dec": "9855", "Unicode hex": "267F" },
    { "Typeface name": "Webdings", "Dingbat dec": "234", "Dingbat hex": "EA", "Unicode dec": "128710", "Unicode hex": "1F6C6" },
    { "Typeface name": "Webdings", "Dingbat dec": "235", "Dingbat hex": "EB", "Unicode dec": "128392", "Unicode hex": "1F588" },
    { "Typeface name": "Webdings", "Dingbat dec": "236", "Dingbat hex": "EC", "Unicode dec": "127891", "Unicode hex": "1F393" },
    { "Typeface name": "Webdings", "Dingbat dec": "237", "Dingbat hex": "ED", "Unicode dec": "128484", "Unicode hex": "1F5E4" },
    { "Typeface name": "Webdings", "Dingbat dec": "238", "Dingbat hex": "EE", "Unicode dec": "128485", "Unicode hex": "1F5E5" },
    { "Typeface name": "Webdings", "Dingbat dec": "239", "Dingbat hex": "EF", "Unicode dec": "128486", "Unicode hex": "1F5E6" },
    { "Typeface name": "Webdings", "Dingbat dec": "240", "Dingbat hex": "F0", "Unicode dec": "128487", "Unicode hex": "1F5E7" },
    { "Typeface name": "Webdings", "Dingbat dec": "241", "Dingbat hex": "F1", "Unicode dec": "128746", "Unicode hex": "1F6EA" },
    { "Typeface name": "Webdings", "Dingbat dec": "242", "Dingbat hex": "F2", "Unicode dec": "128063", "Unicode hex": "1F43F" },
    { "Typeface name": "Webdings", "Dingbat dec": "243", "Dingbat hex": "F3", "Unicode dec": "128038", "Unicode hex": "1F426" },
    { "Typeface name": "Webdings", "Dingbat dec": "244", "Dingbat hex": "F4", "Unicode dec": "128031", "Unicode hex": "1F41F" },
    { "Typeface name": "Webdings", "Dingbat dec": "245", "Dingbat hex": "F5", "Unicode dec": "128021", "Unicode hex": "1F415" },
    { "Typeface name": "Webdings", "Dingbat dec": "246", "Dingbat hex": "F6", "Unicode dec": "128008", "Unicode hex": "1F408" },
    { "Typeface name": "Webdings", "Dingbat dec": "247", "Dingbat hex": "F7", "Unicode dec": "128620", "Unicode hex": "1F66C" },
    { "Typeface name": "Webdings", "Dingbat dec": "248", "Dingbat hex": "F8", "Unicode dec": "128622", "Unicode hex": "1F66E" },
    { "Typeface name": "Webdings", "Dingbat dec": "249", "Dingbat hex": "F9", "Unicode dec": "128621", "Unicode hex": "1F66D" },
    { "Typeface name": "Webdings", "Dingbat dec": "250", "Dingbat hex": "FA", "Unicode dec": "128623", "Unicode hex": "1F66F" },
    { "Typeface name": "Webdings", "Dingbat dec": "251", "Dingbat hex": "FB", "Unicode dec": "128506", "Unicode hex": "1F5FA" },
    { "Typeface name": "Webdings", "Dingbat dec": "252", "Dingbat hex": "FC", "Unicode dec": "127757", "Unicode hex": "1F30D" },
    { "Typeface name": "Webdings", "Dingbat dec": "253", "Dingbat hex": "FD", "Unicode dec": "127759", "Unicode hex": "1F30F" },
    { "Typeface name": "Webdings", "Dingbat dec": "254", "Dingbat hex": "FE", "Unicode dec": "127758", "Unicode hex": "1F30E" },
    { "Typeface name": "Webdings", "Dingbat dec": "255", "Dingbat hex": "FF", "Unicode dec": "128330", "Unicode hex": "1F54A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "32", "Dingbat hex": "20", "Unicode dec": "32", "Unicode hex": "20" },
    { "Typeface name": "Wingdings", "Dingbat dec": "33", "Dingbat hex": "21", "Unicode dec": "128393", "Unicode hex": "1F589" },
    { "Typeface name": "Wingdings", "Dingbat dec": "34", "Dingbat hex": "22", "Unicode dec": "9986", "Unicode hex": "2702" },
    { "Typeface name": "Wingdings", "Dingbat dec": "35", "Dingbat hex": "23", "Unicode dec": "9985", "Unicode hex": "2701" },
    { "Typeface name": "Wingdings", "Dingbat dec": "36", "Dingbat hex": "24", "Unicode dec": "128083", "Unicode hex": "1F453" },
    { "Typeface name": "Wingdings", "Dingbat dec": "37", "Dingbat hex": "25", "Unicode dec": "128365", "Unicode hex": "1F56D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "38", "Dingbat hex": "26", "Unicode dec": "128366", "Unicode hex": "1F56E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "39", "Dingbat hex": "27", "Unicode dec": "128367", "Unicode hex": "1F56F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "40", "Dingbat hex": "28", "Unicode dec": "128383", "Unicode hex": "1F57F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "41", "Dingbat hex": "29", "Unicode dec": "9990", "Unicode hex": "2706" },
    { "Typeface name": "Wingdings", "Dingbat dec": "42", "Dingbat hex": "2A", "Unicode dec": "128386", "Unicode hex": "1F582" },
    { "Typeface name": "Wingdings", "Dingbat dec": "43", "Dingbat hex": "2B", "Unicode dec": "128387", "Unicode hex": "1F583" },
    { "Typeface name": "Wingdings", "Dingbat dec": "44", "Dingbat hex": "2C", "Unicode dec": "128234", "Unicode hex": "1F4EA" },
    { "Typeface name": "Wingdings", "Dingbat dec": "45", "Dingbat hex": "2D", "Unicode dec": "128235", "Unicode hex": "1F4EB" },
    { "Typeface name": "Wingdings", "Dingbat dec": "46", "Dingbat hex": "2E", "Unicode dec": "128236", "Unicode hex": "1F4EC" },
    { "Typeface name": "Wingdings", "Dingbat dec": "47", "Dingbat hex": "2F", "Unicode dec": "128237", "Unicode hex": "1F4ED" },
    { "Typeface name": "Wingdings", "Dingbat dec": "48", "Dingbat hex": "30", "Unicode dec": "128448", "Unicode hex": "1F5C0" },
    { "Typeface name": "Wingdings", "Dingbat dec": "49", "Dingbat hex": "31", "Unicode dec": "128449", "Unicode hex": "1F5C1" },
    { "Typeface name": "Wingdings", "Dingbat dec": "50", "Dingbat hex": "32", "Unicode dec": "128462", "Unicode hex": "1F5CE" },
    { "Typeface name": "Wingdings", "Dingbat dec": "51", "Dingbat hex": "33", "Unicode dec": "128463", "Unicode hex": "1F5CF" },
    { "Typeface name": "Wingdings", "Dingbat dec": "52", "Dingbat hex": "34", "Unicode dec": "128464", "Unicode hex": "1F5D0" },
    { "Typeface name": "Wingdings", "Dingbat dec": "53", "Dingbat hex": "35", "Unicode dec": "128452", "Unicode hex": "1F5C4" },
    { "Typeface name": "Wingdings", "Dingbat dec": "54", "Dingbat hex": "36", "Unicode dec": "8987", "Unicode hex": "231B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "55", "Dingbat hex": "37", "Unicode dec": "128430", "Unicode hex": "1F5AE" },
    { "Typeface name": "Wingdings", "Dingbat dec": "56", "Dingbat hex": "38", "Unicode dec": "128432", "Unicode hex": "1F5B0" },
    { "Typeface name": "Wingdings", "Dingbat dec": "57", "Dingbat hex": "39", "Unicode dec": "128434", "Unicode hex": "1F5B2" },
    { "Typeface name": "Wingdings", "Dingbat dec": "58", "Dingbat hex": "3A", "Unicode dec": "128435", "Unicode hex": "1F5B3" },
    { "Typeface name": "Wingdings", "Dingbat dec": "59", "Dingbat hex": "3B", "Unicode dec": "128436", "Unicode hex": "1F5B4" },
    { "Typeface name": "Wingdings", "Dingbat dec": "60", "Dingbat hex": "3C", "Unicode dec": "128427", "Unicode hex": "1F5AB" },
    { "Typeface name": "Wingdings", "Dingbat dec": "61", "Dingbat hex": "3D", "Unicode dec": "128428", "Unicode hex": "1F5AC" },
    { "Typeface name": "Wingdings", "Dingbat dec": "62", "Dingbat hex": "3E", "Unicode dec": "9991", "Unicode hex": "2707" },
    { "Typeface name": "Wingdings", "Dingbat dec": "63", "Dingbat hex": "3F", "Unicode dec": "9997", "Unicode hex": "270D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "64", "Dingbat hex": "40", "Unicode dec": "128398", "Unicode hex": "1F58E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "65", "Dingbat hex": "41", "Unicode dec": "9996", "Unicode hex": "270C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "66", "Dingbat hex": "42", "Unicode dec": "128399", "Unicode hex": "1F58F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "67", "Dingbat hex": "43", "Unicode dec": "128077", "Unicode hex": "1F44D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "68", "Dingbat hex": "44", "Unicode dec": "128078", "Unicode hex": "1F44E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "69", "Dingbat hex": "45", "Unicode dec": "9756", "Unicode hex": "261C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "70", "Dingbat hex": "46", "Unicode dec": "9758", "Unicode hex": "261E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "71", "Dingbat hex": "47", "Unicode dec": "9757", "Unicode hex": "261D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "72", "Dingbat hex": "48", "Unicode dec": "9759", "Unicode hex": "261F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "73", "Dingbat hex": "49", "Unicode dec": "128400", "Unicode hex": "1F590" },
    { "Typeface name": "Wingdings", "Dingbat dec": "74", "Dingbat hex": "4A", "Unicode dec": "9786", "Unicode hex": "263A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "75", "Dingbat hex": "4B", "Unicode dec": "128528", "Unicode hex": "1F610" },
    { "Typeface name": "Wingdings", "Dingbat dec": "76", "Dingbat hex": "4C", "Unicode dec": "9785", "Unicode hex": "2639" },
    { "Typeface name": "Wingdings", "Dingbat dec": "77", "Dingbat hex": "4D", "Unicode dec": "128163", "Unicode hex": "1F4A3" },
    { "Typeface name": "Wingdings", "Dingbat dec": "78", "Dingbat hex": "4E", "Unicode dec": "128369", "Unicode hex": "1F571" },
    { "Typeface name": "Wingdings", "Dingbat dec": "79", "Dingbat hex": "4F", "Unicode dec": "127987", "Unicode hex": "1F3F3" },
    { "Typeface name": "Wingdings", "Dingbat dec": "80", "Dingbat hex": "50", "Unicode dec": "127985", "Unicode hex": "1F3F1" },
    { "Typeface name": "Wingdings", "Dingbat dec": "81", "Dingbat hex": "51", "Unicode dec": "9992", "Unicode hex": "2708" },
    { "Typeface name": "Wingdings", "Dingbat dec": "82", "Dingbat hex": "52", "Unicode dec": "9788", "Unicode hex": "263C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "83", "Dingbat hex": "53", "Unicode dec": "127778", "Unicode hex": "1F322" },
    { "Typeface name": "Wingdings", "Dingbat dec": "84", "Dingbat hex": "54", "Unicode dec": "10052", "Unicode hex": "2744" },
    { "Typeface name": "Wingdings", "Dingbat dec": "85", "Dingbat hex": "55", "Unicode dec": "128326", "Unicode hex": "1F546" },
    { "Typeface name": "Wingdings", "Dingbat dec": "86", "Dingbat hex": "56", "Unicode dec": "10014", "Unicode hex": "271E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "87", "Dingbat hex": "57", "Unicode dec": "128328", "Unicode hex": "1F548" },
    { "Typeface name": "Wingdings", "Dingbat dec": "88", "Dingbat hex": "58", "Unicode dec": "10016", "Unicode hex": "2720" },
    { "Typeface name": "Wingdings", "Dingbat dec": "89", "Dingbat hex": "59", "Unicode dec": "10017", "Unicode hex": "2721" },
    { "Typeface name": "Wingdings", "Dingbat dec": "90", "Dingbat hex": "5A", "Unicode dec": "9770", "Unicode hex": "262A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "91", "Dingbat hex": "5B", "Unicode dec": "9775", "Unicode hex": "262F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "92", "Dingbat hex": "5C", "Unicode dec": "128329", "Unicode hex": "1F549" },
    { "Typeface name": "Wingdings", "Dingbat dec": "93", "Dingbat hex": "5D", "Unicode dec": "9784", "Unicode hex": "2638" },
    { "Typeface name": "Wingdings", "Dingbat dec": "94", "Dingbat hex": "5E", "Unicode dec": "9800", "Unicode hex": "2648" },
    { "Typeface name": "Wingdings", "Dingbat dec": "95", "Dingbat hex": "5F", "Unicode dec": "9801", "Unicode hex": "2649" },
    { "Typeface name": "Wingdings", "Dingbat dec": "96", "Dingbat hex": "60", "Unicode dec": "9802", "Unicode hex": "264A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "97", "Dingbat hex": "61", "Unicode dec": "9803", "Unicode hex": "264B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "98", "Dingbat hex": "62", "Unicode dec": "9804", "Unicode hex": "264C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "99", "Dingbat hex": "63", "Unicode dec": "9805", "Unicode hex": "264D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "100", "Dingbat hex": "64", "Unicode dec": "9806", "Unicode hex": "264E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "101", "Dingbat hex": "65", "Unicode dec": "9807", "Unicode hex": "264F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "102", "Dingbat hex": "66", "Unicode dec": "9808", "Unicode hex": "2650" },
    { "Typeface name": "Wingdings", "Dingbat dec": "103", "Dingbat hex": "67", "Unicode dec": "9809", "Unicode hex": "2651" },
    { "Typeface name": "Wingdings", "Dingbat dec": "104", "Dingbat hex": "68", "Unicode dec": "9810", "Unicode hex": "2652" },
    { "Typeface name": "Wingdings", "Dingbat dec": "105", "Dingbat hex": "69", "Unicode dec": "9811", "Unicode hex": "2653" },
    { "Typeface name": "Wingdings", "Dingbat dec": "106", "Dingbat hex": "6A", "Unicode dec": "128624", "Unicode hex": "1F670" },
    { "Typeface name": "Wingdings", "Dingbat dec": "107", "Dingbat hex": "6B", "Unicode dec": "128629", "Unicode hex": "1F675" },
    { "Typeface name": "Wingdings", "Dingbat dec": "108", "Dingbat hex": "6C", "Unicode dec": "9899", "Unicode hex": "26AB" },
    { "Typeface name": "Wingdings", "Dingbat dec": "109", "Dingbat hex": "6D", "Unicode dec": "128318", "Unicode hex": "1F53E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "110", "Dingbat hex": "6E", "Unicode dec": "9724", "Unicode hex": "25FC" },
    { "Typeface name": "Wingdings", "Dingbat dec": "111", "Dingbat hex": "6F", "Unicode dec": "128911", "Unicode hex": "1F78F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "112", "Dingbat hex": "70", "Unicode dec": "128912", "Unicode hex": "1F790" },
    { "Typeface name": "Wingdings", "Dingbat dec": "113", "Dingbat hex": "71", "Unicode dec": "10065", "Unicode hex": "2751" },
    { "Typeface name": "Wingdings", "Dingbat dec": "114", "Dingbat hex": "72", "Unicode dec": "10066", "Unicode hex": "2752" },
    { "Typeface name": "Wingdings", "Dingbat dec": "115", "Dingbat hex": "73", "Unicode dec": "128927", "Unicode hex": "1F79F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "116", "Dingbat hex": "74", "Unicode dec": "10731", "Unicode hex": "29EB" },
    { "Typeface name": "Wingdings", "Dingbat dec": "117", "Dingbat hex": "75", "Unicode dec": "9670", "Unicode hex": "25C6" },
    { "Typeface name": "Wingdings", "Dingbat dec": "118", "Dingbat hex": "76", "Unicode dec": "10070", "Unicode hex": "2756" },
    { "Typeface name": "Wingdings", "Dingbat dec": "119", "Dingbat hex": "77", "Unicode dec": "11049", "Unicode hex": "2B29" },
    { "Typeface name": "Wingdings", "Dingbat dec": "120", "Dingbat hex": "78", "Unicode dec": "8999", "Unicode hex": "2327" },
    { "Typeface name": "Wingdings", "Dingbat dec": "121", "Dingbat hex": "79", "Unicode dec": "11193", "Unicode hex": "2BB9" },
    { "Typeface name": "Wingdings", "Dingbat dec": "122", "Dingbat hex": "7A", "Unicode dec": "8984", "Unicode hex": "2318" },
    { "Typeface name": "Wingdings", "Dingbat dec": "123", "Dingbat hex": "7B", "Unicode dec": "127989", "Unicode hex": "1F3F5" },
    { "Typeface name": "Wingdings", "Dingbat dec": "124", "Dingbat hex": "7C", "Unicode dec": "127990", "Unicode hex": "1F3F6" },
    { "Typeface name": "Wingdings", "Dingbat dec": "125", "Dingbat hex": "7D", "Unicode dec": "128630", "Unicode hex": "1F676" },
    { "Typeface name": "Wingdings", "Dingbat dec": "126", "Dingbat hex": "7E", "Unicode dec": "128631", "Unicode hex": "1F677" },
    { "Typeface name": "Wingdings", "Dingbat dec": "127", "Dingbat hex": "7F", "Unicode dec": "9647", "Unicode hex": "25AF" },
    { "Typeface name": "Wingdings", "Dingbat dec": "128", "Dingbat hex": "80", "Unicode dec": "127243", "Unicode hex": "1F10B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "129", "Dingbat hex": "81", "Unicode dec": "10112", "Unicode hex": "2780" },
    { "Typeface name": "Wingdings", "Dingbat dec": "130", "Dingbat hex": "82", "Unicode dec": "10113", "Unicode hex": "2781" },
    { "Typeface name": "Wingdings", "Dingbat dec": "131", "Dingbat hex": "83", "Unicode dec": "10114", "Unicode hex": "2782" },
    { "Typeface name": "Wingdings", "Dingbat dec": "132", "Dingbat hex": "84", "Unicode dec": "10115", "Unicode hex": "2783" },
    { "Typeface name": "Wingdings", "Dingbat dec": "133", "Dingbat hex": "85", "Unicode dec": "10116", "Unicode hex": "2784" },
    { "Typeface name": "Wingdings", "Dingbat dec": "134", "Dingbat hex": "86", "Unicode dec": "10117", "Unicode hex": "2785" },
    { "Typeface name": "Wingdings", "Dingbat dec": "135", "Dingbat hex": "87", "Unicode dec": "10118", "Unicode hex": "2786" },
    { "Typeface name": "Wingdings", "Dingbat dec": "136", "Dingbat hex": "88", "Unicode dec": "10119", "Unicode hex": "2787" },
    { "Typeface name": "Wingdings", "Dingbat dec": "137", "Dingbat hex": "89", "Unicode dec": "10120", "Unicode hex": "2788" },
    { "Typeface name": "Wingdings", "Dingbat dec": "138", "Dingbat hex": "8A", "Unicode dec": "10121", "Unicode hex": "2789" },
    { "Typeface name": "Wingdings", "Dingbat dec": "139", "Dingbat hex": "8B", "Unicode dec": "127244", "Unicode hex": "1F10C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "140", "Dingbat hex": "8C", "Unicode dec": "10122", "Unicode hex": "278A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "141", "Dingbat hex": "8D", "Unicode dec": "10123", "Unicode hex": "278B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "142", "Dingbat hex": "8E", "Unicode dec": "10124", "Unicode hex": "278C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "143", "Dingbat hex": "8F", "Unicode dec": "10125", "Unicode hex": "278D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "144", "Dingbat hex": "90", "Unicode dec": "10126", "Unicode hex": "278E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "145", "Dingbat hex": "91", "Unicode dec": "10127", "Unicode hex": "278F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "146", "Dingbat hex": "92", "Unicode dec": "10128", "Unicode hex": "2790" },
    { "Typeface name": "Wingdings", "Dingbat dec": "147", "Dingbat hex": "93", "Unicode dec": "10129", "Unicode hex": "2791" },
    { "Typeface name": "Wingdings", "Dingbat dec": "148", "Dingbat hex": "94", "Unicode dec": "10130", "Unicode hex": "2792" },
    { "Typeface name": "Wingdings", "Dingbat dec": "149", "Dingbat hex": "95", "Unicode dec": "10131", "Unicode hex": "2793" },
    { "Typeface name": "Wingdings", "Dingbat dec": "150", "Dingbat hex": "96", "Unicode dec": "128610", "Unicode hex": "1F662" },
    { "Typeface name": "Wingdings", "Dingbat dec": "151", "Dingbat hex": "97", "Unicode dec": "128608", "Unicode hex": "1F660" },
    { "Typeface name": "Wingdings", "Dingbat dec": "152", "Dingbat hex": "98", "Unicode dec": "128609", "Unicode hex": "1F661" },
    { "Typeface name": "Wingdings", "Dingbat dec": "153", "Dingbat hex": "99", "Unicode dec": "128611", "Unicode hex": "1F663" },
    { "Typeface name": "Wingdings", "Dingbat dec": "154", "Dingbat hex": "9A", "Unicode dec": "128606", "Unicode hex": "1F65E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "155", "Dingbat hex": "9B", "Unicode dec": "128604", "Unicode hex": "1F65C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "156", "Dingbat hex": "9C", "Unicode dec": "128605", "Unicode hex": "1F65D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "157", "Dingbat hex": "9D", "Unicode dec": "128607", "Unicode hex": "1F65F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "158", "Dingbat hex": "9E", "Unicode dec": "8729", "Unicode hex": "2219" },
    { "Typeface name": "Wingdings", "Dingbat dec": "159", "Dingbat hex": "9F", "Unicode dec": "8226", "Unicode hex": "2022" },
    { "Typeface name": "Wingdings", "Dingbat dec": "160", "Dingbat hex": "A0", "Unicode dec": "11037", "Unicode hex": "2B1D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "161", "Dingbat hex": "A1", "Unicode dec": "11096", "Unicode hex": "2B58" },
    { "Typeface name": "Wingdings", "Dingbat dec": "162", "Dingbat hex": "A2", "Unicode dec": "128902", "Unicode hex": "1F786" },
    { "Typeface name": "Wingdings", "Dingbat dec": "163", "Dingbat hex": "A3", "Unicode dec": "128904", "Unicode hex": "1F788" },
    { "Typeface name": "Wingdings", "Dingbat dec": "164", "Dingbat hex": "A4", "Unicode dec": "128906", "Unicode hex": "1F78A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "165", "Dingbat hex": "A5", "Unicode dec": "128907", "Unicode hex": "1F78B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "166", "Dingbat hex": "A6", "Unicode dec": "128319", "Unicode hex": "1F53F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "167", "Dingbat hex": "A7", "Unicode dec": "9642", "Unicode hex": "25AA" },
    { "Typeface name": "Wingdings", "Dingbat dec": "168", "Dingbat hex": "A8", "Unicode dec": "128910", "Unicode hex": "1F78E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "169", "Dingbat hex": "A9", "Unicode dec": "128961", "Unicode hex": "1F7C1" },
    { "Typeface name": "Wingdings", "Dingbat dec": "170", "Dingbat hex": "AA", "Unicode dec": "128965", "Unicode hex": "1F7C5" },
    { "Typeface name": "Wingdings", "Dingbat dec": "171", "Dingbat hex": "AB", "Unicode dec": "9733", "Unicode hex": "2605" },
    { "Typeface name": "Wingdings", "Dingbat dec": "172", "Dingbat hex": "AC", "Unicode dec": "128971", "Unicode hex": "1F7CB" },
    { "Typeface name": "Wingdings", "Dingbat dec": "173", "Dingbat hex": "AD", "Unicode dec": "128975", "Unicode hex": "1F7CF" },
    { "Typeface name": "Wingdings", "Dingbat dec": "174", "Dingbat hex": "AE", "Unicode dec": "128979", "Unicode hex": "1F7D3" },
    { "Typeface name": "Wingdings", "Dingbat dec": "175", "Dingbat hex": "AF", "Unicode dec": "128977", "Unicode hex": "1F7D1" },
    { "Typeface name": "Wingdings", "Dingbat dec": "176", "Dingbat hex": "B0", "Unicode dec": "11216", "Unicode hex": "2BD0" },
    { "Typeface name": "Wingdings", "Dingbat dec": "177", "Dingbat hex": "B1", "Unicode dec": "8982", "Unicode hex": "2316" },
    { "Typeface name": "Wingdings", "Dingbat dec": "178", "Dingbat hex": "B2", "Unicode dec": "11214", "Unicode hex": "2BCE" },
    { "Typeface name": "Wingdings", "Dingbat dec": "179", "Dingbat hex": "B3", "Unicode dec": "11215", "Unicode hex": "2BCF" },
    { "Typeface name": "Wingdings", "Dingbat dec": "180", "Dingbat hex": "B4", "Unicode dec": "11217", "Unicode hex": "2BD1" },
    { "Typeface name": "Wingdings", "Dingbat dec": "181", "Dingbat hex": "B5", "Unicode dec": "10026", "Unicode hex": "272A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "182", "Dingbat hex": "B6", "Unicode dec": "10032", "Unicode hex": "2730" },
    { "Typeface name": "Wingdings", "Dingbat dec": "183", "Dingbat hex": "B7", "Unicode dec": "128336", "Unicode hex": "1F550" },
    { "Typeface name": "Wingdings", "Dingbat dec": "184", "Dingbat hex": "B8", "Unicode dec": "128337", "Unicode hex": "1F551" },
    { "Typeface name": "Wingdings", "Dingbat dec": "185", "Dingbat hex": "B9", "Unicode dec": "128338", "Unicode hex": "1F552" },
    { "Typeface name": "Wingdings", "Dingbat dec": "186", "Dingbat hex": "BA", "Unicode dec": "128339", "Unicode hex": "1F553" },
    { "Typeface name": "Wingdings", "Dingbat dec": "187", "Dingbat hex": "BB", "Unicode dec": "128340", "Unicode hex": "1F554" },
    { "Typeface name": "Wingdings", "Dingbat dec": "188", "Dingbat hex": "BC", "Unicode dec": "128341", "Unicode hex": "1F555" },
    { "Typeface name": "Wingdings", "Dingbat dec": "189", "Dingbat hex": "BD", "Unicode dec": "128342", "Unicode hex": "1F556" },
    { "Typeface name": "Wingdings", "Dingbat dec": "190", "Dingbat hex": "BE", "Unicode dec": "128343", "Unicode hex": "1F557" },
    { "Typeface name": "Wingdings", "Dingbat dec": "191", "Dingbat hex": "BF", "Unicode dec": "128344", "Unicode hex": "1F558" },
    { "Typeface name": "Wingdings", "Dingbat dec": "192", "Dingbat hex": "C0", "Unicode dec": "128345", "Unicode hex": "1F559" },
    { "Typeface name": "Wingdings", "Dingbat dec": "193", "Dingbat hex": "C1", "Unicode dec": "128346", "Unicode hex": "1F55A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "194", "Dingbat hex": "C2", "Unicode dec": "128347", "Unicode hex": "1F55B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "195", "Dingbat hex": "C3", "Unicode dec": "11184", "Unicode hex": "2BB0" },
    { "Typeface name": "Wingdings", "Dingbat dec": "196", "Dingbat hex": "C4", "Unicode dec": "11185", "Unicode hex": "2BB1" },
    { "Typeface name": "Wingdings", "Dingbat dec": "197", "Dingbat hex": "C5", "Unicode dec": "11186", "Unicode hex": "2BB2" },
    { "Typeface name": "Wingdings", "Dingbat dec": "198", "Dingbat hex": "C6", "Unicode dec": "11187", "Unicode hex": "2BB3" },
    { "Typeface name": "Wingdings", "Dingbat dec": "199", "Dingbat hex": "C7", "Unicode dec": "11188", "Unicode hex": "2BB4" },
    { "Typeface name": "Wingdings", "Dingbat dec": "200", "Dingbat hex": "C8", "Unicode dec": "11189", "Unicode hex": "2BB5" },
    { "Typeface name": "Wingdings", "Dingbat dec": "201", "Dingbat hex": "C9", "Unicode dec": "11190", "Unicode hex": "2BB6" },
    { "Typeface name": "Wingdings", "Dingbat dec": "202", "Dingbat hex": "CA", "Unicode dec": "11191", "Unicode hex": "2BB7" },
    { "Typeface name": "Wingdings", "Dingbat dec": "203", "Dingbat hex": "CB", "Unicode dec": "128618", "Unicode hex": "1F66A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "204", "Dingbat hex": "CC", "Unicode dec": "128619", "Unicode hex": "1F66B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "205", "Dingbat hex": "CD", "Unicode dec": "128597", "Unicode hex": "1F655" },
    { "Typeface name": "Wingdings", "Dingbat dec": "206", "Dingbat hex": "CE", "Unicode dec": "128596", "Unicode hex": "1F654" },
    { "Typeface name": "Wingdings", "Dingbat dec": "207", "Dingbat hex": "CF", "Unicode dec": "128599", "Unicode hex": "1F657" },
    { "Typeface name": "Wingdings", "Dingbat dec": "208", "Dingbat hex": "D0", "Unicode dec": "128598", "Unicode hex": "1F656" },
    { "Typeface name": "Wingdings", "Dingbat dec": "209", "Dingbat hex": "D1", "Unicode dec": "128592", "Unicode hex": "1F650" },
    { "Typeface name": "Wingdings", "Dingbat dec": "210", "Dingbat hex": "D2", "Unicode dec": "128593", "Unicode hex": "1F651" },
    { "Typeface name": "Wingdings", "Dingbat dec": "211", "Dingbat hex": "D3", "Unicode dec": "128594", "Unicode hex": "1F652" },
    { "Typeface name": "Wingdings", "Dingbat dec": "212", "Dingbat hex": "D4", "Unicode dec": "128595", "Unicode hex": "1F653" },
    { "Typeface name": "Wingdings", "Dingbat dec": "213", "Dingbat hex": "D5", "Unicode dec": "9003", "Unicode hex": "232B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "214", "Dingbat hex": "D6", "Unicode dec": "8998", "Unicode hex": "2326" },
    { "Typeface name": "Wingdings", "Dingbat dec": "215", "Dingbat hex": "D7", "Unicode dec": "11160", "Unicode hex": "2B98" },
    { "Typeface name": "Wingdings", "Dingbat dec": "216", "Dingbat hex": "D8", "Unicode dec": "11162", "Unicode hex": "2B9A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "217", "Dingbat hex": "D9", "Unicode dec": "11161", "Unicode hex": "2B99" },
    { "Typeface name": "Wingdings", "Dingbat dec": "218", "Dingbat hex": "DA", "Unicode dec": "11163", "Unicode hex": "2B9B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "219", "Dingbat hex": "DB", "Unicode dec": "11144", "Unicode hex": "2B88" },
    { "Typeface name": "Wingdings", "Dingbat dec": "220", "Dingbat hex": "DC", "Unicode dec": "11146", "Unicode hex": "2B8A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "221", "Dingbat hex": "DD", "Unicode dec": "11145", "Unicode hex": "2B89" },
    { "Typeface name": "Wingdings", "Dingbat dec": "222", "Dingbat hex": "DE", "Unicode dec": "11147", "Unicode hex": "2B8B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "223", "Dingbat hex": "DF", "Unicode dec": "129128", "Unicode hex": "1F868" },
    { "Typeface name": "Wingdings", "Dingbat dec": "224", "Dingbat hex": "E0", "Unicode dec": "129130", "Unicode hex": "1F86A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "225", "Dingbat hex": "E1", "Unicode dec": "129129", "Unicode hex": "1F869" },
    { "Typeface name": "Wingdings", "Dingbat dec": "226", "Dingbat hex": "E2", "Unicode dec": "129131", "Unicode hex": "1F86B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "227", "Dingbat hex": "E3", "Unicode dec": "129132", "Unicode hex": "1F86C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "228", "Dingbat hex": "E4", "Unicode dec": "129133", "Unicode hex": "1F86D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "229", "Dingbat hex": "E5", "Unicode dec": "129135", "Unicode hex": "1F86F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "230", "Dingbat hex": "E6", "Unicode dec": "129134", "Unicode hex": "1F86E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "231", "Dingbat hex": "E7", "Unicode dec": "129144", "Unicode hex": "1F878" },
    { "Typeface name": "Wingdings", "Dingbat dec": "232", "Dingbat hex": "E8", "Unicode dec": "129146", "Unicode hex": "1F87A" },
    { "Typeface name": "Wingdings", "Dingbat dec": "233", "Dingbat hex": "E9", "Unicode dec": "129145", "Unicode hex": "1F879" },
    { "Typeface name": "Wingdings", "Dingbat dec": "234", "Dingbat hex": "EA", "Unicode dec": "129147", "Unicode hex": "1F87B" },
    { "Typeface name": "Wingdings", "Dingbat dec": "235", "Dingbat hex": "EB", "Unicode dec": "129148", "Unicode hex": "1F87C" },
    { "Typeface name": "Wingdings", "Dingbat dec": "236", "Dingbat hex": "EC", "Unicode dec": "129149", "Unicode hex": "1F87D" },
    { "Typeface name": "Wingdings", "Dingbat dec": "237", "Dingbat hex": "ED", "Unicode dec": "129151", "Unicode hex": "1F87F" },
    { "Typeface name": "Wingdings", "Dingbat dec": "238", "Dingbat hex": "EE", "Unicode dec": "129150", "Unicode hex": "1F87E" },
    { "Typeface name": "Wingdings", "Dingbat dec": "239", "Dingbat hex": "EF", "Unicode dec": "8678", "Unicode hex": "21E6" },
    { "Typeface name": "Wingdings", "Dingbat dec": "240", "Dingbat hex": "F0", "Unicode dec": "8680", "Unicode hex": "21E8" },
    { "Typeface name": "Wingdings", "Dingbat dec": "241", "Dingbat hex": "F1", "Unicode dec": "8679", "Unicode hex": "21E7" },
    { "Typeface name": "Wingdings", "Dingbat dec": "242", "Dingbat hex": "F2", "Unicode dec": "8681", "Unicode hex": "21E9" },
    { "Typeface name": "Wingdings", "Dingbat dec": "243", "Dingbat hex": "F3", "Unicode dec": "11012", "Unicode hex": "2B04" },
    { "Typeface name": "Wingdings", "Dingbat dec": "244", "Dingbat hex": "F4", "Unicode dec": "8691", "Unicode hex": "21F3" },
    { "Typeface name": "Wingdings", "Dingbat dec": "245", "Dingbat hex": "F5", "Unicode dec": "11009", "Unicode hex": "2B01" },
    { "Typeface name": "Wingdings", "Dingbat dec": "246", "Dingbat hex": "F6", "Unicode dec": "11008", "Unicode hex": "2B00" },
    { "Typeface name": "Wingdings", "Dingbat dec": "247", "Dingbat hex": "F7", "Unicode dec": "11011", "Unicode hex": "2B03" },
    { "Typeface name": "Wingdings", "Dingbat dec": "248", "Dingbat hex": "F8", "Unicode dec": "11010", "Unicode hex": "2B02" },
    { "Typeface name": "Wingdings", "Dingbat dec": "249", "Dingbat hex": "F9", "Unicode dec": "129196", "Unicode hex": "1F8AC" },
    { "Typeface name": "Wingdings", "Dingbat dec": "250", "Dingbat hex": "FA", "Unicode dec": "129197", "Unicode hex": "1F8AD" },
    { "Typeface name": "Wingdings", "Dingbat dec": "251", "Dingbat hex": "FB", "Unicode dec": "128502", "Unicode hex": "1F5F6" },
    { "Typeface name": "Wingdings", "Dingbat dec": "252", "Dingbat hex": "FC", "Unicode dec": "10003", "Unicode hex": "2713" },
    { "Typeface name": "Wingdings", "Dingbat dec": "253", "Dingbat hex": "FD", "Unicode dec": "128503", "Unicode hex": "1F5F7" },
    { "Typeface name": "Wingdings", "Dingbat dec": "254", "Dingbat hex": "FE", "Unicode dec": "128505", "Unicode hex": "1F5F9" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "32", "Dingbat hex": "20", "Unicode dec": "32", "Unicode hex": "20" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "33", "Dingbat hex": "21", "Unicode dec": "128394", "Unicode hex": "1F58A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "34", "Dingbat hex": "22", "Unicode dec": "128395", "Unicode hex": "1F58B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "35", "Dingbat hex": "23", "Unicode dec": "128396", "Unicode hex": "1F58C" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "36", "Dingbat hex": "24", "Unicode dec": "128397", "Unicode hex": "1F58D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "37", "Dingbat hex": "25", "Unicode dec": "9988", "Unicode hex": "2704" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "38", "Dingbat hex": "26", "Unicode dec": "9984", "Unicode hex": "2700" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "39", "Dingbat hex": "27", "Unicode dec": "128382", "Unicode hex": "1F57E" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "40", "Dingbat hex": "28", "Unicode dec": "128381", "Unicode hex": "1F57D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "41", "Dingbat hex": "29", "Unicode dec": "128453", "Unicode hex": "1F5C5" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "42", "Dingbat hex": "2A", "Unicode dec": "128454", "Unicode hex": "1F5C6" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "43", "Dingbat hex": "2B", "Unicode dec": "128455", "Unicode hex": "1F5C7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "44", "Dingbat hex": "2C", "Unicode dec": "128456", "Unicode hex": "1F5C8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "45", "Dingbat hex": "2D", "Unicode dec": "128457", "Unicode hex": "1F5C9" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "46", "Dingbat hex": "2E", "Unicode dec": "128458", "Unicode hex": "1F5CA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "47", "Dingbat hex": "2F", "Unicode dec": "128459", "Unicode hex": "1F5CB" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "48", "Dingbat hex": "30", "Unicode dec": "128460", "Unicode hex": "1F5CC" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "49", "Dingbat hex": "31", "Unicode dec": "128461", "Unicode hex": "1F5CD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "50", "Dingbat hex": "32", "Unicode dec": "128203", "Unicode hex": "1F4CB" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "51", "Dingbat hex": "33", "Unicode dec": "128465", "Unicode hex": "1F5D1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "52", "Dingbat hex": "34", "Unicode dec": "128468", "Unicode hex": "1F5D4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "53", "Dingbat hex": "35", "Unicode dec": "128437", "Unicode hex": "1F5B5" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "54", "Dingbat hex": "36", "Unicode dec": "128438", "Unicode hex": "1F5B6" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "55", "Dingbat hex": "37", "Unicode dec": "128439", "Unicode hex": "1F5B7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "56", "Dingbat hex": "38", "Unicode dec": "128440", "Unicode hex": "1F5B8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "57", "Dingbat hex": "39", "Unicode dec": "128429", "Unicode hex": "1F5AD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "58", "Dingbat hex": "3A", "Unicode dec": "128431", "Unicode hex": "1F5AF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "59", "Dingbat hex": "3B", "Unicode dec": "128433", "Unicode hex": "1F5B1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "60", "Dingbat hex": "3C", "Unicode dec": "128402", "Unicode hex": "1F592" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "61", "Dingbat hex": "3D", "Unicode dec": "128403", "Unicode hex": "1F593" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "62", "Dingbat hex": "3E", "Unicode dec": "128408", "Unicode hex": "1F598" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "63", "Dingbat hex": "3F", "Unicode dec": "128409", "Unicode hex": "1F599" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "64", "Dingbat hex": "40", "Unicode dec": "128410", "Unicode hex": "1F59A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "65", "Dingbat hex": "41", "Unicode dec": "128411", "Unicode hex": "1F59B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "66", "Dingbat hex": "42", "Unicode dec": "128072", "Unicode hex": "1F448" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "67", "Dingbat hex": "43", "Unicode dec": "128073", "Unicode hex": "1F449" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "68", "Dingbat hex": "44", "Unicode dec": "128412", "Unicode hex": "1F59C" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "69", "Dingbat hex": "45", "Unicode dec": "128413", "Unicode hex": "1F59D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "70", "Dingbat hex": "46", "Unicode dec": "128414", "Unicode hex": "1F59E" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "71", "Dingbat hex": "47", "Unicode dec": "128415", "Unicode hex": "1F59F" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "72", "Dingbat hex": "48", "Unicode dec": "128416", "Unicode hex": "1F5A0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "73", "Dingbat hex": "49", "Unicode dec": "128417", "Unicode hex": "1F5A1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "74", "Dingbat hex": "4A", "Unicode dec": "128070", "Unicode hex": "1F446" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "75", "Dingbat hex": "4B", "Unicode dec": "128071", "Unicode hex": "1F447" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "76", "Dingbat hex": "4C", "Unicode dec": "128418", "Unicode hex": "1F5A2" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "77", "Dingbat hex": "4D", "Unicode dec": "128419", "Unicode hex": "1F5A3" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "78", "Dingbat hex": "4E", "Unicode dec": "128401", "Unicode hex": "1F591" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "79", "Dingbat hex": "4F", "Unicode dec": "128500", "Unicode hex": "1F5F4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "80", "Dingbat hex": "50", "Unicode dec": "128504", "Unicode hex": "1F5F8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "81", "Dingbat hex": "51", "Unicode dec": "128501", "Unicode hex": "1F5F5" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "82", "Dingbat hex": "52", "Unicode dec": "9745", "Unicode hex": "2611" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "83", "Dingbat hex": "53", "Unicode dec": "11197", "Unicode hex": "2BBD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "84", "Dingbat hex": "54", "Unicode dec": "9746", "Unicode hex": "2612" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "85", "Dingbat hex": "55", "Unicode dec": "11198", "Unicode hex": "2BBE" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "86", "Dingbat hex": "56", "Unicode dec": "11199", "Unicode hex": "2BBF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "87", "Dingbat hex": "57", "Unicode dec": "128711", "Unicode hex": "1F6C7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "88", "Dingbat hex": "58", "Unicode dec": "10680", "Unicode hex": "29B8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "89", "Dingbat hex": "59", "Unicode dec": "128625", "Unicode hex": "1F671" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "90", "Dingbat hex": "5A", "Unicode dec": "128628", "Unicode hex": "1F674" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "91", "Dingbat hex": "5B", "Unicode dec": "128626", "Unicode hex": "1F672" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "92", "Dingbat hex": "5C", "Unicode dec": "128627", "Unicode hex": "1F673" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "93", "Dingbat hex": "5D", "Unicode dec": "8253", "Unicode hex": "203D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "94", "Dingbat hex": "5E", "Unicode dec": "128633", "Unicode hex": "1F679" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "95", "Dingbat hex": "5F", "Unicode dec": "128634", "Unicode hex": "1F67A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "96", "Dingbat hex": "60", "Unicode dec": "128635", "Unicode hex": "1F67B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "97", "Dingbat hex": "61", "Unicode dec": "128614", "Unicode hex": "1F666" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "98", "Dingbat hex": "62", "Unicode dec": "128612", "Unicode hex": "1F664" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "99", "Dingbat hex": "63", "Unicode dec": "128613", "Unicode hex": "1F665" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "100", "Dingbat hex": "64", "Unicode dec": "128615", "Unicode hex": "1F667" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "101", "Dingbat hex": "65", "Unicode dec": "128602", "Unicode hex": "1F65A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "102", "Dingbat hex": "66", "Unicode dec": "128600", "Unicode hex": "1F658" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "103", "Dingbat hex": "67", "Unicode dec": "128601", "Unicode hex": "1F659" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "104", "Dingbat hex": "68", "Unicode dec": "128603", "Unicode hex": "1F65B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "105", "Dingbat hex": "69", "Unicode dec": "9450", "Unicode hex": "24EA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "106", "Dingbat hex": "6A", "Unicode dec": "9312", "Unicode hex": "2460" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "107", "Dingbat hex": "6B", "Unicode dec": "9313", "Unicode hex": "2461" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "108", "Dingbat hex": "6C", "Unicode dec": "9314", "Unicode hex": "2462" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "109", "Dingbat hex": "6D", "Unicode dec": "9315", "Unicode hex": "2463" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "110", "Dingbat hex": "6E", "Unicode dec": "9316", "Unicode hex": "2464" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "111", "Dingbat hex": "6F", "Unicode dec": "9317", "Unicode hex": "2465" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "112", "Dingbat hex": "70", "Unicode dec": "9318", "Unicode hex": "2466" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "113", "Dingbat hex": "71", "Unicode dec": "9319", "Unicode hex": "2467" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "114", "Dingbat hex": "72", "Unicode dec": "9320", "Unicode hex": "2468" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "115", "Dingbat hex": "73", "Unicode dec": "9321", "Unicode hex": "2469" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "116", "Dingbat hex": "74", "Unicode dec": "9471", "Unicode hex": "24FF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "117", "Dingbat hex": "75", "Unicode dec": "10102", "Unicode hex": "2776" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "118", "Dingbat hex": "76", "Unicode dec": "10103", "Unicode hex": "2777" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "119", "Dingbat hex": "77", "Unicode dec": "10104", "Unicode hex": "2778" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "120", "Dingbat hex": "78", "Unicode dec": "10105", "Unicode hex": "2779" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "121", "Dingbat hex": "79", "Unicode dec": "10106", "Unicode hex": "277A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "122", "Dingbat hex": "7A", "Unicode dec": "10107", "Unicode hex": "277B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "123", "Dingbat hex": "7B", "Unicode dec": "10108", "Unicode hex": "277C" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "124", "Dingbat hex": "7C", "Unicode dec": "10109", "Unicode hex": "277D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "125", "Dingbat hex": "7D", "Unicode dec": "10110", "Unicode hex": "277E" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "126", "Dingbat hex": "7E", "Unicode dec": "10111", "Unicode hex": "277F" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "128", "Dingbat hex": "80", "Unicode dec": "9737", "Unicode hex": "2609" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "129", "Dingbat hex": "81", "Unicode dec": "127765", "Unicode hex": "1F315" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "130", "Dingbat hex": "82", "Unicode dec": "9789", "Unicode hex": "263D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "131", "Dingbat hex": "83", "Unicode dec": "9790", "Unicode hex": "263E" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "132", "Dingbat hex": "84", "Unicode dec": "11839", "Unicode hex": "2E3F" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "133", "Dingbat hex": "85", "Unicode dec": "10013", "Unicode hex": "271D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "134", "Dingbat hex": "86", "Unicode dec": "128327", "Unicode hex": "1F547" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "135", "Dingbat hex": "87", "Unicode dec": "128348", "Unicode hex": "1F55C" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "136", "Dingbat hex": "88", "Unicode dec": "128349", "Unicode hex": "1F55D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "137", "Dingbat hex": "89", "Unicode dec": "128350", "Unicode hex": "1F55E" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "138", "Dingbat hex": "8A", "Unicode dec": "128351", "Unicode hex": "1F55F" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "139", "Dingbat hex": "8B", "Unicode dec": "128352", "Unicode hex": "1F560" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "140", "Dingbat hex": "8C", "Unicode dec": "128353", "Unicode hex": "1F561" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "141", "Dingbat hex": "8D", "Unicode dec": "128354", "Unicode hex": "1F562" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "142", "Dingbat hex": "8E", "Unicode dec": "128355", "Unicode hex": "1F563" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "143", "Dingbat hex": "8F", "Unicode dec": "128356", "Unicode hex": "1F564" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "144", "Dingbat hex": "90", "Unicode dec": "128357", "Unicode hex": "1F565" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "145", "Dingbat hex": "91", "Unicode dec": "128358", "Unicode hex": "1F566" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "146", "Dingbat hex": "92", "Unicode dec": "128359", "Unicode hex": "1F567" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "147", "Dingbat hex": "93", "Unicode dec": "128616", "Unicode hex": "1F668" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "148", "Dingbat hex": "94", "Unicode dec": "128617", "Unicode hex": "1F669" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "149", "Dingbat hex": "95", "Unicode dec": "8901", "Unicode hex": "22C5" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "150", "Dingbat hex": "96", "Unicode dec": "128900", "Unicode hex": "1F784" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "151", "Dingbat hex": "97", "Unicode dec": "10625", "Unicode hex": "2981" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "152", "Dingbat hex": "98", "Unicode dec": "9679", "Unicode hex": "25CF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "153", "Dingbat hex": "99", "Unicode dec": "9675", "Unicode hex": "25CB" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "154", "Dingbat hex": "9A", "Unicode dec": "128901", "Unicode hex": "1F785" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "155", "Dingbat hex": "9B", "Unicode dec": "128903", "Unicode hex": "1F787" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "156", "Dingbat hex": "9C", "Unicode dec": "128905", "Unicode hex": "1F789" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "157", "Dingbat hex": "9D", "Unicode dec": "8857", "Unicode hex": "2299" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "158", "Dingbat hex": "9E", "Unicode dec": "10687", "Unicode hex": "29BF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "159", "Dingbat hex": "9F", "Unicode dec": "128908", "Unicode hex": "1F78C" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "160", "Dingbat hex": "A0", "Unicode dec": "128909", "Unicode hex": "1F78D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "161", "Dingbat hex": "A1", "Unicode dec": "9726", "Unicode hex": "25FE" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "162", "Dingbat hex": "A2", "Unicode dec": "9632", "Unicode hex": "25A0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "163", "Dingbat hex": "A3", "Unicode dec": "9633", "Unicode hex": "25A1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "164", "Dingbat hex": "A4", "Unicode dec": "128913", "Unicode hex": "1F791" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "165", "Dingbat hex": "A5", "Unicode dec": "128914", "Unicode hex": "1F792" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "166", "Dingbat hex": "A6", "Unicode dec": "128915", "Unicode hex": "1F793" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "167", "Dingbat hex": "A7", "Unicode dec": "128916", "Unicode hex": "1F794" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "168", "Dingbat hex": "A8", "Unicode dec": "9635", "Unicode hex": "25A3" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "169", "Dingbat hex": "A9", "Unicode dec": "128917", "Unicode hex": "1F795" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "170", "Dingbat hex": "AA", "Unicode dec": "128918", "Unicode hex": "1F796" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "171", "Dingbat hex": "AB", "Unicode dec": "128919", "Unicode hex": "1F797" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "172", "Dingbat hex": "AC", "Unicode dec": "128920", "Unicode hex": "1F798" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "173", "Dingbat hex": "AD", "Unicode dec": "11049", "Unicode hex": "2B29" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "174", "Dingbat hex": "AE", "Unicode dec": "11045", "Unicode hex": "2B25" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "175", "Dingbat hex": "AF", "Unicode dec": "9671", "Unicode hex": "25C7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "176", "Dingbat hex": "B0", "Unicode dec": "128922", "Unicode hex": "1F79A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "177", "Dingbat hex": "B1", "Unicode dec": "9672", "Unicode hex": "25C8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "178", "Dingbat hex": "B2", "Unicode dec": "128923", "Unicode hex": "1F79B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "179", "Dingbat hex": "B3", "Unicode dec": "128924", "Unicode hex": "1F79C" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "180", "Dingbat hex": "B4", "Unicode dec": "128925", "Unicode hex": "1F79D" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "181", "Dingbat hex": "B5", "Unicode dec": "128926", "Unicode hex": "1F79E" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "182", "Dingbat hex": "B6", "Unicode dec": "11050", "Unicode hex": "2B2A" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "183", "Dingbat hex": "B7", "Unicode dec": "11047", "Unicode hex": "2B27" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "184", "Dingbat hex": "B8", "Unicode dec": "9674", "Unicode hex": "25CA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "185", "Dingbat hex": "B9", "Unicode dec": "128928", "Unicode hex": "1F7A0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "186", "Dingbat hex": "BA", "Unicode dec": "9686", "Unicode hex": "25D6" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "187", "Dingbat hex": "BB", "Unicode dec": "9687", "Unicode hex": "25D7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "188", "Dingbat hex": "BC", "Unicode dec": "11210", "Unicode hex": "2BCA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "189", "Dingbat hex": "BD", "Unicode dec": "11211", "Unicode hex": "2BCB" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "190", "Dingbat hex": "BE", "Unicode dec": "11200", "Unicode hex": "2BC0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "191", "Dingbat hex": "BF", "Unicode dec": "11201", "Unicode hex": "2BC1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "192", "Dingbat hex": "C0", "Unicode dec": "11039", "Unicode hex": "2B1F" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "193", "Dingbat hex": "C1", "Unicode dec": "11202", "Unicode hex": "2BC2" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "194", "Dingbat hex": "C2", "Unicode dec": "11043", "Unicode hex": "2B23" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "195", "Dingbat hex": "C3", "Unicode dec": "11042", "Unicode hex": "2B22" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "196", "Dingbat hex": "C4", "Unicode dec": "11203", "Unicode hex": "2BC3" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "197", "Dingbat hex": "C5", "Unicode dec": "11204", "Unicode hex": "2BC4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "198", "Dingbat hex": "C6", "Unicode dec": "128929", "Unicode hex": "1F7A1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "199", "Dingbat hex": "C7", "Unicode dec": "128930", "Unicode hex": "1F7A2" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "200", "Dingbat hex": "C8", "Unicode dec": "128931", "Unicode hex": "1F7A3" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "201", "Dingbat hex": "C9", "Unicode dec": "128932", "Unicode hex": "1F7A4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "202", "Dingbat hex": "CA", "Unicode dec": "128933", "Unicode hex": "1F7A5" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "203", "Dingbat hex": "CB", "Unicode dec": "128934", "Unicode hex": "1F7A6" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "204", "Dingbat hex": "CC", "Unicode dec": "128935", "Unicode hex": "1F7A7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "205", "Dingbat hex": "CD", "Unicode dec": "128936", "Unicode hex": "1F7A8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "206", "Dingbat hex": "CE", "Unicode dec": "128937", "Unicode hex": "1F7A9" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "207", "Dingbat hex": "CF", "Unicode dec": "128938", "Unicode hex": "1F7AA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "208", "Dingbat hex": "D0", "Unicode dec": "128939", "Unicode hex": "1F7AB" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "209", "Dingbat hex": "D1", "Unicode dec": "128940", "Unicode hex": "1F7AC" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "210", "Dingbat hex": "D2", "Unicode dec": "128941", "Unicode hex": "1F7AD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "211", "Dingbat hex": "D3", "Unicode dec": "128942", "Unicode hex": "1F7AE" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "212", "Dingbat hex": "D4", "Unicode dec": "128943", "Unicode hex": "1F7AF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "213", "Dingbat hex": "D5", "Unicode dec": "128944", "Unicode hex": "1F7B0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "214", "Dingbat hex": "D6", "Unicode dec": "128945", "Unicode hex": "1F7B1" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "215", "Dingbat hex": "D7", "Unicode dec": "128946", "Unicode hex": "1F7B2" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "216", "Dingbat hex": "D8", "Unicode dec": "128947", "Unicode hex": "1F7B3" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "217", "Dingbat hex": "D9", "Unicode dec": "128948", "Unicode hex": "1F7B4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "218", "Dingbat hex": "DA", "Unicode dec": "128949", "Unicode hex": "1F7B5" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "219", "Dingbat hex": "DB", "Unicode dec": "128950", "Unicode hex": "1F7B6" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "220", "Dingbat hex": "DC", "Unicode dec": "128951", "Unicode hex": "1F7B7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "221", "Dingbat hex": "DD", "Unicode dec": "128952", "Unicode hex": "1F7B8" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "222", "Dingbat hex": "DE", "Unicode dec": "128953", "Unicode hex": "1F7B9" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "223", "Dingbat hex": "DF", "Unicode dec": "128954", "Unicode hex": "1F7BA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "224", "Dingbat hex": "E0", "Unicode dec": "128955", "Unicode hex": "1F7BB" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "225", "Dingbat hex": "E1", "Unicode dec": "128956", "Unicode hex": "1F7BC" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "226", "Dingbat hex": "E2", "Unicode dec": "128957", "Unicode hex": "1F7BD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "227", "Dingbat hex": "E3", "Unicode dec": "128958", "Unicode hex": "1F7BE" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "228", "Dingbat hex": "E4", "Unicode dec": "128959", "Unicode hex": "1F7BF" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "229", "Dingbat hex": "E5", "Unicode dec": "128960", "Unicode hex": "1F7C0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "230", "Dingbat hex": "E6", "Unicode dec": "128962", "Unicode hex": "1F7C2" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "231", "Dingbat hex": "E7", "Unicode dec": "128964", "Unicode hex": "1F7C4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "232", "Dingbat hex": "E8", "Unicode dec": "128966", "Unicode hex": "1F7C6" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "233", "Dingbat hex": "E9", "Unicode dec": "128969", "Unicode hex": "1F7C9" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "234", "Dingbat hex": "EA", "Unicode dec": "128970", "Unicode hex": "1F7CA" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "235", "Dingbat hex": "EB", "Unicode dec": "10038", "Unicode hex": "2736" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "236", "Dingbat hex": "EC", "Unicode dec": "128972", "Unicode hex": "1F7CC" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "237", "Dingbat hex": "ED", "Unicode dec": "128974", "Unicode hex": "1F7CE" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "238", "Dingbat hex": "EE", "Unicode dec": "128976", "Unicode hex": "1F7D0" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "239", "Dingbat hex": "EF", "Unicode dec": "128978", "Unicode hex": "1F7D2" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "240", "Dingbat hex": "F0", "Unicode dec": "10041", "Unicode hex": "2739" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "241", "Dingbat hex": "F1", "Unicode dec": "128963", "Unicode hex": "1F7C3" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "242", "Dingbat hex": "F2", "Unicode dec": "128967", "Unicode hex": "1F7C7" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "243", "Dingbat hex": "F3", "Unicode dec": "10031", "Unicode hex": "272F" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "244", "Dingbat hex": "F4", "Unicode dec": "128973", "Unicode hex": "1F7CD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "245", "Dingbat hex": "F5", "Unicode dec": "128980", "Unicode hex": "1F7D4" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "246", "Dingbat hex": "F6", "Unicode dec": "11212", "Unicode hex": "2BCC" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "247", "Dingbat hex": "F7", "Unicode dec": "11213", "Unicode hex": "2BCD" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "248", "Dingbat hex": "F8", "Unicode dec": "8251", "Unicode hex": "203B" },
    { "Typeface name": "Wingdings 2", "Dingbat dec": "249", "Dingbat hex": "F9", "Unicode dec": "8258", "Unicode hex": "2042" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "32", "Dingbat hex": "20", "Unicode dec": "32", "Unicode hex": "20" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "33", "Dingbat hex": "21", "Unicode dec": "11104", "Unicode hex": "2B60" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "34", "Dingbat hex": "22", "Unicode dec": "11106", "Unicode hex": "2B62" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "35", "Dingbat hex": "23", "Unicode dec": "11105", "Unicode hex": "2B61" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "36", "Dingbat hex": "24", "Unicode dec": "11107", "Unicode hex": "2B63" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "37", "Dingbat hex": "25", "Unicode dec": "11110", "Unicode hex": "2B66" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "38", "Dingbat hex": "26", "Unicode dec": "11111", "Unicode hex": "2B67" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "39", "Dingbat hex": "27", "Unicode dec": "11113", "Unicode hex": "2B69" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "40", "Dingbat hex": "28", "Unicode dec": "11112", "Unicode hex": "2B68" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "41", "Dingbat hex": "29", "Unicode dec": "11120", "Unicode hex": "2B70" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "42", "Dingbat hex": "2A", "Unicode dec": "11122", "Unicode hex": "2B72" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "43", "Dingbat hex": "2B", "Unicode dec": "11121", "Unicode hex": "2B71" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "44", "Dingbat hex": "2C", "Unicode dec": "11123", "Unicode hex": "2B73" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "45", "Dingbat hex": "2D", "Unicode dec": "11126", "Unicode hex": "2B76" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "46", "Dingbat hex": "2E", "Unicode dec": "11128", "Unicode hex": "2B78" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "47", "Dingbat hex": "2F", "Unicode dec": "11131", "Unicode hex": "2B7B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "48", "Dingbat hex": "30", "Unicode dec": "11133", "Unicode hex": "2B7D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "49", "Dingbat hex": "31", "Unicode dec": "11108", "Unicode hex": "2B64" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "50", "Dingbat hex": "32", "Unicode dec": "11109", "Unicode hex": "2B65" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "51", "Dingbat hex": "33", "Unicode dec": "11114", "Unicode hex": "2B6A" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "52", "Dingbat hex": "34", "Unicode dec": "11116", "Unicode hex": "2B6C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "53", "Dingbat hex": "35", "Unicode dec": "11115", "Unicode hex": "2B6B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "54", "Dingbat hex": "36", "Unicode dec": "11117", "Unicode hex": "2B6D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "55", "Dingbat hex": "37", "Unicode dec": "11085", "Unicode hex": "2B4D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "56", "Dingbat hex": "38", "Unicode dec": "11168", "Unicode hex": "2BA0" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "57", "Dingbat hex": "39", "Unicode dec": "11169", "Unicode hex": "2BA1" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "58", "Dingbat hex": "3A", "Unicode dec": "11170", "Unicode hex": "2BA2" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "59", "Dingbat hex": "3B", "Unicode dec": "11171", "Unicode hex": "2BA3" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "60", "Dingbat hex": "3C", "Unicode dec": "11172", "Unicode hex": "2BA4" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "61", "Dingbat hex": "3D", "Unicode dec": "11173", "Unicode hex": "2BA5" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "62", "Dingbat hex": "3E", "Unicode dec": "11174", "Unicode hex": "2BA6" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "63", "Dingbat hex": "3F", "Unicode dec": "11175", "Unicode hex": "2BA7" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "64", "Dingbat hex": "40", "Unicode dec": "11152", "Unicode hex": "2B90" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "65", "Dingbat hex": "41", "Unicode dec": "11153", "Unicode hex": "2B91" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "66", "Dingbat hex": "42", "Unicode dec": "11154", "Unicode hex": "2B92" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "67", "Dingbat hex": "43", "Unicode dec": "11155", "Unicode hex": "2B93" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "68", "Dingbat hex": "44", "Unicode dec": "11136", "Unicode hex": "2B80" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "69", "Dingbat hex": "45", "Unicode dec": "11139", "Unicode hex": "2B83" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "70", "Dingbat hex": "46", "Unicode dec": "11134", "Unicode hex": "2B7E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "71", "Dingbat hex": "47", "Unicode dec": "11135", "Unicode hex": "2B7F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "72", "Dingbat hex": "48", "Unicode dec": "11140", "Unicode hex": "2B84" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "73", "Dingbat hex": "49", "Unicode dec": "11142", "Unicode hex": "2B86" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "74", "Dingbat hex": "4A", "Unicode dec": "11141", "Unicode hex": "2B85" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "75", "Dingbat hex": "4B", "Unicode dec": "11143", "Unicode hex": "2B87" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "76", "Dingbat hex": "4C", "Unicode dec": "11151", "Unicode hex": "2B8F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "77", "Dingbat hex": "4D", "Unicode dec": "11149", "Unicode hex": "2B8D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "78", "Dingbat hex": "4E", "Unicode dec": "11150", "Unicode hex": "2B8E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "79", "Dingbat hex": "4F", "Unicode dec": "11148", "Unicode hex": "2B8C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "80", "Dingbat hex": "50", "Unicode dec": "11118", "Unicode hex": "2B6E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "81", "Dingbat hex": "51", "Unicode dec": "11119", "Unicode hex": "2B6F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "82", "Dingbat hex": "52", "Unicode dec": "9099", "Unicode hex": "238B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "83", "Dingbat hex": "53", "Unicode dec": "8996", "Unicode hex": "2324" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "84", "Dingbat hex": "54", "Unicode dec": "8963", "Unicode hex": "2303" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "85", "Dingbat hex": "55", "Unicode dec": "8997", "Unicode hex": "2325" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "86", "Dingbat hex": "56", "Unicode dec": "9251", "Unicode hex": "2423" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "87", "Dingbat hex": "57", "Unicode dec": "9085", "Unicode hex": "237D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "88", "Dingbat hex": "58", "Unicode dec": "8682", "Unicode hex": "21EA" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "89", "Dingbat hex": "59", "Unicode dec": "11192", "Unicode hex": "2BB8" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "90", "Dingbat hex": "5A", "Unicode dec": "129184", "Unicode hex": "1F8A0" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "91", "Dingbat hex": "5B", "Unicode dec": "129185", "Unicode hex": "1F8A1" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "92", "Dingbat hex": "5C", "Unicode dec": "129186", "Unicode hex": "1F8A2" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "93", "Dingbat hex": "5D", "Unicode dec": "129187", "Unicode hex": "1F8A3" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "94", "Dingbat hex": "5E", "Unicode dec": "129188", "Unicode hex": "1F8A4" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "95", "Dingbat hex": "5F", "Unicode dec": "129189", "Unicode hex": "1F8A5" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "96", "Dingbat hex": "60", "Unicode dec": "129190", "Unicode hex": "1F8A6" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "97", "Dingbat hex": "61", "Unicode dec": "129191", "Unicode hex": "1F8A7" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "98", "Dingbat hex": "62", "Unicode dec": "129192", "Unicode hex": "1F8A8" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "99", "Dingbat hex": "63", "Unicode dec": "129193", "Unicode hex": "1F8A9" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "100", "Dingbat hex": "64", "Unicode dec": "129194", "Unicode hex": "1F8AA" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "101", "Dingbat hex": "65", "Unicode dec": "129195", "Unicode hex": "1F8AB" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "102", "Dingbat hex": "66", "Unicode dec": "129104", "Unicode hex": "1F850" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "103", "Dingbat hex": "67", "Unicode dec": "129106", "Unicode hex": "1F852" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "104", "Dingbat hex": "68", "Unicode dec": "129105", "Unicode hex": "1F851" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "105", "Dingbat hex": "69", "Unicode dec": "129107", "Unicode hex": "1F853" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "106", "Dingbat hex": "6A", "Unicode dec": "129108", "Unicode hex": "1F854" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "107", "Dingbat hex": "6B", "Unicode dec": "129109", "Unicode hex": "1F855" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "108", "Dingbat hex": "6C", "Unicode dec": "129111", "Unicode hex": "1F857" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "109", "Dingbat hex": "6D", "Unicode dec": "129110", "Unicode hex": "1F856" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "110", "Dingbat hex": "6E", "Unicode dec": "129112", "Unicode hex": "1F858" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "111", "Dingbat hex": "6F", "Unicode dec": "129113", "Unicode hex": "1F859" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "112", "Dingbat hex": "70", "Unicode dec": "9650", "Unicode hex": "25B2" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "113", "Dingbat hex": "71", "Unicode dec": "9660", "Unicode hex": "25BC" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "114", "Dingbat hex": "72", "Unicode dec": "9651", "Unicode hex": "25B3" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "115", "Dingbat hex": "73", "Unicode dec": "9661", "Unicode hex": "25BD" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "116", "Dingbat hex": "74", "Unicode dec": "9664", "Unicode hex": "25C0" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "117", "Dingbat hex": "75", "Unicode dec": "9654", "Unicode hex": "25B6" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "118", "Dingbat hex": "76", "Unicode dec": "9665", "Unicode hex": "25C1" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "119", "Dingbat hex": "77", "Unicode dec": "9655", "Unicode hex": "25B7" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "120", "Dingbat hex": "78", "Unicode dec": "9699", "Unicode hex": "25E3" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "121", "Dingbat hex": "79", "Unicode dec": "9698", "Unicode hex": "25E2" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "122", "Dingbat hex": "7A", "Unicode dec": "9700", "Unicode hex": "25E4" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "123", "Dingbat hex": "7B", "Unicode dec": "9701", "Unicode hex": "25E5" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "124", "Dingbat hex": "7C", "Unicode dec": "128896", "Unicode hex": "1F780" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "125", "Dingbat hex": "7D", "Unicode dec": "128898", "Unicode hex": "1F782" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "126", "Dingbat hex": "7E", "Unicode dec": "128897", "Unicode hex": "1F781" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "128", "Dingbat hex": "80", "Unicode dec": "128899", "Unicode hex": "1F783" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "129", "Dingbat hex": "81", "Unicode dec": "11205", "Unicode hex": "2BC5" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "130", "Dingbat hex": "82", "Unicode dec": "11206", "Unicode hex": "2BC6" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "131", "Dingbat hex": "83", "Unicode dec": "11207", "Unicode hex": "2BC7" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "132", "Dingbat hex": "84", "Unicode dec": "11208", "Unicode hex": "2BC8" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "133", "Dingbat hex": "85", "Unicode dec": "11164", "Unicode hex": "2B9C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "134", "Dingbat hex": "86", "Unicode dec": "11166", "Unicode hex": "2B9E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "135", "Dingbat hex": "87", "Unicode dec": "11165", "Unicode hex": "2B9D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "136", "Dingbat hex": "88", "Unicode dec": "11167", "Unicode hex": "2B9F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "137", "Dingbat hex": "89", "Unicode dec": "129040", "Unicode hex": "1F810" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "138", "Dingbat hex": "8A", "Unicode dec": "129042", "Unicode hex": "1F812" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "139", "Dingbat hex": "8B", "Unicode dec": "129041", "Unicode hex": "1F811" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "140", "Dingbat hex": "8C", "Unicode dec": "129043", "Unicode hex": "1F813" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "141", "Dingbat hex": "8D", "Unicode dec": "129044", "Unicode hex": "1F814" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "142", "Dingbat hex": "8E", "Unicode dec": "129046", "Unicode hex": "1F816" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "143", "Dingbat hex": "8F", "Unicode dec": "129045", "Unicode hex": "1F815" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "144", "Dingbat hex": "90", "Unicode dec": "129047", "Unicode hex": "1F817" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "145", "Dingbat hex": "91", "Unicode dec": "129048", "Unicode hex": "1F818" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "146", "Dingbat hex": "92", "Unicode dec": "129050", "Unicode hex": "1F81A" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "147", "Dingbat hex": "93", "Unicode dec": "129049", "Unicode hex": "1F819" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "148", "Dingbat hex": "94", "Unicode dec": "129051", "Unicode hex": "1F81B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "149", "Dingbat hex": "95", "Unicode dec": "129052", "Unicode hex": "1F81C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "150", "Dingbat hex": "96", "Unicode dec": "129054", "Unicode hex": "1F81E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "151", "Dingbat hex": "97", "Unicode dec": "129053", "Unicode hex": "1F81D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "152", "Dingbat hex": "98", "Unicode dec": "129055", "Unicode hex": "1F81F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "153", "Dingbat hex": "99", "Unicode dec": "129024", "Unicode hex": "1F800" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "154", "Dingbat hex": "9A", "Unicode dec": "129026", "Unicode hex": "1F802" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "155", "Dingbat hex": "9B", "Unicode dec": "129025", "Unicode hex": "1F801" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "156", "Dingbat hex": "9C", "Unicode dec": "129027", "Unicode hex": "1F803" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "157", "Dingbat hex": "9D", "Unicode dec": "129028", "Unicode hex": "1F804" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "158", "Dingbat hex": "9E", "Unicode dec": "129030", "Unicode hex": "1F806" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "159", "Dingbat hex": "9F", "Unicode dec": "129029", "Unicode hex": "1F805" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "160", "Dingbat hex": "A0", "Unicode dec": "129031", "Unicode hex": "1F807" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "161", "Dingbat hex": "A1", "Unicode dec": "129032", "Unicode hex": "1F808" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "162", "Dingbat hex": "A2", "Unicode dec": "129034", "Unicode hex": "1F80A" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "163", "Dingbat hex": "A3", "Unicode dec": "129033", "Unicode hex": "1F809" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "164", "Dingbat hex": "A4", "Unicode dec": "129035", "Unicode hex": "1F80B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "165", "Dingbat hex": "A5", "Unicode dec": "129056", "Unicode hex": "1F820" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "166", "Dingbat hex": "A6", "Unicode dec": "129058", "Unicode hex": "1F822" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "167", "Dingbat hex": "A7", "Unicode dec": "129060", "Unicode hex": "1F824" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "168", "Dingbat hex": "A8", "Unicode dec": "129062", "Unicode hex": "1F826" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "169", "Dingbat hex": "A9", "Unicode dec": "129064", "Unicode hex": "1F828" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "170", "Dingbat hex": "AA", "Unicode dec": "129066", "Unicode hex": "1F82A" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "171", "Dingbat hex": "AB", "Unicode dec": "129068", "Unicode hex": "1F82C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "172", "Dingbat hex": "AC", "Unicode dec": "129180", "Unicode hex": "1F89C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "173", "Dingbat hex": "AD", "Unicode dec": "129181", "Unicode hex": "1F89D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "174", "Dingbat hex": "AE", "Unicode dec": "129182", "Unicode hex": "1F89E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "175", "Dingbat hex": "AF", "Unicode dec": "129183", "Unicode hex": "1F89F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "176", "Dingbat hex": "B0", "Unicode dec": "129070", "Unicode hex": "1F82E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "177", "Dingbat hex": "B1", "Unicode dec": "129072", "Unicode hex": "1F830" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "178", "Dingbat hex": "B2", "Unicode dec": "129074", "Unicode hex": "1F832" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "179", "Dingbat hex": "B3", "Unicode dec": "129076", "Unicode hex": "1F834" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "180", "Dingbat hex": "B4", "Unicode dec": "129078", "Unicode hex": "1F836" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "181", "Dingbat hex": "B5", "Unicode dec": "129080", "Unicode hex": "1F838" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "182", "Dingbat hex": "B6", "Unicode dec": "129082", "Unicode hex": "1F83A" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "183", "Dingbat hex": "B7", "Unicode dec": "129081", "Unicode hex": "1F839" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "184", "Dingbat hex": "B8", "Unicode dec": "129083", "Unicode hex": "1F83B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "185", "Dingbat hex": "B9", "Unicode dec": "129176", "Unicode hex": "1F898" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "186", "Dingbat hex": "BA", "Unicode dec": "129178", "Unicode hex": "1F89A" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "187", "Dingbat hex": "BB", "Unicode dec": "129177", "Unicode hex": "1F899" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "188", "Dingbat hex": "BC", "Unicode dec": "129179", "Unicode hex": "1F89B" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "189", "Dingbat hex": "BD", "Unicode dec": "129084", "Unicode hex": "1F83C" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "190", "Dingbat hex": "BE", "Unicode dec": "129086", "Unicode hex": "1F83E" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "191", "Dingbat hex": "BF", "Unicode dec": "129085", "Unicode hex": "1F83D" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "192", "Dingbat hex": "C0", "Unicode dec": "129087", "Unicode hex": "1F83F" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "193", "Dingbat hex": "C1", "Unicode dec": "129088", "Unicode hex": "1F840" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "194", "Dingbat hex": "C2", "Unicode dec": "129090", "Unicode hex": "1F842" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "195", "Dingbat hex": "C3", "Unicode dec": "129089", "Unicode hex": "1F841" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "196", "Dingbat hex": "C4", "Unicode dec": "129091", "Unicode hex": "1F843" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "197", "Dingbat hex": "C5", "Unicode dec": "129092", "Unicode hex": "1F844" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "198", "Dingbat hex": "C6", "Unicode dec": "129094", "Unicode hex": "1F846" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "199", "Dingbat hex": "C7", "Unicode dec": "129093", "Unicode hex": "1F845" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "200", "Dingbat hex": "C8", "Unicode dec": "129095", "Unicode hex": "1F847" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "201", "Dingbat hex": "C9", "Unicode dec": "11176", "Unicode hex": "2BA8" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "202", "Dingbat hex": "CA", "Unicode dec": "11177", "Unicode hex": "2BA9" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "203", "Dingbat hex": "CB", "Unicode dec": "11178", "Unicode hex": "2BAA" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "204", "Dingbat hex": "CC", "Unicode dec": "11179", "Unicode hex": "2BAB" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "205", "Dingbat hex": "CD", "Unicode dec": "11180", "Unicode hex": "2BAC" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "206", "Dingbat hex": "CE", "Unicode dec": "11181", "Unicode hex": "2BAD" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "207", "Dingbat hex": "CF", "Unicode dec": "11182", "Unicode hex": "2BAE" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "208", "Dingbat hex": "D0", "Unicode dec": "11183", "Unicode hex": "2BAF" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "209", "Dingbat hex": "D1", "Unicode dec": "129120", "Unicode hex": "1F860" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "210", "Dingbat hex": "D2", "Unicode dec": "129122", "Unicode hex": "1F862" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "211", "Dingbat hex": "D3", "Unicode dec": "129121", "Unicode hex": "1F861" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "212", "Dingbat hex": "D4", "Unicode dec": "129123", "Unicode hex": "1F863" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "213", "Dingbat hex": "D5", "Unicode dec": "129124", "Unicode hex": "1F864" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "214", "Dingbat hex": "D6", "Unicode dec": "129125", "Unicode hex": "1F865" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "215", "Dingbat hex": "D7", "Unicode dec": "129127", "Unicode hex": "1F867" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "216", "Dingbat hex": "D8", "Unicode dec": "129126", "Unicode hex": "1F866" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "217", "Dingbat hex": "D9", "Unicode dec": "129136", "Unicode hex": "1F870" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "218", "Dingbat hex": "DA", "Unicode dec": "129138", "Unicode hex": "1F872" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "219", "Dingbat hex": "DB", "Unicode dec": "129137", "Unicode hex": "1F871" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "220", "Dingbat hex": "DC", "Unicode dec": "129139", "Unicode hex": "1F873" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "221", "Dingbat hex": "DD", "Unicode dec": "129140", "Unicode hex": "1F874" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "222", "Dingbat hex": "DE", "Unicode dec": "129141", "Unicode hex": "1F875" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "223", "Dingbat hex": "DF", "Unicode dec": "129143", "Unicode hex": "1F877" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "224", "Dingbat hex": "E0", "Unicode dec": "129142", "Unicode hex": "1F876" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "225", "Dingbat hex": "E1", "Unicode dec": "129152", "Unicode hex": "1F880" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "226", "Dingbat hex": "E2", "Unicode dec": "129154", "Unicode hex": "1F882" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "227", "Dingbat hex": "E3", "Unicode dec": "129153", "Unicode hex": "1F881" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "228", "Dingbat hex": "E4", "Unicode dec": "129155", "Unicode hex": "1F883" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "229", "Dingbat hex": "E5", "Unicode dec": "129156", "Unicode hex": "1F884" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "230", "Dingbat hex": "E6", "Unicode dec": "129157", "Unicode hex": "1F885" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "231", "Dingbat hex": "E7", "Unicode dec": "129159", "Unicode hex": "1F887" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "232", "Dingbat hex": "E8", "Unicode dec": "129158", "Unicode hex": "1F886" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "233", "Dingbat hex": "E9", "Unicode dec": "129168", "Unicode hex": "1F890" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "234", "Dingbat hex": "EA", "Unicode dec": "129170", "Unicode hex": "1F892" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "235", "Dingbat hex": "EB", "Unicode dec": "129169", "Unicode hex": "1F891" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "236", "Dingbat hex": "EC", "Unicode dec": "129171", "Unicode hex": "1F893" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "237", "Dingbat hex": "ED", "Unicode dec": "129172", "Unicode hex": "1F894" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "238", "Dingbat hex": "EE", "Unicode dec": "129174", "Unicode hex": "1F896" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "239", "Dingbat hex": "EF", "Unicode dec": "129173", "Unicode hex": "1F895" },
    { "Typeface name": "Wingdings 3", "Dingbat dec": "240", "Dingbat hex": "F0", "Unicode dec": "129175", "Unicode hex": "1F897" }
  ];
  return fa.default = t, fa;
}
var t2;
function OF() {
  if (t2) return en;
  t2 = 1;
  var t = en && en.__importDefault || function(h) {
    return h && h.__esModule ? h : { default: h };
  };
  Object.defineProperty(en, "__esModule", { value: !0 }), en.hex = en.dec = en.codePoint = void 0;
  for (var e = t(FF()), n = {}, r = String.fromCodePoint ? String.fromCodePoint : d, i = 0, o = e.default; i < o.length; i++) {
    var a = o[i], s = parseInt(a["Unicode dec"], 10), c = {
      codePoint: s,
      string: r(s)
    };
    n[a["Typeface name"].toUpperCase() + "_" + a["Dingbat dec"]] = c;
  }
  function l(h, p) {
    return n[h.toUpperCase() + "_" + p];
  }
  en.codePoint = l;
  function u(h, p) {
    return l(h, parseInt(p, 10));
  }
  en.dec = u;
  function f(h, p) {
    return l(h, parseInt(p, 16));
  }
  en.hex = f;
  function d(h) {
    if (h <= 65535)
      return String.fromCharCode(h);
    var p = Math.floor((h - 65536) / 1024) + 55296, m = (h - 65536) % 1024 + 56320;
    return String.fromCharCode(p, m);
  }
  return en;
}
var da = {}, n2;
function RF() {
  if (n2) return da;
  n2 = 1, da.uriToZipEntryName = t, da.replaceFragment = e;
  function t(n, r) {
    return r.charAt(0) === "/" ? r.substr(1) : n + "/" + r;
  }
  function e(n, r) {
    var i = n.indexOf("#");
    return i !== -1 && (n = n.substring(0, i)), n + "#" + r;
  }
  return da;
}
var r2;
function NF() {
  if (r2) return ua;
  r2 = 1, ua.createBodyReader = s, ua._readNumberingProperties = l;
  var t = OF(), e = et, n = Zr(), r = Wn().Result, i = Wn().warning, o = Wp(), a = RF();
  function s(_) {
    return {
      readXmlElement: function(x) {
        return new c(_).readXmlElement(x);
      },
      readXmlElements: function(x) {
        return new c(_).readXmlElements(x);
      }
    };
  }
  function c(_) {
    var x = [], E = [], S = [], U = _.relationships, C = _.contentTypes, R = _.docxFile, j = _.files, T = _.numbering, k = _.styles;
    function w(ee) {
      var ue = ee.map($);
      return y(ue);
    }
    function $(ee) {
      if (ee.type === "element") {
        var ue = q[ee.name];
        if (ue)
          return ue(ee);
        if (!Object.prototype.hasOwnProperty.call(f, ee.name)) {
          var ve = i("An unrecognised element was ignored: " + ee.name);
          return d([ve]);
        }
      }
      return h();
    }
    function N(ee) {
      return se(ee).map(function(ue) {
        return {
          type: "paragraphProperties",
          styleId: ue.styleId,
          styleName: ue.name,
          alignment: ee.firstOrEmpty("w:jc").attributes["w:val"],
          numbering: l(ue.styleId, ee.firstOrEmpty("w:numPr"), T),
          indent: M(ee.firstOrEmpty("w:ind"))
        };
      });
    }
    function M(ee) {
      return {
        start: ee.attributes["w:start"] || ee.attributes["w:left"],
        end: ee.attributes["w:end"] || ee.attributes["w:right"],
        firstLine: ee.attributes["w:firstLine"],
        hanging: ee.attributes["w:hanging"]
      };
    }
    function K(ee) {
      return G(ee).map(function(ue) {
        var ve = ee.firstOrEmpty("w:sz").attributes["w:val"], Ee = /^[0-9]+$/.test(ve) ? parseInt(ve, 10) / 2 : null;
        return {
          type: "runProperties",
          styleId: ue.styleId,
          styleName: ue.name,
          verticalAlignment: ee.firstOrEmpty("w:vertAlign").attributes["w:val"],
          font: ee.firstOrEmpty("w:rFonts").attributes["w:ascii"],
          fontSize: Ee,
          isBold: te(ee.first("w:b")),
          isUnderline: P(ee.first("w:u")),
          isItalic: te(ee.first("w:i")),
          isStrikethrough: te(ee.first("w:strike")),
          isAllCaps: te(ee.first("w:caps")),
          isSmallCaps: te(ee.first("w:smallCaps")),
          highlight: B(ee.firstOrEmpty("w:highlight").attributes["w:val"])
        };
      });
    }
    function P(ee) {
      if (ee) {
        var ue = ee.attributes["w:val"];
        return ue !== void 0 && ue !== "false" && ue !== "0" && ue !== "none";
      } else
        return !1;
    }
    function te(ee) {
      if (ee) {
        var ue = ee.attributes["w:val"];
        return ue !== "false" && ue !== "0";
      } else
        return !1;
    }
    function W(ee) {
      return ee !== "false" && ee !== "0";
    }
    function B(ee) {
      return !ee || ee === "none" ? null : ee;
    }
    function se(ee) {
      return ce(ee, "w:pStyle", "Paragraph", k.findParagraphStyleById);
    }
    function G(ee) {
      return ce(ee, "w:rStyle", "Run", k.findCharacterStyleById);
    }
    function J(ee) {
      return ce(ee, "w:tblStyle", "Table", k.findTableStyleById);
    }
    function ce(ee, ue, ve, Ee) {
      var ke = [], Q = ee.first(ue), re = null, Fe = null;
      if (Q && (re = Q.attributes["w:val"], re)) {
        var Ie = Ee(re);
        Ie ? Fe = Ie.name : ke.push(Ce(ve, re));
      }
      return m({ styleId: re, name: Fe }, ke);
    }
    function he(ee) {
      var ue = ee.attributes["w:fldCharType"];
      if (ue === "begin")
        x.push({ type: "begin", fldChar: ee }), E = [];
      else if (ue === "end") {
        var ve = x.pop();
        if (ve.type === "begin" && (ve = me(ve)), ve.type === "checkbox")
          return p(n.checkbox({
            checked: ve.checked
          }));
      } else if (ue === "separate") {
        var Ee = x.pop(), ke = me(Ee);
        x.push(ke);
      }
      return h();
    }
    function fe() {
      var ee = e.last(x.filter(function(ue) {
        return ue.type === "hyperlink";
      }));
      return ee ? ee.options : null;
    }
    function me(ee) {
      return de(
        E.join(""),
        ee.type === "begin" ? ee.fldChar : o.emptyElement
      );
    }
    function de(ee, ue) {
      var ve = /\s*HYPERLINK "(.*)"/.exec(ee);
      if (ve)
        return { type: "hyperlink", options: { href: ve[1] } };
      var Ee = /\s*HYPERLINK\s+\\l\s+"(.*)"/.exec(ee);
      if (Ee)
        return { type: "hyperlink", options: { anchor: Ee[1] } };
      var ke = /\s*FORMCHECKBOX\s*/.exec(ee);
      if (ke) {
        var Q = ue.firstOrEmpty("w:ffData").firstOrEmpty("w:checkBox"), re = Q.first("w:checked"), Fe = re == null ? te(Q.first("w:default")) : te(re);
        return { type: "checkbox", checked: Fe };
      }
      return { type: "unknown" };
    }
    function pe(ee) {
      return E.push(ee.text()), h();
    }
    function ye(ee) {
      var ue = ee.attributes["w:font"], ve = ee.attributes["w:char"], Ee = t.hex(ue, ve);
      return Ee == null && /^F0..$/.test(ve) && (Ee = t.hex(ue, ve.substring(2))), Ee == null ? d([i(
        "A w:sym element with an unsupported character was ignored: char " + ve + " in font " + ue
      )]) : p(new n.Text(Ee.string));
    }
    function be(ee) {
      return function(ue) {
        var ve = ue.attributes["w:id"];
        return p(new n.NoteReference({
          noteType: ee,
          noteId: ve
        }));
      };
    }
    function D(ee) {
      return p(n.commentReference({
        commentId: ee.attributes["w:id"]
      }));
    }
    function V(ee) {
      return w(ee.children);
    }
    var q = {
      "w:p": function(ee) {
        var ue = ee.firstOrEmpty("w:pPr"), ve = !!ue.firstOrEmpty("w:rPr").first("w:del");
        if (ve)
          return ee.children.forEach(function(ke) {
            S.push(ke);
          }), h();
        var Ee = ee.children;
        return S.length > 0 && (Ee = S.concat(Ee), S = []), g.map(
          N(ue),
          w(Ee),
          function(ke, Q) {
            return new n.Paragraph(Q, ke);
          }
        ).insertExtra();
      },
      "w:r": function(ee) {
        return g.map(
          K(ee.firstOrEmpty("w:rPr")),
          w(ee.children),
          function(ue, ve) {
            var Ee = fe();
            return Ee !== null && (ve = [new n.Hyperlink(ve, Ee)]), new n.Run(ve, ue);
          }
        );
      },
      "w:fldChar": he,
      "w:instrText": pe,
      "w:t": function(ee) {
        return p(new n.Text(ee.text()));
      },
      "w:tab": function(ee) {
        return p(new n.Tab());
      },
      "w:noBreakHyphen": function() {
        return p(new n.Text("‑"));
      },
      "w:softHyphen": function(ee) {
        return p(new n.Text("­"));
      },
      "w:sym": ye,
      "w:hyperlink": function(ee) {
        var ue = ee.attributes["r:id"], ve = ee.attributes["w:anchor"];
        return w(ee.children).map(function(Ee) {
          function ke(re) {
            var Fe = ee.attributes["w:tgtFrame"] || null;
            return new n.Hyperlink(
              Ee,
              e.extend({ targetFrame: Fe }, re)
            );
          }
          if (ue) {
            var Q = U.findTargetByRelationshipId(ue);
            return ve && (Q = a.replaceFragment(Q, ve)), ke({ href: Q });
          } else return ve ? ke({ anchor: ve }) : Ee;
        });
      },
      "w:tbl": I,
      "w:tr": z,
      "w:tc": ie,
      "w:footnoteReference": be("footnote"),
      "w:endnoteReference": be("endnote"),
      "w:commentReference": D,
      "w:br": function(ee) {
        var ue = ee.attributes["w:type"];
        return ue == null || ue === "textWrapping" ? p(n.lineBreak) : ue === "page" ? p(n.pageBreak) : ue === "column" ? p(n.columnBreak) : d([i("Unsupported break type: " + ue)]);
      },
      "w:bookmarkStart": function(ee) {
        var ue = ee.attributes["w:name"];
        return ue === "_GoBack" ? h() : p(new n.BookmarkStart({ name: ue }));
      },
      "mc:AlternateContent": function(ee) {
        return V(ee.first("mc:Fallback"));
      },
      "w:sdt": function(ee) {
        var ue = ee.firstOrEmpty("w:sdtPr").first("wordml:checkbox");
        if (ue) {
          var ve = ue.first("wordml:checked"), Ee = !!ve && W(
            ve.attributes["wordml:val"]
          );
          return p(n.checkbox({
            checked: Ee
          }));
        } else
          return w(ee.firstOrEmpty("w:sdtContent").children);
      },
      "w:ins": V,
      "w:object": V,
      "w:smartTag": V,
      "w:drawing": V,
      "w:pict": function(ee) {
        return V(ee).toExtra();
      },
      "v:roundrect": V,
      "v:shape": V,
      "v:textbox": V,
      "w:txbxContent": V,
      "wp:inline": L,
      "wp:anchor": L,
      "v:imagedata": De,
      "v:group": V,
      "v:rect": V
    };
    return {
      readXmlElement: $,
      readXmlElements: w
    };
    function I(ee) {
      var ue = O(ee.firstOrEmpty("w:tblPr"));
      return w(ee.children).flatMap(Z).flatMap(function(ve) {
        return ue.map(function(Ee) {
          return n.Table(ve, Ee);
        });
      });
    }
    function O(ee) {
      return J(ee).map(function(ue) {
        return {
          styleId: ue.styleId,
          styleName: ue.name
        };
      });
    }
    function z(ee) {
      var ue = ee.firstOrEmpty("w:trPr"), ve = !!ue.first("w:tblHeader");
      return w(ee.children).map(function(Ee) {
        return n.TableRow(Ee, { isHeader: ve });
      });
    }
    function ie(ee) {
      return w(ee.children).map(function(ue) {
        var ve = ee.firstOrEmpty("w:tcPr"), Ee = ve.firstOrEmpty("w:gridSpan").attributes["w:val"], ke = Ee ? parseInt(Ee, 10) : 1, Q = n.TableCell(ue, { colSpan: ke });
        return Q._vMerge = ne(ve), Q;
      });
    }
    function ne(ee) {
      var ue = ee.first("w:vMerge");
      if (ue) {
        var ve = ue.attributes["w:val"];
        return ve === "continue" || !ve;
      } else
        return null;
    }
    function Z(ee) {
      var ue = e.any(ee, function(ke) {
        return ke.type !== n.types.tableRow;
      });
      if (ue)
        return m(ee, [i(
          "unexpected non-row element in table, cell merging may be incorrect"
        )]);
      var ve = e.any(ee, function(ke) {
        return e.any(ke.children, function(Q) {
          return Q.type !== n.types.tableCell;
        });
      });
      if (ve)
        return m(ee, [i(
          "unexpected non-cell element in table row, cell merging may be incorrect"
        )]);
      var Ee = {};
      return ee.forEach(function(ke) {
        var Q = 0;
        ke.children.forEach(function(re) {
          re._vMerge && Ee[Q] ? Ee[Q].rowSpan++ : (Ee[Q] = re, re._vMerge = !1), Q += re.colSpan;
        });
      }), ee.forEach(function(ke) {
        ke.children = ke.children.filter(function(Q) {
          return !Q._vMerge;
        }), ke.children.forEach(function(Q) {
          delete Q._vMerge;
        });
      }), p(ee);
    }
    function L(ee) {
      var ue = ee.getElementsByTagName("a:graphic").getElementsByTagName("a:graphicData").getElementsByTagName("pic:pic").getElementsByTagName("pic:blipFill").getElementsByTagName("a:blip");
      return y(ue.map(X.bind(null, ee)));
    }
    function X(ee, ue) {
      var ve = ee.first("wp:docPr").attributes, Ee = Y(ve.descr) ? ve.title : ve.descr, ke = oe(ue);
      return ke === null ? d([i("Could not find image file for a:blip element")]) : Se(ke, Ee);
    }
    function Y(ee) {
      return ee == null || /^\s*$/.test(ee);
    }
    function oe(ee) {
      var ue = ee.attributes["r:embed"], ve = ee.attributes["r:link"];
      if (ue)
        return Te(ue);
      if (ve) {
        var Ee = U.findTargetByRelationshipId(ve);
        return {
          path: Ee,
          read: j.read.bind(j, Ee)
        };
      } else
        return null;
    }
    function De(ee) {
      var ue = ee.attributes["r:id"];
      return ue ? Se(
        Te(ue),
        ee.attributes["o:title"]
      ) : d([i("A v:imagedata element without a relationship ID was ignored")]);
    }
    function Te(ee) {
      var ue = a.uriToZipEntryName("word", U.findTargetByRelationshipId(ee));
      return {
        path: ue,
        read: R.read.bind(R, ue)
      };
    }
    function Se(ee, ue) {
      var ve = C.findContentType(ee.path), Ee = n.Image({
        readImage: ee.read,
        altText: ue,
        contentType: ve
      }), ke = u[ve] ? [] : i("Image of type " + ve + " is unlikely to display in web browsers");
      return m(Ee, ke);
    }
    function Ce(ee, ue) {
      return i(
        ee + " style with ID " + ue + " was referenced but not defined in the document"
      );
    }
  }
  function l(_, x, E) {
    var S = x.firstOrEmpty("w:ilvl").attributes["w:val"], U = x.firstOrEmpty("w:numId").attributes["w:val"];
    if (S !== void 0 && U !== void 0)
      return E.findLevel(U, S);
    if (_ != null) {
      var C = E.findLevelByParagraphStyleId(_);
      if (C != null)
        return C;
    }
    return null;
  }
  var u = {
    "image/png": !0,
    "image/gif": !0,
    "image/jpeg": !0,
    "image/svg+xml": !0,
    "image/tiff": !0
  }, f = {
    "office-word:wrap": !0,
    "v:shadow": !0,
    "v:shapetype": !0,
    "w:annotationRef": !0,
    "w:bookmarkEnd": !0,
    "w:sectPr": !0,
    "w:proofErr": !0,
    "w:lastRenderedPageBreak": !0,
    "w:commentRangeStart": !0,
    "w:commentRangeEnd": !0,
    "w:del": !0,
    "w:footnoteRef": !0,
    "w:endnoteRef": !0,
    "w:pPr": !0,
    "w:rPr": !0,
    "w:tblPr": !0,
    "w:tblGrid": !0,
    "w:trPr": !0,
    "w:tcPr": !0
  };
  function d(_) {
    return new g(null, null, _);
  }
  function h() {
    return new g(null);
  }
  function p(_) {
    return new g(_);
  }
  function m(_, x) {
    return new g(_, null, x);
  }
  function g(_, x, E) {
    this.value = _ || [], this.extra = x || [], this._result = new r({
      element: this.value,
      extra: x
    }, E), this.messages = this._result.messages;
  }
  g.prototype.toExtra = function() {
    return new g(null, b(this.extra, this.value), this.messages);
  }, g.prototype.insertExtra = function() {
    var _ = this.extra;
    return _ && _.length ? new g(b(this.value, _), null, this.messages) : this;
  }, g.prototype.map = function(_) {
    var x = this._result.map(function(E) {
      return _(E.element);
    });
    return new g(x.value, this.extra, x.messages);
  }, g.prototype.flatMap = function(_) {
    var x = this._result.flatMap(function(E) {
      return _(E.element)._result;
    });
    return new g(x.value.element, b(this.extra, x.value.extra), x.messages);
  }, g.map = function(_, x, E) {
    return new g(
      E(_.value, x.value),
      b(_.extra, x.extra),
      _.messages.concat(x.messages)
    );
  };
  function y(_) {
    var x = r.combine(e.pluck(_, "_result"));
    return new g(
      e.flatten(e.pluck(x.value, "element")),
      e.filter(e.flatten(e.pluck(x.value, "extra")), v),
      x.messages
    );
  }
  function b(_, x) {
    return e.flatten([_, x]);
  }
  function v(_) {
    return _;
  }
  return ua;
}
var Cf = {}, i2;
function BF() {
  if (i2) return Cf;
  i2 = 1, Cf.DocumentXmlReader = n;
  var t = Zr(), e = Wn().Result;
  function n(r) {
    var i = r.bodyReader;
    function o(a) {
      var s = a.first("w:body");
      if (s == null)
        throw new Error("Could not find the body element: are you sure this is a docx file?");
      var c = i.readXmlElements(s.children).map(function(l) {
        return new t.Document(l, {
          notes: r.notes,
          comments: r.comments
        });
      });
      return new e(c.value, c.messages);
    }
    return {
      convertXmlToDocument: o
    };
  }
  return Cf;
}
var zi = {}, o2;
function IF() {
  if (o2) return zi;
  o2 = 1, zi.readRelationships = t, zi.defaultValue = new e([]), zi.Relationships = e;
  function t(n) {
    var r = [];
    return n.children.forEach(function(i) {
      if (i.name === "relationships:Relationship") {
        var o = {
          relationshipId: i.attributes.Id,
          target: i.attributes.Target,
          type: i.attributes.Type
        };
        r.push(o);
      }
    }), new e(r);
  }
  function e(n) {
    var r = {};
    n.forEach(function(o) {
      r[o.relationshipId] = o.target;
    });
    var i = {};
    return n.forEach(function(o) {
      i[o.type] || (i[o.type] = []), i[o.type].push(o.target);
    }), {
      findTargetByRelationshipId: function(o) {
        return r[o];
      },
      findTargetsByType: function(o) {
        return i[o] || [];
      }
    };
  }
  return zi;
}
var ha = {}, a2;
function MF() {
  if (a2) return ha;
  a2 = 1, ha.readContentTypesFromXml = e;
  var t = {
    png: "png",
    gif: "gif",
    jpeg: "jpeg",
    jpg: "jpeg",
    tif: "tiff",
    tiff: "tiff",
    bmp: "bmp"
  };
  ha.defaultContentTypes = n({}, {});
  function e(r) {
    var i = {}, o = {};
    return r.children.forEach(function(a) {
      if (a.name === "content-types:Default" && (i[a.attributes.Extension] = a.attributes.ContentType), a.name === "content-types:Override") {
        var s = a.attributes.PartName;
        s.charAt(0) === "/" && (s = s.substring(1)), o[s] = a.attributes.ContentType;
      }
    }), n(o, i);
  }
  function n(r, i) {
    return {
      findContentType: function(o) {
        var a = r[o];
        if (a)
          return a;
        var s = o.split("."), c = s[s.length - 1];
        if (i.hasOwnProperty(c))
          return i[c];
        var l = t[c.toLowerCase()];
        return l ? "image/" + l : null;
      }
    };
  }
  return ha;
}
var ji = {}, s2;
function WF() {
  if (s2) return ji;
  s2 = 1;
  var t = et;
  ji.readNumberingXml = n, ji.Numbering = e, ji.defaultNumbering = new e({}, {});
  function e(a, s, c) {
    var l = t.flatten(t.values(s).map(function(h) {
      return t.values(h.levels);
    })), u = t.indexBy(
      l.filter(function(h) {
        return h.paragraphStyleId != null;
      }),
      "paragraphStyleId"
    );
    function f(h, p) {
      var m = a[h];
      if (m) {
        var g = s[m.abstractNumId];
        if (g) {
          if (g.numStyleLink == null)
            return s[m.abstractNumId].levels[p];
          var y = c.findNumberingStyleById(g.numStyleLink);
          return f(y.numId, p);
        } else return null;
      } else
        return null;
    }
    function d(h) {
      return u[h] || null;
    }
    return {
      findLevel: f,
      findLevelByParagraphStyleId: d
    };
  }
  function n(a, s) {
    if (!s || !s.styles)
      throw new Error("styles is missing");
    var c = r(a), l = o(a);
    return new e(l, c, s.styles);
  }
  function r(a) {
    var s = {};
    return a.getElementsByTagName("w:abstractNum").forEach(function(c) {
      var l = c.attributes["w:abstractNumId"];
      s[l] = i(c);
    }), s;
  }
  function i(a) {
    var s = {};
    a.getElementsByTagName("w:lvl").forEach(function(l) {
      var u = l.attributes["w:ilvl"], f = l.firstOrEmpty("w:numFmt").attributes["w:val"], d = l.firstOrEmpty("w:pStyle").attributes["w:val"];
      s[u] = {
        isOrdered: f !== "bullet",
        level: u,
        paragraphStyleId: d
      };
    });
    var c = a.firstOrEmpty("w:numStyleLink").attributes["w:val"];
    return { levels: s, numStyleLink: c };
  }
  function o(a) {
    var s = {};
    return a.getElementsByTagName("w:num").forEach(function(c) {
      var l = c.attributes["w:numId"], u = c.first("w:abstractNumId").attributes["w:val"];
      s[l] = { abstractNumId: u };
    }), s;
  }
  return ji;
}
var $i = {}, c2;
function LF() {
  if (c2) return $i;
  c2 = 1, $i.readStylesXml = e, $i.Styles = t, $i.defaultStyles = new t({}, {});
  function t(o, a, s, c) {
    return {
      findParagraphStyleById: function(l) {
        return o[l];
      },
      findCharacterStyleById: function(l) {
        return a[l];
      },
      findTableStyleById: function(l) {
        return s[l];
      },
      findNumberingStyleById: function(l) {
        return c[l];
      }
    };
  }
  t.EMPTY = new t({}, {}, {}, {});
  function e(o) {
    var a = {}, s = {}, c = {}, l = {}, u = {
      paragraph: a,
      character: s,
      table: c
    };
    return o.getElementsByTagName("w:style").forEach(function(f) {
      var d = n(f);
      if (d.type === "numbering")
        l[d.styleId] = i(f);
      else {
        var h = u[d.type];
        h && (h[d.styleId] = d);
      }
    }), new t(a, s, c, l);
  }
  function n(o) {
    var a = o.attributes["w:type"], s = o.attributes["w:styleId"], c = r(o);
    return { type: a, styleId: s, name: c };
  }
  function r(o) {
    var a = o.first("w:name");
    return a ? a.attributes["w:val"] : null;
  }
  function i(o) {
    var a = o.firstOrEmpty("w:pPr").firstOrEmpty("w:numPr").firstOrEmpty("w:numId").attributes["w:val"];
    return { numId: a };
  }
  return $i;
}
var oi = {}, l2;
function PF() {
  if (l2) return oi;
  l2 = 1;
  var t = Zr(), e = Wn().Result;
  oi.createFootnotesReader = n.bind(oi, "footnote"), oi.createEndnotesReader = n.bind(oi, "endnote");
  function n(r, i) {
    function o(c) {
      return e.combine(c.getElementsByTagName("w:" + r).filter(a).map(s));
    }
    function a(c) {
      var l = c.attributes["w:type"];
      return l !== "continuationSeparator" && l !== "separator";
    }
    function s(c) {
      var l = c.attributes["w:id"];
      return i.readXmlElements(c.children).map(function(u) {
        return t.Note({ noteType: r, noteId: l, body: u });
      });
    }
    return o;
  }
  return oi;
}
var Sf = {}, u2;
function qF() {
  if (u2) return Sf;
  u2 = 1;
  var t = Zr(), e = Wn().Result;
  function n(r) {
    function i(a) {
      return e.combine(a.getElementsByTagName("w:comment").map(o));
    }
    function o(a) {
      var s = a.attributes["w:id"];
      function c(l) {
        return (a.attributes[l] || "").trim() || null;
      }
      return r.readXmlElements(a.children).map(function(l) {
        return t.comment({
          commentId: s,
          body: l,
          authorName: c("w:author"),
          authorInitials: c("w:initials")
        });
      });
    }
    return i;
  }
  return Sf.createCommentsReader = n, Sf;
}
var Af = {}, f2;
function zF() {
  if (f2) return Af;
  f2 = 1;
  var t = vr();
  Af.Files = e;
  function e() {
    function n(r) {
      return t.reject(new Error("could not open external image: '" + r + `'
cannot open linked files from a web browser`));
    }
    return {
      read: n
    };
  }
  return Af;
}
var d2;
function jF() {
  if (d2) return ra;
  d2 = 1, ra.read = p, ra._findPartPaths = m;
  var t = vr(), e = Zr(), n = Wn().Result, r = kw(), i = kF().readXmlFromZipFile, o = NF().createBodyReader, a = BF().DocumentXmlReader, s = IF(), c = MF(), l = WF(), u = LF(), f = PF(), d = qF(), h = zF().Files;
  function p(C, R) {
    return R = R || {}, t.props({
      contentTypes: x(C),
      partPaths: m(C),
      docxFile: C,
      files: R.path ? h.relativeToFile(R.path) : new h(null)
    }).also(function(j) {
      return {
        styles: S(C, j.partPaths.styles)
      };
    }).also(function(j) {
      return {
        numbering: E(C, j.partPaths.numbering, j.styles)
      };
    }).also(function(j) {
      return {
        footnotes: v(j.partPaths.footnotes, j, function(T, k) {
          return k ? f.createFootnotesReader(T)(k) : new n([]);
        }),
        endnotes: v(j.partPaths.endnotes, j, function(T, k) {
          return k ? f.createEndnotesReader(T)(k) : new n([]);
        }),
        comments: v(j.partPaths.comments, j, function(T, k) {
          return k ? d.createCommentsReader(T)(k) : new n([]);
        })
      };
    }).also(function(j) {
      return {
        notes: j.footnotes.flatMap(function(T) {
          return j.endnotes.map(function(k) {
            return new e.Notes(T.concat(k));
          });
        })
      };
    }).then(function(j) {
      return v(j.partPaths.mainDocument, j, function(T, k) {
        return j.notes.flatMap(function(w) {
          return j.comments.flatMap(function($) {
            var N = new a({
              bodyReader: T,
              notes: w,
              comments: $
            });
            return N.convertXmlToDocument(k);
          });
        });
      });
    });
  }
  function m(C) {
    return U(C).then(function(R) {
      var j = g({
        docxFile: C,
        relationships: R,
        relationshipType: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
        basePath: "",
        fallbackPath: "word/document.xml"
      });
      if (!C.exists(j))
        throw new Error("Could not find main document part. Are you sure this is a valid .docx file?");
      return b({
        filename: _(j),
        readElement: s.readRelationships,
        defaultValue: s.defaultValue
      })(C).then(function(T) {
        function k(w) {
          return g({
            docxFile: C,
            relationships: T,
            relationshipType: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/" + w,
            basePath: r.splitPath(j).dirname,
            fallbackPath: "word/" + w + ".xml"
          });
        }
        return {
          mainDocument: j,
          comments: k("comments"),
          endnotes: k("endnotes"),
          footnotes: k("footnotes"),
          numbering: k("numbering"),
          styles: k("styles")
        };
      });
    });
  }
  function g(C) {
    var R = C.docxFile, j = C.relationships, T = C.relationshipType, k = C.basePath, w = C.fallbackPath, $ = j.findTargetsByType(T), N = $.map(function(K) {
      return y(r.joinPath(k, K), "/");
    }), M = N.filter(function(K) {
      return R.exists(K);
    });
    return M.length === 0 ? w : M[0];
  }
  function y(C, R) {
    return C.substring(0, R.length) === R ? C.substring(R.length) : C;
  }
  function b(C) {
    return function(R) {
      return i(R, C.filename).then(function(j) {
        return j ? C.readElement(j) : C.defaultValue;
      });
    };
  }
  function v(C, R, j) {
    var T = b({
      filename: _(C),
      readElement: s.readRelationships,
      defaultValue: s.defaultValue
    });
    return T(R.docxFile).then(function(k) {
      var w = new o({
        relationships: k,
        contentTypes: R.contentTypes,
        docxFile: R.docxFile,
        numbering: R.numbering,
        styles: R.styles,
        files: R.files
      });
      return i(R.docxFile, C).then(function($) {
        return j(w, $);
      });
    });
  }
  function _(C) {
    var R = r.splitPath(C);
    return r.joinPath(R.dirname, "_rels", R.basename + ".rels");
  }
  var x = b({
    filename: "[Content_Types].xml",
    readElement: c.readContentTypesFromXml,
    defaultValue: c.defaultContentTypes
  });
  function E(C, R, j) {
    return b({
      filename: R,
      readElement: function(T) {
        return l.readNumberingXml(T, { styles: j });
      },
      defaultValue: l.defaultNumbering
    })(C);
  }
  function S(C, R) {
    return b({
      filename: R,
      readElement: u.readStylesXml,
      defaultValue: u.defaultStyles
    })(C);
  }
  var U = b({
    filename: "_rels/.rels",
    readElement: s.readRelationships,
    defaultValue: s.defaultValue
  });
  return ra;
}
var pa = {}, h2;
function $F() {
  if (h2) return pa;
  h2 = 1;
  var t = et, e = vr(), n = Wp();
  pa.writeStyleMap = a, pa.readStyleMap = u;
  var r = "http://schemas.zwobble.org/mammoth/style-map", i = "mammoth/style-map", o = "/" + i;
  function a(f, d) {
    return f.write(i, d), s(f).then(function() {
      return c(f);
    });
  }
  function s(f) {
    var d = "word/_rels/document.xml.rels", h = "http://schemas.openxmlformats.org/package/2006/relationships", p = "{" + h + "}Relationship";
    return f.read(d, "utf8").then(n.readString).then(function(m) {
      var g = m.children;
      l(g, p, "Id", {
        Id: "rMammothStyleMap",
        Type: r,
        Target: o
      });
      var y = { "": h };
      return f.write(d, n.writeString(m, y));
    });
  }
  function c(f) {
    var d = "[Content_Types].xml", h = "http://schemas.openxmlformats.org/package/2006/content-types", p = "{" + h + "}Override";
    return f.read(d, "utf8").then(n.readString).then(function(m) {
      var g = m.children;
      l(g, p, "PartName", {
        PartName: o,
        ContentType: "text/prs.mammoth.style-map"
      });
      var y = { "": h };
      return f.write(d, n.writeString(m, y));
    });
  }
  function l(f, d, h, p) {
    var m = t.find(f, function(g) {
      return g.name === d && g.attributes[h] === p[h];
    });
    m ? m.attributes = p : f.push(n.element(d, p));
  }
  function u(f) {
    return f.exists(i) ? f.read(i, "utf8") : e.resolve(null);
  }
  return pa;
}
var ga = {}, Tr = {}, Sn = {}, Xn = {}, p2;
function Bw() {
  if (p2) return Xn;
  p2 = 1;
  var t = Sc();
  function e(c, l, u) {
    return r(
      t.element(c, l, { fresh: !1 }),
      u
    );
  }
  function n(c, l, u) {
    var f = t.element(c, l, { fresh: !0 });
    return r(f, u);
  }
  function r(c, l) {
    return {
      type: "element",
      tag: c,
      children: l || []
    };
  }
  function i(c) {
    return {
      type: "text",
      value: c
    };
  }
  var o = {
    type: "forceWrite"
  };
  Xn.freshElement = n, Xn.nonFreshElement = e, Xn.elementWithTag = r, Xn.text = i, Xn.forceWrite = o;
  var a = {
    br: !0,
    hr: !0,
    img: !0,
    input: !0
  };
  function s(c) {
    return c.children.length === 0 && a[c.tag.tagName];
  }
  return Xn.isVoidElement = s, Xn;
}
var Uf, g2;
function VF() {
  if (g2) return Uf;
  g2 = 1;
  var t = et, e = Bw();
  function n(m) {
    return r(l(m));
  }
  function r(m) {
    var g = [];
    return m.map(i).forEach(function(y) {
      c(g, y);
    }), g;
  }
  function i(m) {
    return o[m.type](m);
  }
  var o = {
    element: a,
    text: s,
    forceWrite: s
  };
  function a(m) {
    return e.elementWithTag(m.tag, r(m.children));
  }
  function s(m) {
    return m;
  }
  function c(m, g) {
    var y = m[m.length - 1];
    g.type === "element" && !g.tag.fresh && y && y.type === "element" && g.tag.matchesElement(y.tag) ? (g.tag.separator && c(y.children, e.text(g.tag.separator)), g.children.forEach(function(b) {
      c(y.children, b);
    })) : m.push(g);
  }
  function l(m) {
    return u(m, function(g) {
      return f[g.type](g);
    });
  }
  function u(m, g) {
    return t.flatten(t.map(m, g), !0);
  }
  var f = {
    element: h,
    text: p,
    forceWrite: d
  };
  function d(m) {
    return [m];
  }
  function h(m) {
    var g = l(m.children);
    return g.length === 0 && !e.isVoidElement(m) ? [] : [e.elementWithTag(m.tag, g)];
  }
  function p(m) {
    return m.value.length === 0 ? [] : [m];
  }
  return Uf = n, Uf;
}
var m2;
function Cc() {
  if (m2) return Sn;
  m2 = 1;
  var t = Bw();
  Sn.freshElement = t.freshElement, Sn.nonFreshElement = t.nonFreshElement, Sn.elementWithTag = t.elementWithTag, Sn.text = t.text, Sn.forceWrite = t.forceWrite, Sn.simplify = VF();
  function e(a, s) {
    s.forEach(function(c) {
      n(a, c);
    });
  }
  function n(a, s) {
    r[s.type](a, s);
  }
  var r = {
    element: i,
    text: o,
    forceWrite: function() {
    }
  };
  function i(a, s) {
    t.isVoidElement(s) ? a.selfClosing(s.tag.tagName, s.tag.attributes) : (a.open(s.tag.tagName, s.tag.attributes), e(a, s.children), a.close(s.tag.tagName));
  }
  function o(a, s) {
    a.text(s.value);
  }
  return Sn.write = e, Sn;
}
var y2;
function Sc() {
  if (y2) return Tr;
  y2 = 1;
  var t = et, e = Cc();
  Tr.topLevelElement = n, Tr.elements = r, Tr.element = o;
  function n(s, c) {
    return r([o(s, c, { fresh: !0 })]);
  }
  function r(s) {
    return new i(s.map(function(c) {
      return t.isString(c) ? o(c) : c;
    }));
  }
  function i(s) {
    this._elements = s;
  }
  i.prototype.wrap = function(c) {
    for (var l = c(), u = this._elements.length - 1; u >= 0; u--)
      l = this._elements[u].wrapNodes(l);
    return l;
  };
  function o(s, c, l) {
    return l = l || {}, new a(s, c, l);
  }
  function a(s, c, l) {
    var u = {};
    t.isArray(s) ? (s.forEach(function(f) {
      u[f] = !0;
    }), s = s[0]) : u[s] = !0, this.tagName = s, this.tagNames = u, this.attributes = c || {}, this.fresh = l.fresh, this.separator = l.separator;
  }
  return a.prototype.matchesElement = function(s) {
    return this.tagNames[s.tagName] && t.isEqual(this.attributes || {}, s.attributes || {});
  }, a.prototype.wrap = function(c) {
    return this.wrapNodes(c());
  }, a.prototype.wrapNodes = function(c) {
    return [e.elementWithTag(this, c)];
  }, Tr.empty = r([]), Tr.ignore = {
    wrap: function() {
      return [];
    }
  }, Tr;
}
var kf = {}, b2;
function Iw() {
  return b2 || (b2 = 1, function(t) {
    var e = et, n = vr(), r = Cc();
    t.imgElement = i;
    function i(o) {
      return function(a, s) {
        return n.when(o(a)).then(function(c) {
          var l = {};
          return a.altText && (l.alt = a.altText), e.extend(l, c), [r.freshElement("img", l)];
        });
      };
    }
    t.inline = t.imgElement, t.dataUri = i(function(o) {
      return o.readAsBase64String().then(function(a) {
        return {
          src: "data:" + o.contentType + ";base64," + a
        };
      });
    });
  }(kf)), kf;
}
var Ff = {}, Of = {}, v2;
function HF() {
  if (v2) return Of;
  v2 = 1;
  var t = et;
  Of.writer = e;
  function e(s) {
    return s = s || {}, s.prettyPrint ? r() : i();
  }
  var n = {
    div: !0,
    p: !0,
    ul: !0,
    li: !0
  };
  function r() {
    var s = 0, c = "  ", l = [], u = !0, f = !1, d = i();
    function h(x, E) {
      n[x] && v(), l.push(x), d.open(x, E), n[x] && s++, u = !1;
    }
    function p(x) {
      n[x] && (s--, v()), l.pop(), d.close(x);
    }
    function m(x) {
      b();
      var E = _() ? x : x.replace(`
`, `
` + c);
      d.text(E);
    }
    function g(x, E) {
      v(), d.selfClosing(x, E);
    }
    function y() {
      return l.length === 0 || n[l[l.length - 1]];
    }
    function b() {
      f || (v(), f = !0);
    }
    function v() {
      if (f = !1, !u && y() && !_()) {
        d._append(`
`);
        for (var x = 0; x < s; x++)
          d._append(c);
      }
    }
    function _() {
      return t.some(l, function(x) {
        return x === "pre";
      });
    }
    return {
      asString: d.asString,
      open: h,
      close: p,
      text: m,
      selfClosing: g
    };
  }
  function i() {
    var s = [];
    function c(m, g) {
      var y = f(g);
      s.push("<" + m + y + ">");
    }
    function l(m) {
      s.push("</" + m + ">");
    }
    function u(m, g) {
      var y = f(g);
      s.push("<" + m + y + " />");
    }
    function f(m) {
      return t.map(m, function(g, y) {
        return " " + y + '="' + a(g) + '"';
      }).join("");
    }
    function d(m) {
      s.push(o(m));
    }
    function h(m) {
      s.push(m);
    }
    function p() {
      return s.join("");
    }
    return {
      asString: p,
      open: c,
      close: l,
      text: d,
      selfClosing: u,
      _append: h
    };
  }
  function o(s) {
    return s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  function a(s) {
    return s.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  return Of;
}
var Rf = {}, D2;
function XF() {
  if (D2) return Rf;
  D2 = 1;
  var t = et;
  function e(f) {
    return n(f, f);
  }
  function n(f, d) {
    return function() {
      return { start: f, end: d };
    };
  }
  function r(f) {
    var d = f.href || "";
    return d ? {
      start: "[",
      end: "](" + d + ")",
      anchorPosition: "before"
    } : {};
  }
  function i(f) {
    var d = f.src || "", h = f.alt || "";
    return d || h ? { start: "![" + h + "](" + d + ")" } : {};
  }
  function o(f) {
    return function(d, h) {
      return {
        start: h ? `
` : "",
        end: h ? "" : `
`,
        list: {
          isOrdered: f.isOrdered,
          indent: h ? h.indent + 1 : 0,
          count: 0
        }
      };
    };
  }
  function a(f, d, h) {
    d = d || { indent: 0, isOrdered: !1, count: 0 }, d.count++, h.hasClosed = !1;
    var p = d.isOrdered ? d.count + "." : "-", m = c("	", d.indent) + p + " ";
    return {
      start: m,
      end: function() {
        if (!h.hasClosed)
          return h.hasClosed = !0, `
`;
      }
    };
  }
  var s = {
    p: n("", `

`),
    br: n("", `  
`),
    ul: o({ isOrdered: !1 }),
    ol: o({ isOrdered: !0 }),
    li: a,
    strong: e("__"),
    em: e("*"),
    a: r,
    img: i
  };
  (function() {
    for (var f = 1; f <= 6; f++)
      s["h" + f] = n(c("#", f) + " ", `

`);
  })();
  function c(f, d) {
    return new Array(d + 1).join(f);
  }
  function l() {
    var f = [], d = [], h = null, p = {};
    function m(x, E) {
      E = E || {};
      var S = s[x] || function() {
        return {};
      }, U = S(E, h, p);
      d.push({ end: U.end, list: h }), U.list && (h = U.list);
      var C = U.anchorPosition === "before";
      C && g(E), f.push(U.start || ""), C || g(E);
    }
    function g(x) {
      x.id && f.push('<a id="' + x.id + '"></a>');
    }
    function y(x) {
      var E = d.pop();
      h = E.list;
      var S = t.isFunction(E.end) ? E.end() : E.end;
      f.push(S || "");
    }
    function b(x, E) {
      m(x, E), y();
    }
    function v(x) {
      f.push(u(x));
    }
    function _() {
      return f.join("");
    }
    return {
      asString: _,
      open: m,
      close: y,
      text: v,
      selfClosing: b
    };
  }
  Rf.writer = l;
  function u(f) {
    return f.replace(/\\/g, "\\\\").replace(/([\`\*_\{\}\[\]\(\)\#\+\-\.\!])/g, "\\$1");
  }
  return Rf;
}
var x2;
function GF() {
  if (x2) return Ff;
  x2 = 1;
  var t = HF(), e = XF();
  Ff.writer = n;
  function n(r) {
    return r = r || {}, r.outputFormat === "markdown" ? e.writer() : t.writer(r);
  }
  return Ff;
}
var w2;
function KF() {
  if (w2) return ga;
  w2 = 1;
  var t = et, e = vr(), n = Zr(), r = Sc(), i = Wn(), o = Iw(), a = Cc(), s = GF();
  ga.DocumentConverter = c;
  function c(g) {
    return {
      convertToHtml: function(y) {
        var b = t.indexBy(
          y.type === n.types.document ? y.comments : [],
          "commentId"
        ), v = new l(g, b);
        return v.convertToHtml(y);
      }
    };
  }
  function l(g, y) {
    var b = 1, v = [], _ = [];
    g = t.extend({ ignoreEmptyParagraphs: !0 }, g);
    var x = g.idPrefix === void 0 ? "" : g.idPrefix, E = g.ignoreEmptyParagraphs, S = r.topLevelElement("p"), U = g.styleMap || [];
    function C(D) {
      var V = [], q = j(D, V, {}), I = [];
      p(q, function(z) {
        z.type === "deferred" && I.push(z);
      });
      var O = {};
      return e.mapSeries(I, function(z) {
        return z.value().then(function(ie) {
          O[z.id] = ie;
        });
      }).then(function() {
        function z(ne) {
          return h(ne, function(Z) {
            return Z.type === "deferred" ? O[Z.id] : Z.children ? [
              t.extend({}, Z, {
                children: z(Z.children)
              })
            ] : [Z];
          });
        }
        var ie = s.writer({
          prettyPrint: g.prettyPrint,
          outputFormat: g.outputFormat
        });
        return a.write(ie, a.simplify(z(q))), new i.Result(ie.asString(), V);
      });
    }
    function R(D, V, q) {
      return h(D, function(I) {
        return j(I, V, q);
      });
    }
    function j(D, V, q) {
      if (!q)
        throw new Error("options not set");
      var I = be[D.type];
      return I ? I(D, V, q) : [];
    }
    function T(D, V, q) {
      return k(D, V).wrap(function() {
        var I = R(D.children, V, q);
        return E ? I : [a.forceWrite].concat(I);
      });
    }
    function k(D, V) {
      var q = M(D);
      return q ? q.to : (D.styleId && V.push(d("paragraph", D)), S);
    }
    function w(D, V, q) {
      var I = function() {
        return R(D.children, V, q);
      }, O = [];
      if (D.highlight !== null) {
        var z = N({ type: "highlight", color: D.highlight });
        z && O.push(z);
      }
      D.isSmallCaps && O.push($("smallCaps")), D.isAllCaps && O.push($("allCaps")), D.isStrikethrough && O.push($("strikethrough", "s")), D.isUnderline && O.push($("underline")), D.verticalAlignment === n.verticalAlignment.subscript && O.push(r.element("sub", {}, { fresh: !1 })), D.verticalAlignment === n.verticalAlignment.superscript && O.push(r.element("sup", {}, { fresh: !1 })), D.isItalic && O.push($("italic", "em")), D.isBold && O.push($("bold", "strong"));
      var ie = r.empty, ne = M(D);
      return ne ? ie = ne.to : D.styleId && V.push(d("run", D)), O.push(ie), O.forEach(function(Z) {
        I = Z.wrap.bind(Z, I);
      }), I();
    }
    function $(D, V) {
      var q = N({ type: D });
      return q || (V ? r.element(V, {}, { fresh: !1 }) : r.empty);
    }
    function N(D, V) {
      var q = M(D);
      return q ? q.to : V;
    }
    function M(D) {
      for (var V = 0; V < U.length; V++)
        if (U[V].from.matches(D))
          return U[V];
    }
    function K(D) {
      return function(V, q) {
        return e.attempt(function() {
          return D(V, q);
        }).caught(function(I) {
          return q.push(i.error(I)), [];
        });
      };
    }
    function P(D) {
      return W(D.noteType, D.noteId);
    }
    function te(D) {
      return B(D.noteType, D.noteId);
    }
    function W(D, V) {
      return se(D + "-" + V);
    }
    function B(D, V) {
      return se(D + "-ref-" + V);
    }
    function se(D) {
      return x + D;
    }
    var G = r.elements([
      r.element("table", {}, { fresh: !0 })
    ]);
    function J(D, V, q) {
      return N(D, G).wrap(function() {
        return ce(D, V, q);
      });
    }
    function ce(D, V, q) {
      var I = t.findIndex(D.children, function(ne) {
        return !ne.type === n.types.tableRow || !ne.isHeader;
      });
      I === -1 && (I = D.children.length);
      var O;
      if (I === 0)
        O = R(
          D.children,
          V,
          t.extend({}, q, { isTableHeader: !1 })
        );
      else {
        var z = R(
          D.children.slice(0, I),
          V,
          t.extend({}, q, { isTableHeader: !0 })
        ), ie = R(
          D.children.slice(I),
          V,
          t.extend({}, q, { isTableHeader: !1 })
        );
        O = [
          a.freshElement("thead", {}, z),
          a.freshElement("tbody", {}, ie)
        ];
      }
      return [a.forceWrite].concat(O);
    }
    function he(D, V, q) {
      var I = R(D.children, V, q);
      return [
        a.freshElement("tr", {}, [a.forceWrite].concat(I))
      ];
    }
    function fe(D, V, q) {
      var I = q.isTableHeader ? "th" : "td", O = R(D.children, V, q), z = {};
      return D.colSpan !== 1 && (z.colspan = D.colSpan.toString()), D.rowSpan !== 1 && (z.rowspan = D.rowSpan.toString()), [
        a.freshElement(I, z, [a.forceWrite].concat(O))
      ];
    }
    function me(D, V, q) {
      return N(D, r.ignore).wrap(function() {
        var I = y[D.commentId], O = _.length + 1, z = "[" + m(I) + O + "]";
        return _.push({ label: z, comment: I }), [
          a.freshElement("a", {
            href: "#" + W("comment", D.commentId),
            id: B("comment", D.commentId)
          }, [a.text(z)])
        ];
      });
    }
    function de(D, V, q) {
      var I = D.label, O = D.comment, z = R(O.body, V, q).concat([
        a.nonFreshElement("p", {}, [
          a.text(" "),
          a.freshElement("a", { href: "#" + B("comment", O.commentId) }, [
            a.text("↑")
          ])
        ])
      ]);
      return [
        a.freshElement(
          "dt",
          { id: W("comment", O.commentId) },
          [a.text("Comment " + I)]
        ),
        a.freshElement("dd", {}, z)
      ];
    }
    function pe(D, V, q) {
      return ye(D).wrap(function() {
        return [];
      });
    }
    function ye(D) {
      var V = M(D);
      return V ? V.to : D.breakType === "line" ? r.topLevelElement("br") : r.empty;
    }
    var be = {
      document: function(D, V, q) {
        var I = R(D.children, V, q), O = v.map(function(ie) {
          return D.notes.resolve(ie);
        }), z = R(O, V, q);
        return I.concat([
          a.freshElement("ol", {}, z),
          a.freshElement("dl", {}, h(_, function(ie) {
            return de(ie, V, q);
          }))
        ]);
      },
      paragraph: T,
      run: w,
      text: function(D, V, q) {
        return [a.text(D.value)];
      },
      tab: function(D, V, q) {
        return [a.text("	")];
      },
      hyperlink: function(D, V, q) {
        var I = D.anchor ? "#" + se(D.anchor) : D.href, O = { href: I };
        D.targetFrame != null && (O.target = D.targetFrame);
        var z = R(D.children, V, q);
        return [a.nonFreshElement("a", O, z)];
      },
      checkbox: function(D) {
        var V = { type: "checkbox" };
        return D.checked && (V.checked = "checked"), [a.freshElement("input", V)];
      },
      bookmarkStart: function(D, V, q) {
        var I = a.freshElement("a", {
          id: se(D.name)
        }, [a.forceWrite]);
        return [I];
      },
      noteReference: function(D, V, q) {
        v.push(D);
        var I = a.freshElement("a", {
          href: "#" + P(D),
          id: te(D)
        }, [a.text("[" + b++ + "]")]);
        return [a.freshElement("sup", {}, [I])];
      },
      note: function(D, V, q) {
        var I = R(D.body, V, q), O = a.elementWithTag(r.element("p", {}, { fresh: !1 }), [
          a.text(" "),
          a.freshElement("a", { href: "#" + te(D) }, [a.text("↑")])
        ]), z = I.concat([O]);
        return a.freshElement("li", { id: P(D) }, z);
      },
      commentReference: me,
      comment: de,
      image: f(K(g.convertImage || o.dataUri)),
      table: J,
      tableRow: he,
      tableCell: fe,
      break: pe
    };
    return {
      convertToHtml: C
    };
  }
  var u = 1;
  function f(g) {
    return function(y, b, v) {
      return [
        {
          type: "deferred",
          id: u++,
          value: function() {
            return g(y, b, v);
          }
        }
      ];
    };
  }
  function d(g, y) {
    return i.warning(
      "Unrecognised " + g + " style: '" + y.styleName + "' (Style ID: " + y.styleId + ")"
    );
  }
  function h(g, y) {
    return t.flatten(g.map(y), !0);
  }
  function p(g, y) {
    g.forEach(function(b) {
      y(b), b.children && p(b.children, y);
    });
  }
  var m = ga.commentAuthorLabel = function(y) {
    return y.authorInitials || "";
  };
  return ga;
}
var Nf = {}, _2;
function JF() {
  if (_2) return Nf;
  _2 = 1;
  var t = Zr();
  function e(n) {
    if (n.type === "text")
      return n.value;
    if (n.type === t.types.tab)
      return "	";
    var r = n.type === "paragraph" ? `

` : "";
    return (n.children || []).map(e).join("") + r;
  }
  return Nf.convertElementToRawText = e, Nf;
}
var Vi = {}, tn = {}, Bf = {}, If = { exports: {} }, T2;
function ZF() {
  if (T2) return If.exports;
  T2 = 1;
  var t = If.exports = function(e, n) {
    this._tokens = e, this._startIndex = n || 0;
  };
  return t.prototype.head = function() {
    return this._tokens[this._startIndex];
  }, t.prototype.tail = function(e) {
    return new t(this._tokens, this._startIndex + 1);
  }, t.prototype.toArray = function() {
    return this._tokens.slice(this._startIndex);
  }, t.prototype.end = function() {
    return this._tokens[this._tokens.length - 1];
  }, t.prototype.to = function(e) {
    var n = this.head().source, r = e.head() || e.end();
    return n.to(r.source);
  }, If.exports;
}
var E2;
function YF() {
  if (E2) return Bf;
  E2 = 1;
  var t = ZF();
  return Bf.Parser = function(e) {
    var n = function(r, i) {
      return r(new t(i));
    };
    return {
      parseTokens: n
    };
  }, Bf;
}
var Mf = {}, Wf = {}, C2;
function QF() {
  return C2 || (C2 = 1, function(t) {
    t.none = /* @__PURE__ */ Object.create({
      value: function() {
        throw new Error("Called value on none");
      },
      isNone: function() {
        return !0;
      },
      isSome: function() {
        return !1;
      },
      map: function() {
        return t.none;
      },
      flatMap: function() {
        return t.none;
      },
      filter: function() {
        return t.none;
      },
      toArray: function() {
        return [];
      },
      orElse: e,
      valueOrElse: e
    });
    function e(r) {
      return typeof r == "function" ? r() : r;
    }
    t.some = function(r) {
      return new n(r);
    };
    var n = function(r) {
      this._value = r;
    };
    n.prototype.value = function() {
      return this._value;
    }, n.prototype.isNone = function() {
      return !1;
    }, n.prototype.isSome = function() {
      return !0;
    }, n.prototype.map = function(r) {
      return new n(r(this._value));
    }, n.prototype.flatMap = function(r) {
      return r(this._value);
    }, n.prototype.filter = function(r) {
      return r(this._value) ? this : t.none;
    }, n.prototype.toArray = function() {
      return [this._value];
    }, n.prototype.orElse = function(r) {
      return this;
    }, n.prototype.valueOrElse = function(r) {
      return this._value;
    }, t.isOption = function(r) {
      return r === t.none || r instanceof n;
    }, t.fromNullable = function(r) {
      return r == null ? t.none : new n(r);
    };
  }(Wf)), Wf;
}
var Lf, S2;
function Lp() {
  if (S2) return Lf;
  S2 = 1, Lf = {
    failure: function(e, n) {
      if (e.length < 1)
        throw new Error("Failure must have errors");
      return new t({
        status: "failure",
        remaining: n,
        errors: e
      });
    },
    error: function(e, n) {
      if (e.length < 1)
        throw new Error("Failure must have errors");
      return new t({
        status: "error",
        remaining: n,
        errors: e
      });
    },
    success: function(e, n, r) {
      return new t({
        status: "success",
        value: e,
        source: r,
        remaining: n,
        errors: []
      });
    },
    cut: function(e) {
      return new t({
        status: "cut",
        remaining: e,
        errors: []
      });
    }
  };
  var t = function(e) {
    this._value = e.value, this._status = e.status, this._hasValue = e.value !== void 0, this._remaining = e.remaining, this._source = e.source, this._errors = e.errors;
  };
  return t.prototype.map = function(e) {
    return this._hasValue ? new t({
      value: e(this._value, this._source),
      status: this._status,
      remaining: this._remaining,
      source: this._source,
      errors: this._errors
    }) : this;
  }, t.prototype.changeRemaining = function(e) {
    return new t({
      value: this._value,
      status: this._status,
      remaining: e,
      source: this._source,
      errors: this._errors
    });
  }, t.prototype.isSuccess = function() {
    return this._status === "success" || this._status === "cut";
  }, t.prototype.isFailure = function() {
    return this._status === "failure";
  }, t.prototype.isError = function() {
    return this._status === "error";
  }, t.prototype.isCut = function() {
    return this._status === "cut";
  }, t.prototype.value = function() {
    return this._value;
  }, t.prototype.remaining = function() {
    return this._remaining;
  }, t.prototype.source = function() {
    return this._source;
  }, t.prototype.errors = function() {
    return this._errors;
  }, Lf;
}
var Pf = {}, A2;
function Mw() {
  if (A2) return Pf;
  A2 = 1, Pf.error = function(e) {
    return new t(e);
  };
  var t = function(e) {
    this.expected = e.expected, this.actual = e.actual, this._location = e.location;
  };
  return t.prototype.describe = function() {
    var e = this._location ? this._location.describe() + `:
` : "";
    return e + "Expected " + this.expected + `
but got ` + this.actual;
  }, t.prototype.lineNumber = function() {
    return this._location.lineNumber();
  }, t.prototype.characterNumber = function() {
    return this._location.characterNumber();
  }, Pf;
}
var qf = {}, U2;
function e6() {
  if (U2) return qf;
  U2 = 1, qf.fromArray = function(e) {
    var n = 0, r = function() {
      return n < e.length;
    };
    return new t({
      hasNext: r,
      next: function() {
        if (r())
          return e[n++];
        throw new Error("No more elements");
      }
    });
  };
  var t = function(e) {
    this._iterator = e;
  };
  return t.prototype.map = function(e) {
    var n = this._iterator;
    return new t({
      hasNext: function() {
        return n.hasNext();
      },
      next: function() {
        return e(n.next());
      }
    });
  }, t.prototype.filter = function(e) {
    var n = this._iterator, r = !1, i = !1, o, a = function() {
      if (!r)
        for (r = !0, i = !1; n.hasNext() && !i; )
          o = n.next(), i = e(o);
    };
    return new t({
      hasNext: function() {
        return a(), i;
      },
      next: function() {
        a();
        var s = o;
        return r = !1, s;
      }
    });
  }, t.prototype.first = function() {
    var e = this._iterator;
    return this._iterator.hasNext() ? e.next() : null;
  }, t.prototype.toArray = function() {
    for (var e = []; this._iterator.hasNext(); )
      e.push(this._iterator.next());
    return e;
  }, qf;
}
var k2;
function Ww() {
  return k2 || (k2 = 1, function(t) {
    var e = et, n = QF(), r = Lp(), i = Mw(), o = e6();
    t.token = function(d, h) {
      var p = h !== void 0;
      return function(m) {
        var g = m.head();
        if (g && g.name === d && (!p || g.value === h))
          return r.success(g.value, m.tail(), g.source);
        var y = u({ name: d, value: h });
        return f(m, y);
      };
    }, t.tokenOfType = function(d) {
      return t.token(d);
    }, t.firstOf = function(d, h) {
      return e.isArray(h) || (h = Array.prototype.slice.call(arguments, 1)), function(p) {
        return o.fromArray(h).map(function(m) {
          return m(p);
        }).filter(function(m) {
          return m.isSuccess() || m.isError();
        }).first() || f(p, d);
      };
    }, t.then = function(d, h) {
      return function(p) {
        var m = d(p);
        return m.map || console.log(m), m.map(h);
      };
    }, t.sequence = function() {
      var d = Array.prototype.slice.call(arguments, 0), h = function(m) {
        var g = e.foldl(d, function(b, v) {
          var _ = b.result, x = b.hasCut;
          if (!_.isSuccess())
            return { result: _, hasCut: x };
          var E = v(_.remaining());
          if (E.isCut())
            return { result: _, hasCut: !0 };
          if (E.isSuccess()) {
            var S;
            v.isCaptured ? S = _.value().withValue(v, E.value()) : S = _.value();
            var U = E.remaining(), C = m.to(U);
            return {
              result: r.success(S, U, C),
              hasCut: x
            };
          } else return x ? { result: r.error(E.errors(), E.remaining()), hasCut: x } : { result: E, hasCut: x };
        }, { result: r.success(new a(), m), hasCut: !1 }).result, y = m.to(g.remaining());
        return g.map(function(b) {
          return b.withValue(t.sequence.source, y);
        });
      };
      h.head = function() {
        var m = e.find(d, p);
        return t.then(
          h,
          t.sequence.extract(m)
        );
      }, h.map = function(m) {
        return t.then(
          h,
          function(g) {
            return m.apply(this, g.toArray());
          }
        );
      };
      function p(m) {
        return m.isCaptured;
      }
      return h;
    };
    var a = function(d, h) {
      this._values = d || {}, this._valuesArray = h || [];
    };
    a.prototype.withValue = function(d, h) {
      if (d.captureName && d.captureName in this._values)
        throw new Error('Cannot add second value for capture "' + d.captureName + '"');
      var p = e.clone(this._values);
      p[d.captureName] = h;
      var m = this._valuesArray.concat([h]);
      return new a(p, m);
    }, a.prototype.get = function(d) {
      if (d.captureName in this._values)
        return this._values[d.captureName];
      throw new Error('No value for capture "' + d.captureName + '"');
    }, a.prototype.toArray = function() {
      return this._valuesArray;
    }, t.sequence.capture = function(d, h) {
      var p = function() {
        return d.apply(this, arguments);
      };
      return p.captureName = h, p.isCaptured = !0, p;
    }, t.sequence.extract = function(d) {
      return function(h) {
        return h.get(d);
      };
    }, t.sequence.applyValues = function(d) {
      var h = Array.prototype.slice.call(arguments, 1);
      return function(p) {
        var m = h.map(function(g) {
          return p.get(g);
        });
        return d.apply(this, m);
      };
    }, t.sequence.source = {
      captureName: "☃source☃"
    }, t.sequence.cut = function() {
      return function(d) {
        return r.cut(d);
      };
    }, t.optional = function(d) {
      return function(h) {
        var p = d(h);
        return p.isSuccess() ? p.map(n.some) : p.isFailure() ? r.success(n.none, h) : p;
      };
    }, t.zeroOrMoreWithSeparator = function(d, h) {
      return l(d, h, !1);
    }, t.oneOrMoreWithSeparator = function(d, h) {
      return l(d, h, !0);
    };
    var s = t.zeroOrMore = function(d) {
      return function(h) {
        for (var p = [], m; (m = d(h)) && m.isSuccess(); )
          h = m.remaining(), p.push(m.value());
        return m.isError() ? m : r.success(p, h);
      };
    };
    t.oneOrMore = function(d) {
      return t.oneOrMoreWithSeparator(d, c);
    };
    function c(d) {
      return r.success(null, d);
    }
    var l = function(d, h, p) {
      return function(m) {
        var g = d(m);
        if (g.isSuccess()) {
          var y = t.sequence.capture(d, "main"), b = s(t.then(
            t.sequence(h, y),
            t.sequence.extract(y)
          )), v = b(g.remaining());
          return r.success([g.value()].concat(v.value()), v.remaining());
        } else return p || g.isError() ? g : r.success([], m);
      };
    };
    t.leftAssociative = function(d, h, p) {
      var m;
      p ? m = [{ func: p, rule: h }] : m = h, m = m.map(function(y) {
        return t.then(y.rule, function(b) {
          return function(v, _) {
            return y.func(v, b, _);
          };
        });
      });
      var g = t.firstOf.apply(null, ["rules"].concat(m));
      return function(y) {
        var b = y, v = d(y);
        if (!v.isSuccess())
          return v;
        for (var _ = g(v.remaining()); _.isSuccess(); ) {
          var x = _.remaining(), E = b.to(_.remaining()), S = _.value();
          v = r.success(
            S(v.value(), E),
            x,
            E
          ), _ = g(v.remaining());
        }
        return _.isError() ? _ : v;
      };
    }, t.leftAssociative.firstOf = function() {
      return Array.prototype.slice.call(arguments, 0);
    }, t.nonConsuming = function(d) {
      return function(h) {
        return d(h).changeRemaining(h);
      };
    };
    var u = function(d) {
      return d.value ? d.name + ' "' + d.value + '"' : d.name;
    };
    function f(d, h) {
      var p, m = d.head();
      return m ? p = i.error({
        expected: h,
        actual: u(m),
        location: m.source
      }) : p = i.error({
        expected: h,
        actual: "end of tokens"
      }), r.failure([p], d);
    }
  }(Mf)), Mf;
}
var zf = { exports: {} }, F2;
function Lw() {
  if (F2) return zf.exports;
  F2 = 1, zf.exports = function(e, n) {
    var r = {
      asString: function() {
        return e;
      },
      range: function(i, o) {
        return new t(e, n, i, o);
      }
    };
    return r;
  };
  var t = function(e, n, r, i) {
    this._string = e, this._description = n, this._startIndex = r, this._endIndex = i;
  };
  return t.prototype.to = function(e) {
    return new t(this._string, this._description, this._startIndex, e._endIndex);
  }, t.prototype.describe = function() {
    var e = this._position(), n = this._description ? this._description + `
` : "";
    return n + "Line number: " + e.lineNumber + `
Character number: ` + e.characterNumber;
  }, t.prototype.lineNumber = function() {
    return this._position().lineNumber;
  }, t.prototype.characterNumber = function() {
    return this._position().characterNumber;
  }, t.prototype._position = function() {
    for (var e = this, n = 0, r = function() {
      return e._string.indexOf(`
`, n);
    }, i = 1; r() !== -1 && r() < this._startIndex; )
      n = r() + 1, i += 1;
    var o = this._startIndex - n + 1;
    return { lineNumber: i, characterNumber: o };
  }, zf.exports;
}
var jf, O2;
function Pw() {
  return O2 || (O2 = 1, jf = function(t, e, n) {
    this.name = t, this.value = e, n && (this.source = n);
  }), jf;
}
var $f = {}, R2;
function t6() {
  return R2 || (R2 = 1, function(t) {
    var e = Ww(), n = Lp();
    t.parser = function(o, a, s) {
      var c = {
        rule: d,
        leftAssociative: h,
        rightAssociative: p
      }, l = new r(s.map(f)), u = e.firstOf(o, a);
      function f(y) {
        return {
          name: y.name,
          rule: i(y.ruleBuilder.bind(null, c))
        };
      }
      function d() {
        return m(l);
      }
      function h(y) {
        return m(l.untilExclusive(y));
      }
      function p(y) {
        return m(l.untilInclusive(y));
      }
      function m(y) {
        return g.bind(null, y);
      }
      function g(y, b) {
        var v = u(b);
        return v.isSuccess() ? y.apply(v) : v;
      }
      return c;
    };
    function r(o) {
      function a(f) {
        return new r(o.slice(0, c().indexOf(f)));
      }
      function s(f) {
        return new r(o.slice(0, c().indexOf(f) + 1));
      }
      function c() {
        return o.map(function(f) {
          return f.name;
        });
      }
      function l(f) {
        for (var d, h; ; )
          if (d = u(f.remaining()), d.isSuccess())
            h = f.source().to(d.source()), f = n.success(
              d.value()(f.value(), h),
              d.remaining(),
              h
            );
          else return d.isFailure() ? f : d;
      }
      function u(f) {
        return e.firstOf("infix", o.map(function(d) {
          return d.rule;
        }))(f);
      }
      return {
        apply: l,
        untilExclusive: a,
        untilInclusive: s
      };
    }
    t.infix = function(o, a) {
      function s(c) {
        return t.infix(o, function(l) {
          var u = a(l);
          return function(f) {
            var d = u(f);
            return d.map(function(h) {
              return function(p, m) {
                return c(p, h, m);
              };
            });
          };
        });
      }
      return {
        name: o,
        ruleBuilder: a,
        map: s
      };
    };
    var i = function(o) {
      var a;
      return function(s) {
        return a || (a = o()), a(s);
      };
    };
  }($f)), $f;
}
var Vf = {}, N2;
function n6() {
  if (N2) return Vf;
  N2 = 1;
  var t = Pw(), e = Lw();
  Vf.RegexTokeniser = n;
  function n(r) {
    r = r.map(function(s) {
      return {
        name: s.name,
        regex: new RegExp(s.regex.source, "g")
      };
    });
    function i(s, c) {
      for (var l = new e(s, c), u = 0, f = []; u < s.length; ) {
        var d = o(s, u, l);
        u = d.endIndex, f.push(d.token);
      }
      return f.push(a(s, l)), f;
    }
    function o(s, c, l) {
      for (var u = 0; u < r.length; u++) {
        var f = r[u].regex;
        f.lastIndex = c;
        var d = f.exec(s);
        if (d) {
          var p = c + d[0].length;
          if (d.index === c && p > c) {
            var h = d[1], m = new t(
              r[u].name,
              h,
              l.range(c, p)
            );
            return { token: m, endIndex: p };
          }
        }
      }
      var p = c + 1, m = new t(
        "unrecognisedCharacter",
        s.substring(c, p),
        l.range(c, p)
      );
      return { token: m, endIndex: p };
    }
    function a(s, c) {
      return new t(
        "end",
        null,
        c.range(s.length, s.length)
      );
    }
    return {
      tokenise: i
    };
  }
  return Vf;
}
var B2;
function qw() {
  return B2 || (B2 = 1, tn.Parser = YF().Parser, tn.rules = Ww(), tn.errors = Mw(), tn.results = Lp(), tn.StringSource = Lw(), tn.Token = Pw(), tn.bottomUp = t6(), tn.RegexTokeniser = n6().RegexTokeniser, tn.rule = function(t) {
    var e;
    return function(n) {
      return e || (e = t()), e(n);
    };
  }), tn;
}
var it = {}, I2;
function r6() {
  if (I2) return it;
  I2 = 1, it.paragraph = t, it.run = e, it.table = n, it.bold = new i("bold"), it.italic = new i("italic"), it.underline = new i("underline"), it.strikethrough = new i("strikethrough"), it.allCaps = new i("allCaps"), it.smallCaps = new i("smallCaps"), it.highlight = r, it.commentReference = new i("commentReference"), it.lineBreak = new a({ breakType: "line" }), it.pageBreak = new a({ breakType: "page" }), it.columnBreak = new a({ breakType: "column" }), it.equalTo = c, it.startsWith = l;
  function t(d) {
    return new i("paragraph", d);
  }
  function e(d) {
    return new i("run", d);
  }
  function n(d) {
    return new i("table", d);
  }
  function r(d) {
    return new o(d);
  }
  function i(d, h) {
    h = h || {}, this._elementType = d, this._styleId = h.styleId, this._styleName = h.styleName, h.list && (this._listIndex = h.list.levelIndex, this._listIsOrdered = h.list.isOrdered);
  }
  i.prototype.matches = function(d) {
    return d.type === this._elementType && (this._styleId === void 0 || d.styleId === this._styleId) && (this._styleName === void 0 || d.styleName && this._styleName.operator(this._styleName.operand, d.styleName)) && (this._listIndex === void 0 || s(d, this._listIndex, this._listIsOrdered)) && (this._breakType === void 0 || this._breakType === d.breakType);
  };
  function o(d) {
    d = d || {}, this._color = d.color;
  }
  o.prototype.matches = function(d) {
    return d.type === "highlight" && (this._color === void 0 || d.color === this._color);
  };
  function a(d) {
    d = d || {}, this._breakType = d.breakType;
  }
  a.prototype.matches = function(d) {
    return d.type === "break" && (this._breakType === void 0 || d.breakType === this._breakType);
  };
  function s(d, h, p) {
    return d.numbering && d.numbering.level == h && d.numbering.isOrdered == p;
  }
  function c(d) {
    return {
      operator: u,
      operand: d
    };
  }
  function l(d) {
    return {
      operator: f,
      operand: d
    };
  }
  function u(d, h) {
    return d.toUpperCase() === h.toUpperCase();
  }
  function f(d, h) {
    return h.toUpperCase().indexOf(d.toUpperCase()) === 0;
  }
  return it;
}
var Hf = {}, M2;
function i6() {
  if (M2) return Hf;
  M2 = 1;
  var t = qw(), e = t.RegexTokeniser;
  Hf.tokenise = r;
  var n = "'((?:\\\\.|[^'])*)";
  function r(i) {
    var o = "(?:[a-zA-Z\\-_]|\\\\.)", a = new e([
      { name: "identifier", regex: new RegExp("(" + o + "(?:" + o + "|[0-9])*)") },
      { name: "dot", regex: /\./ },
      { name: "colon", regex: /:/ },
      { name: "gt", regex: />/ },
      { name: "whitespace", regex: /\s+/ },
      { name: "arrow", regex: /=>/ },
      { name: "equals", regex: /=/ },
      { name: "startsWith", regex: /\^=/ },
      { name: "open-paren", regex: /\(/ },
      { name: "close-paren", regex: /\)/ },
      { name: "open-square-bracket", regex: /\[/ },
      { name: "close-square-bracket", regex: /\]/ },
      { name: "string", regex: new RegExp(n + "'") },
      { name: "unterminated-string", regex: new RegExp(n) },
      { name: "integer", regex: /([0-9]+)/ },
      { name: "choice", regex: /\|/ },
      { name: "bang", regex: /(!)/ }
    ]);
    return a.tokenise(i);
  }
  return Hf;
}
var W2;
function o6() {
  if (W2) return Vi;
  W2 = 1;
  var t = et, e = qw(), n = r6(), r = Sc(), i = i6().tokenise, o = Wn();
  Vi.readHtmlPath = u, Vi.readDocumentMatcher = c, Vi.readStyle = a;
  function a(U) {
    return _(S, U);
  }
  function s() {
    return e.rules.sequence(
      e.rules.sequence.capture(l()),
      e.rules.tokenOfType("whitespace"),
      e.rules.tokenOfType("arrow"),
      e.rules.sequence.capture(e.rules.optional(e.rules.sequence(
        e.rules.tokenOfType("whitespace"),
        e.rules.sequence.capture(f())
      ).head())),
      e.rules.tokenOfType("end")
    ).map(function(U, C) {
      return {
        from: U,
        to: C.valueOrElse(r.empty)
      };
    });
  }
  function c(U) {
    return _(l(), U);
  }
  function l() {
    var U = e.rules.sequence, C = function(de, pe) {
      return e.rules.then(
        e.rules.token("identifier", de),
        function() {
          return pe;
        }
      );
    }, R = C("p", n.paragraph), j = C("r", n.run), T = e.rules.firstOf(
      "p or r or table",
      R,
      j
    ), k = e.rules.sequence(
      e.rules.tokenOfType("dot"),
      e.rules.sequence.cut(),
      e.rules.sequence.capture(d)
    ).map(function(de) {
      return { styleId: de };
    }), w = e.rules.firstOf(
      "style name matcher",
      e.rules.then(
        e.rules.sequence(
          e.rules.tokenOfType("equals"),
          e.rules.sequence.cut(),
          e.rules.sequence.capture(p)
        ).head(),
        function(de) {
          return { styleName: n.equalTo(de) };
        }
      ),
      e.rules.then(
        e.rules.sequence(
          e.rules.tokenOfType("startsWith"),
          e.rules.sequence.cut(),
          e.rules.sequence.capture(p)
        ).head(),
        function(de) {
          return { styleName: n.startsWith(de) };
        }
      )
    ), $ = e.rules.sequence(
      e.rules.tokenOfType("open-square-bracket"),
      e.rules.sequence.cut(),
      e.rules.token("identifier", "style-name"),
      e.rules.sequence.capture(w),
      e.rules.tokenOfType("close-square-bracket")
    ).head(), N = e.rules.firstOf(
      "list type",
      C("ordered-list", { isOrdered: !0 }),
      C("unordered-list", { isOrdered: !1 })
    ), M = U(
      e.rules.tokenOfType("colon"),
      U.capture(N),
      U.cut(),
      e.rules.tokenOfType("open-paren"),
      U.capture(h),
      e.rules.tokenOfType("close-paren")
    ).map(function(de, pe) {
      return {
        list: {
          isOrdered: de.isOrdered,
          levelIndex: pe - 1
        }
      };
    });
    function K(de) {
      var pe = e.rules.firstOf.apply(
        e.rules.firstOf,
        ["matcher suffix"].concat(de)
      ), ye = e.rules.zeroOrMore(pe);
      return e.rules.then(ye, function(be) {
        var D = {};
        return be.forEach(function(V) {
          t.extend(D, V);
        }), D;
      });
    }
    var P = U(
      U.capture(T),
      U.capture(K([
        k,
        $,
        M
      ]))
    ).map(function(de, pe) {
      return de(pe);
    }), te = U(
      e.rules.token("identifier", "table"),
      U.capture(K([
        k,
        $
      ]))
    ).map(function(de) {
      return n.table(de);
    }), W = C("b", n.bold), B = C("i", n.italic), se = C("u", n.underline), G = C("strike", n.strikethrough), J = C("all-caps", n.allCaps), ce = C("small-caps", n.smallCaps), he = U(
      e.rules.token("identifier", "highlight"),
      e.rules.sequence.capture(e.rules.optional(e.rules.sequence(
        e.rules.tokenOfType("open-square-bracket"),
        e.rules.sequence.cut(),
        e.rules.token("identifier", "color"),
        e.rules.tokenOfType("equals"),
        e.rules.sequence.capture(p),
        e.rules.tokenOfType("close-square-bracket")
      ).head()))
    ).map(function(de) {
      return n.highlight({
        color: de.valueOrElse(void 0)
      });
    }), fe = C("comment-reference", n.commentReference), me = U(
      e.rules.token("identifier", "br"),
      U.cut(),
      e.rules.tokenOfType("open-square-bracket"),
      e.rules.token("identifier", "type"),
      e.rules.tokenOfType("equals"),
      U.capture(p),
      e.rules.tokenOfType("close-square-bracket")
    ).map(function(de) {
      switch (de) {
        case "line":
          return n.lineBreak;
        case "page":
          return n.pageBreak;
        case "column":
          return n.columnBreak;
      }
    });
    return e.rules.firstOf(
      "element type",
      P,
      te,
      W,
      B,
      se,
      G,
      J,
      ce,
      he,
      fe,
      me
    );
  }
  function u(U) {
    return _(f(), U);
  }
  function f() {
    var U = e.rules.sequence.capture, C = e.rules.tokenOfType("whitespace"), R = e.rules.then(
      e.rules.optional(e.rules.sequence(
        e.rules.tokenOfType("colon"),
        e.rules.token("identifier", "fresh")
      )),
      function(w) {
        return w.map(function() {
          return !0;
        }).valueOrElse(!1);
      }
    ), j = e.rules.then(
      e.rules.optional(e.rules.sequence(
        e.rules.tokenOfType("colon"),
        e.rules.token("identifier", "separator"),
        e.rules.tokenOfType("open-paren"),
        U(p),
        e.rules.tokenOfType("close-paren")
      ).head()),
      function(w) {
        return w.valueOrElse("");
      }
    ), T = e.rules.oneOrMoreWithSeparator(
      d,
      e.rules.tokenOfType("choice")
    ), k = e.rules.sequence(
      U(T),
      U(e.rules.zeroOrMore(v)),
      U(R),
      U(j)
    ).map(function(w, $, N, M) {
      var K = {}, P = {};
      return $.forEach(function(te) {
        te.append && K[te.name] ? K[te.name] += " " + te.value : K[te.name] = te.value;
      }), N && (P.fresh = !0), M && (P.separator = M), r.element(w, K, P);
    });
    return e.rules.firstOf(
      "html path",
      e.rules.then(e.rules.tokenOfType("bang"), function() {
        return r.ignore;
      }),
      e.rules.then(
        e.rules.zeroOrMoreWithSeparator(
          k,
          e.rules.sequence(
            C,
            e.rules.tokenOfType("gt"),
            C
          )
        ),
        r.elements
      )
    );
  }
  var d = e.rules.then(
    e.rules.tokenOfType("identifier"),
    g
  ), h = e.rules.tokenOfType("integer"), p = e.rules.then(
    e.rules.tokenOfType("string"),
    g
  ), m = {
    n: `
`,
    r: "\r",
    t: "	"
  };
  function g(U) {
    return U.replace(/\\(.)/g, function(C, R) {
      return m[R] || R;
    });
  }
  var y = e.rules.sequence(
    e.rules.tokenOfType("open-square-bracket"),
    e.rules.sequence.cut(),
    e.rules.sequence.capture(d),
    e.rules.tokenOfType("equals"),
    e.rules.sequence.capture(p),
    e.rules.tokenOfType("close-square-bracket")
  ).map(function(U, C) {
    return { name: U, value: C, append: !1 };
  }), b = e.rules.sequence(
    e.rules.tokenOfType("dot"),
    e.rules.sequence.cut(),
    e.rules.sequence.capture(d)
  ).map(function(U) {
    return { name: "class", value: U, append: !0 };
  }), v = e.rules.firstOf(
    "attribute or class",
    y,
    b
  );
  function _(U, C) {
    var R = i(C), j = e.Parser(), T = j.parseTokens(U, R);
    return T.isSuccess() ? o.success(T.value()) : new o.Result(null, [o.warning(x(C, T))]);
  }
  function x(U, C) {
    return "Did not understand this style mapping, so ignored it: " + U + `
` + C.errors().map(E).join(`
`);
  }
  function E(U) {
    return "Error was at character number " + U.characterNumber() + ": Expected " + U.expected + " but got " + U.actual;
  }
  var S = s();
  return Vi;
}
var Hi = {}, L2;
function a6() {
  if (L2) return Hi;
  L2 = 1, Hi.readOptions = r;
  var t = et, e = Hi._defaultStyleMap = [
    "p.Heading1 => h1:fresh",
    "p.Heading2 => h2:fresh",
    "p.Heading3 => h3:fresh",
    "p.Heading4 => h4:fresh",
    "p.Heading5 => h5:fresh",
    "p.Heading6 => h6:fresh",
    "p[style-name='Heading 1'] => h1:fresh",
    "p[style-name='Heading 2'] => h2:fresh",
    "p[style-name='Heading 3'] => h3:fresh",
    "p[style-name='Heading 4'] => h4:fresh",
    "p[style-name='Heading 5'] => h5:fresh",
    "p[style-name='Heading 6'] => h6:fresh",
    "p[style-name='heading 1'] => h1:fresh",
    "p[style-name='heading 2'] => h2:fresh",
    "p[style-name='heading 3'] => h3:fresh",
    "p[style-name='heading 4'] => h4:fresh",
    "p[style-name='heading 5'] => h5:fresh",
    "p[style-name='heading 6'] => h6:fresh",
    "r[style-name='Strong'] => strong",
    "p[style-name='footnote text'] => p:fresh",
    "r[style-name='footnote reference'] =>",
    "p[style-name='endnote text'] => p:fresh",
    "r[style-name='endnote reference'] =>",
    "p[style-name='annotation text'] => p:fresh",
    "r[style-name='annotation reference'] =>",
    // LibreOffice
    "p[style-name='Footnote'] => p:fresh",
    "r[style-name='Footnote anchor'] =>",
    "p[style-name='Endnote'] => p:fresh",
    "r[style-name='Endnote anchor'] =>",
    "p:unordered-list(1) => ul > li:fresh",
    "p:unordered-list(2) => ul|ol > li > ul > li:fresh",
    "p:unordered-list(3) => ul|ol > li > ul|ol > li > ul > li:fresh",
    "p:unordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh",
    "p:unordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh",
    "p:ordered-list(1) => ol > li:fresh",
    "p:ordered-list(2) => ul|ol > li > ol > li:fresh",
    "p:ordered-list(3) => ul|ol > li > ul|ol > li > ol > li:fresh",
    "p:ordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh",
    "p:ordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh",
    "r[style-name='Hyperlink'] =>",
    "p[style-name='Normal'] => p:fresh"
  ], n = Hi._standardOptions = {
    transformDocument: o,
    includeDefaultStyleMap: !0,
    includeEmbeddedStyleMap: !0
  };
  function r(a) {
    return a = a || {}, t.extend({}, n, a, {
      customStyleMap: i(a.styleMap),
      readStyleMap: function() {
        var s = this.customStyleMap;
        return this.includeEmbeddedStyleMap && (s = s.concat(i(this.embeddedStyleMap))), this.includeDefaultStyleMap && (s = s.concat(e)), s;
      }
    });
  }
  function i(a) {
    return a ? t.isString(a) ? a.split(`
`).map(function(s) {
      return s.trim();
    }).filter(function(s) {
      return s !== "" && s.charAt(0) !== "#";
    }) : a : [];
  }
  function o(a) {
    return a;
  }
  return Hi;
}
var Xf = {}, P2;
function s6() {
  if (P2) return Xf;
  P2 = 1;
  var t = vr(), e = kw();
  Xf.openZip = n;
  function n(r) {
    return r.arrayBuffer ? t.resolve(e.openArrayBuffer(r.arrayBuffer)) : t.reject(new Error("Could not find file in options"));
  }
  return Xf;
}
var Er = {}, q2;
function c6() {
  if (q2) return Er;
  q2 = 1;
  var t = et;
  Er.paragraph = e, Er.run = n, Er._elements = i, Er.getDescendantsOfType = o, Er.getDescendants = a;
  function e(c) {
    return r("paragraph", c);
  }
  function n(c) {
    return r("run", c);
  }
  function r(c, l) {
    return i(function(u) {
      return u.type === c ? l(u) : u;
    });
  }
  function i(c) {
    return function l(u) {
      if (u.children) {
        var f = t.map(u.children, l);
        u = t.extend(u, { children: f });
      }
      return c(u);
    };
  }
  function o(c, l) {
    return a(c).filter(function(u) {
      return u.type === l;
    });
  }
  function a(c) {
    var l = [];
    return s(c, function(u) {
      l.push(u);
    }), l;
  }
  function s(c, l) {
    c.children && c.children.forEach(function(u) {
      s(u, l), l(u);
    });
  }
  return Er;
}
var Gf = {}, z2;
function l6() {
  if (z2) return Gf;
  z2 = 1;
  var t = Sc(), e = Cc();
  Gf.element = n;
  function n(r) {
    return function(i) {
      return e.elementWithTag(t.element(r), [i]);
    };
  }
  return Gf;
}
var j2;
function u6() {
  if (j2) return qt;
  j2 = 1;
  var t = et, e = jF(), n = $F(), r = KF().DocumentConverter, i = JF().convertElementToRawText, o = o6().readStyle, a = a6().readOptions, s = s6(), c = Wn().Result;
  qt.convertToHtml = l, qt.convertToMarkdown = u, qt.convert = f, qt.extractRawText = m, qt.images = Iw(), qt.transforms = c6(), qt.underline = l6(), qt.embedStyleMap = g, qt.readEmbeddedStyleMap = d;
  function l(y, b) {
    return f(y, b);
  }
  function u(y, b) {
    var v = Object.create(b || {});
    return v.outputFormat = "markdown", f(y, v);
  }
  function f(y, b) {
    return b = a(b), s.openZip(y).tap(function(v) {
      return n.readStyleMap(v).then(function(_) {
        b.embeddedStyleMap = _;
      });
    }).then(function(v) {
      return e.read(v, y).then(function(_) {
        return _.map(b.transformDocument);
      }).then(function(_) {
        return h(_, b);
      });
    });
  }
  function d(y) {
    return s.openZip(y).then(n.readStyleMap);
  }
  function h(y, b) {
    var v = p(b.readStyleMap()), _ = t.extend({}, b, {
      styleMap: v.value
    }), x = new r(_);
    return y.flatMapThen(function(E) {
      return v.flatMapThen(function(S) {
        return x.convertToHtml(E);
      });
    });
  }
  function p(y) {
    return c.combine((y || []).map(o)).map(function(b) {
      return b.filter(function(v) {
        return !!v;
      });
    });
  }
  function m(y) {
    return s.openZip(y).then(e.read).then(function(b) {
      return b.map(i);
    });
  }
  function g(y, b) {
    return s.openZip(y).tap(function(v) {
      return n.writeStyleMap(v, b);
    }).then(function(v) {
      return v.toArrayBuffer();
    }).then(function(v) {
      return {
        toArrayBuffer: function() {
          return v;
        },
        toBuffer: function() {
          return Buffer.from(v);
        }
      };
    });
  }
  return qt.styleMapping = function() {
    throw new Error(`Use a raw string instead of mammoth.styleMapping e.g. "p[style-name='Title'] => h1" instead of mammoth.styleMapping("p[style-name='Title'] => h1")`);
  }, qt;
}
var f6 = u6();
const nN = /* @__PURE__ */ RD(f6), d6 = "_verified_lvyh0_1", Pp = {
  verified: d6
}, h6 = () => /* @__PURE__ */ le("svg", {
  viewBox: "0 0 24 24",
  "aria-label": "Verified account",
  role: "img",
  className: Pp.verified,
  children: /* @__PURE__ */ le("g", {
    children: /* @__PURE__ */ le("path", {
      d: "M22.25 12c0-1.43-.88-2.67-2.19-3.34.46-1.39.2-2.9-.81-3.91s-2.52-1.27-3.91-.81c-.66-1.31-1.91-2.19-3.34-2.19s-2.67.88-3.33 2.19c-1.4-.46-2.91-.2-3.92.81s-1.26 2.52-.8 3.91c-1.31.67-2.2 1.91-2.2 3.34s.89 2.67 2.2 3.34c-.46 1.39-.21 2.9.8 3.91s2.52 1.26 3.91.81c.67 1.31 1.91 2.19 3.34 2.19s2.68-.88 3.34-2.19c1.39.45 2.9.2 3.91-.81s1.27-2.52.81-3.91c1.31-.67 2.19-1.91 2.19-3.34zm-11.71 4.2L6.8 12.46l1.41-1.42 2.26 2.26 4.8-5.23 1.47 1.36-6.2 6.77z"
    })
  })
}), p6 = () => /* @__PURE__ */ le("svg", {
  viewBox: "0 0 22 22",
  "aria-label": "Verified account",
  role: "img",
  className: Pp.verified,
  children: /* @__PURE__ */ je("g", {
    children: [
      /* @__PURE__ */ je("linearGradient", {
        gradientUnits: "userSpaceOnUse",
        id: "0-a",
        x1: "4.411",
        x2: "18.083",
        y1: "2.495",
        y2: "21.508",
        children: [
          /* @__PURE__ */ le("stop", {
            offset: "0",
            stopColor: "#f4e72a"
          }),
          /* @__PURE__ */ le("stop", {
            offset: ".539",
            stopColor: "#cd8105"
          }),
          /* @__PURE__ */ le("stop", {
            offset: ".68",
            stopColor: "#cb7b00"
          }),
          /* @__PURE__ */ le("stop", {
            offset: "1",
            stopColor: "#f4ec26"
          }),
          /* @__PURE__ */ le("stop", {
            offset: "1",
            stopColor: "#f4e72a"
          })
        ]
      }),
      /* @__PURE__ */ je("linearGradient", {
        gradientUnits: "userSpaceOnUse",
        id: "0-b",
        x1: "5.355",
        x2: "16.361",
        y1: "3.395",
        y2: "19.133",
        children: [
          /* @__PURE__ */ le("stop", {
            offset: "0",
            stopColor: "#f9e87f"
          }),
          /* @__PURE__ */ le("stop", {
            offset: ".406",
            stopColor: "#e2b719"
          }),
          /* @__PURE__ */ le("stop", {
            offset: ".989",
            stopColor: "#e2b719"
          })
        ]
      }),
      /* @__PURE__ */ je("g", {
        clipRule: "evenodd",
        fillRule: "evenodd",
        children: [
          /* @__PURE__ */ le("path", {
            d: "M13.324 3.848L11 1.6 8.676 3.848l-3.201-.453-.559 3.184L2.06 8.095 3.48 11l-1.42 2.904 2.856 1.516.559 3.184 3.201-.452L11 20.4l2.324-2.248 3.201.452.559-3.184 2.856-1.516L18.52 11l1.42-2.905-2.856-1.516-.559-3.184zm-7.09 7.575l3.428 3.428 5.683-6.206-1.347-1.247-4.4 4.795-2.072-2.072z",
            fill: "url(#0-a)"
          }),
          /* @__PURE__ */ le("path", {
            d: "M13.101 4.533L11 2.5 8.899 4.533l-2.895-.41-.505 2.88-2.583 1.37L4.2 11l-1.284 2.627 2.583 1.37.505 2.88 2.895-.41L11 19.5l2.101-2.033 2.895.41.505-2.88 2.583-1.37L17.8 11l1.284-2.627-2.583-1.37-.505-2.88zm-6.868 6.89l3.429 3.428 5.683-6.206-1.347-1.247-4.4 4.795-2.072-2.072z",
            fill: "url(#0-b)"
          }),
          /* @__PURE__ */ le("path", {
            d: "M6.233 11.423l3.429 3.428 5.65-6.17.038-.033-.005 1.398-5.683 6.206-3.429-3.429-.003-1.405.005.003z",
            fill: "#d18800"
          })
        ]
      })
    ]
  })
}), g6 = () => /* @__PURE__ */ le("svg", {
  viewBox: "0 0 22 22",
  "aria-label": "Verified account",
  role: "img",
  className: Pp.verified,
  children: /* @__PURE__ */ le("g", {
    children: /* @__PURE__ */ le("path", {
      clipRule: "evenodd",
      d: "M12.05 2.056c-.568-.608-1.532-.608-2.1 0l-1.393 1.49c-.284.303-.685.47-1.1.455L5.42 3.932c-.832-.028-1.514.654-1.486 1.486l.069 2.039c.014.415-.152.816-.456 1.1l-1.49 1.392c-.608.568-.608 1.533 0 2.101l1.49 1.393c.304.284.47.684.456 1.1l-.07 2.038c-.027.832.655 1.514 1.487 1.486l2.038-.069c.415-.014.816.152 1.1.455l1.392 1.49c.569.609 1.533.609 2.102 0l1.393-1.49c.283-.303.684-.47 1.099-.455l2.038.069c.832.028 1.515-.654 1.486-1.486L18 14.542c-.015-.415.152-.815.455-1.099l1.49-1.393c.608-.568.608-1.533 0-2.101l-1.49-1.393c-.303-.283-.47-.684-.455-1.1l.068-2.038c.029-.832-.654-1.514-1.486-1.486l-2.038.07c-.415.013-.816-.153-1.1-.456zm-5.817 9.367l3.429 3.428 5.683-6.206-1.347-1.247-4.4 4.795-2.072-2.072z",
      fillRule: "evenodd"
    })
  })
}), m6 = "_root_98iqw_1", y6 = "_article_98iqw_21", $2 = {
  root: m6,
  article: y6
}, qp = ({ className: t, children: e }) => /* @__PURE__ */ le("div", {
  className: Bn("react-tweet-theme", $2.root, t),
  children: /* @__PURE__ */ le("article", {
    className: $2.article,
    children: e
  })
}), zw = (t) => /* @__PURE__ */ le("img", {
  ...t
}), b6 = "_header_nqq4j_1", v6 = "_avatar_nqq4j_11", D6 = "_avatarOverflow_nqq4j_16", x6 = "_avatarSquare_nqq4j_23", w6 = "_avatarShadow_nqq4j_26", _6 = "_author_nqq4j_37", T6 = "_authorLink_nqq4j_44", E6 = "_authorVerified_nqq4j_53", C6 = "_authorLinkText_nqq4j_56", S6 = "_authorMeta_nqq4j_63", A6 = "_authorFollow_nqq4j_66", U6 = "_username_nqq4j_69", k6 = "_follow_nqq4j_74", F6 = "_separator_nqq4j_82", O6 = "_brand_nqq4j_86", R6 = "_twitterIcon_nqq4j_90", at = {
  header: b6,
  avatar: v6,
  avatarOverflow: D6,
  avatarSquare: x6,
  avatarShadow: w6,
  author: _6,
  authorLink: T6,
  authorVerified: E6,
  authorLinkText: C6,
  authorMeta: S6,
  authorFollow: A6,
  username: U6,
  follow: k6,
  separator: F6,
  brand: O6,
  twitterIcon: R6
}, N6 = "_verifiedOld_lcna5_1", B6 = "_verifiedBlue_lcna5_4", I6 = "_verifiedGovernment_lcna5_7", Kf = {
  verifiedOld: N6,
  verifiedBlue: B6,
  verifiedGovernment: I6
}, jw = ({ user: t, className: e }) => {
  const n = t.verified || t.is_blue_verified || t.verified_type;
  let r = /* @__PURE__ */ le(h6, {}), i = Kf.verifiedBlue;
  if (n)
    switch (t.is_blue_verified || (i = Kf.verifiedOld), t.verified_type) {
      case "Government":
        r = /* @__PURE__ */ le(g6, {}), i = Kf.verifiedGovernment;
        break;
      case "Business":
        r = /* @__PURE__ */ le(p6, {}), i = null;
        break;
    }
  return n ? /* @__PURE__ */ le("div", {
    className: Bn(e, i),
    children: r
  }) : null;
}, M6 = ({ tweet: t, components: e }) => {
  var n;
  const r = (n = e == null ? void 0 : e.AvatarImg) != null ? n : zw, { user: i } = t;
  return /* @__PURE__ */ je("div", {
    className: at.header,
    children: [
      /* @__PURE__ */ je("a", {
        href: t.url,
        className: at.avatar,
        target: "_blank",
        rel: "noopener noreferrer",
        children: [
          /* @__PURE__ */ le("div", {
            className: Bn(at.avatarOverflow, i.profile_image_shape === "Square" && at.avatarSquare),
            children: /* @__PURE__ */ le(r, {
              src: i.profile_image_url_https,
              alt: i.name,
              width: 48,
              height: 48
            })
          }),
          /* @__PURE__ */ le("div", {
            className: at.avatarOverflow,
            children: /* @__PURE__ */ le("div", {
              className: at.avatarShadow
            })
          })
        ]
      }),
      /* @__PURE__ */ je("div", {
        className: at.author,
        children: [
          /* @__PURE__ */ je("a", {
            href: t.url,
            className: at.authorLink,
            target: "_blank",
            rel: "noopener noreferrer",
            children: [
              /* @__PURE__ */ le("div", {
                className: at.authorLinkText,
                children: /* @__PURE__ */ le("span", {
                  title: i.name,
                  children: i.name
                })
              }),
              /* @__PURE__ */ le(jw, {
                user: i,
                className: at.authorVerified
              })
            ]
          }),
          /* @__PURE__ */ je("div", {
            className: at.authorMeta,
            children: [
              /* @__PURE__ */ le("a", {
                href: t.url,
                className: at.username,
                target: "_blank",
                rel: "noopener noreferrer",
                children: /* @__PURE__ */ je("span", {
                  title: `@${i.screen_name}`,
                  children: [
                    "@",
                    i.screen_name
                  ]
                })
              }),
              /* @__PURE__ */ je("div", {
                className: at.authorFollow,
                children: [
                  /* @__PURE__ */ le("span", {
                    className: at.separator,
                    children: "·"
                  }),
                  /* @__PURE__ */ le("a", {
                    href: i.follow_url,
                    className: at.follow,
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: "Follow"
                  })
                ]
              })
            ]
          })
        ]
      }),
      /* @__PURE__ */ le("a", {
        href: t.url,
        className: at.brand,
        target: "_blank",
        rel: "noopener noreferrer",
        "aria-label": "View on Twitter",
        children: /* @__PURE__ */ le("svg", {
          viewBox: "0 0 24 24",
          "aria-hidden": "true",
          className: at.twitterIcon,
          children: /* @__PURE__ */ le("g", {
            children: /* @__PURE__ */ le("path", {
              d: "M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
            })
          })
        })
      })
    ]
  });
}, W6 = "_root_1ec15_1", L6 = {
  root: W6
}, P6 = ({ tweet: t }) => /* @__PURE__ */ je("a", {
  href: t.in_reply_to_url,
  className: L6.root,
  target: "_blank",
  rel: "noopener noreferrer",
  children: [
    "Replying to @",
    t.in_reply_to_screen_name
  ]
}), q6 = "_root_eihfa_1", z6 = {
  root: q6
}, j6 = ({ href: t, children: e }) => /* @__PURE__ */ le("a", {
  href: t,
  className: z6.root,
  target: "_blank",
  rel: "noopener noreferrer nofollow",
  children: e
}), $6 = "_root_1xq52_1", V6 = {
  root: $6
}, H6 = ({ tweet: t }) => /* @__PURE__ */ le("p", {
  className: V6.root,
  lang: t.lang,
  dir: "auto",
  children: t.entities.map((e, n) => {
    switch (e.type) {
      case "hashtag":
      case "mention":
      case "url":
      case "symbol":
        return /* @__PURE__ */ le(j6, {
          href: e.href,
          children: e.text
        }, n);
      case "media":
        return;
      default:
        return /* @__PURE__ */ le("span", {
          dangerouslySetInnerHTML: {
            __html: e.text
          }
        }, n);
    }
  })
}), V2 = (t) => `https://x.com/${t.user.screen_name}/status/${t.id_str}`, $w = (t) => `https://x.com/${typeof t == "string" ? t : t.user.screen_name}`, X6 = (t) => `https://x.com/intent/like?tweet_id=${t.id_str}`, G6 = (t) => `https://x.com/intent/tweet?in_reply_to=${t.id_str}`, K6 = (t) => `https://x.com/intent/follow?screen_name=${t.user.screen_name}`, J6 = (t) => `https://x.com/hashtag/${t.text}`, Z6 = (t) => `https://x.com/search?q=%24${t.text}`, Y6 = (t) => `https://x.com/${t.in_reply_to_screen_name}/status/${t.in_reply_to_status_id_str}`, Vw = (t, e) => {
  const n = new URL(t.media_url_https), r = n.pathname.split(".").pop();
  return r ? (n.pathname = n.pathname.replace(`.${r}`, ""), n.searchParams.set("format", r), n.searchParams.set("name", e), n.toString()) : t.media_url_https;
}, Q6 = (t) => {
  const { variants: e } = t.video_info;
  return e.filter((r) => r.content_type === "video/mp4").sort((r, i) => {
    var o, a;
    return ((o = i.bitrate) != null ? o : 0) - ((a = r.bitrate) != null ? a : 0);
  });
}, e9 = (t) => {
  const e = Q6(t);
  return e.length > 1 ? e[1] : e[0];
}, Xd = (t) => t > 999999 ? `${(t / 1e6).toFixed(1)}M` : t > 999 ? `${(t / 1e3).toFixed(1)}K` : t.toString();
function H2(t) {
  const e = Array.from(t.text), n = [
    {
      indices: t.display_text_range,
      type: "text"
    }
  ];
  return Xi(n, "hashtag", t.entities.hashtags), Xi(n, "mention", t.entities.user_mentions), Xi(n, "url", t.entities.urls), Xi(n, "symbol", t.entities.symbols), t.entities.media && Xi(n, "media", t.entities.media), t9(t, n), n.map((r) => {
    const i = e.slice(r.indices[0], r.indices[1]).join("");
    switch (r.type) {
      case "hashtag":
        return Object.assign(r, {
          href: J6(r),
          text: i
        });
      case "mention":
        return Object.assign(r, {
          href: $w(r.screen_name),
          text: i
        });
      case "url":
      case "media":
        return Object.assign(r, {
          href: r.expanded_url,
          text: r.display_url
        });
      case "symbol":
        return Object.assign(r, {
          href: Z6(r),
          text: i
        });
      default:
        return Object.assign(r, {
          text: i
        });
    }
  });
}
function Xi(t, e, n) {
  for (const r of n)
    for (const [i, o] of t.entries()) {
      if (o.indices[0] > r.indices[0] || o.indices[1] < r.indices[1])
        continue;
      const a = [
        {
          ...r,
          type: e
        }
      ];
      o.indices[0] < r.indices[0] && a.unshift({
        indices: [
          o.indices[0],
          r.indices[0]
        ],
        type: "text"
      }), o.indices[1] > r.indices[1] && a.push({
        indices: [
          r.indices[1],
          o.indices[1]
        ],
        type: "text"
      }), t.splice(i, 1, ...a);
      break;
    }
}
function t9(t, e) {
  t.entities.media && t.entities.media[0].indices[0] < t.display_text_range[1] && (t.display_text_range[1] = t.entities.media[0].indices[0]);
  const n = e.at(-1);
  n && n.indices[1] > t.display_text_range[1] && (n.indices[1] = t.display_text_range[1]);
}
const n9 = (t) => ({
  ...t,
  url: V2(t),
  user: {
    ...t.user,
    url: $w(t),
    follow_url: K6(t)
  },
  like_url: X6(t),
  reply_url: G6(t),
  in_reply_to_url: t.in_reply_to_screen_name ? Y6(t) : void 0,
  entities: H2(t),
  quoted_tweet: t.quoted_tweet ? {
    ...t.quoted_tweet,
    url: V2(t.quoted_tweet),
    entities: H2(t.quoted_tweet)
  } : void 0
}), r9 = "_root_g9tkv_1", i9 = "_rounded_g9tkv_6", o9 = "_mediaWrapper_g9tkv_10", a9 = "_grid2Columns_g9tkv_17", s9 = "_grid3_g9tkv_20", c9 = "_grid2x2_g9tkv_23", l9 = "_mediaContainer_g9tkv_26", u9 = "_mediaLink_g9tkv_34", f9 = "_skeleton_g9tkv_38", d9 = "_image_g9tkv_43", Rt = {
  root: r9,
  rounded: i9,
  mediaWrapper: o9,
  grid2Columns: a9,
  grid3: s9,
  grid2x2: c9,
  mediaContainer: l9,
  mediaLink: u9,
  skeleton: f9,
  image: d9
}, h9 = "_anchor_fp31d_1", p9 = "_videoButton_fp31d_17", g9 = "_videoButtonIcon_fp31d_35", m9 = "_watchOnTwitter_fp31d_44", y9 = "_viewReplies_fp31d_60", ai = {
  anchor: h9,
  videoButton: p9,
  videoButtonIcon: g9,
  watchOnTwitter: m9,
  viewReplies: y9
}, b9 = ({ tweet: t, media: e }) => {
  const [n, r] = xa(!0), [i, o] = xa(!1), [a, s] = xa(!1), c = e9(e);
  let l = 0;
  return /* @__PURE__ */ je(u_, {
    children: [
      /* @__PURE__ */ le("video", {
        className: Rt.image,
        poster: Vw(e, "small"),
        controls: !n,
        playsInline: !0,
        preload: "none",
        tabIndex: n ? -1 : 0,
        onPlay: () => {
          l && window.clearTimeout(l), i || o(!0), a && s(!1);
        },
        onPause: () => {
          l && window.clearTimeout(l), l = window.setTimeout(() => {
            i && o(!1), l = 0;
          }, 100);
        },
        onEnded: () => {
          s(!0);
        },
        children: /* @__PURE__ */ le("source", {
          src: c.url,
          type: c.content_type
        })
      }),
      n && /* @__PURE__ */ le("button", {
        type: "button",
        className: ai.videoButton,
        "aria-label": "View video on X",
        onClick: (u) => {
          const f = u.currentTarget.previousSibling;
          u.preventDefault(), r(!1), f.load(), f.play().then(() => {
            o(!0), f.focus();
          }).catch((d) => {
            console.error("Error playing video:", d), r(!0), o(!1);
          });
        },
        children: /* @__PURE__ */ le("svg", {
          viewBox: "0 0 24 24",
          className: ai.videoButtonIcon,
          "aria-hidden": "true",
          children: /* @__PURE__ */ le("g", {
            children: /* @__PURE__ */ le("path", {
              d: "M21 12L4 2v20l17-10z"
            })
          })
        })
      }),
      !i && !a && /* @__PURE__ */ le("div", {
        className: ai.watchOnTwitter,
        children: /* @__PURE__ */ le("a", {
          href: t.url,
          className: ai.anchor,
          target: "_blank",
          rel: "noopener noreferrer",
          children: n ? "Watch on X" : "Continue watching on X"
        })
      }),
      a && /* @__PURE__ */ le("a", {
        href: t.url,
        className: Bn(ai.anchor, ai.viewReplies),
        target: "_blank",
        rel: "noopener noreferrer",
        children: "View replies"
      })
    ]
  });
}, v9 = (t) => /* @__PURE__ */ le("img", {
  ...t
}), X2 = (t, e) => {
  let n = 56.25;
  return e === 1 && (n = 100 / t.original_info.width * t.original_info.height), e === 2 && (n = n * 2), {
    width: t.type === "photo" ? void 0 : "unset",
    paddingBottom: `${n}%`
  };
}, Hw = ({ tweet: t, components: e, quoted: n }) => {
  var r, i, o;
  const a = (o = (r = t.mediaDetails) == null ? void 0 : r.length) != null ? o : 0;
  var s;
  const c = (s = e == null ? void 0 : e.MediaImg) != null ? s : v9;
  return /* @__PURE__ */ le("div", {
    className: Bn(Rt.root, !n && Rt.rounded),
    children: /* @__PURE__ */ le("div", {
      className: Bn(Rt.mediaWrapper, a > 1 && Rt.grid2Columns, a === 3 && Rt.grid3, a > 4 && Rt.grid2x2),
      children: (i = t.mediaDetails) == null ? void 0 : i.map((l) => /* @__PURE__ */ le(o_, {
        children: l.type === "photo" ? /* @__PURE__ */ je("a", {
          href: t.url,
          className: Bn(Rt.mediaContainer, Rt.mediaLink),
          target: "_blank",
          rel: "noopener noreferrer",
          children: [
            /* @__PURE__ */ le("div", {
              className: Rt.skeleton,
              style: X2(l, a)
            }),
            /* @__PURE__ */ le(c, {
              src: Vw(l, "small"),
              alt: l.ext_alt_text || "Image",
              className: Rt.image,
              draggable: !0
            })
          ]
        }, l.media_url_https) : /* @__PURE__ */ je("div", {
          className: Rt.mediaContainer,
          children: [
            /* @__PURE__ */ le("div", {
              className: Rt.skeleton,
              style: X2(l, a)
            }),
            /* @__PURE__ */ le(b9, {
              tweet: t,
              media: l
            })
          ]
        }, l.media_url_https)
      }, l.media_url_https))
    })
  });
}, D9 = {
  hour: "numeric",
  minute: "2-digit",
  hour12: !0,
  weekday: "short",
  month: "short",
  day: "numeric",
  year: "numeric"
}, x9 = new Intl.DateTimeFormat("en-US", D9), w9 = (t) => {
  const e = {};
  for (const n of t)
    e[n.type] = n.value;
  return e;
}, _9 = (t) => {
  const e = w9(x9.formatToParts(t)), n = `${e.hour}:${e.minute} ${e.dayPeriod}`, r = `${e.month} ${e.day}, ${e.year}`;
  return `${n} · ${r}`;
}, T9 = "_root_i24yn_1", E9 = {
  root: T9
}, C9 = ({ tweet: t }) => {
  const e = new Date(t.created_at), n = _9(e);
  return /* @__PURE__ */ le("a", {
    className: E9.root,
    href: t.url,
    target: "_blank",
    rel: "noopener noreferrer",
    "aria-label": n,
    children: /* @__PURE__ */ le("time", {
      dateTime: e.toISOString(),
      children: n
    })
  });
}, S9 = "_info_19qcj_1", A9 = "_infoLink_19qcj_10", U9 = "_infoIcon_19qcj_30", Jf = {
  info: S9,
  infoLink: A9,
  infoIcon: U9
}, k9 = ({ tweet: t }) => /* @__PURE__ */ je("div", {
  className: Jf.info,
  children: [
    /* @__PURE__ */ le(C9, {
      tweet: t
    }),
    /* @__PURE__ */ le("a", {
      className: Jf.infoLink,
      href: "https://help.x.com/en/x-for-websites-ads-info-and-privacy",
      target: "_blank",
      rel: "noopener noreferrer",
      "aria-label": "Twitter for Websites, Ads Information and Privacy",
      children: /* @__PURE__ */ le("svg", {
        viewBox: "0 0 24 24",
        "aria-hidden": "true",
        className: Jf.infoIcon,
        children: /* @__PURE__ */ le("g", {
          children: /* @__PURE__ */ le("path", {
            d: "M13.5 8.5c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5S11.17 7 12 7s1.5.67 1.5 1.5zM13 17v-5h-2v5h2zm-1 5.25c5.66 0 10.25-4.59 10.25-10.25S17.66 1.75 12 1.75 1.75 6.34 1.75 12 6.34 22.25 12 22.25zM20.25 12c0 4.56-3.69 8.25-8.25 8.25S3.75 16.56 3.75 12 7.44 3.75 12 3.75s8.25 3.69 8.25 8.25z"
          })
        })
      })
    })
  ]
}), F9 = "_actions_n2anf_1", O9 = "_like_n2anf_13", R9 = "_reply_n2anf_14", N9 = "_copy_n2anf_15", B9 = "_likeIconWrapper_n2anf_27", I9 = "_likeCount_n2anf_30", M9 = "_replyIconWrapper_n2anf_35", W9 = "_copyIconWrapper_n2anf_36", L9 = "_likeIcon_n2anf_27", P9 = "_replyIcon_n2anf_35", q9 = "_copyIcon_n2anf_36", z9 = "_replyText_n2anf_56", j9 = "_copyText_n2anf_57", Ct = {
  actions: F9,
  like: O9,
  reply: R9,
  copy: N9,
  likeIconWrapper: B9,
  likeCount: I9,
  replyIconWrapper: M9,
  copyIconWrapper: W9,
  likeIcon: L9,
  replyIcon: P9,
  copyIcon: q9,
  replyText: z9,
  copyText: j9
}, $9 = ({ tweet: t }) => {
  const [e, n] = xa(!1), r = () => {
    navigator.clipboard.writeText(t.url), n(!0);
  };
  return i0(() => {
    if (e) {
      const i = setTimeout(() => {
        n(!1);
      }, 6e3);
      return () => clearTimeout(i);
    }
  }, [
    e
  ]), /* @__PURE__ */ je("button", {
    type: "button",
    className: Ct.copy,
    "aria-label": "Copy link",
    onClick: r,
    children: [
      /* @__PURE__ */ le("div", {
        className: Ct.copyIconWrapper,
        children: e ? /* @__PURE__ */ le("svg", {
          viewBox: "0 0 24 24",
          className: Ct.copyIcon,
          "aria-hidden": "true",
          children: /* @__PURE__ */ le("g", {
            children: /* @__PURE__ */ le("path", {
              d: "M9.64 18.952l-5.55-4.861 1.317-1.504 3.951 3.459 8.459-10.948L19.4 6.32 9.64 18.952z"
            })
          })
        }) : /* @__PURE__ */ le("svg", {
          viewBox: "0 0 24 24",
          className: Ct.copyIcon,
          "aria-hidden": "true",
          children: /* @__PURE__ */ le("g", {
            children: /* @__PURE__ */ le("path", {
              d: "M18.36 5.64c-1.95-1.96-5.11-1.96-7.07 0L9.88 7.05 8.46 5.64l1.42-1.42c2.73-2.73 7.16-2.73 9.9 0 2.73 2.74 2.73 7.17 0 9.9l-1.42 1.42-1.41-1.42 1.41-1.41c1.96-1.96 1.96-5.12 0-7.07zm-2.12 3.53l-7.07 7.07-1.41-1.41 7.07-7.07 1.41 1.41zm-12.02.71l1.42-1.42 1.41 1.42-1.41 1.41c-1.96 1.96-1.96 5.12 0 7.07 1.95 1.96 5.11 1.96 7.07 0l1.41-1.41 1.42 1.41-1.42 1.42c-2.73 2.73-7.16 2.73-9.9 0-2.73-2.74-2.73-7.17 0-9.9z"
            })
          })
        })
      }),
      /* @__PURE__ */ le("span", {
        className: Ct.copyText,
        children: e ? "Copied!" : "Copy link"
      })
    ]
  });
}, V9 = ({ tweet: t }) => {
  const e = Xd(t.favorite_count);
  return /* @__PURE__ */ je("div", {
    className: Ct.actions,
    children: [
      /* @__PURE__ */ je("a", {
        className: Ct.like,
        href: t.like_url,
        target: "_blank",
        rel: "noopener noreferrer",
        "aria-label": `Like. This Tweet has ${e} likes`,
        children: [
          /* @__PURE__ */ le("div", {
            className: Ct.likeIconWrapper,
            children: /* @__PURE__ */ le("svg", {
              viewBox: "0 0 24 24",
              className: Ct.likeIcon,
              "aria-hidden": "true",
              children: /* @__PURE__ */ le("g", {
                children: /* @__PURE__ */ le("path", {
                  d: "M20.884 13.19c-1.351 2.48-4.001 5.12-8.379 7.67l-.503.3-.504-.3c-4.379-2.55-7.029-5.19-8.382-7.67-1.36-2.5-1.41-4.86-.514-6.67.887-1.79 2.647-2.91 4.601-3.01 1.651-.09 3.368.56 4.798 2.01 1.429-1.45 3.146-2.1 4.796-2.01 1.954.1 3.714 1.22 4.601 3.01.896 1.81.846 4.17-.514 6.67z"
                })
              })
            })
          }),
          /* @__PURE__ */ le("span", {
            className: Ct.likeCount,
            children: e
          })
        ]
      }),
      /* @__PURE__ */ je("a", {
        className: Ct.reply,
        href: t.reply_url,
        target: "_blank",
        rel: "noopener noreferrer",
        "aria-label": "Reply to this Tweet on Twitter",
        children: [
          /* @__PURE__ */ le("div", {
            className: Ct.replyIconWrapper,
            children: /* @__PURE__ */ le("svg", {
              viewBox: "0 0 24 24",
              className: Ct.replyIcon,
              "aria-hidden": "true",
              children: /* @__PURE__ */ le("g", {
                children: /* @__PURE__ */ le("path", {
                  d: "M1.751 10c0-4.42 3.584-8 8.005-8h4.366c4.49 0 8.129 3.64 8.129 8.13 0 2.96-1.607 5.68-4.196 7.11l-8.054 4.46v-3.69h-.067c-4.49.1-8.183-3.51-8.183-8.01z"
                })
              })
            })
          }),
          /* @__PURE__ */ le("span", {
            className: Ct.replyText,
            children: "Reply"
          })
        ]
      }),
      /* @__PURE__ */ le($9, {
        tweet: t
      })
    ]
  });
}, H9 = "_replies_1cutb_1", X9 = "_link_1cutb_4", G9 = "_text_1cutb_23", Zf = {
  replies: H9,
  link: X9,
  text: G9
}, K9 = ({ tweet: t }) => /* @__PURE__ */ le("div", {
  className: Zf.replies,
  children: /* @__PURE__ */ le("a", {
    className: Zf.link,
    href: t.url,
    target: "_blank",
    rel: "noopener noreferrer",
    children: /* @__PURE__ */ le("span", {
      className: Zf.text,
      children: t.conversation_count === 0 ? "Read more on X" : t.conversation_count === 1 ? `Read ${Xd(t.conversation_count)} reply` : `Read ${Xd(t.conversation_count)} replies`
    })
  })
}), J9 = "_root_q5799_1", Z9 = "_article_q5799_16", G2 = {
  root: J9,
  article: Z9
}, Y9 = ({ tweet: t, children: e }) => /* @__PURE__ */ le("div", {
  className: G2.root,
  onClick: (n) => {
    n.preventDefault(), window.open(t.url, "_blank");
  },
  children: /* @__PURE__ */ le("article", {
    className: G2.article,
    children: e
  })
}), Q9 = "_header_r31i5_1", eO = "_avatar_r31i5_11", tO = "_avatarSquare_r31i5_17", nO = "_author_r31i5_21", rO = "_authorText_r31i5_26", iO = "_username_r31i5_33", Cr = {
  header: Q9,
  avatar: eO,
  avatarSquare: tO,
  author: nO,
  authorText: rO,
  username: iO
}, oO = ({ tweet: t }) => {
  const { user: e } = t;
  return /* @__PURE__ */ je("div", {
    className: Cr.header,
    children: [
      /* @__PURE__ */ le("a", {
        href: t.url,
        className: Cr.avatar,
        target: "_blank",
        rel: "noopener noreferrer",
        children: /* @__PURE__ */ le("div", {
          className: Bn(Cr.avatarOverflow, e.profile_image_shape === "Square" && Cr.avatarSquare),
          children: /* @__PURE__ */ le(zw, {
            src: e.profile_image_url_https,
            alt: e.name,
            width: 20,
            height: 20
          })
        })
      }),
      /* @__PURE__ */ je("div", {
        className: Cr.author,
        children: [
          /* @__PURE__ */ le("div", {
            className: Cr.authorText,
            children: /* @__PURE__ */ le("span", {
              title: e.name,
              children: e.name
            })
          }),
          /* @__PURE__ */ le(jw, {
            user: e
          }),
          /* @__PURE__ */ le("div", {
            className: Cr.username,
            children: /* @__PURE__ */ je("span", {
              title: `@${e.screen_name}`,
              children: [
                "@",
                e.screen_name
              ]
            })
          })
        ]
      })
    ]
  });
}, aO = "_root_175ot_1", sO = {
  root: aO
}, cO = ({ tweet: t }) => /* @__PURE__ */ le("p", {
  className: sO.root,
  lang: t.lang,
  dir: "auto",
  children: t.entities.map((e, n) => /* @__PURE__ */ le("span", {
    dangerouslySetInnerHTML: {
      __html: e.text
    }
  }, n))
}), lO = ({ tweet: t }) => {
  var e;
  return /* @__PURE__ */ je(Y9, {
    tweet: t,
    children: [
      /* @__PURE__ */ le(oO, {
        tweet: t
      }),
      /* @__PURE__ */ le(cO, {
        tweet: t
      }),
      (e = t.mediaDetails) != null && e.length ? /* @__PURE__ */ le(Hw, {
        quoted: !0,
        tweet: t
      }) : null
    ]
  });
}, uO = ({ tweet: t, components: e }) => {
  var n;
  const r = o0(() => n9(t), [
    t
  ]);
  return /* @__PURE__ */ je(qp, {
    children: [
      /* @__PURE__ */ le(M6, {
        tweet: r,
        components: e
      }),
      r.in_reply_to_status_id_str && /* @__PURE__ */ le(P6, {
        tweet: r
      }),
      /* @__PURE__ */ le(H6, {
        tweet: r
      }),
      (n = r.mediaDetails) != null && n.length ? /* @__PURE__ */ le(Hw, {
        tweet: r,
        components: e
      }) : null,
      r.quoted_tweet && /* @__PURE__ */ le(lO, {
        tweet: r.quoted_tweet
      }),
      /* @__PURE__ */ le(k9, {
        tweet: r
      }),
      /* @__PURE__ */ le(V9, {
        tweet: r
      }),
      /* @__PURE__ */ le(K9, {
        tweet: r
      })
    ]
  });
}, fO = "_root_16yxa_1", dO = {
  root: fO
}, hO = (t) => /* @__PURE__ */ le(qp, {
  children: /* @__PURE__ */ je("div", {
    className: dO.root,
    children: [
      /* @__PURE__ */ le("h3", {
        children: "Tweet not found"
      }),
      /* @__PURE__ */ le("p", {
        children: "The embedded tweet could not be found…"
      })
    ]
  })
}), pO = "_skeleton_oi7hr_1", gO = {
  skeleton: pO
}, ma = ({ style: t }) => /* @__PURE__ */ le("span", {
  className: gO.skeleton,
  style: t
}), mO = "_root_17qqv_1", yO = {
  root: mO
}, bO = () => /* @__PURE__ */ je(qp, {
  className: yO.root,
  children: [
    /* @__PURE__ */ le(ma, {
      style: {
        height: "3rem",
        marginBottom: "0.75rem"
      }
    }),
    /* @__PURE__ */ le(ma, {
      style: {
        height: "6rem",
        margin: "0.5rem 0"
      }
    }),
    /* @__PURE__ */ le("div", {
      style: {
        borderTop: "var(--tweet-border)",
        margin: "0.5rem 0"
      }
    }),
    /* @__PURE__ */ le(ma, {
      style: {
        height: "2rem"
      }
    }),
    /* @__PURE__ */ le(ma, {
      style: {
        height: "2rem",
        borderRadius: "9999px",
        marginTop: "0.5rem"
      }
    })
  ]
});
var ya = { exports: {} }, Yf = {};
/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var K2;
function vO() {
  if (K2) return Yf;
  K2 = 1;
  var t = Fo;
  function e(f, d) {
    return f === d && (f !== 0 || 1 / f === 1 / d) || f !== f && d !== d;
  }
  var n = typeof Object.is == "function" ? Object.is : e, r = t.useState, i = t.useEffect, o = t.useLayoutEffect, a = t.useDebugValue;
  function s(f, d) {
    var h = d(), p = r({ inst: { value: h, getSnapshot: d } }), m = p[0].inst, g = p[1];
    return o(
      function() {
        m.value = h, m.getSnapshot = d, c(m) && g({ inst: m });
      },
      [f, h, d]
    ), i(
      function() {
        return c(m) && g({ inst: m }), f(function() {
          c(m) && g({ inst: m });
        });
      },
      [f]
    ), a(h), h;
  }
  function c(f) {
    var d = f.getSnapshot;
    f = f.value;
    try {
      var h = d();
      return !n(f, h);
    } catch {
      return !0;
    }
  }
  function l(f, d) {
    return d();
  }
  var u = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? l : s;
  return Yf.useSyncExternalStore = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : u, Yf;
}
var Qf = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var J2;
function DO() {
  return J2 || (J2 = 1, process.env.NODE_ENV !== "production" && function() {
    function t(h, p) {
      return h === p && (h !== 0 || 1 / h === 1 / p) || h !== h && p !== p;
    }
    function e(h, p) {
      u || i.startTransition === void 0 || (u = !0, console.error(
        "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
      ));
      var m = p();
      if (!f) {
        var g = p();
        o(m, g) || (console.error(
          "The result of getSnapshot should be cached to avoid an infinite loop"
        ), f = !0);
      }
      g = a({
        inst: { value: m, getSnapshot: p }
      });
      var y = g[0].inst, b = g[1];
      return c(
        function() {
          y.value = m, y.getSnapshot = p, n(y) && b({ inst: y });
        },
        [h, m, p]
      ), s(
        function() {
          return n(y) && b({ inst: y }), h(function() {
            n(y) && b({ inst: y });
          });
        },
        [h]
      ), l(m), m;
    }
    function n(h) {
      var p = h.getSnapshot;
      h = h.value;
      try {
        var m = p();
        return !o(h, m);
      } catch {
        return !0;
      }
    }
    function r(h, p) {
      return p();
    }
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var i = Fo, o = typeof Object.is == "function" ? Object.is : t, a = i.useState, s = i.useEffect, c = i.useLayoutEffect, l = i.useDebugValue, u = !1, f = !1, d = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? r : e;
    Qf.useSyncExternalStore = i.useSyncExternalStore !== void 0 ? i.useSyncExternalStore : d, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  }()), Qf;
}
var Z2;
function xO() {
  return Z2 || (Z2 = 1, process.env.NODE_ENV === "production" ? ya.exports = vO() : ya.exports = DO()), ya.exports;
}
var wO = xO();
const Xw = 0, Gw = 1, Kw = 2, Y2 = 3;
var Q2 = Object.prototype.hasOwnProperty;
function Gd(t, e) {
  var n, r;
  if (t === e) return !0;
  if (t && e && (n = t.constructor) === e.constructor) {
    if (n === Date) return t.getTime() === e.getTime();
    if (n === RegExp) return t.toString() === e.toString();
    if (n === Array) {
      if ((r = t.length) === e.length)
        for (; r-- && Gd(t[r], e[r]); ) ;
      return r === -1;
    }
    if (!n || typeof t == "object") {
      r = 0;
      for (n in t)
        if (Q2.call(t, n) && ++r && !Q2.call(e, n) || !(n in e) || !Gd(t[n], e[n])) return !1;
      return Object.keys(e).length === r;
    }
  }
  return t !== t && e !== e;
}
const Fn = /* @__PURE__ */ new WeakMap(), or = () => {
}, vt = (
  /*#__NOINLINE__*/
  or()
), Kd = Object, Me = (t) => t === vt, fn = (t) => typeof t == "function", hr = (t, e) => ({
  ...t,
  ...e
}), Jw = (t) => fn(t.then), ed = {}, ba = {}, zp = "undefined", zo = typeof window != zp, Jd = typeof document != zp, _O = zo && "Deno" in window, TO = () => zo && typeof window.requestAnimationFrame != zp, Zw = (t, e) => {
  const n = Fn.get(t);
  return [
    // Getter
    () => !Me(e) && t.get(e) || ed,
    // Setter
    (r) => {
      if (!Me(e)) {
        const i = t.get(e);
        e in ba || (ba[e] = i), n[5](e, hr(i, r), i || ed);
      }
    },
    // Subscriber
    n[6],
    // Get server cache snapshot
    () => !Me(e) && e in ba ? ba[e] : !Me(e) && t.get(e) || ed
  ];
};
let Zd = !0;
const EO = () => Zd, [Yd, Qd] = zo && window.addEventListener ? [
  window.addEventListener.bind(window),
  window.removeEventListener.bind(window)
] : [
  or,
  or
], CO = () => {
  const t = Jd && document.visibilityState;
  return Me(t) || t !== "hidden";
}, SO = (t) => (Jd && document.addEventListener("visibilitychange", t), Yd("focus", t), () => {
  Jd && document.removeEventListener("visibilitychange", t), Qd("focus", t);
}), AO = (t) => {
  const e = () => {
    Zd = !0, t();
  }, n = () => {
    Zd = !1;
  };
  return Yd("online", e), Yd("offline", n), () => {
    Qd("online", e), Qd("offline", n);
  };
}, UO = {
  isOnline: EO,
  isVisible: CO
}, kO = {
  initFocus: SO,
  initReconnect: AO
}, e0 = !Fo.useId, ko = !zo || _O, FO = (t) => TO() ? window.requestAnimationFrame(t) : setTimeout(t, 1), td = ko ? i0 : s_, nd = typeof navigator < "u" && navigator.connection, t0 = !ko && nd && ([
  "slow-2g",
  "2g"
].includes(nd.effectiveType) || nd.saveData), va = /* @__PURE__ */ new WeakMap(), rd = (t, e) => Kd.prototype.toString.call(t) === `[object ${e}]`;
let OO = 0;
const eh = (t) => {
  const e = typeof t, n = rd(t, "Date"), r = rd(t, "RegExp"), i = rd(t, "Object");
  let o, a;
  if (Kd(t) === t && !n && !r) {
    if (o = va.get(t), o) return o;
    if (o = ++OO + "~", va.set(t, o), Array.isArray(t)) {
      for (o = "@", a = 0; a < t.length; a++)
        o += eh(t[a]) + ",";
      va.set(t, o);
    }
    if (i) {
      o = "#";
      const s = Kd.keys(t).sort();
      for (; !Me(a = s.pop()); )
        Me(t[a]) || (o += a + ":" + eh(t[a]) + ",");
      va.set(t, o);
    }
  } else
    o = n ? t.toJSON() : e == "symbol" ? t.toString() : e == "string" ? JSON.stringify(t) : "" + t;
  return o;
}, jp = (t) => {
  if (fn(t))
    try {
      t = t();
    } catch {
      t = "";
    }
  const e = t;
  return t = typeof t == "string" ? t : (Array.isArray(t) ? t.length : t) ? eh(t) : "", [
    t,
    e
  ];
};
let RO = 0;
const th = () => ++RO;
async function Yw(...t) {
  const [e, n, r, i] = t, o = hr({
    populateCache: !0,
    throwOnError: !0
  }, typeof i == "boolean" ? {
    revalidate: i
  } : i || {});
  let a = o.populateCache;
  const s = o.rollbackOnError;
  let c = o.optimisticData;
  const l = (d) => typeof s == "function" ? s(d) : s !== !1, u = o.throwOnError;
  if (fn(n)) {
    const d = n, h = [], p = e.keys();
    for (const m of p)
      // Skip the special useSWRInfinite and useSWRSubscription keys.
      !/^\$(inf|sub)\$/.test(m) && d(e.get(m)._k) && h.push(m);
    return Promise.all(h.map(f));
  }
  return f(n);
  async function f(d) {
    const [h] = jp(d);
    if (!h) return;
    const [p, m] = Zw(e, h), [g, y, b, v] = Fn.get(e), _ = () => {
      const k = g[h];
      return (fn(o.revalidate) ? o.revalidate(p().data, d) : o.revalidate !== !1) && (delete b[h], delete v[h], k && k[0]) ? k[0](Kw).then(() => p().data) : p().data;
    };
    if (t.length < 3)
      return _();
    let x = r, E;
    const S = th();
    y[h] = [
      S,
      0
    ];
    const U = !Me(c), C = p(), R = C.data, j = C._c, T = Me(j) ? R : j;
    if (U && (c = fn(c) ? c(T, R) : c, m({
      data: c,
      _c: T
    })), fn(x))
      try {
        x = x(T);
      } catch (k) {
        E = k;
      }
    if (x && Jw(x))
      if (x = await x.catch((k) => {
        E = k;
      }), S !== y[h][0]) {
        if (E) throw E;
        return x;
      } else E && U && l(E) && (a = !0, m({
        data: T,
        _c: vt
      }));
    if (a && !E)
      if (fn(a)) {
        const k = a(x, T);
        m({
          data: k,
          error: vt,
          _c: vt
        });
      } else
        m({
          data: x,
          error: vt,
          _c: vt
        });
    if (y[h][1] = th(), Promise.resolve(_()).then(() => {
      m({
        _c: vt
      });
    }), E) {
      if (u) throw E;
      return;
    }
    return x;
  }
}
const n0 = (t, e) => {
  for (const n in t)
    t[n][0] && t[n][0](e);
}, NO = (t, e) => {
  if (!Fn.has(t)) {
    const n = hr(kO, e), r = {}, i = Yw.bind(vt, t);
    let o = or;
    const a = {}, s = (u, f) => {
      const d = a[u] || [];
      return a[u] = d, d.push(f), () => d.splice(d.indexOf(f), 1);
    }, c = (u, f, d) => {
      t.set(u, f);
      const h = a[u];
      if (h)
        for (const p of h)
          p(f, d);
    }, l = () => {
      if (!Fn.has(t) && (Fn.set(t, [
        r,
        {},
        {},
        {},
        i,
        c,
        s
      ]), !ko)) {
        const u = n.initFocus(setTimeout.bind(vt, n0.bind(vt, r, Xw))), f = n.initReconnect(setTimeout.bind(vt, n0.bind(vt, r, Gw)));
        o = () => {
          u && u(), f && f(), Fn.delete(t);
        };
      }
    };
    return l(), [
      t,
      i,
      l,
      o
    ];
  }
  return [
    t,
    Fn.get(t)[4]
  ];
}, BO = (t, e, n, r, i) => {
  const o = n.errorRetryCount, a = i.retryCount, s = ~~((Math.random() + 0.5) * (1 << (a < 8 ? a : 8))) * n.errorRetryInterval;
  !Me(o) && a > o || setTimeout(r, s, i);
}, IO = Gd, [Qw, MO] = NO(/* @__PURE__ */ new Map()), WO = hr(
  {
    // events
    onLoadingSlow: or,
    onSuccess: or,
    onError: or,
    onErrorRetry: BO,
    onDiscarded: or,
    // switches
    revalidateOnFocus: !0,
    revalidateOnReconnect: !0,
    revalidateIfStale: !0,
    shouldRetryOnError: !0,
    // timeouts
    errorRetryInterval: t0 ? 1e4 : 5e3,
    focusThrottleInterval: 5 * 1e3,
    dedupingInterval: 2 * 1e3,
    loadingTimeout: t0 ? 5e3 : 3e3,
    // providers
    compare: IO,
    isPaused: () => !1,
    cache: Qw,
    mutate: MO,
    fallback: {}
  },
  // use web preset by default
  UO
), LO = (t, e) => {
  const n = hr(t, e);
  if (e) {
    const { use: r, fallback: i } = t, { use: o, fallback: a } = e;
    r && o && (n.use = r.concat(o)), i && a && (n.fallback = hr(i, a));
  }
  return n;
}, PO = a_({}), qO = "$inf$", e_ = zo && window.__SWR_DEVTOOLS_USE__, zO = e_ ? window.__SWR_DEVTOOLS_USE__ : [], jO = () => {
  e_ && (window.__SWR_DEVTOOLS_REACT__ = Fo);
}, $O = (t) => fn(t[1]) ? [
  t[0],
  t[1],
  t[2] || {}
] : [
  t[0],
  null,
  (t[1] === null ? t[2] : t[1]) || {}
], VO = () => hr(WO, c_(PO)), HO = (t) => (e, n, r) => t(e, n && ((...o) => {
  const [a] = jp(e), [, , , s] = Fn.get(Qw);
  if (a.startsWith(qO))
    return n(...o);
  const c = s[a];
  return Me(c) ? n(...o) : (delete s[a], c);
}), r), XO = zO.concat(HO), GO = (t) => function(...n) {
  const r = VO(), [i, o, a] = $O(n), s = LO(r, a);
  let c = t;
  const { use: l } = s, u = (l || []).concat(XO);
  for (let f = u.length; f--; )
    c = u[f](c);
  return c(i, o || s.fetcher || null, s);
}, KO = (t, e, n) => {
  const r = e[t] || (e[t] = []);
  return r.push(n), () => {
    const i = r.indexOf(n);
    i >= 0 && (r[i] = r[r.length - 1], r.pop());
  };
};
jO();
const id = Fo.use || // This extra generic is to avoid TypeScript mixing up the generic and JSX sytax
// and emitting an error.
// We assume that this is only for the `use(thenable)` case, not `use(context)`.
// https://github.com/facebook/react/blob/aed00dacfb79d17c53218404c52b1c7aa59c4a89/packages/react-server/src/ReactFizzThenable.js#L45
((t) => {
  switch (t.status) {
    case "pending":
      throw t;
    case "fulfilled":
      return t.value;
    case "rejected":
      throw t.reason;
    default:
      throw t.status = "pending", t.then((e) => {
        t.status = "fulfilled", t.value = e;
      }, (e) => {
        t.status = "rejected", t.reason = e;
      }), t;
  }
}), od = {
  dedupe: !0
}, JO = (t, e, n) => {
  const { cache: r, compare: i, suspense: o, fallbackData: a, revalidateOnMount: s, revalidateIfStale: c, refreshInterval: l, refreshWhenHidden: u, refreshWhenOffline: f, keepPreviousData: d } = n, [h, p, m, g] = Fn.get(r), [y, b] = jp(t), v = xr(!1), _ = xr(!1), x = xr(y), E = xr(e), S = xr(n), U = () => S.current, C = () => U().isVisible() && U().isOnline(), [R, j, T, k] = Zw(r, y), w = xr({}).current, $ = Me(a) ? Me(n.fallback) ? vt : n.fallback[y] : a, N = (be, D) => {
    for (const V in w) {
      const q = V;
      if (q === "data") {
        if (!i(be[q], D[q]) && (!Me(be[q]) || !i(J, D[q])))
          return !1;
      } else if (D[q] !== be[q])
        return !1;
    }
    return !0;
  }, M = o0(() => {
    const be = !y || !e ? !1 : Me(s) ? U().isPaused() || o ? !1 : c !== !1 : s, D = (ie) => {
      const ne = hr(ie);
      return delete ne._k, be ? {
        isValidating: !0,
        isLoading: !0,
        ...ne
      } : ne;
    }, V = R(), q = k(), I = D(V), O = V === q ? I : D(q);
    let z = I;
    return [
      () => {
        const ie = D(R());
        return N(ie, z) ? (z.data = ie.data, z.isLoading = ie.isLoading, z.isValidating = ie.isValidating, z.error = ie.error, z) : (z = ie, ie);
      },
      () => O
    ];
  }, [
    r,
    y
  ]), K = wO.useSyncExternalStore(Uc(
    (be) => T(y, (D, V) => {
      N(V, D) || be();
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      r,
      y
    ]
  ), M[0], M[1]), P = !v.current, te = h[y] && h[y].length > 0, W = K.data, B = Me(W) ? $ && Jw($) ? id($) : $ : W, se = K.error, G = xr(B), J = d ? Me(W) ? Me(G.current) ? B : G.current : W : B, ce = te && !Me(se) ? !1 : P && !Me(s) ? s : U().isPaused() ? !1 : o ? Me(B) ? !1 : c : Me(B) || c, he = !!(y && e && P && ce), fe = Me(K.isValidating) ? he : K.isValidating, me = Me(K.isLoading) ? he : K.isLoading, de = Uc(
    async (be) => {
      const D = E.current;
      if (!y || !D || _.current || U().isPaused())
        return !1;
      let V, q, I = !0;
      const O = be || {}, z = !m[y] || !O.dedupe, ie = () => e0 ? !_.current && y === x.current && v.current : y === x.current, ne = {
        isValidating: !1,
        isLoading: !1
      }, Z = () => {
        j(ne);
      }, L = () => {
        const Y = m[y];
        Y && Y[1] === q && delete m[y];
      }, X = {
        isValidating: !0
      };
      Me(R().data) && (X.isLoading = !0);
      try {
        if (z && (j(X), n.loadingTimeout && Me(R().data) && setTimeout(() => {
          I && ie() && U().onLoadingSlow(y, n);
        }, n.loadingTimeout), m[y] = [
          D(b),
          th()
        ]), [V, q] = m[y], V = await V, z && setTimeout(L, n.dedupingInterval), !m[y] || m[y][1] !== q)
          return z && ie() && U().onDiscarded(y), !1;
        ne.error = vt;
        const Y = p[y];
        if (!Me(Y) && // case 1
        (q <= Y[0] || // case 2
        q <= Y[1] || // case 3
        Y[1] === 0))
          return Z(), z && ie() && U().onDiscarded(y), !1;
        const oe = R().data;
        ne.data = i(oe, V) ? oe : V, z && ie() && U().onSuccess(V, y, n);
      } catch (Y) {
        L();
        const oe = U(), { shouldRetryOnError: De } = oe;
        oe.isPaused() || (ne.error = Y, z && ie() && (oe.onError(Y, y, oe), (De === !0 || fn(De) && De(Y)) && (!U().revalidateOnFocus || !U().revalidateOnReconnect || C()) && oe.onErrorRetry(Y, y, oe, (Te) => {
          const Se = h[y];
          Se && Se[0] && Se[0](Y2, Te);
        }, {
          retryCount: (O.retryCount || 0) + 1,
          dedupe: !0
        })));
      }
      return I = !1, Z(), !0;
    },
    // `setState` is immutable, and `eventsCallback`, `fnArg`, and
    // `keyValidating` are depending on `key`, so we can exclude them from
    // the deps array.
    //
    // FIXME:
    // `fn` and `config` might be changed during the lifecycle,
    // but they might be changed every render like this.
    // `useSWR('key', () => fetch('/api/'), { suspense: true })`
    // So we omit the values from the deps array
    // even though it might cause unexpected behaviors.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      y,
      r
    ]
  ), pe = Uc(
    // Use callback to make sure `keyRef.current` returns latest result every time
    (...be) => Yw(r, x.current, ...be),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  if (td(() => {
    E.current = e, S.current = n, Me(W) || (G.current = W);
  }), td(() => {
    if (!y) return;
    const be = de.bind(vt, od);
    let D = 0;
    const q = KO(y, h, (I, O = {}) => {
      if (I == Xw) {
        const z = Date.now();
        U().revalidateOnFocus && z > D && C() && (D = z + U().focusThrottleInterval, be());
      } else if (I == Gw)
        U().revalidateOnReconnect && C() && be();
      else {
        if (I == Kw)
          return de();
        if (I == Y2)
          return de(O);
      }
    });
    return _.current = !1, x.current = y, v.current = !0, j({
      _k: b
    }), ce && (Me(B) || ko ? be() : FO(be)), () => {
      _.current = !0, q();
    };
  }, [
    y
  ]), td(() => {
    let be;
    function D() {
      const q = fn(l) ? l(R().data) : l;
      q && be !== -1 && (be = setTimeout(V, q));
    }
    function V() {
      !R().error && (u || U().isVisible()) && (f || U().isOnline()) ? de(od).then(D) : D();
    }
    return D(), () => {
      be && (clearTimeout(be), be = -1);
    };
  }, [
    l,
    u,
    f,
    y
  ]), l_(J), o && Me(B) && y) {
    if (!e0 && ko)
      throw new Error("Fallback data is required when using Suspense in SSR.");
    E.current = e, S.current = n, _.current = !1;
    const be = g[y];
    if (!Me(be)) {
      const D = pe(be);
      id(D);
    }
    if (Me(se)) {
      const D = de(od);
      Me(J) || (D.status = "fulfilled", D.value = !0), id(D);
    } else
      throw se;
  }
  return {
    mutate: pe,
    get data() {
      return w.data = !0, J;
    },
    get error() {
      return w.error = !0, se;
    },
    get isValidating() {
      return w.isValidating = !0, fe;
    },
    get isLoading() {
      return w.isLoading = !0, me;
    }
  };
}, r0 = GO(JO);
class ZO extends Error {
  constructor({ message: e, status: n, data: r }) {
    super(e), this.name = "TwitterApiError", this.status = n, this.data = r;
  }
}
const YO = r0.default || r0, QO = "https://react-tweet.vercel.app";
async function eR([t, e]) {
  const n = await fetch(t, e), r = await n.json();
  if (n.ok) return r.data || null;
  throw new ZO({
    message: `Failed to fetch tweet at "${t}" with "${n.status}".`,
    data: r,
    status: n.status
  });
}
const tR = (t, e, n) => {
  const { isLoading: r, data: i, error: o } = YO(() => e || t ? [
    e || t && `${QO}/api/tweet/${t}`,
    n
  ] : null, eR, {
    revalidateIfStale: !1,
    revalidateOnFocus: !1,
    shouldRetryOnError: !1
  });
  return {
    // If data is `undefined` then it might be the first render where SWR hasn't started doing
    // any work, so we set `isLoading` to `true`.
    isLoading: !!(r || i === void 0 && !o),
    data: i,
    error: o
  };
}, rN = ({ id: t, apiUrl: e, fallback: n = /* @__PURE__ */ le(bO, {}), components: r, fetchOptions: i, onError: o }) => {
  const { data: a, error: s, isLoading: c } = tR(t, e, i);
  if (c) return n;
  if (s || !a) {
    const l = (r == null ? void 0 : r.TweetNotFound) || hO;
    return /* @__PURE__ */ le(l, {
      error: o ? o(s) : s
    });
  }
  return /* @__PURE__ */ le(uO, {
    tweet: a,
    components: r
  });
}, Da = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", nR = (t) => {
  t = t.replace(/\r\n/g, `
`);
  let e = 0, n = "";
  for (; e < t.length; e++) {
    const r = t.charCodeAt(e);
    r < 128 ? n += String.fromCharCode(r) : r > 127 && r < 2048 ? (n += String.fromCharCode(r >> 6 | 192), n += String.fromCharCode(63 & r | 128)) : (n += String.fromCharCode(r >> 12 | 224), n += String.fromCharCode(r >> 6 & 63 | 128), n += String.fromCharCode(63 & r | 128));
  }
  return n;
}, rR = (t) => {
  let e, n, r, i, o, a, s, c = 0, l = "";
  for (t = nR(t); c < t.length; ) e = t.charCodeAt(c++), n = t.charCodeAt(c++), r = t.charCodeAt(c++), i = e >> 2, o = (3 & e) << 4 | n >> 4, a = (15 & n) << 2 | r >> 6, s = 63 & r, isNaN(n) ? a = s = 64 : isNaN(r) && (s = 64), l = l + Da.charAt(i) + Da.charAt(o) + Da.charAt(a) + Da.charAt(s);
  return l;
}, iR = (t) => typeof t == "string" ? "string" : typeof SVGElement < "u" && t instanceof SVGElement ? "element" : void 0, t_ = (t) => "data:image/svg+xml;base64," + rR(t), oR = (t) => t_(new XMLSerializer().serializeToString(t)), iN = (t) => {
  switch (iR(t)) {
    case "string":
      return t_(t);
    case "element":
      return oR(t);
    default:
      return t;
  }
};
export {
  Ze as $,
  Xt as A,
  pR as B,
  $3 as C,
  Ti as D,
  lR as E,
  ge as F,
  mR as G,
  xv as H,
  K3 as I,
  Oo as J,
  Ro as K,
  ft as L,
  A0 as M,
  hn as N,
  W0 as O,
  Ei as P,
  IR as Q,
  ct as R,
  Oe as S,
  Be as T,
  wD as U,
  MR as V,
  BR as W,
  WR as X,
  J5 as Y,
  K5 as Z,
  LR as _,
  Zi as a,
  Dt as a0,
  PR as a1,
  QR as a2,
  eN as a3,
  Ke as a4,
  b8 as a5,
  ZR as a6,
  KR as a7,
  XR as a8,
  GR as a9,
  JR as aa,
  Ph as ab,
  YR as ac,
  HR as ad,
  VR as ae,
  $R as af,
  jR as ag,
  zR as ah,
  qR as ai,
  RR as aj,
  OR as ak,
  dU as al,
  tN as am,
  Bn as an,
  nN as ao,
  kR as ap,
  NR as aq,
  SR as ar,
  AR as as,
  ER as at,
  rN as au,
  iN as av,
  Qa as aw,
  L0 as ax,
  UR as ay,
  CR as az,
  No as b,
  cR as c,
  fo as d,
  DR as e,
  _e as f,
  eo as g,
  Ue as h,
  xR as i,
  bR as j,
  uR as k,
  vR as l,
  yR as m,
  X3 as n,
  V3 as o,
  G3 as p,
  _R as q,
  J3 as r,
  TR as s,
  gR as t,
  hR as u,
  dR as v,
  wR as w,
  fR as x,
  O0 as y,
  H3 as z
};
